{"version":3,"sources":["utils/data.ts","utils/types.ts","components/Enemy.tsx","components/Player.tsx","utils/playGame.ts","components/Game.tsx","hooks/usePressedKeys.tsx","components/PlayerBuilder.tsx","hooks/useScroll.tsx","components/EncounterBuilder.tsx","geneticalgorithm/geneticalgorithm.js","tinkerer/tinkerer.ts","menuStateMachine.ts","components/menus/Menu.tsx","App.tsx","serviceWorkerRegistration.ts","reportWebVitals.ts","index.tsx","utils/effectRepository.ts","utils/effectFunctions.ts"],"names":["previousState","play","states","length","randomEnemy","Chance","pickone","enemies","randomPlayer","statsOverride","buildOverride","rng","id","string","lore","name","randomName","age","build","basic","class","skill","armor","weapon","offhand","footwear","headgear","charm","hp","makeStat","stamina","staminaPerTurn","speed","attack","defence","status","defaultStatus","makeRange","number","Set","allRanges","selfRange","amount","current","max","dodge","active","bleed","turns","effectDead","display","tooltip","priority","effects","effectFunCall","range","consumable","eot","passive","names","Math","floor","random","rolls","distance","enemy","t","Array","isArray","index","parameters","undefined","callEffectFun","repo","p","f","EnemyCard","enemyStats","isSelected","onSelect","latestAttack","canAct","hotkey","Card","bg","Body","Title","Text","map","idx","Seq","countBy","e","toArray","v","find","a","OverlayTrigger","placement","delay","show","hide","overlay","Popover","Header","as","join","toFixed","Button","disabled","onClick","toUpperCase","PlayerCard","selectedButtons","player","playerStats","onClickEffect","lastAction","disabledSkills","setDisabledSkills","Subtitle","className","ButtonGroup","Object","entries","k","bot","ToggleButton","checked","has","value","type","variant","onChange","event","currentTarget","delete","add","Stack","direction","gap","values","flatMap","_","turnDeterministicRng","randPerTurn","monsterSeed","monsterChance","keys","floating","min","fixed","playerPassives","s","i","statsRepository","playerActions","start","enemiesStats","seed","reduce","fun","playerGameStats","enemyGameStats","target","lastAttacks","toIndexableString","reduceFuns","funs","dodgeable","phase","sortBy","origin","priorityBonus","num","Infinity","clamp","acc","effect","oldPlay","oldState","monsterId","targetMonster","extractFunction","newPlay","newState","eotCleanup","handlePlayerEffect","d","usedSkill","initialState","preBotPlay","preBotState","postBotPlay","postBotState","entitiesBot","eff","postEntitiesBotPlay","postEntitiesBotState","rand","turn","turnRng","pop","turnFunctions","zip","stats","concat","entitiesEot","playerEotEffects","enemiesEotEffects","postPlayerEotPlay","postPlayerEotState","postEotPlay","postEotState","postCleanup","postCleanupState","setSelected","monsterHotkeys","Game","game","solveGame","timeTravel","hint","useState","isLogShown","setShowLog","handleCloseLog","playerSkills","monsterHealth","m","isPlayerAlive","areMonstersAlive","endGame","pressed","onUp","pressedKeys","updatePressedKeys","downHandler","key","set","upHandler","useCallback","filter","useEffect","window","addEventListener","removeEventListener","usePressedKeys","valNum","parseInt","save","undo","redo","blob","Blob","JSON","stringify","saveAs","Date","now","Container","fluid","Row","Col","sm","md","Player","xs","Enemy","Modal","onHide","scrollable","centered","closeButton","Footer","selects","options","ElementPicker","section","setField","scrollParams","elRef","useRef","scrollIntoView","useScroll","behavior","block","scrollTo","scrollRef","Form","Label","size","ref","PlayerBuilder","onSave","React","form","setForm","setLore","displayType","onSubmit","preventDefault","style","marginBottom","field","Navbar","maxHeight","EncounterBuilder","encounter","setEncounter","found","geneticAlgorithmConstructor","settingWithDefaults","settings","defaults","mutationFunction","crossoverFunction","fitnessFunction","doesABeatBFunction","population","Error","populationSize","phenotype","b","cloneJSON","object","parse","mutate","crossover","mate","evolve","push","populate","otherIndex","temp","randomizePopulationOrder","nextGeneration","competitor","compete","this","best","scored","scoredPopulation","score","bestScore","config","clone","defaultTinkererOptions","playerSeed","weights","monster","debug","tinkerer","iter","optionsOverride","actions","latestState","d6","natural","latest","unavailable","exclude","playerHealth","playerStamina","startPlayerHealth","startPlayerStamina","startMonsterHealth","monsterKillingFitness","playerAlivenessFitness","killSpeedFitness","staminaFitness","fitness","console","log","gen","GeneticAlgorithmConstructor","isDebug","process","inspect","server","WebSocket","Server","port","toMenu","on","MENU","quick","initial","entry","WIN","LOSE","win","lose","single","PLAYER","ENCOUNTER","arcade","cond","internal","victory","defeat","survival","makeArcadeContext","puzzle","SELECTED","COMPLETE","complete","NEXT","SELECT","victories","makeSurvivalContext","makeSingleContext","gameMenuMachine","createMachine","tsTypes","context","arcadeContext","survivalContext","singleContext","main","QUICK","SINGLE","ARCADE","SURVIVAL","guards","isFinal","bumpVictories","assign","_event","reset","c","interpret","devTools","onTransition","state","Menu","title","SingleGame","onGameEnd","setGame","setRedo","gameState","playState","timeTravelObj","newRedo","slice","iterations","maxBy","App","useMachine","send","matches","result","firstState","lastState","isLocalhost","Boolean","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","catch","error","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById","URL","href","fetch","headers","response","contentType","get","indexOf","ready","unregister","reload","checkValidServiceWorker","serviceWorkerRegistration","effectFun","params","debugFunctions","currentState","attackPlayer","attackMonster","lifespan","addEotEffect","_origin","addEnemy","modifyPlayerStamina","changeStatusPlayer","o","changeStatusMonster","changeDistance","_m","updateMonster","override","curr","damage","afterDefence","afterArmor","armorSpent","afterBleed","updatePlayer","updateStatus","removeMonster","currPlay","currSnap","modify","updatePlayerStat","addBotEffect","isNode","isAnyEffectFunParams","includes","startState","effectRepository","assignObject","obj","validators","is","createIs"],"mappings":"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SC,QAAS,QAASC,SAAU,EAAGC,QAAS,CAACC,YAAc,kBAAmBC,MAAOlB,MAEvG0B,MAAO,CACL,CAAC,GACD,CAAC,GACD,CAAC,GACD,CAAC,GACD,CAAC,KAEF,CACDnC,GAAIC,EAAS,GACbmC,SAAU,EACVhC,MAAOH,EAAS,GAChBI,OAAQJ,EAAS,GACjBK,QAASL,EAAS,GAClBM,OAAQC,KAINuB,EAAQ,CACZ,QACA,QACA,SACA,MACA,QACA,UACA,QACA,QACA,QACA,UACA,SACA,SACA,QACA,WACA,QACA,QACA,SACA,QACA,SACA,SACA,SACA,SACA,UACA,SACA,SACA,SACA,OACA,QACA,OACA,QACA,MACA,SACA,SACA,OACA,UACA,QACA,UACA,SACA,UACA,QACA,SACA,SACA,UACA,SACA,OACA,QACA,SACA,SACA,UACA,QACA,OACA,UACA,OACA,SACA,SACA,QACA,UACA,SACA,SACA,OACA,QACA,QACA,SACA,QACA,QACA,SACA,SACA,OACA,OACA,SACA,QACA,QACA,UACA,SACA,QACA,UACA,UACA,UACA,WACA,QACA,WACA,QACA,SACA,SACA,OACA,SACA,QACA,QACA,OACA,WACA,SACA,QACA,UACA,SACA,UACA,SACA,SACA,SACA,SACA,QACA,QACA,OACA,OACA,QACA,QACA,WACA,QACA,UACA,SACA,UACA,QACA,OACA,OACA,OACA,SACA,WACA,OACA,OACA,QACA,MACA,SACA,OACA,UACA,QACA,UACA,SACA,MACA,UACA,QACA,SACA,QACA,SACA,QACA,QACA,QACA,QACA,SACA,QACA,QACA,SACA,QACA,OACA,QACA,SACA,SACA,UACA,QACA,QACA,QACA,OACA,QACA,OACA,QACA,SACA,SACA,QACA,QACA,QACA,QACA,QACA,UACA,UACA,QACA,QACA,QACA,UACA,SACA,QACA,SACA,UACA,SACA,QACA,OACA,SACA,QACA,OACA,UACA,QACA,SACA,UACA,SACA,MACA,QACA,OACA,MACA,QACA,YACA,OACA,QACA,QACA,SACA,QACA,QACA,SACA,QACA,SACA,UACA,W,4ECthBsI,oEAkDjI,IAAML,EAAgB,SAA+BY,GAA/B,OAC1BC,MAAMC,QAAQF,GAAK,CAAEG,MAAOH,EAAE,GAAII,WAAYJ,EAAE,IAAO,CAAEG,MAAOH,EAAGI,gBAAYC,IACrEC,EAAgB,SAA+BC,EAAqBP,EAAMQ,GAGrF,OAAOC,EAFGF,EAAKP,IAENQ,K,wNCnDIE,EAlBV,SAAC,GAAD,IAzBkBvB,EAyBfY,EAAH,EAAGA,MAAOY,EAAV,EAAUA,WAAYC,EAAtB,EAAsBA,WAAYC,EAAlC,EAAkCA,SAAUC,EAA5C,EAA4CA,aAAcC,EAA1D,EAA0DA,OAAQC,EAAlE,EAAkEA,OAAlE,OACH,cAACC,EAAA,EAAD,CAAMC,GAAIN,EAAa,YAASP,EAAhC,SACE,eAACY,EAAA,EAAKE,KAAN,WACE,eAACF,EAAA,EAAKG,MAAN,WAAarB,EAAMnD,KAAKC,KAAxB,IAA+B8D,EAAWjD,GAAGe,QAAU,EAAI,GAAM,gEACjE,eAACwC,EAAA,EAAKI,KAAN,qBAAcV,EAAWjD,GAAGe,QAA5B,iBAAyCkC,EAAWb,SAAW,KAC9Da,EAAW1C,OAAOY,MAAMC,MAAQ,GAAhC,WAAyC6B,EAAW1C,OAAOY,MAAMC,MAAjE,iBACAgC,GAAiB,eAACG,EAAA,EAAKI,KAAN,6BAA2BP,KAC7C,eAACG,EAAA,EAAKI,KAAN,qCAEE,wBAlCelC,EAmCAY,EAAMF,MAAMc,EAAWb,UAAUwB,KAAI,SAACC,GAAD,OAASxB,EAAMZ,QAAQoC,MAlCjFC,YAAIrC,GAASsC,SAAQ,SAACC,GAAD,OAAOA,EAAE1C,WAAS2C,UAAUL,KAAI,WAAeC,GAAS,IAAD,mBAArBvC,EAAqB,KAAZ4C,EAAY,KAC1E,EAAqCzC,EAAQ0C,MAAK,SAAAC,GAAC,OAAIA,EAAE9C,UAAYA,KAA7DK,EAAR,EAAQA,MAAOH,EAAf,EAAeA,SAAUD,EAAzB,EAAyBA,QACzB,OAAO,cAAC8C,EAAA,EAAD,CAELC,UAAU,QACVC,MAAO,CAAEC,KAAM,IAAKC,KAAM,KAC1BC,QAAS,eAACC,EAAA,EAAD,WACP,cAACA,EAAA,EAAQC,OAAT,CAAgBC,GAAG,KAAnB,SAAyBvD,IACzB,eAACqD,EAAA,EAAQlB,KAAT,WACGlC,EAAQ,uBADX,UACoBC,EAAS,uBAD7B,gBACwD,IAAjBG,EAAMpD,OAAe,MAAyB,IAAjBoD,EAAMpD,OAAe,OAASoD,EAAMiC,KAAI,SAAAQ,GAAC,OAAIA,EAAI,KAAGU,KAAK,YAP1H,SAUN,0CAAKZ,EAAIzC,EAAQlD,OAAS,KAAKwG,QAAQ,GAAvC,MAA8CzD,EAAQ,sBAASuC,OATzDA,OAgCH,0BAEDR,GAAW,eAAC2B,EAAA,EAAD,CAAQC,SAAU/B,EAAYgC,QAAS/B,EAAvC,cAAkD,4BAAIG,EAAO6B,gBAA7D,oB,kBC+CHC,EA5EV,SAAC,GAAD,IAAGC,EAAH,EAAGA,gBAAiBC,EAApB,EAAoBA,OAAQC,EAA5B,EAA4BA,YAAaC,EAAzC,EAAyCA,cAAenC,EAAxD,EAAwDA,OAAQoC,EAAhE,EAAgEA,WAAYC,EAA5E,EAA4EA,eAAgBC,EAA5F,EAA4FA,kBAA5F,OACH,eAACpC,EAAA,EAAD,WACE,eAACA,EAAA,EAAKE,KAAN,WACE,eAACF,EAAA,EAAKG,MAAN,WAAa4B,EAAOpG,KAAKC,KAAMoG,EAAYvF,GAAGe,QAAU,EAAI,GAAM,kEAClE,cAACwC,EAAA,EAAKqC,SAAN,CAAeC,UAAU,kBAAzB,SACGP,EAAOhG,MAAME,MAAM8B,UAEtB,eAACiC,EAAA,EAAKI,KAAN,WAAY4B,EAAYvF,GAAGe,QAA3B,IAAqCwE,EAAYvF,GAAGgB,IAApD,WAA4DuE,EAAYrF,QAAQa,QAAhF,IAA0FwE,EAAYrF,QAAQc,IAA9G,mBACCuE,EAAYhF,OAAOY,MAAMC,MAAQ,GAAK,eAACmC,EAAA,EAAKI,KAAN,iBAAe4B,EAAYhF,OAAOY,MAAMC,MAAxC,oBACtCqE,GAAe,eAAClC,EAAA,EAAKI,KAAN,2BAAyB8B,QAE1CpC,GAAW,qCACV,yCACA,cAACyC,EAAA,EAAD,UACGC,OAAOC,QAAQV,EAAOhG,OACpBsE,KAAI,uCAAEqC,EAAF,KAAKjC,EAAL,WAAY,CAACiC,EAAGjC,EAAJ,gCAAYA,EAAEkC,WAAd,QAAqB,IAArB,sBAA8BlC,EAAEnC,WAAhC,QAAuC,SACvD+B,KAAI,WAAmBC,GAAnB,uBAAEoC,EAAF,KAAKjC,EAAL,iBAAoCzF,OAAS,GAAM,cAAC8F,EAAA,EAAD,CAEtDC,UAAU,QACVC,MAAO,CAAEC,KAAM,IAAKC,KAAM,KAC1BC,QAAS,eAACC,EAAA,EAAD,WACP,cAACA,EAAA,EAAQC,OAAT,CAAgBC,GAAG,KAAnB,SAAyBb,EAAE1C,UAC3B,cAACqD,EAAA,EAAQlB,KAAT,UACGO,EAAEzC,aAP+C,SAWtD,cAAC4E,EAAA,EAAD,CACEC,SAAUzF,YAAI+E,GAAgBW,IAAIJ,GAClCK,MAAOL,EACPjH,GAAE,wBAAmBiH,GACrBM,KAAK,WACLC,QAAQ,kBACRC,SAAU,SAACC,GAAD,OAAWf,EACnBe,EAAMC,cAAcP,QAChBzF,YAAI+E,GAAgBkB,OAAOX,GAAGhC,UAC9BtD,YAAI+E,GAAgBmB,IAAIZ,GAAGhC,YATnC,SAUGD,EAAE1C,WApBAuC,WA0BZR,GAAW,cAACE,EAAA,EAAKE,KAAN,UACV,cAACqD,EAAA,EAAD,CAAOC,UAAU,aAAaC,IAAK,EAAnC,SACGjB,OAAOkB,OAAO3B,EAAOhG,OACnB4H,SAAQ,SAAC9C,GAAD,uBAAOA,EAAE3C,eAAT,QAAoB,MAC5BmC,KAAI,SAACI,EAAGH,GAAJ,OAAa,cAACQ,EAAA,EAAD,CAEhBC,UAAU,MACVC,MAAO,CAAEC,KAAM,IAAKC,KAAM,KAC1BC,QAAS,eAACC,EAAA,EAAD,WACP,cAACA,EAAA,EAAQC,OAAT,CAAgBC,GAAG,KAAnB,SAAyBb,EAAE1C,UAC3B,cAACqD,EAAA,EAAQlB,KAAT,UACGO,EAAEzC,aAPS,SAWhB,gCACE,eAACyD,EAAA,EAAD,CACE9D,OAAQmE,EAAgBgB,IAAIrC,EAAE1C,SAC9B2D,SAAUM,EAAYrF,QAAQa,QAAUiD,EAAE9D,QAC1CgF,QAAS,SAACiC,GAAD,OAAO3B,EAAc3B,IAHhC,cAKG,4BAAIA,EAAM,IALb,KAKqB,4BAAIG,EAAE1C,aAE3B,uBACA,eAACiC,EAAA,EAAKI,KAAN,2BAAeK,EAAE9D,QAAjB,WAA6B8B,KAAKhB,IAAIgD,EAAExC,SAAW+D,EAAYnF,MAAMW,SAAS,uBAA9E,gBAA2G,IAAnBiD,EAAErC,MAAMpD,OAAe,MAAQyF,EAAErC,MAAMiC,KAAI,SAAAQ,GAAC,OAAIA,EAAI,KAAGU,KAAK,aAnBjJd,EAAE1C,oB,6DClDnB,SAAS8F,EAAqBhG,EAAeiG,EAAqBC,GAChE,IAAMC,EAAgB,IAAI9I,SAAO6I,GAKjC,OAHE,YAAI/E,MAAMnB,GAAOoG,QACd5D,KAAI,SAAAuD,GAAC,OAAI,YAAI5E,MAAM8E,GAAaG,QAC9B5D,KAAI,SAAAuD,GAAC,OAAII,EAAcE,SAAS,CAAEC,IAAK,EAAG1G,IAAK,EAAG2G,MAAO,UAI3D,IAKMC,EAAiB,SAACtC,GAAD,OAC5BS,OAAOkB,OAAO3B,EAAOhG,OAAO4H,SAAQ,SAACW,GAAD,uBAAOA,EAAE/F,eAAT,QAAoB,MAAI8B,KAAI,SAAAkE,GAAC,OAAIC,IAAgBD,OAE1EE,EAAgB,SAAC1C,GAAD,OAC3BS,OAAOkB,OAAO3B,EAAOhG,OAAO4H,SAAQ,SAACW,GAAD,uBAAOA,EAAEpG,eAAT,QAAoB,OAkB3C,SAASwG,EAAM3C,EAAgBC,EAA0B5G,EAAkBuJ,EAA4B9G,EAAe+G,GAAwD,IAAjCd,EAAgC,uDAAV,GAChL,EAA0CO,EAAetC,GAAQ8C,QAAO,WAASC,GAAT,8BAAiBA,EAAjB,aAA4B,CAAC9C,EAAa2C,IAAlH,mBAAOI,EAAP,KAAwBC,EAAxB,KACA,MAAO,CACLjD,SACA3G,UACAL,OAAQ,CAAC,CACPgH,OAAQgD,EACR3J,QAAS4J,EACTC,OAAQ,EACRC,YAAa,GACb/C,eAAgB,KAElB3G,IAAKqI,EAAqBhG,EAAOiG,EAAac,GAC9C/G,QACApC,GAAI0J,YAAkB,CAACpD,EAAQ3G,EAASyC,EAAO+G,IAC/CA,QAIJ,IAGMQ,EAAa,SAACC,EAA0B9F,EAAS+E,EAAagB,EAAoBC,GAArE,OACjBhF,YAAI8E,GACDG,QAAO,YAAkB,IAAD,mBAAfC,EAAe,KAAP5E,EAAO,KACjB6E,EAA2B,WAAXD,EAAsBnB,EAAEvC,OAAOlF,MAAMW,QAAU8G,EAAElJ,QAAQqK,GAAU5I,MAAMW,QAC/F,OAPQ,SAACmI,EAAaxB,GAAd,IAA2B1G,EAA3B,uDAAyCmI,IAAzC,OACZnH,KAAK0F,IAAI1F,KAAKhB,IAAIkI,EAAKxB,GAAM1G,GAMlBoI,CAAMhF,EAAE5C,SAAWyH,EAAe,EAAG,MAE7Cb,QAAO,SAACiB,EAAK/C,GACZ,kBAAyBA,EAAzB,GAAO0C,EAAP,KAAeM,EAAf,KACA,cAA4BD,EAA5B,GAAOE,EAAP,KAAgBC,EAAhB,KACMC,EAAuB,WAAXT,EAAsBQ,EAAShB,OAASQ,EACpDU,EAAgBF,EAAS7K,QAAQ8K,GAGvC,IAFkB9I,YAAI,YAAI2I,EAAO3H,QAAQ0E,IAAIqD,EAActH,UAOzD,MAAO,CAACmH,EAJgB,2BACnBC,GADmB,IAEtBf,YAAY,GAAD,mBAAMe,EAASf,aAAf,CAA4B,CAAEO,SAAQ1H,QAAQ,mCAAD,OAAiBgI,EAAOhI,SAAWwH,cAM/F,GADsBD,GAAwB,WAAXG,GAAuBU,EAAcnJ,OAAOU,MAAMC,OAOnF,MAAO,CAACqI,EALgB,2BACnBC,GADmB,IAEtB7K,QAAS6K,EAAS7K,QAAQiF,KAAI,SAACI,EAAG8D,GAAJ,OAAUA,IAAM2B,EAAN,2BAAuBzF,GAAvB,IAA0BzD,OAAO,2BAAMyD,EAAEzD,QAAT,IAAiBU,MAAO,CAAEC,QAAQ,OAAc8C,KACxHyE,YAAY,GAAD,mBAAMe,EAASf,aAAf,CAA4B,CAAEO,SAAQ1H,QAAQ,0DAAD,OAAoBgI,EAAOhI,SAAWwH,cAMlG,GADqBD,GAAwB,WAAXG,GAAuBQ,EAASlE,OAAO/E,OAAOU,MAAMC,OAOpF,MAAO,CAACqI,EALgB,2BACnBC,GADmB,IAEtBlE,OAAO,2BAAMkE,EAASlE,QAAhB,IAAwB/E,OAAO,2BAAMiJ,EAASlE,OAAO/E,QAAvB,IAA+BU,MAAO,CAAEC,QAAQ,OACpFuH,YAAY,GAAD,mBAAMe,EAASf,aAAf,CAA4B,CAAEO,SAAQ1H,QAAQ,0DAAD,OAAoBgI,EAAOhI,SAAWwH,cAKlG,MAA4Ba,YAAgBL,EAAhBK,CAAwBX,EAAQO,EAASC,GAArE,mBAAOI,EAAP,KAAgBC,EAAhB,KAEA,MAAO,CAACD,EADkB,2BAAQC,GAAR,IAAkBpB,YAAY,GAAD,mBAAMoB,EAASpB,aAAf,CAA4B,CAAEO,SAAQ1H,QAASgI,EAAOhI,QAASwH,gBAErH,CAAChG,EAAG+E,KAKLiC,EACH,CAAExI,QAAS,UAAWC,QAAS,UAAWE,QAAS,CAACC,YAAc,oBAAqBC,MAAOf,IAAWY,SAAU,GAEzGuI,EAAqB,SAAC1L,EAAYoE,GAAyB,IAAD,IAN3C3B,EA1EKwE,EAAgB0E,EAkFzCC,EAAYjC,EAAc3J,EAAKiH,QAAQ7C,GACvCyD,EAAG,UAAG9H,YAAcC,GAAM6H,WAAvB,QAA8B,GACjCrE,EAAG,UAAGzD,YAAcC,GAAMwD,WAAvB,QAA8B,GAEjCqI,EAAsB,2BACvB9L,YAAcC,IADS,IAE1BoK,YAAa,GACbvC,SAAKvD,EACLd,SAAKc,IAIP,EACEgG,EAAW,CAAC,CAAC,UArBW7H,EAqBkB1C,YAAcC,GAAMiH,OAAOnF,eAAeY,QAAUkJ,EAAU/J,QApBzG,CAAEoB,QAAQ,GAAD,OAAKR,GAAU,EAAI,IAAM,IAAzB,OAA8BA,EAA9B,iBAA2CS,QAAQ,OAAD,OAAST,EAAT,YAA2BW,QAAS,CAACC,YAAc,CAAC,qBAAsB,CAAEZ,aAAaa,MAAOf,IAAWY,SAAU,MAoB3DnD,EAAM6L,GAAc,EAAO,WADjJ,mBAAOC,EAAP,KAAmBC,EAAnB,KAKA,EAAoCzB,EAAWzC,EAAKiE,EAAYC,GAAa,EAAO,OAApF,mBAAOC,EAAP,KAAoBC,EAApB,KAEMC,EAA+B,uBArGNjF,EAqG8B+E,EAAY/E,OArG1B0E,EAqGkCM,EAAa5E,eApG9FK,OAAOC,QAAQV,EAAOhG,OAAO4H,SAAQ,qCAAEjB,EAAF,KAAK4B,EAAL,YAAalH,YAAIqJ,GAAG3D,IAAIJ,GAAmB,GAA/B,UAAiB4B,EAAE3B,WAAnB,QAA0B,MAAStC,KAAI,SAAAQ,GAAC,MAAI,CAAC,SAAUA,QAoGnE,YAA+FiG,EAAY1L,QA9GxIuI,SAAQ,SAAClD,EAAGH,GAAJ,aAAY,UAACG,EAAEkC,WAAH,QAAU,IAAItC,KAAI,SAAA4G,GAAG,MAAI,CAAC3G,EAAsB2G,SAEzE5G,KAAI,SAAAQ,GAAC,mBAAQA,QA6GhB,EAAoDuE,EAAW4B,EAAaF,EAAaC,GAAc,EAAO,OAA9G,mBAAOG,EAAP,KAA4BC,EAA5B,KAGMC,EA9He,SAACtM,EAAYuM,GAClC,IAAMC,EAAO,YAAOxM,EAAKU,IAAI6L,IAC7B,OAAO,SAAClD,EAAa1G,GAAd,OAA8BgB,KAAKC,OAAQjB,EAAM0G,GAAOmD,EAAQC,MAAWpD,IA4HrEmD,CAAQJ,EAAqBA,EAAoBnM,OAAOC,QAC/DwM,EAAoCjH,YAAI2G,EAAoB9L,SAASqM,IAAIlH,YAAI4G,EAAqB/L,UACrGiF,KAAI,WAAaC,GAAb,uBAAEG,EAAF,KAAKiH,EAAL,WACH,CAACpH,EACDoH,EAAMjL,GAAGe,QAAU,EACfiD,EAAEvC,QAAQuC,EAAE7B,MAAM8I,EAAM7I,UAAUuI,EAAK,EAAG3G,EAAE7B,MAAM8I,EAAM7I,UAAU7D,UAClE8C,QACL6J,OAAO,CAAC,CAAC,SAAoBjB,KAC7BhG,UAEAL,KAAI,SAAAQ,GAAC,mBAAQA,MAEhB,EACEuE,EAAWoC,EAAeN,EAAqBC,GAAsB,EAAM,QAD7E,mBAAOd,EAAP,KAAgBC,EAAhB,KAKMsB,EAAW,sBAvHa,SAAC7F,EAAgB0E,GAAjB,OAC9BjE,OAAOC,QAAQV,EAAOhG,OAAO4H,SAAQ,qCAAEjB,EAAF,KAAK4B,EAAL,YAAalH,YAAIqJ,GAAG3D,IAAIJ,GAAmB,GAA/B,UAAiB4B,EAAEhG,WAAnB,QAA0B,MAAS+B,KAAI,SAAAQ,GAAC,MAAI,CAAC,SAAUA,MAsHhFgH,CAAiBxB,EAAQtE,OAAQuE,EAASnE,iBAAjD,YA/HO,SAAC/G,GAAD,OACxBA,EAAQuI,SAAQ,SAAClD,EAAGH,GAAJ,aAAY,UAACG,EAAEnC,WAAH,QAAU,IAAI+B,KAAI,SAAA4G,GAAG,MAAI,CAAC3G,EAAsB2G,SAEzE5G,KAAI,SAAAQ,GAAC,mBAAQA,MA4HsEiH,CAAkBzB,EAAQjL,WAChH,EAAgDgK,EAAWwC,EAAavB,EAASC,GAAU,EAAO,OAAlG,mBAAOyB,EAAP,KAA0BC,EAA1B,KAEA,EAAoC5C,EAAW9G,EAAKyJ,EAAmBC,GAAoB,EAAO,OAAlG,mBAAOC,EAAP,KAAoBC,EAApB,KAEA,EAAwC9C,EAAW,CAAC,CAAC,SAAoBmB,IAAc0B,EAAaC,GAAc,EAAO,OAAzH,mBAAOC,EAAP,KAAoBC,EAApB,KAEA,OAAO,2BACFD,GADL,IAEEpN,OAAO,GAAD,mBAAMoN,EAAYpN,QAAlB,CAA0BqN,OAIvBC,EAAc,SAACvN,EAAYmK,GAEtC,OADAnK,EAAKC,OAAOD,EAAKC,OAAOC,OAAS,GAAGiK,OAASA,EACtC,2BACFnK,GADL,IAEEC,OAAO,YAAKD,EAAKC,W,iBC7JfuN,EAAiB,CAAC,IAAK,IAAK,IAAK,IAAK,IAAK,KA0KlCC,EAxKF,SAAC,GAAuH,IAAD,EAApH/B,EAAoH,EAApHA,mBAAoB6B,EAAgG,EAAhGA,YAAajG,EAAmF,EAAnFA,kBAAmBoG,EAAgE,EAAhEA,KAAMC,EAA0D,EAA1DA,UAAWC,EAA+C,EAA/CA,WAAYC,EAAmC,EAAnCA,KACvF5G,EAAoByG,EAApBzG,OAAQ3G,EAAYoN,EAAZpN,QAChB,EAA4FP,YAAc2N,GAA1FxG,EAAhB,EAAQD,OAA8B4C,EAAtC,EAA6BvJ,QAAuB6J,EAApD,EAAoDA,OAAQC,EAA5D,EAA4DA,YAAa/C,EAAzE,EAAyEA,eACzE,EAAiCyG,oBAAS,GAA1C,mBAAOC,EAAP,KAAmBC,EAAnB,KAEMC,EAAiB,kBAAMD,GAAW,IAGlCE,EAAevE,EAAc1C,GAC7BkH,EAAgBtE,EAAaE,QAAO,SAACiB,EAAKoD,GAAN,OAAYA,EAAEzM,GAAGe,QAAUsI,IAAK,GACpEqD,EAAgBnH,EAAYvF,GAAGe,QAAU,EACzC4L,EAAmBH,EAAgB,EACnCI,EAAUb,EAAKzN,OAAOC,QAAUwN,EAAK3K,MACrCiC,EAASqJ,GAAiBC,GAAoBC,EAE9CC,ECvCO,SAAwBC,GAErC,MAAyCX,mBAAS,IAAIxL,KAAtD,mBAAOoM,EAAP,KAAoBC,EAApB,KAEMC,EAAc,SAAC,GAA8B,IAA5BC,EAA2B,EAA3BA,IACrBF,GAAkB,SAACG,GAAD,OAAS,IAAIxM,IAAJ,sBAAYwM,GAAZ,CAAiBD,SAGxCE,EAAYC,uBAAY,YAA+B,IAA5BH,EAA2B,EAA3BA,IAC/BF,GAAkB,SAACG,GAAD,OAAS,IAAIxM,IAAI,YAAIwM,GAAKG,QAAO,SAACrH,GAAD,OAAOA,IAAMiH,SAChEJ,EAAKI,KACJ,CAACJ,IAYJ,OAVAS,qBAAU,WAIR,OAHAC,OAAOC,iBAAiB,UAAWR,GACnCO,OAAOC,iBAAiB,QAASL,GAE1B,WACLI,OAAOE,oBAAoB,UAAWT,GACtCO,OAAOE,oBAAoB,QAASN,MAErC,CAACA,IAEGL,EDgBSY,EAAe,SAACT,GAC9B,GAAK7J,EAAL,CACA,IAAMuK,EAASC,SAASX,GACxB,GAAIU,EAAS,GAAKA,GAAUrB,EAAahO,OAAQ,CAE/C,KADmBgO,EAAaqB,EAAS,GAAG1N,SAAWqF,EAAYrF,QAAQa,SAC1D,OACjBgJ,EAAmB6D,EAAS,GAElB,MAARV,GACFhB,EAAK,KAGK,MAARgB,GACFb,GAAYD,GAGF,MAARc,GACFY,IAGU,MAARZ,GAAenB,EAAKzN,OAAOC,OAAS,GAAK0N,GAC3CA,EAAW8B,OAED,MAARb,GAAejB,GAAiC,MAAnBA,EAAW+B,MAC1C/B,EAAW+B,OAGTd,IAAQrB,EAAe,IAAMlN,EAAQJ,OAAS,GAChDqN,EAAY,GAEVsB,IAAQrB,EAAe,IAAMlN,EAAQJ,OAAS,GAChDqN,EAAY,GAEVsB,IAAQrB,EAAe,IAAMlN,EAAQJ,OAAS,GAChDqN,EAAY,GAEVsB,IAAQrB,EAAe,IAAMlN,EAAQJ,OAAS,GAChDqN,EAAY,GAEVsB,IAAQrB,EAAe,IAAMlN,EAAQJ,OAAS,GAChDqN,EAAY,OAIVvG,EAAkB1E,YAAY,YAAIkM,GAAS3F,SAAQ,SAACgG,GACxD,IAAMU,EAASC,SAASX,GACxB,OAAIU,EAAS,GAAKA,GAAUrB,EAAahO,OAChC,CAACgO,EAAaqB,EAAS,GAAGtM,SAE1B,OAILwM,EAAOT,uBAAY,WACvB,IAAMY,EAAO,IAAIC,KAAK,CAACC,KAAKC,UAAUrC,IAAQ,CAAExF,KAAM,mCACtD8H,IAAOJ,EAAD,sBAAsBK,KAAKC,MAA3B,YACL,CAACxC,IAEJ,OACE,qCACE,cAACyC,EAAA,EAAD,CAAWC,OAAK,EAAhB,SACE,cAACC,EAAA,EAAD,CAAK7I,UAAU,gDAAf,SACE,eAAC8I,EAAA,EAAD,CAAKC,GAAI,GAAIC,GAAI,EAAjB,UACE,eAACtL,EAAA,EAAKG,MAAN,mBACQqI,EAAKzN,OAAOC,OADpB,WACoCwN,EAAK3K,MADzC,IACkDsL,EAAuCC,EAA8C,GAA1B,wFAA1C,kEAEnE,cAACmC,EAAD,CACExJ,OAAQA,EACRC,YAAaA,EACbG,eAAgBA,EAChBC,kBAAmBA,EACnBH,cAAe,SAAC3B,GAAD,OAASkG,EAAmBlG,IAC3CwB,gBAAiBA,EACjBI,WAAU,UAAEgD,EAAY6E,QAAO,SAAAlJ,GAAC,MAAiB,WAAbA,EAAE4E,UAAqBpF,KAAI,SAAAQ,GAAC,iBAAQA,EAAE0E,MAAV,aAAoB1E,EAAE9C,YAAWwD,KAAK,eAA5F,aAAuGnC,EACjHU,OAAQA,IACV,cAACqL,EAAA,EAAD,UACiB,MAAdzC,GACC,eAACnG,EAAA,EAAD,WACGiG,EAAKzN,OAAOC,OAAS,GAAM,eAACyG,EAAA,EAAD,CAAQE,QAAS,SAACiC,GAAD,OAAO8E,EAAW8B,QAAnC,cAA4C,kCAA5C,oBACjB,OAAV9B,QAAU,IAAVA,OAAA,EAAAA,EAAY+B,OAAS,eAAChJ,EAAA,EAAD,CAAQE,QAAS,SAACiC,GAAD,OAAO8E,EAAa+B,QAArC,cAAgD,kCAAhD,wBAI5B,cAACU,EAAA,EAAD,UACE,cAAC5I,EAAA,EAAD,UACE,eAACd,EAAA,EAAD,CAAQE,QAAS,SAACiC,GAAD,OAAO+E,EAAK,MAA7B,UAAmC,oCAAnC,eAGJ,cAACwC,EAAA,EAAD,UACG5K,YAAInF,GAASqM,IAAIlH,YAAIoE,IAAetE,KAAI,WAAiBC,GAAjB,yBAAExB,EAAF,KAAS4I,EAAT,YACvC,cAAC0D,EAAA,EAAD,CAAeI,GAAI,EAAGF,GAAI,EAA1B,SACE,cAACG,EAAD,CAEE/L,WAAYgI,EACZ5I,MAAOA,EACPgB,OAAQA,EACRD,aAAY,UAAEU,YAAI2E,GAAa6E,QAAO,qBAAGtE,SAAwBnF,KAAKD,KAAI,SAAAQ,GAAC,iBAAQA,EAAE0E,MAAV,aAAoB1E,EAAE9C,YAAWwD,KAAK,eAArG,aAAgHnC,EAC5HO,WAAYW,IAAQ2E,EACpBrF,SAAU,kBAAMyI,EAAY/H,IAC5BP,OAAQuI,EAAehI,IAPlBA,IAFCA,QAcd,cAACN,EAAA,EAAKG,MAAN,oBAGA,cAACgL,EAAA,EAAD,UACE,eAAC5I,EAAA,EAAD,WACE,eAACd,EAAA,EAAD,CAAQE,QAtHA,kBAAMmH,GAAW,IAsHzB,cAAiC,kCAAjC,wBACA,eAACrH,EAAA,EAAD,CAAQE,QAAS4I,EAAjB,cAAwB,kCAAxB,sCAGJ,cAACvK,EAAA,EAAKG,MAAN,qBAGA,cAACgL,EAAA,EAAD,UACE,eAAC5I,EAAA,EAAD,WACE,cAACd,EAAA,EAAD,CAAQE,QAAS,SAACiC,GAAD,OAAO6E,EAAU,MAAlC,0BACA,cAAChH,EAAA,EAAD,CAAQE,QAAS,SAACiC,GAAD,OAAO6E,EAAU,MAAlC,6DAMV,eAACiD,EAAA,EAAD,CAAOzK,KAAM4H,EAAY8C,OAAQ5C,EAAgB6C,YAAY,EAAMC,UAAU,EAA7E,UACE,cAACH,EAAA,EAAMrK,OAAP,CAAcyK,aAAW,EAAzB,SACE,cAACJ,EAAA,EAAMvL,MAAP,yBAEF,cAACuL,EAAA,EAAMxL,KAAP,UACGsI,EAAKzN,OAAOsF,KAAI,SAACiE,EAAGhE,GAAJ,OAEf,cADA,CACA,sBACE,sCAASA,KAAQ,uBADnB,WAEWsK,KAAKC,UAAUvG,EAAEvC,OAAQ,KAAM,GAAG,uBAF7C,YAGY6I,KAAKC,UAAUvG,EAAElJ,QAAS,KAAM,GAAG,uBAH/C,WAIWkJ,EAAEW,OAJb,IAIqB,uBAJrB,cAKc2F,KAAKC,UAAU,CAAElI,IAAK2B,EAAE3B,IAAKrE,IAAKgG,EAAEhG,KAAO,KAAM,GAAG,uBALlE,WAMU,uBACPgG,EAAEY,YAAY7E,KAAI,SAAAQ,GAAC,OAAK,0CAAK+J,KAAKC,UAAUhK,EAAG,KAAM,GAAG,qCAI/D,cAAC6K,EAAA,EAAMK,OAAP,UACE,cAACtK,EAAA,EAAD,CAAQwB,QAAQ,UAAUtB,QAASoH,EAAnC,4B,0BEjLV,IAEMiD,EAAUxJ,OAAOC,QAAQ1G,KAAOsE,KAAI,yCAAsB,CAC9D2C,KADwC,KAExCiJ,QAFwC,KAEvB5L,KAAI,WAAc0C,GAAd,MAAyB,CAC5ChF,QADmB,EAAGA,QAEtBgF,gBAuEEmJ,EAAgB,SAAC,GAKhB,IALkBvM,EAKnB,EALmBA,WAAYwM,EAK/B,EAL+BA,QAASF,EAKxC,EALwCA,QAASG,EAKjD,EALiDA,SAMrD,ECvFa,SAAsCC,GACnD,IAAMC,EAAQC,iBAAU,MAGxB,MAAO,CAFe,kBAAMD,EAAM9O,QAASgP,eAAeH,IAEnCC,GDmFOG,CAAU,CACtCC,SAAU,SACVC,MAAO,UAFT,mBAAOC,EAAP,KAAiBC,EAAjB,KAKA,OACE,eAAC1B,EAAA,EAAD,WACE,cAAC2B,EAAA,EAAKC,MAAN,UAAaZ,IACb,uBACA,cAAC5J,EAAA,EAAD,CAAayK,KAAK,KAAK1K,UAAU,OAAjC,SACG2J,EAAQ5L,KAAI,gBAAGtC,EAAH,EAAGA,QAASgF,EAAZ,EAAYA,MAAZ,OACX,cAACtB,EAAA,EAAD,CAEE7F,KAAMuQ,EACN1Q,GAAE,UAAKsH,GACPE,QAAStD,EAAWoD,GAAS,UAAY,YACzCpB,QAAS,WAAQyK,EAASrJ,GAAQ6J,KALpC,SAME7O,GALKgF,QAQX,qBAAKtH,GAAE,UAAK0Q,EAAL,WAAuBc,IAAKJ,QAK1BK,EAlGO,SAAC,GAAgF,IAA9EC,EAA6E,EAA7EA,OACvB,EAAwBC,IAAMxE,SAC5BoD,EAAQnH,QACN,SAACiB,EAAD,OAAQ9C,EAAR,EAAQA,KAAMiJ,EAAd,EAAcA,QAAd,mBAAC,eACInG,GADL,kBAEG9C,EAAOiJ,EAAQ,GAAGlJ,UAErB,KANJ,mBAAOsK,EAAP,KAAaC,EAAb,KASA,EAAwBF,IAAMxE,SAAS,CACrChN,KAAMC,cACNC,KAAK,IAAIZ,KAASY,QAFpB,mBAAOH,EAAP,KAAa4R,EAAb,KA+BMC,EAAc,SAACxK,GAAD,OAAkB,4BAAIjH,IAAMiH,GAAMqK,EAAKrK,IAAOjF,WAClE,OACE,eAAC+O,EAAA,EAAD,CAAMW,SAvBa,SAAChN,GACpBA,EAAEiN,iBACFP,EAAO,CACL1R,GAAI,MACJE,OACAI,MAAOyG,OAAOC,QAAQ4K,GAAMxI,QAAO,SAACiB,EAAD,GAAyB,IAAD,mBAAjB9C,EAAiB,KAAXD,EAAW,KACzD,OAAO,2BACF+C,GADL,kBAEG9C,EAAOjH,IAAMiH,GAAMD,OAErB,CAAE/G,MAAOD,IAAMC,MAAM,MACvB,CACDS,GAAIC,YAAS,IACbC,QAASD,YAAS,GAClBE,eAAgBF,YAAS,GACzBG,MAAOH,YAAS,GAChBI,OAAQJ,YAAS,GACjBK,QAASL,YAAS,GAClBM,OAAQC,OAKV,oBArDY,MAuDV,eAACgO,EAAA,EAAD,CAAWC,OAAK,EAACyC,MAAO,CAAEC,aAAc,SAAxC,UACE,cAACzC,EAAA,EAAD,CAAK7I,UAAU,MAAf,SACG0J,EAAQ3L,KAAI,gBAAG2C,EAAH,EAAGA,KAAMiJ,EAAT,EAASA,QAAT,OACX,cAAC,EAAD,CACEG,SAAU,SAACrJ,GAAD,OAnCL,SAAC8K,EAAe9K,GAC/BuK,EAAQ,2BACHD,GADE,kBAEJQ,EAAQ9K,KAgCoBqJ,CAASpJ,EAAMD,IACpCoJ,QAASnJ,EACTiJ,QAASA,EAETtM,WAAY,SAACoD,GAAD,OAAWsK,EAAKrK,KAAUD,IADjCC,QAIX,cAAC8K,EAAA,EAAD,CAAQ1J,MAAM,SAASnE,GAAG,OAAOgD,QAAQ,OAAO0K,MAAO,CAAEI,UAAW,SAApE,SACE,eAAC9C,EAAA,EAAD,WACE,eAAC6C,EAAA,EAAO1N,KAAR,sBAAqB,mBAAGuB,QAAS,kBAAM4L,GAAQ,SAAC5R,GAAD,mBAAC,eAAeA,GAAhB,IAAsBC,KAAMC,oBAAtD,SAAyEF,EAAKC,OAAnG,SAAmH4R,EAAY,SAA/H,IAA0IA,EAAY,SAAtJ,IAAiKA,EAAY,SAAS,uBAAtL,gBAA0MA,EAAY,UAAtN,UAAwOA,EAAY,WAAW,uBAA/P,aAAgRA,EAAY,SAA5R,SAA4SA,EAAY,YAAxT,QAA0UA,EAAY,eACtV,cAAC/L,EAAA,EAAD,CAAQuB,KAAK,SAAb,qCErBGgL,EAlDU,SAAC,GAA4G,IAA1GjM,EAAyG,EAAzGA,OAAQoL,EAAiG,EAAjGA,OAClC,EAAkCC,IAAMxE,SAAgC,IAAxE,mBAAOqF,EAAP,KAAkBC,EAAlB,KAQMV,EAAc,SAACxK,GAAD,OAAkB,4BAAIjB,EAAOhG,MAAMiH,GAAMjF,WAC7D,OACE,eAAC+O,EAAA,EAAD,CAAMW,SATa,SAAChN,GACpBA,EAAEiN,iBACF,IAAMtS,EAAU6S,EAAU5N,KAAI,SAAAQ,GAAC,OAAIA,EAAE,MAC/B8D,EAAesJ,EAAU5N,KAAI,SAAAQ,GAAC,OAAIA,EAAE,MAE1CsM,EAAO/R,EAAoBuJ,IAI3B,UACE,cAACsG,EAAA,EAAD,CAAWC,OAAK,EAACyC,MAAO,CAAEC,aAAcK,EAAUjT,OAAS,EAAI,QAAU,SAAzE,SACE,cAACuH,EAAA,EAAD,CAAayK,KAAK,KAAK1K,UAAU,OAAjC,SACGlH,IAAQiF,KAAI,SAACvB,GAAD,OACX,cAAC2C,EAAA,EAAD,CAEEC,SAAUuM,EAAUjT,OAAS,EAC7B2G,QAAS,kBAAMuM,GAAa,SAACzN,GAAD,4BAAWA,GAAX,CAAc3B,QAH5C,SAIEA,EAAM,GAAGnD,KAAKC,MAHTkD,EAAM,GAAGnD,KAAKC,aAQzBqS,EAAUjT,OAAS,GACnB,cAAC8S,EAAA,EAAD,CAAQ1J,MAAM,SAASnE,GAAG,OAAOgD,QAAQ,OAAO0K,MAAO,CAAEC,aAAc,SAAvE,SACE,cAAC3C,EAAA,EAAD,CAAWC,OAAK,EAAhB,SACE,cAAC3I,EAAA,EAAD,CAAayK,KAAK,KAAK1K,UAAU,OAAjC,SACG2L,EAAU5N,KAAI,SAACvB,EAAOwB,GAAR,OAAgB,cAACmB,EAAA,EAAD,CAA6CE,QAAS,kBAAMuM,GAAa,SAACzN,GAAQ,IAAI0N,GAAQ,EAAO,OAAO1N,EAAEsJ,QAAO,SAACb,GAAD,OAAQiF,GAASjF,EAAE,GAAGvN,KAAKC,OAASkD,EAAM,GAAGnD,KAAKC,QAAWuS,GAAQ,UAA1L,SAAuMrP,EAAM,GAAGnD,KAAKC,MAArN,UAAgBkD,EAAM,GAAGnD,KAAKC,KAA9B,YAAsC0E,aAK7E,cAACwN,EAAA,EAAD,CAAQ1J,MAAM,SAASnE,GAAG,OAAOgD,QAAQ,OAAO0K,MAAO,CAAEI,UAAW,SAApE,SACE,eAAC9C,EAAA,EAAD,WACE,eAAC6C,EAAA,EAAO1N,KAAR,sBAAqB,4BAAI2B,EAAOpG,KAAKC,OAArC,SAAqD4R,EAAY,SAAjE,IAA4EA,EAAY,SAAxF,IAAmGA,EAAY,SAAS,uBAAxH,gBAA4IA,EAAY,UAAxJ,UAA0KA,EAAY,WAAW,uBAAjM,aAAkNA,EAAY,SAA9N,SAA8OA,EAAY,YAA1P,QAA4QA,EAAY,eACxR,eAACjL,EAAA,EAAD,WACE,cAACd,EAAA,EAAD,CACEC,SAAUuM,EAAUjT,OAAS,GAAKiT,EAAUjT,OAAS,EACrD2G,QAAS,SAACiC,GAAD,OAAOsK,GAAa,SAACzN,GAAD,4BAAWA,GAAX,CAAcxF,oBAF7C,wBAKA,cAACwG,EAAA,EAAD,CAAQuB,KAAK,SAAStB,SAAUuM,EAAUjT,OAAS,GAAKiT,EAAUjT,OAAS,EAA3E,oCChDG,SAASoT,EAA4BnC,GAkBhD,SAASoC,EAAoBC,EAAUC,GAUnC,IATAD,EAAWA,GAAY,IAEdE,iBAAmBF,EAASE,kBAAoBD,EAASC,iBAClEF,EAASG,kBAAoBH,EAASG,mBAAqBF,EAASE,kBACpEH,EAASI,gBAAkBJ,EAASI,iBAAmBH,EAASG,gBAEhEJ,EAASK,mBAAqBL,EAASK,oBAAsBJ,EAASI,mBAEtEL,EAASM,WAAaN,EAASM,YAAcL,EAASK,WAClDN,EAASM,WAAW5T,QAAU,EAAG,MAAM6T,MAAM,iEAGjD,GADAP,EAASQ,eAAiBR,EAASQ,gBAAkBP,EAASO,eAC1DR,EAASQ,gBAAkB,EAAG,MAAMD,MAAM,yCAE9C,OAAOP,EAGX,IAAIA,EAAWD,EAAoBpC,EAjCxB,CAEHuC,iBAAkB,SAAUO,GAAa,OAAOA,GAEhDN,kBAAmB,SAAU5N,EAAGmO,GAAK,MAAO,CAACnO,EAAGmO,IAEhDN,gBAAiB,SAAUK,GAAa,OAAO,GAE/CJ,wBAAoBvP,EAEpBwP,WAAY,GACZE,eAAgB,MAoCxB,SAASG,EAAUC,GACf,OAAOtE,KAAKuE,MAAMvE,KAAKC,UAAUqE,IAGrC,SAASE,EAAOL,GACZ,OAAOT,EAASE,iBAAiBS,EAAUF,IAG/C,SAASM,EAAUN,GACfA,EAAYE,EAAUF,GACtB,IAAIO,EAAOhB,EAASM,WAAWnQ,KAAKC,MAAMD,KAAKE,SAAW2P,EAASM,WAAW5T,SAE9E,OADAsU,EAAOL,EAAUK,GACVhB,EAASG,kBAAkBM,EAAWO,GAAM,GA6CvD,MAAO,CACHC,OAAQ,SAAUtD,GASd,OAPIA,IACAqC,EAAWD,EAAoBpC,EAASqC,IAzEpD,WAEI,IADA,IAAItB,EAAOsB,EAASM,WAAW5T,OACxBsT,EAASM,WAAW5T,OAASsT,EAASQ,gBAAgB,CACzD,IAAM1H,EAAO3I,KAAKC,MAAMD,KAAKE,SAAWqO,GACxCsB,EAASM,WAAWY,KAChBJ,EACIH,EAAUX,EAASM,WAAWnQ,KAAKC,MAAM0I,QAsEjDqI,GAjBR,WAEI,IAAK,IAAIvQ,EAAQ,EAAGA,EAAQoP,EAASM,WAAW5T,OAAQkE,IAAS,CAC7D,IAAIwQ,EAAajR,KAAKC,MAAMD,KAAKE,SAAW2P,EAASM,WAAW5T,QAC5D2U,EAAOrB,EAASM,WAAWc,GAC/BpB,EAASM,WAAWc,GAAcpB,EAASM,WAAW1P,GACtDoP,EAASM,WAAW1P,GAASyQ,GAY7BC,GA1CR,WAGI,IAFA,IATgB/O,EAAGmO,EASfa,EAAiB,GAEZtQ,EAAI,EAAGA,EAAI+O,EAASM,WAAW5T,OAAS,EAAGuE,GAAK,EAAG,CACxD,IAAIwP,EAAYT,EAASM,WAAWrP,GAChCuQ,EAAaxB,EAASM,WAAWrP,EAAI,GAEzCsQ,EAAeL,KAAKT,GAfRlO,EAgBGkO,EAhBAC,EAgBWc,GAf1BxB,EAASK,mBACFL,EAASK,mBAAmB9N,EAAGmO,GAE/BV,EAASI,gBAAgB7N,IAAMyN,EAASI,gBAAgBM,IAavDvQ,KAAKE,SAAW,GAChBkR,EAAeL,KAAKJ,EAAOL,IAE3Bc,EAAeL,KAAKH,EAAUN,IAGlCc,EAAeL,KAAKM,GAI5BxB,EAASM,WAAaiB,EAwBlBE,GACOC,MAEXC,KAAM,WACF,IAAIC,EAASF,KAAKG,mBAIlB,OAAOlB,EAHMiB,EAAOrL,QAAO,SAAUhE,EAAGmO,GACpC,OAAOnO,EAAEuP,OAASpB,EAAEoB,MAAQvP,EAAImO,IACjCkB,EAAO,IAAInB,YAGlBsB,UAAW,WACP,OAAO/B,EAASI,gBAAgBsB,KAAKC,SAEzCrB,WAAY,WACR,OAAOK,EAAUe,KAAKM,SAAS1B,aAEnCuB,iBAAkB,WACd,OAAOH,KAAKpB,aAAavO,KAAI,SAAU0O,GACnC,MAAO,CACHA,UAAWE,EAAUF,GACrBqB,MAAO9B,EAASI,gBAAgBK,QAI5CuB,OAAQ,WACJ,OAAOrB,EAAUX,IAErBiC,MAAO,SAAUtE,GACb,OAAOmC,EACHC,EAAoBpC,EAChBoC,EAAoB2B,KAAKM,SAAUhC,O,UCxI1CkC,EAAyB,CACpCC,WAAY,OACZC,QAAS,CAAEC,QAAS,GAAM5O,OAAQ,KAAOsF,KAAM,GAAK1K,QAAS,MAC7DiU,OAAO,GAcM,SAASC,EAAS/V,EAAYgW,EAAcC,GAmDzD,IAlDA,IAAM9E,EAAwB,2BAAQuE,GAA2BO,GAC3D3S,EAAK,YAAOY,MAAM8R,GAAM7M,QACxBmD,EAAO,IAAIlM,IAAO+Q,EAAQwE,YAC1BO,EAAUvM,EAAc3J,EAAKiH,QAC7BuO,EAAuC,CAC3C9B,iBAAkB,SAACxI,GACjB,IAAMiL,EAAcpW,YAAcmL,GAC5BiD,EAAgBgI,EAAY7V,QAAQyJ,QAAO,SAACiB,EAAK6K,GAAN,OAAkB7K,EAAM6K,EAAQlU,GAAGe,UAAS,GAE7F,GAAqB,IADAyT,EAAYlP,OAAOtF,GAAGe,SACC,IAAlByL,EACxB,OAAOjD,EAGT,IADA,IAAIK,EAAUL,EACO,IAAdoB,EAAK8J,OAAc,oBAACrW,YAAcwL,GAASjL,QAAQP,YAAcwL,GAASpB,eAAvD,aAAC,EAA+DxI,UAAhE,QAAsE,IAAM,GAAG,CAAC,IAAD,IACvG4J,EAAUgC,EAAYhC,EAASe,EAAK+J,QAAQ,CAAEhN,IAAK,EAAG1G,IAAK5C,YAAcwL,GAASjL,QAAQJ,OAAS,KAErG,IAAMoW,EAASvW,YAAcwL,GACvBgL,EAAcL,EAAQ3Q,KAAI,SAACQ,EAAGP,GAAJ,MAAY,CAACO,EAAGP,MAAeyJ,QAAO,mCAAElJ,EAAF,iBAAYA,EAAElE,QAAUyU,EAAOrP,OAAOpF,QAAQa,WAAS6C,KAAI,uDAKjI,OAJAgG,EAAUG,EACRH,EACAe,EAAK+J,QAAQ,CAAEhN,IAAK,EAAG1G,IAAKuT,EAAQhW,OAAS,EAAGsW,QAASD,MAI7D3C,gBAAiB,SAAC5T,GAChB,IAAMmW,EAAcpW,YAAcC,GAC5BmO,EAAgBgI,EAAY7V,QAAQyJ,QAAO,SAACiB,EAAK6K,GAAN,OAAkB7K,EAAM6K,EAAQlU,GAAGe,UAAS,GACvF+T,EAAeN,EAAYlP,OAAOtF,GAAGe,QACrCgU,EAAgBP,EAAYlP,OAAOpF,QAAQa,QAC3CiU,EAAoB3W,EAAKC,OAAO,GAAGgH,OAAOtF,GAAGgB,IAC7CiU,EAAqB5W,EAAKC,OAAO,GAAGgH,OAAOpF,QAAQc,IACnDkU,EAAqB7W,EAAKC,OAAO,GAAGK,QAAQyJ,QAAO,SAACiB,EAAK6K,GAAN,OAAkB7K,EAAM6K,EAAQlU,GAAGe,UAAS,GAE/FoU,GAA0BD,EAAqB1I,GAAiB0I,EAChEE,EAA0BN,EAAeE,EACzCK,GAAoBhX,EAAK+C,MAAQ/C,EAAKC,OAAOC,QAAUF,EAAK+C,MAC5DkU,EAAkBP,EAAgBE,EAElCM,EAAWJ,EAAwB3F,EAAQyE,QAAQC,QAAYkB,EAAyB5F,EAAQyE,QAAQ3O,OAAW+P,EAAmB7F,EAAQyE,QAAQrJ,KAAS0K,EAAiB9F,EAAQyE,QAAQ/T,QAItM,OAHIsP,EAAQ2E,OACVqB,QAAQC,IAAR,cAAmBjJ,EAAnB,kBAA0CsI,EAA1C,kBAAgEzW,EAAKC,OAAOC,OAA5E,sBAAgGgX,EAAhG,kBAAiHJ,EAAjH,kBAAgJC,EAAhJ,kBAAgLE,EAAhL,kBAAwMD,EAAxM,sBAAsOlH,KAAKC,UAAUoB,EAAQyE,WAExPsB,GAETpD,WAAYxQ,EAAMiC,KAAI,SAACuD,GAAD,OAAO9I,KAC7BgU,eAAgBgC,GAGZjT,EAAuB,OAAfkT,QAAe,IAAfA,KAAiBlT,MAAjB,OAAyBkT,QAAzB,IAAyBA,OAAzB,EAAyBA,EAAiBlT,MAAQ/C,EAAK+C,MACjEsU,EAAM,IAAIC,EAAkC9B,GACvC/L,EAAI,EAAGA,EAAI1G,EAAO0G,IACzB4N,EAAMA,EAAI5C,SAEZ,OAAO4C,EAAIhC,mB,sEC7EPkC,GAAiC,MAAvBC,+IAAA,IAEZD,IACFE,mBAAQ,CACNC,OAAQ,IAAIC,KAAUC,OAAO,CAC3BC,KAAM,SAKZ,IAAMC,GAAS,CACbC,GAAI,CACFC,KAAM,CAAE7N,OAAQ,UAId8N,GAAK,aACTC,QAAS,OACTjY,OAAQ,CACND,KAAM,CACJmY,MAAO,CAAC,SACRJ,GAAI,CACFK,IAAK,CAAEjO,OAAQ,OACfkO,KAAM,CAAElO,OAAQ,UAGpBmO,IAAK,CAAEpQ,KAAM,SACbqQ,KAAM,CAAErQ,KAAM,WAEb4P,IAGCU,GAAM,aACVN,QAAS,SACTjY,OAAQ,CACNgH,OAAQ,CACNkR,MAAO,CAAC,SACRJ,GAAI,CACFU,OAAQ,CAAEtO,OAAQ,eAGtBgJ,UAAW,CACT4E,GAAI,CACFW,UAAW,CAAEvO,OAAQ,UAGzBnK,KAAM,CACJ+X,GAAI,CACFK,IAAK,CAAEjO,OAAQ,OACfkO,KAAM,CAAElO,OAAQ,UAGpBmO,IAAK,CAAEpQ,KAAM,SACbqQ,KAAM,CAAErQ,KAAM,WAEb4P,IAGCa,GAAM,aACVT,QAAS,SACTjY,OAAQ,CACNgH,OAAQ,CACNkR,MAAO,CAAC,SACRJ,GAAI,CACFU,OAAQ,CAAEtO,OAAQ,UAGtBnK,KAAM,CACJ+X,GAAI,CACFK,IAAK,CACH,CAAEjO,OAAQ,UAAWyO,KAAM,WAC3B,CAAEzO,OAAQ,OAAQ+L,QAAS,CAAC,iBAAkB2C,UAAU,IAE1DR,KAAM,CAAElO,OAAQ,YAGpB2O,QAAS,CACP5Q,KAAM,SAER6Q,OAAQ,CACN7Q,KAAM,WAGP4P,IAGCkB,GAAQ,aACZd,QAAS,SACTjY,OAAQ,CACNgH,OAAQ,CACNkR,MAAO,CAAC,SACRJ,GAAI,CACFU,OAAQ,CAAEtO,OAAQ,UAGtBnK,KAAM,CACJ+X,GAAI,CACFK,IAAK,CAAEjO,OAAQ,OAAQ+L,QAAS,CAAC,kBACjCmC,KAAM,CAAElO,OAAQ,YAGpB4O,OAAQ,CACN7Q,KAAM,QACN6P,GAAI,MAKLD,IA+BCmB,IA5BM,aACVf,QAAS,SACTjY,OAAQ,CACNiZ,OAAQ,CACNnB,GAAI,CACFU,OAAQ,CAAEtO,OAAQ,YAGtBlD,OAAQ,CACN8Q,GAAI,CACFoB,SAAU,CAAEhP,OAAQ,UAGxBnK,KAAM,CACJ+X,GAAI,CACFqB,SAAU,CAAEjP,OAAQ,cAGxBkP,SAAU,CACRtB,GAAI,CACFuB,KAAM,CAAEnP,OAAQ,UAChBoP,OAAQ,CAAEpP,OAAQ,cAIrB2N,IAGqB,iBAAO,CAC/B0B,UAAW,EACXlE,MAAO,EACPxL,KAAMnG,KAAKE,YAEP4V,GAAsB,iBAAO,CACjCD,UAAW,EACX1P,KAAMnG,KAAKE,WAEP6V,GAAoB,iBAAO,CAC/B5P,KAAMnG,KAAKE,WAQA8V,GAAkBC,aAAc,CAC3CC,QAAS,GACTlZ,GAAI,QACJuX,QAAS,OACT4B,QAV6B,CAC7BC,cAAed,KACfe,gBAAiBP,KACjBQ,cAAeP,MAQfzZ,OAAQ,CACNia,KAAM,CACJnC,GAAI,CACFoC,MAAO,CAAEhQ,OAAQ,SACjBiQ,OAAQ,CAAEjQ,OAAQ,UAClBkQ,OAAQ,CAAElQ,OAAQ,UAClBmQ,SAAU,CAAEnQ,OAAQ,cAKxB8N,MAAM,eACDA,IAELO,OAAO,eACFA,IAELG,OAAO,eACFA,IAELK,SAAS,eACJA,MASN,CACDuB,OAAQ,CACNC,QAAS,qBAAGT,cAAiBP,UAA8B,GAAK,IAElEtD,QAAS,CACPuE,cAAeC,kBAAO,CACpBX,cAAe,WAAoBY,GAApB,IAAGZ,EAAH,EAAGA,cAAH,mBAAC,eAAoCA,GAArC,IAAoDP,UAAWO,EAAcP,UAAY,EAAG1P,KAAMnG,KAAKE,YACtHmW,gBAAiB,WAAsBW,GAAtB,IAAGX,EAAH,EAAGA,gBAAH,mBAAC,eAAsCA,GAAvC,IAAwDR,UAAWQ,EAAgBR,UAAY,EAAG1P,KAAMnG,KAAKE,cAEhI+W,MAAOF,kBAAO,CACZV,gBAAiB,SAACa,EAAGlV,GAAJ,OAAU8T,MAC3BM,cAAe,SAACc,EAAGlV,GAAJ,OAAUsT,MACzBgB,cAAe,SAACY,EAAGlV,GAAJ,OAAU+T,WAK3BnC,IACFuD,aAAUnB,GAAiB,CAAEoB,UAAU,IACpCC,cAAa,SAACC,GAAD,OAAW9D,QAAQC,IAAI6D,MACpCrR,QCrNL,IAqBesR,GAjBV,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAOlb,EAAV,EAAUA,OAAQ4G,EAAlB,EAAkBA,QAAlB,OACD,eAACsJ,EAAA,EAAD,CAAWC,OAAK,EAACyC,MAAO,CAAEC,aAAc,SAAxC,UACE,cAACzC,EAAA,EAAD,CAAK7I,UAAU,MAAf,SACE,cAACtC,EAAA,EAAKG,MAAN,UACG8V,MAGJlb,EAAOsF,KAAI,SAAA0V,GAAK,OACf,cAAC5K,EAAA,EAAD,CAAK7I,UAAU,MAAf,SACE,cAACb,EAAA,EAAD,CAAQuL,KAAK,KAAK1K,UAAU,OAE1BW,QAAS,UACTtB,QAAS,WAAQA,EAAQoU,IAH3B,SAIEA,GAHKA,IAFiBA,UC+GlC,IAAMG,GAAa,SAAC,GAA6H,IAA3Hpb,EAA0H,EAA1HA,KAAM4N,EAAoH,EAApHA,WAAYyN,EAAwG,EAAxGA,UACtC,EAAwB/I,IAAMxE,SAAe9N,GAA7C,mBAAO0N,EAAP,KAAa4N,EAAb,KACA,EAAwBhJ,IAAMxE,SAAqB,IAAnD,mBAAO6B,EAAP,KAAa4L,EAAb,KAEArM,qBAAU,WACRoM,EAAQtb,KACP,CAACA,IAEJkP,qBAAU,WACR,IAAMsM,EV4De,SAACxb,GACxB,IAAMib,EAAQjb,EAAKC,OAAOD,EAAKC,OAAOC,OAAS,GAC/C,OAAO+a,EAAMhU,OAAOtF,GAAGe,SAAW,EAC9B,OACAuY,EAAM3a,QAAQyJ,QAAO,SAACiB,EAAK6K,GAAN,OAAkB7K,EAAM6K,EAAQlU,GAAGe,UAAS,IAAM,EACrE,MACA,UUlEc+Y,CAAU/N,GACG,YAAd8N,GAEfH,EAAUG,EAAW9N,KAEtB,CAACA,IAEJ,IAAMgO,EAAgB9N,EAAa,CACjC+B,KAAMA,EAAKzP,OAAS,EAAK,WACvB,IAAMyb,EAAO,YAAOhM,GACd2G,EAASqF,EAAQlP,MACvB8O,EAAQI,GACRL,EAAQ,2BAAK5N,GAAN,IAAYzN,OAAO,GAAD,mBAAMyN,EAAKzN,QAAX,CAAmBqW,aACzChS,EACLoL,KAAM,WACJ6L,EAAQ,GAAD,mBAAK5L,GAAL,CAAW5P,YAAc2N,MAChC4N,EAAQ,2BAAK5N,GAAN,IAAYzN,OAAO,CAAEyN,EAAKzN,OAAO,IAAf,mBAAsByN,EAAKzN,OAAO2b,MAAM,GAAI,eAErEtX,EAEJ,OAAQ,cAAC,EAAD,CACNoJ,KAAMA,EACNE,WAAY8N,EACZnO,YAAa,SAAC/H,GAAU+V,EAAQ,IAAKD,EAAQ/N,EAAYG,EAAMlI,KAC/D8B,kBAAmB,SAACV,GAAe2U,EAAQ,IAAKD,EV0BnB,SAACtb,EAAY4G,GAE5C,OADA5G,EAAKC,OAAOD,EAAKC,OAAOC,OAAS,GAAGmH,eAAiBT,EAC9C,2BACF5G,GADL,IAEEC,OAAO,YAAKD,EAAKC,UU9BuCqH,CAAkBoG,EAAM9G,KAChF8E,mBAAoB,SAAClG,GAAU+V,EAAQ,IAAKD,EAAQ5P,EAAmBgC,EAAMlI,KAC7EmI,UAAW,SAACkO,GAAD,OAAgBP,EAAQ7V,YAAIsQ,EAASrI,EAAMmO,EAAY,CAAE9Y,MAAO2K,EAAK3K,MAAQ2K,EAAKzN,OAAOC,UAAW4b,OAAM,SAAA/V,GAAC,OAAIA,EAAEuP,SAASrB,YACrIpG,KAAM,SAACgO,GAAD,OACJP,EAAQ,2BACH5N,GADE,IAELzN,OAAO,GAAD,mBAAMyN,EAAKzN,QAAX,CAAmBwF,YAAIsQ,EAASrI,EAAMmO,EAAY,CAAE9Y,MAAO2K,EAAK3K,MAAQ2K,EAAKzN,OAAOC,UAAW4b,OAAM,SAAA/V,GAAC,OAAIA,EAAEuP,SAASrB,UAAUhU,OAAOyN,EAAKzN,OAAOC,iBAOjJ6b,GA3Jf,WACE,IAAM9U,EAAS1G,cACf,EAAsByb,aAAWrC,GAAiB,CAAEoB,UAAU,IAA9D,mBAAOE,EAAP,KAAcgB,EAAd,KACM5T,EAAQ4S,EAAM5S,MAEpB,QAAQ,GACN,KAAK4S,EAAMiB,QAAQ,QACjB,OAAO,cAAC,GAAD,CACLf,MAAO,YACPlb,OAAQyH,OAAOyB,KAAKwQ,GAAgB1Z,OAAOia,KAAKnC,IAChDlR,QAASoV,IAGb,KAAKhB,EAAMiB,QAAQ,CAAEjE,MAAO,SAC1B,IAAMhR,EAAS1G,cACT4S,EAAYhT,cAClB,OAAO,cAAC,GAAD,CACLH,KAAMA,EAAKiH,EAAO,GAAIA,EAAO,GAAI,CAACkM,EAAU,IAAK,CAACA,EAAU,IAAK,GAAI8H,EAAMnB,QAAQG,cAAcnQ,MACjG8D,YAAY,EACZyN,UAAW,SAACc,EAAQzO,GAAWuO,EAAgB,QAAXE,EAAmB,MAAQ,OAAQ,CAAEA,SAAQzO,YAGrF,KAAKuN,EAAMiB,QAAQ,CAAEjE,MAAO,QAC5B,KAAKgD,EAAMiB,QAAQ,CAAEjE,MAAO,SAC1B,OAAO,cAAC,GAAD,CACLkD,MAAK,UAAK9S,EAAM8T,OAAX,eAAwB9T,EAAMqF,KAAKzN,OAAOC,OAAS,EAAnD,UACLD,OAAQ,CAAC,QACT4G,QAASoV,IAGb,KAAKhB,EAAMiB,QAAQ,CAAE1D,OAAQ,WAC3B,OAAO,cAAC,EAAD,CAAenG,OAAQ,SAACpL,EAAQC,GAAkB+U,EAAK,SAAU,CAAEhV,OAAQ,CAACA,EAAQC,QAC7F,KAAK+T,EAAMiB,QAAQ,CAAE1D,OAAQ,cAC3B,OAAO,cAAC,EAAD,CACLvR,OAAQA,EAAO,GACfoL,OAAQ,SAAC/R,EAASuJ,GAAmBoS,EAAK,YAAa,CAAE9I,UAAW,CAAC7S,EAASuJ,GAAe5C,OAAQoB,EAAMpB,YAE/G,KAAKgU,EAAMiB,QAAQ,CAAE1D,OAAQ,SAC3B,OAAO,cAAC,GAAD,CACLxY,KAAMA,EAAKqI,EAAMpB,OAAO,GAAIoB,EAAMpB,OAAO,GAAIoB,EAAM8K,UAAU,GAAI9K,EAAM8K,UAAU,GAAI,GAAI8H,EAAMnB,QAAQG,cAAcnQ,MACrH8D,YAAY,EACZyN,UAAW,SAACc,EAAQzO,GAAWuO,EAAgB,QAAXE,EAAmB,MAAQ,OAAQ,CAAEA,SAAQzO,YAGrF,KAAKuN,EAAMiB,QAAQ,CAAE1D,OAAQ,QAC7B,KAAKyC,EAAMiB,QAAQ,CAAE1D,OAAQ,SAC3B,OAAO,cAAC,GAAD,CACL2C,MAAK,UAAK9S,EAAM8T,OAAX,eAAwB9T,EAAMqF,KAAKzN,OAAOC,OAAS,EAAnD,UACLD,OAAQ,CAAC,QACT4G,QAASoV,IAGb,KAAKhB,EAAMiB,QAAQ,CAAEvD,OAAQ,WAC3B,IAAMxF,EAAYhT,cAClB,OAAO,cAAC,EAAD,CAAekS,OAAQ,SAACpL,EAAQC,GAAkB+U,EAAK,SAAU,CAAEvO,KAAM1N,EAAKiH,EAAQC,EAAa,CAACiM,EAAU,IAAK,CAACA,EAAU,IAAK,GAAI8H,EAAMnB,QAAQE,gBAAgBlQ,WAE9K,KAAKmR,EAAMiB,QAAQ,CAAEvD,OAAQ,SAC3B,OAAO,cAAC,GAAD,CACL3Y,KAAMqI,EAAMqF,KACZE,YAAY,EACZyN,UAAW,SAACc,EAAmBzO,GAC7B,IAAMyF,EAAYhT,cACZic,EAAuB1O,EAAKzN,OAAO,GACzCgc,EAAgB,QAAXE,EAAmB,MAAQ,OAAQ,CAAEA,SAAQzO,KAAM1N,EAAK0N,EAAKzG,OAAQmV,EAAWnV,OAAQ,CAACkM,EAAU,IAAK,CAACA,EAAU,IAAK,GAAI8H,EAAMnB,QAAQE,gBAAgBlQ,WAIrK,KAAKmR,EAAMiB,QAAQ,CAAEvD,OAAQ,YAC3B,OAAO,cAAC,GAAD,CACLwC,MAAK,WACLlb,OAAQ,CAAC,QACT4G,QAASoV,IAGb,KAAKhB,EAAMiB,QAAQ,CAAEvD,OAAQ,WAC3B,OAAO,cAAC,GAAD,CACLwC,MAAK,uBAAkBF,EAAMnB,QAAQC,cAAcP,UAA9C,cACLvZ,OAAQ,CAAC,QACT4G,QAASoV,IAIb,KAAKhB,EAAMiB,QAAQ,CAAElD,SAAU,WAC7B,IAAM7F,EAAYhT,cAClB,OAAO,cAAC,EAAD,CAAekS,OAAQ,SAACpL,EAAQC,GAAkB+U,EAAK,SAAU,CAAEvO,KAAM1N,EAAKiH,EAAQC,EAAa,CAACiM,EAAU,IAAK,CAACA,EAAU,IAAK,GAAI8H,EAAMnB,QAAQE,gBAAgBlQ,WAE9K,KAAKmR,EAAMiB,QAAQ,CAAElD,SAAU,SAC7B,OAAO,cAAC,GAAD,CACLhZ,KAAMqI,EAAMqF,KACZE,YAAY,EACZyN,UAAW,SAACc,EAAQzO,GAClB,IAAMyF,EAAYhT,cACZkc,EAAsB3O,EAAKzN,OAAOoI,EAAMqF,KAAKzN,OAAOC,OAAS,GACnE+b,EAAgB,QAAXE,EAAmB,MAAQ,OAAQ,CAAEA,SAAQzO,KAAM1N,EAAK0N,EAAKzG,OAAQoV,EAAUpV,OAAQ,CAACkM,EAAU,IAAK,CAACA,EAAU,IAAK,GAAI8H,EAAMnB,QAAQE,gBAAgBlQ,WAIpK,KAAKmR,EAAMiB,QAAQ,CAAElD,SAAU,WAC7B,OAAO,cAAC,GAAD,CACLmC,MAAK,0BAAqBF,EAAMnB,QAAQE,gBAAgBR,UAAnD,cACLvZ,OAAQ,CAAC,QACT4G,QAASoV,IAGb,QACE,OAAO,mCAAGnM,KAAKC,UAAUkL,EAAMhT,WC9G/BqU,GAAcC,QACW,cAA7BpN,OAAOqN,SAASC,UAEe,UAA7BtN,OAAOqN,SAASC,UAEhBtN,OAAOqN,SAASC,SAASC,MAAM,2DA0CnC,SAASC,GAAgBC,EAAepH,GACtCqH,UAAUC,cACPC,SAASH,GACTI,MAAK,SAACC,GACLA,EAAaC,cAAgB,WAC3B,IAAMC,EAAmBF,EAAaG,WACd,MAApBD,IAGJA,EAAiBE,cAAgB,WACA,cAA3BF,EAAiBlC,QACf4B,UAAUC,cAAcQ,YAI1BnG,QAAQC,IACN,+GAKE5B,GAAUA,EAAO+H,UACnB/H,EAAO+H,SAASN,KAMlB9F,QAAQC,IAAI,sCAGR5B,GAAUA,EAAOgI,WACnBhI,EAAOgI,UAAUP,WAO5BQ,OAAM,SAACC,GACNvG,QAAQuG,MAAM,4CAA6CA,MCjGjE,IAYeC,GAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,8BAAqBb,MAAK,YAAkD,IAA/Cc,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCFdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,GAAD,MAEFC,SAASC,eAAe,SFcnB,SAAkB/I,GACvB,GAA6C,kBAAmBqH,UAAW,CAGzE,GADkB,IAAI2B,IAAIhH,eAAwBrI,OAAOqN,SAASiC,MACpD9T,SAAWwE,OAAOqN,SAAS7R,OAIvC,OAGFwE,OAAOC,iBAAiB,QAAQ,WAC9B,IAAMwN,EAAK,UAAMpF,eAAN,sBAEP8E,KAgEV,SAAiCM,EAAepH,GAE9CkJ,MAAM9B,EAAO,CACX+B,QAAS,CAAE,iBAAkB,YAE5B3B,MAAK,SAAC4B,GAEL,IAAMC,EAAcD,EAASD,QAAQG,IAAI,gBAEnB,MAApBF,EAAS1c,QACO,MAAf2c,IAA8D,IAAvCA,EAAYE,QAAQ,cAG5ClC,UAAUC,cAAckC,MAAMhC,MAAK,SAACC,GAClCA,EAAagC,aAAajC,MAAK,WAC7B7N,OAAOqN,SAAS0C,eAKpBvC,GAAgBC,EAAOpH,MAG1BiI,OAAM,WACLtG,QAAQC,IAAI,oEAtFV+H,CAAwBvC,EAAOpH,GAI/BqH,UAAUC,cAAckC,MAAMhC,MAAK,WACjC7F,QAAQC,IACN,+GAMJuF,GAAgBC,EAAOpH,OEpC/B4J,GAKAzB,M,2GCMajU,EAAkB,CAC7B,iBAAkB,SAACzC,EAAqB3G,GAAtB,MAA6E,CAAC,2BAAK2G,GAAN,IAActF,GAAIC,YAASqF,EAAOtF,GAAGe,QAAU,MAAOpC,IACrJ,gBAAiB,SAAC2G,EAAqB3G,GAAtB,MAA6E,CAAC,2BAAK2G,GAAN,IAAcnF,eAAgBF,YAASqF,EAAOnF,eAAeY,QAAU,KAAMpC,IAC3K,qBAAsB,SAAC2G,EAAqB3G,GAAtB,MAA6E,CAAC,2BAAK2G,GAAN,IAAcpF,QAASD,YAASqF,EAAOpF,QAAQa,QAAU,KAAMpC,IAClK,mBAAoB,SAAC2G,EAAqB3G,GAAtB,MAA6E,CAAC,2BAAK2G,GAAN,IAAcjF,OAAQJ,YAASqF,EAAOjF,OAAOU,QAAU,KAAMpC,IAC9J,oBAAqB,SAAC2G,EAAqB3G,GAAtB,MAA6E,CAAC,2BAAK2G,GAAN,IAAclF,MAAOH,YAASqF,EAAOlF,MAAMW,QAAU,KAAMpC,IAC7J,kBAAmB,SAAC2G,EAAqB3G,GAAtB,MAA6E,CAAC,2BAAK2G,GAAN,IAAchF,QAASL,YAASqF,EAAOhF,QAAQS,QAAU,KAAMpC,KAuB3J+e,EAAY,sCAAO9U,EAAP,yBAAOA,EAAP,uBAEfA,EAAKrK,OAAS,EACXqK,EAAKR,QAAO,SAACiB,EAAK/C,GAAN,OAAgB,SAACqX,GAAD,OAAY,SAAC3U,EAAQ3K,EAAMmL,GACvD,MAA4BH,EAAIsU,EAAJtU,CAAYL,EAAQ3K,EAAMmL,GAAtD,mBAAOI,EAAP,KAAgBC,EAAhB,KACA,OAAOvD,EAAMqX,EAANrX,CAAc0C,EAAQY,EAASC,QACnCjB,EAAK,IAERgV,EAAiB,CACrB,aAAcF,GACZ,kBAAM,SAACvW,EAAG9I,EAAMwf,GAAV,MAA2B,CAACxf,EAAD,2BAAYwf,GAAZ,IAA0Blf,QAASkf,EAAalf,QAAQiF,KAAI,SAAA6I,GAAC,kCAAUA,GAAV,IAAazM,GAAG,2BAAMyM,EAAEzM,IAAT,IAAae,QAAS,gBAErI,eAAgB2c,GACd,kBAAM,SAACvW,EAAG9I,EAAMwf,GAAV,MAA2B,CAACxf,EAAD,2BAAYwf,GAAZ,IAA0BvY,OAAO,2BAAMuY,EAAavY,QAApB,IAA4BtF,GAAG,2BAAM6d,EAAavY,OAAOtF,IAA3B,IAA+Be,QAAS,cAIrI8B,EAA8B,aAClC,gBAAiB6a,GACf,gBAAGlV,EAAH,EAAGA,OAAH,OAAgB,SAACQ,EAAQ3K,EAAMwf,GAAf,MAAgC,CAACxf,EAAiB,WAAXmK,EAAsB+L,EAAQuJ,aAAaD,EAAc7U,EAAyB,GAAKuL,EAAQwJ,cAAcF,EAAcrV,EAAQ,QAC1L,SAACmV,GAAD,OAAY,SAAC3U,EAAQ3K,EAAMwf,GAAf,MAAgC,CAACxf,EACxB,WAAlBsf,EAAOnV,QAAuBqV,EAAalf,QAAQgf,EAAOnV,QAAUxI,GAAGe,QAAU,GAC5E4c,EAAOK,SAAW,EACpBzJ,EAAQ0J,aAAaJ,EAAc7U,EAAQ,CAAE1H,QAAQ,UAAD,OAAYjD,EAAKM,QAAQgf,EAAOnV,QAAUtJ,KAAKC,KAA/C,aAAwDwe,EAAOnV,OAAS,EAAxE,KAA8EjH,QAAS,GAAII,MAAOf,IAAWY,SAAU,EAAGC,QAAS,CAACC,YAAc,CAAC,gBAAD,2BAAuBic,GAAvB,IAA+BK,SAAUL,EAAOK,SAAW,SACjQH,OAER,iBAAkBH,GAChB,gBAAGrb,EAAH,EAAGA,MAAH,OAAe,SAAC6b,EAAS7f,EAAMwf,GAAhB,OAAiCtJ,EAAQ4J,SAAS9f,EAAMwf,EAAclf,IAAQ0D,GAAO,GAAI1D,IAAQ0D,GAAO,QAEzH,eAAgBqb,GACd,kBAAM,SAACQ,EAAS7f,EAAMwf,GAAhB,MAAiC,CAACxf,EAAMwf,OAEhD,qBAAsBH,GACpB,gBAAG5c,EAAH,EAAGA,OAAH,OAAgB,SAACod,EAAS7f,EAAMwf,GAAhB,MAAiC,CAACxf,EAAMkW,EAAQ6J,oBAAoBP,EAAc/c,QAEpG,kBAAmB4c,GACjB,kBAAM,SAACQ,EAAS7f,EAAMwf,GAAhB,MAAiC,CAACxf,EAAMkW,EAAQ8J,mBAAmBR,GAAc,SAACS,GAAD,mBAAC,eAAYA,GAAb,IAAgB5e,MAAO,CAAEoB,OAAQ,GAAKK,MAAO,CAAEC,MAAOY,KAAKhB,IAAIsd,EAAEnd,MAAMC,MAAQ,EAAG,IAAMH,MAAO,CAAEC,QAAQ,aAChM,kBAAM,SAACgd,EAAS7f,EAAMwf,GAAhB,MAAiC,CAACxf,EAAMwf,EAAalf,QAAQyJ,QAAO,SAACiB,EAAKnF,EAAGL,GAAT,OAAiB0Q,EAAQgK,oBAAoBlV,EAAKxF,GAAsB,SAACya,GAAD,mBAAC,eAAYA,GAAb,IAAgB5e,MAAO,CAAEoB,OAAQ,GAAKK,MAAO,CAAEC,MAAOY,KAAKhB,IAAIsd,EAAEnd,MAAMC,MAAQ,EAAG,IAAMH,MAAO,CAAEC,QAAQ,UAAa2c,QAE1Q,aAAcH,GACZ,kBAAM,SAACQ,EAAS7f,EAAMwf,GAAhB,MAAiC,CAACxf,EAAMwf,OAEhD,gBAAiBH,GACf,kBAAM,SAACQ,EAAS7f,EAAMwf,GAAhB,MAAiC,CAACxf,EAAMkW,EAAQiK,eAAeX,EAAcA,EAAarV,QAAS,QAE3G,gBAAiBkV,GACf,kBAAM,SAACQ,EAAS7f,EAAMwf,GAAhB,MAAiC,CAACxf,EAAMkW,EAAQiK,eAAeX,EAAcA,EAAarV,OAAQ,QAE1G,eAAgBkV,GACd,kBAAM,SAACQ,EAAS7f,EAAMwf,GAAhB,MAAiC,CAACxf,EAAMkW,EAAQ8J,mBAAmBR,GAAc,SAACS,GAAD,mBAAC,eAAYA,GAAb,IAAgBrd,MAAO,CAAEC,QAAQ,aAE1H,WAAYwc,GACV,kBAAM,SAACvW,EAAG9I,EAAMwf,GAAV,MAA2B,CAACxf,EAAMkW,EAAQwJ,cAAcF,EAAcA,EAAarV,OAAQ,QAEnG,UAAWkV,GACT,kBAAM,SAACvW,EAAG9I,EAAMwf,GAAV,MAA2B,CAACxf,EAAMkW,EAAQwJ,cAAcF,EAAcA,EAAarV,OAAQ,QACjG,kBAAM,SAACQ,EAAQ3K,EAAMwf,GAAf,MAAgC,CAACxf,EACrCkW,EAAQ0J,aAAaJ,EAAc7U,EAAQ,CAAE1H,QAAQ,UAAD,OAAYjD,EAAKM,QAAQkf,EAAarV,QAAUtJ,KAAKC,KAArD,aAA8D0e,EAAarV,OAAS,EAApF,KAA0FjH,QAAS,GAAII,MAAOf,IAAWY,SAAU,EAAGC,QAAS,CAACC,YAAc,CAAC,gBAAiB,CAAE8G,OAAQqV,EAAarV,OAAQwV,SAAU,aAEjR,YAAaN,GACX,kBAAM,SAACvW,EAAG9I,EAAMwf,GAAV,MAA2B,CAACxf,EAAMkW,EAAQwJ,cAAcF,EAAcA,EAAarV,OAAQ,QACjG,kBAAM,SAACrB,EAAG9I,EAAMwf,GAAV,MAA2B,CAACxf,EAAMkW,EAAQgK,oBAAoBV,EAAcA,EAAarV,QAAQ,SAAC8V,GAAD,mBAAC,eAAYA,GAAb,IAAgBnd,MAAO,CAAEC,MAAOkd,EAAEnd,MAAMC,MAAQ,aAEzJ,eAAgBsc,GACd,kBAAM,SAACvW,EAAG9I,EAAMwf,GAAV,MAA2B,CAACxf,EAAMkW,EAAQ8J,mBAAmBR,GAAc,SAACS,GAAD,mBAAC,eAAYA,GAAb,IAAgB5e,MAAO,CAAEoB,OAAQ,aAEpH,eAAgB4c,GACd,kBAAM,SAACvW,EAAG9I,EAAMwf,GAAV,MAA2B,CAACxf,EAAMkW,EAAQwJ,cAAcF,EAAcA,EAAarV,OAAQ,QACjG,kBAAM,SAAC0V,EAAS7f,EAAMwf,GAAhB,MAAiC,CAACxf,EAAMkW,EAAQiK,eAAeX,EAAcA,EAAarV,QAAS,QAE3G,gBAAiBkV,GACf,kBAAM,SAAC1U,EAAQ3K,EAAMwf,GAAf,MAAgC,CAACxf,EAAMkW,EAAQuJ,aAAaD,EAAc7U,EAAyB,QAE3G,eAAgB0U,GACd,kBAAM,SAACvW,EAAG9I,EAAMwf,GAAV,MAA2B,CAACxf,EAAMkW,EAAQ6J,oBAAoBP,GAAe,QAErF,eAAgBH,GACd,kBAAM,SAAC1U,EAAQ3K,EAAMwf,GAAf,MAAgC,CAACxf,EAAMkW,EAAQiK,eAAeX,EAAc7U,GAAS,QAE7F,oBAAqB0U,GACnB,kBAAM,SAACvW,EAAG9I,EAAMwf,GAAV,MAA2B,CAACxf,EAAMwf,EAAalf,QAAQyJ,QAAO,SAACP,EAAG4W,EAAI5a,GAAR,OAAgB0Q,EAAQiK,eAAe3W,EAAGhE,GAAuB,KAAIga,SAExID,GAGCxU,EAAQ,SAACF,EAAaxB,GAAd,IAA2B1G,EAA3B,uDAAyCmI,IAAzC,OACZnH,KAAK0F,IAAI1F,KAAKhB,IAAIkI,EAAKxB,GAAM1G,IAEzB0d,EAAgB,SAAC/f,EAAuB6J,EAAgBmW,GAAxC,OACpBhgB,EAAQiF,KAAI,SAAC6I,EAAG5I,GAAJ,OACTA,IAAQ2E,EAAT,YAAC,eACQiE,GAAMkS,EAASlS,IACpBA,MAqBF8H,EAAU,CACduJ,aA+EF,SAAsBc,EAAgB1K,EAAwBpT,GAC5D,IAAMpB,EAAQkf,EAAKtZ,OAAO/E,OAAOb,MAAMoB,OACjC+d,EAAS/d,EAAS8d,EAAKtZ,OAAOjF,OAAOU,QACrC+d,EAAe9c,KAAKhB,IAAI6d,EAASD,EAAKtZ,OAAOhF,QAAQS,QAAS,GAC9Dge,EAAa/c,KAAKhB,IAAI8d,EAAepf,EAAO,GAC5Csf,EAAatf,GAASof,EAAeC,GACrCE,EAAaF,GAAcH,EAAKtZ,OAAO/E,OAAOY,MAAMC,MAAQ,EAAI,EAAI,GAC1E,OA1GmB,SAACwd,EAAgBD,GACpC,OAAO,2BACFC,GADL,IAEEtZ,OAAO,2BAAMsZ,EAAKtZ,QAAWqZ,EAASC,EAAKtZ,WAuGtC4Z,CAAaN,GAAM,gBAAG5e,EAAH,EAAGA,GAAIO,EAAP,EAAOA,OAAP,MAAqB,CAC7CP,GAAI,CAAEgB,IAAKhB,EAAGgB,IAAKD,QAASqI,EAAMpJ,EAAGe,QAAUke,EAAY,EAAGjf,EAAGgB,MACjET,OAAO,2BAAMA,GAAP,IAAeb,MAAO,CAAEoB,OAAQP,EAAOb,MAAMoB,OAASke,UAvF9DjB,cA4DF,SAAuBa,EAAgBpW,EAAuB1H,GAC5D,IAAMoT,EAAU0K,EAAKjgB,QAAQ6J,GACvB9I,EAAQwU,EAAQ3T,OAAOb,MAAMoB,OAC7B+d,EAAS/d,EAAS8d,EAAKtZ,OAAOjF,OAAOU,QACrC+d,EAAe9c,KAAKhB,IAAI6d,EAAS3K,EAAQ5T,QAAQS,QAAS,GAC1Dge,EAAa/c,KAAKhB,IAAI8d,EAAepf,EAAO,GAC5Csf,EAAatf,GAASof,EAAeC,GACrCE,EAAaF,GAAc7K,EAAQ3T,OAAOY,MAAMC,MAAQ,EAAI,EAAI,GACtE,OAAO,YAAC,eACHwd,GADL,IAEEjgB,QAAS+f,EAAcE,EAAKjgB,QAAS6J,GAAQ,gBAAGjI,EAAH,EAAGA,OAAQP,EAAX,EAAWA,GAAX,MAAqB,CAChEA,GAAI,CAAEgB,IAAKhB,EAAGgB,IAAKD,QAASqI,EAAMpJ,EAAGe,QAAUke,EAAY,EAAGjf,EAAGgB,MACjET,OAAO,2BACAA,GADD,IACSb,MAAO,CAAEoB,OAAQke,YAxEpCX,mBAAoB,SAACO,EAAgBO,GAAjB,mBAAC,eAChBP,GADe,IAElBtZ,OAAO,2BAAMsZ,EAAKtZ,QAAZ,IAAoB/E,OAAQ4e,EAAaP,EAAKtZ,OAAO/E,aAE7Dge,oBAAqB,SAACK,EAAgBpW,EAAuB2W,GAAxC,mBAAC,eACjBP,GADgB,IAEnBjgB,QAAS+f,EAAcE,EAAKjgB,QAAS6J,GAAQ,gBAAGjI,EAAH,EAAGA,OAAH,MAAiB,CAAEA,OAAQ4e,EAAa5e,UAEvFie,eAAgB,SAACI,EAAgB5V,EAAgBlI,GAAjC,mBAAC,eAEZ8d,GAFW,IAGdjgB,QAAS+f,EAAcE,EAAKjgB,QAASqK,GAAQ,gBAAG5G,EAAH,EAAGA,SAAH,MAAmB,CAAEA,SAAUgH,EAAMhH,EAAWtB,EAAQ,EAAG,UAE1Gse,cAAe,SAACC,EAAgBC,EAAoB9W,GAArC,MACb,CAAC,2BACM6W,GADP,IACiB1gB,QAAS0gB,EAAS1gB,QAAQ2O,QAAO,SAACnG,EAAGtD,GAAJ,OAAYA,IAAQ2E,OADtE,2BAEO8W,GAFP,IAEiB9W,OAAQ,EAAG7J,QAAS2gB,EAAS3gB,QAAQ2O,QAAO,SAACnG,EAAGtD,GAAJ,OAAYA,IAAQ2E,SAEnF4V,oBAAqB,SACnBQ,EACA9d,GAFmB,OAjCE,SAA8B8d,EAAgB1R,EAAQqS,GAC7E,IAAMja,EAASsZ,EAAKtZ,OAKpB,OAJAA,EAAO4H,GAAP,2BACK5H,EAAO4H,IACPqS,EAAOja,EAAO4H,KAEZ,2BACF0R,GADL,IAEEtZ,WA6BAka,CAAiBZ,EAAM,WAAW,SAAA1e,GAAO,MAAK,CAC5Ca,QAASqI,EAAMlJ,EAAQa,QAAUD,EAAQ,EAAGZ,EAAQc,UAExDid,aAAc,SACZW,EACA5V,EACAM,GAHY,yBAAC,eAKVsV,GALS,IAMZ/c,IAAI,GAAD,6BAAO+c,EAAK/c,WAAZ,QAAmB,IAAnB,CAAwB,CAACmH,EAAQM,QAEtCmW,aAAc,SACZb,EACA5V,EACAM,GAHY,yBAAC,eAKVsV,GALS,IAMZ1Y,IAAI,GAAD,6BAAO0Y,EAAK/c,WAAZ,QAAmB,IAAnB,CAAwB,CAACmH,EAAQM,QAEtC6U,SAAU,SACR9f,EACAugB,EACAvc,EACAY,GAEA,OAAO5E,EAAKM,QAAQJ,OAAS,EACzB,CAAC,2BACEF,GADH,IAEAM,QAAQ,GAAD,mBAAMN,EAAKM,SAAX,CAAoB0D,MAF3B,2BAIGuc,GAJH,IAKAjgB,QAAQ,GAAD,mBAAMigB,EAAKjgB,SAAX,CAAoBsE,OAE3B,CAAC5E,EAAMugB,KAmCA/b,O,8HCxPT6c,EAA4B,qBAAZ7J,EAEf,SAASlM,EAAT,GAA0D,IAA/BlI,EAA8B,EAA9BA,QAChC,IAAKie,IAAWje,EAAQmC,KAAI,mBAA2B+b,EAA3B,EAAGld,MAAH,EAAUC,eAA0Dkd,UAAS,GACvG,OAAO,SAAC5W,EAAQ3K,EAAMwhB,GAAf,OAA8Bpe,EAAQ2G,QAAO,SAACiB,EAAD,OAAQ5G,EAAR,EAAQA,MAAOC,EAAf,EAAeA,WAAf,OAClDE,YAAckd,IAAkBrd,EAAOC,GAAvC,cAAmDsG,GAAnD,mBAA8DK,OAAM,CAAChL,EAAMwhB,KAE/E,MAAM,IAAIzN,MAAJ,+BAAkCjE,KAAKC,UAAU3M,EAAQ6L,QAAO,mBAA4BqS,EAA5B,EAAGld,MAAH,EAAUC,kBAGlF,IAAMqd,EAAe,SAA+Blc,EAAQmc,EAAa1Z,GAGvE,OADA0Z,EAAInc,GAAiByC,EACd,eAAK0Z,IAIRC,EAAcP,EAEhB3Z,OAAOyB,KAAKsY,KAEX1X,QAAO,SAAC4X,EAAKnc,GACZ,IAAKqc,aAAuBrc,GAC1B,OAAOmc,EAET,OAAQnc,GACN,IAAK,gBACL,IAAK,iBACL,IAAK,eACL,IAAK,kBACL,IAAK,qBACL,IAAK,aACL,IAAK,gBACL,IAAK,gBACL,IAAK,eACL,IAAK,eACL,IAAK,WACL,IAAK,UACL,IAAK,YACL,IAAK,eACL,IAAK,gBACL,IAAK,eACL,IAAK,eACL,IAAK,oBACL,IAAK,aACL,IAAK,eAAgB,OAAOkc,EAAalc,EAAKmc,EAAK,CAACG,qBAAwBA,0BAE7E,IA7BH,GAgCG,SAASR,EAAqB9b,EAAUyC,GAC7C,GAAI4Z,aAAuBrc,GAAM,CAC/B,IAAMK,EAAI+b,EAAWpc,GACrB,GAAS,MAALK,EACF,OAAOA,EAAE,GAAGL,IAAQK,EAAE,GAAGoC,GAG7B,OAAO,K","file":"static/js/main.9acb54ac.chunk.js","sourcesContent":["import { Chance } from \"chance\";\nimport { Subtract } from \"type-fest/source/internal\";\nimport { Build, Distances, Effect, Enemy, EnemyStats, Item, Player, PlayerStats, Ranges, Snapshot, StatsFunRepo, UpTo, Play, effectFunCall, Stat, Status } from \"./types\";\n\nexport const startState = (play: Play): Snapshot => play.states[0];\nexport const previousState = (play: Play): Snapshot => play.states[play.states.length - 1];\n\nexport const randomEnemy = (): [Enemy, EnemyStats] => new Chance().pickone(enemies);\n\nexport const randomPlayer = (statsOverride?: PlayerStats, buildOverride?: Build): [Player, PlayerStats] => {\n  const rng = new Chance();\n  return [{\n    id: rng.string(),\n    lore: {\n      name: randomName(),\n      age: rng.age(),\n    },\n    build: {\n      basic: rng.pickone(build.basic),\n      class: rng.pickone(build.class),\n      skill: rng.pickone(build.skill),\n      armor: rng.pickone(build.armor),\n      weapon: rng.pickone(build.weapon),\n      offhand: rng.pickone(build.offhand),\n      footwear: rng.pickone(build.footwear),\n      headgear: rng.pickone(build.headgear),\n      charm: rng.pickone(build.charm),\n      ...buildOverride,\n    }\n  }, {\n    hp: makeStat(25),\n    stamina: makeStat(8),\n    staminaPerTurn: makeStat(2),\n    speed: makeStat(0),\n    attack: makeStat(0),\n    defence: makeStat(0),\n    status: defaultStatus,\n    ...statsOverride,\n  }];\n}\n\nexport const makeRange = (...number: UpTo<Subtract<Distances, 1>>[]) => [...new Set(number)] as Ranges;\nexport const allRanges = makeRange(0, 1, 2, 3, 4);\nexport const selfRange = allRanges;\n\nexport const makeStat = (amount: number): Stat => ({ current: amount, max: amount });\nexport const defaultStatus: Status = {\n  dodge: { active: false },\n  armor: { amount: 0 },\n  bleed: { turns: 0 }\n}\n\nexport const effectDead: Effect =\n  { display: \"⚰\", tooltip: \"⚰\", priority: 4, effects: [effectFunCall(\"Monster:Dead\")], range: allRanges };\n\nexport const build: Record<\n  string,\n  Item[]\n> = {\n  basic: [\n    {\n      display: \"Basic\",\n      effects: [\n        {\n          display: \"Rest\",\n          tooltip: \"Skip the turn and restore stamina\",\n          priority: 4,\n          stamina: 0,\n          range: selfRange,\n          effects: [effectFunCall('Basic:Rest')]\n        },\n        {\n          display: \"Advance\",\n          tooltip: \"Move closer\",\n          priority: 4,\n          stamina: 1,\n          range: selfRange,\n          effects: [effectFunCall('Basic:Advance')]\n        },\n        {\n          display: \"Retreat\",\n          tooltip: \"Move further\",\n          effects: [effectFunCall(\"Basic:Retreat\")],\n          priority: 4,\n          stamina: 1,\n          range: selfRange,\n        },\n        {\n          display: \"Dodge\",\n          tooltip: \"Avoid 1 enemy attack\",\n          effects: [effectFunCall(\"Effect:Dodge\")],\n          priority: 2,\n          stamina: 4,\n          range: selfRange,\n        },\n        {\n          display: \"GGWP\",\n          tooltip: \"Wins the game\",\n          priority: 1,\n          stamina: 0,\n          range: allRanges,\n          effects: [effectFunCall('Debug:GGWP')]\n        },\n        {\n          display: \"SUDOKU\",\n          tooltip: \"Loses the game\",\n          priority: 1,\n          stamina: 0,\n          range: allRanges,\n          effects: [effectFunCall('Debug:Sudoku')]\n        },\n      ]\n    }\n  ],\n  class: [\n    {\n      display: \"Warrior\",\n    },\n    {\n      display: \"Mage\",\n    },\n    {\n      display: \"Rogue\",\n    },\n  ],\n  skill: [\n    {\n      display: \"Sturdy\",\n    },\n    {\n      display: \"Nimble\",\n    },\n  ],\n  weapon: [\n    {\n      display: \"Axe\",\n      effects: [\n        {\n          display: \"Chop\",\n          tooltip: \"Chop\",\n          effects: [effectFunCall(\"Axe:Chop\")],\n          priority: 2,\n          stamina: 2,\n          range: makeRange(0, 1),\n        },\n        {\n          display: \"Cut\",\n          tooltip: \"Cut\",\n          effects: [effectFunCall(\"Axe:Cut\")],\n          priority: 3,\n          stamina: 2,\n          range: makeRange(0),\n        },\n        {\n          display: \"Bleed\",\n          tooltip: \"Makes the enemy bleed\",\n          effects: [effectFunCall(\"Axe:Bleed\")],\n          priority: 3,\n          stamina: 2,\n          range: allRanges,\n        },\n      ],\n    },\n  ],\n  offhand: [\n    {\n      display: \"Hook\",\n      effects: [\n        {\n          display: \"Get over here!\",\n          tooltip: \"Moves enemy closer\",\n          effects: [effectFunCall(\"Hook:GetHere\")],\n          priority: 4,\n          stamina: 3,\n          range: makeRange(2, 3, 4),\n        },\n      ],\n    },\n    {\n      display: \"Shield\",\n      effects: [\n        {\n          display: \"Not today!\",\n          tooltip: \"Blocks some damage\",\n          effects: [effectFunCall([\"Effect:Armor\", { amount: 3 }])],\n          priority: 2,\n          stamina: 3,\n          range: selfRange,\n        },\n      ],\n    },\n  ],\n  consumable: [\n    {\n      display: \"Potion\",\n    },\n  ],\n  armor: [\n    {\n      display: \"Heavy\",\n    },\n  ],\n  headgear: [\n    {\n      display: \"Helm\",\n    },\n  ],\n  footwear: [{\n    display: \"Boots of Dooooodge!\",\n    effects: [\n      {\n        display: \"Advanced Dodge\",\n        tooltip: \"Avoid 1 attack\",\n        effects: [effectFunCall(\"Effect:Dodge\")],\n        priority: 1,\n        stamina: 3,\n        range: selfRange,\n      },\n    ],\n  },\n  {\n    display: \"Boots of Flight\",\n    eot: [{\n      display: \"Flight!\",\n      tooltip: \"Increases distance by 2 every turn\",\n      priority: 0,\n      range: allRanges,\n      effects: [effectFunCall('BootsOfFlight:EOT')],\n    }],\n  },\n  ],\n  charm: [\n    {\n      display: \"of Health\",\n      passive: \"Charm:ofHealth\",\n    },\n    {\n      display: \"of Haste\",\n      passive: \"Charm:ofHaste\",\n    },\n    {\n      display: \"of Resilience\",\n      passive: \"Charm:ofResilience\",\n    },\n    {\n      display: \"of Strength\",\n      passive: \"Charm:ofStrength\",\n    },\n    {\n      display: \"of Swiftness\",\n      passive: \"Charm:ofSwiftness\",\n    },\n    {\n      display: \"of Defence\",\n      passive: \"Charm:ofDefence\",\n    },\n  ],\n};\n\nexport const randomName = () => names[Math.floor(Math.random() * names.length)];\n\nexport const enemies: [Enemy, EnemyStats][] = [\n  [{\n    lore: {\n      name: \"Sacapuntas\",\n    },\n    rolls: [\n      [0, 1, 2, 1, 0],\n      [0, 1, 0, 0, 0],\n      [0, 0, 0, 0, 0],\n      [0, 0, 0, 0, 0],\n      [0, 1, 2, 1, 0, 0],\n    ],\n    effects: [\n      { display: \"Swipe\", tooltip: \"Swipe\", priority: 3, effects: [effectFunCall(\"Monster:Swipe\")], range: makeRange(0, 1) },\n      { display: \"Roar\", tooltip: \"Swipe\", priority: 1, effects: [effectFunCall(\"Monster:Roar\")], range: allRanges },\n      { display: \"Jump\", tooltip: \"Swipe\", priority: 2, effects: [effectFunCall(\"Monster:Jump\")], range: makeRange(2, 3, 4) },\n    ],\n  }, {\n    hp: makeStat(25),\n    distance: 4,\n    speed: makeStat(0),\n    attack: makeStat(0),\n    defence: makeStat(0),\n    status: defaultStatus,\n  }],\n  [{\n    lore: {\n      name: \"Toro\",\n    },\n    effects: [\n      { display: \"Swipe\", tooltip: \"Swipe\", priority: 3, effects: [effectFunCall(\"Monster:Swipe\")], range: allRanges },\n      { display: \"Jump\", tooltip: \"Jump\", priority: 2, effects: [effectFunCall(\"Monster:Jump\")], range: makeRange(2, 3, 4) },\n    ],\n    rolls: [\n      [0, 0, 0, 0, 0],\n      [0, 0, 0, 0, 0],\n      [1, 1, 0, 0, 0],\n      [1, 1, 1, 0, 0],\n      [1, 1, 1, 1, 0],\n    ]\n  }, {\n    hp: makeStat(22),\n    distance: 4,\n    speed: makeStat(0),\n    attack: makeStat(0),\n    defence: makeStat(0),\n    status: defaultStatus,\n  }],\n  [{\n    lore: {\n      name: \"Summoner\",\n    },\n    effects: [\n      { display: \"Swipe\", tooltip: \"Swipe\", priority: 3, effects: [effectFunCall(\"Monster:Swipe\")], range: makeRange(0, 1) },\n      { display: \"Jump\", tooltip: \"Jump\", priority: 3, effects: [effectFunCall(\"Monster:Jump\")], range: allRanges },\n      { display: \"Summon Toro\", tooltip: \"Summon Toro\", priority: 4, effects: [effectFunCall([\"Monster:Summon\", { enemy: 1 }])], range: makeRange(2, 3, 4) },\n    ],\n    rolls: [\n      [0, 0, 0, 0, 0],\n      [1, 0, 0, 0, 0],\n      [1, 1, 2, 0, 0],\n      [1, 1, 2, 0, 0],\n      [1, 2, 2, 0, 0],\n    ]\n  }, {\n    hp: makeStat(30),\n    distance: 4,\n    speed: makeStat(0),\n    attack: makeStat(0),\n    defence: makeStat(0),\n    status: defaultStatus,\n  }],\n  [{\n    lore: {\n      name: \"Body\",\n    },\n    effects: [\n      { display: \"Swipe\", tooltip: \"Swipe\", priority: 3, effects: [effectFunCall(\"Monster:Swipe\")], range: makeRange() },\n    ],\n    rolls: [\n      [0],\n      [0],\n      [0],\n      [0],\n      [0],\n    ]\n  }, {\n    hp: makeStat(300),\n    distance: 0,\n    speed: makeStat(0),\n    attack: makeStat(0),\n    defence: makeStat(0),\n    status: defaultStatus,\n  }],\n\n  [{\n    lore: {\n      name: \"Smol\",\n    },\n    effects: [\n      { display: \"Swipe\", tooltip: \"Swipe\", priority: 3, effects: [effectFunCall(\"Monster:Swipe\")], range: makeRange() },\n    ],\n    rolls: [\n      [0],\n      [0],\n      [0],\n      [0],\n      [0],\n    ]\n  }, {\n    hp: makeStat(5),\n    distance: 0,\n    speed: makeStat(0),\n    attack: makeStat(0),\n    defence: makeStat(0),\n    status: defaultStatus,\n  }],\n];\n\nconst names = [\n  \"Lydan\",\n  \"Syrin\",\n  \"Ptorik\",\n  \"Joz\",\n  \"Varog\",\n  \"Gethrod\",\n  \"Hezra\",\n  \"Feron\",\n  \"Ophni\",\n  \"Colborn\",\n  \"Fintis\",\n  \"Gatlin\",\n  \"Jinto\",\n  \"Hagalbar\",\n  \"Krinn\",\n  \"Lenox\",\n  \"Revvyn\",\n  \"Hodus\",\n  \"Dimian\",\n  \"Paskel\",\n  \"Kontas\",\n  \"Weston\",\n  \"Azamarr\",\n  \"Jather\",\n  \"Tekren\",\n  \"Jareth\",\n  \"Adon\",\n  \"Zaden\",\n  \"Eune\",\n  \"Graff\",\n  \"Tez\",\n  \"Jessop\",\n  \"Gunnar\",\n  \"Pike\",\n  \"Domnhar\",\n  \"Baske\",\n  \"Jerrick\",\n  \"Mavrek\",\n  \"Riordan\",\n  \"Wulfe\",\n  \"Straus\",\n  \"Tyvrik\",\n  \"Henndar\",\n  \"Favroe\",\n  \"Whit\",\n  \"Jaris\",\n  \"Renham\",\n  \"Kagran\",\n  \"Lassrin\",\n  \"Vadim\",\n  \"Arlo\",\n  \"Quintis\",\n  \"Vale\",\n  \"Caelan\",\n  \"Yorjan\",\n  \"Khron\",\n  \"Ishmael\",\n  \"Jakrin\",\n  \"Fangar\",\n  \"Roux\",\n  \"Baxar\",\n  \"Hawke\",\n  \"Gatlen\",\n  \"Barak\",\n  \"Nazim\",\n  \"Kadric\",\n  \"Paquin\",\n  \"Kent\",\n  \"Moki\",\n  \"Rankar\",\n  \"Lothe\",\n  \"Ryven\",\n  \"Clawsen\",\n  \"Pakker\",\n  \"Embre\",\n  \"Cassian\",\n  \"Verssek\",\n  \"Dagfinn\",\n  \"Ebraheim\",\n  \"Nesso\",\n  \"Eldermar\",\n  \"Rivik\",\n  \"Rourke\",\n  \"Barton\",\n  \"Hemm\",\n  \"Sarkin\",\n  \"Blaiz\",\n  \"Talon\",\n  \"Agro\",\n  \"Zagaroth\",\n  \"Turrek\",\n  \"Esdel\",\n  \"Lustros\",\n  \"Zenner\",\n  \"Baashar\",\n  \"Dagrod\",\n  \"Gentar\",\n  \"Feston\",\n  \"Syrana\",\n  \"Resha\",\n  \"Varin\",\n  \"Wren\",\n  \"Yuni\",\n  \"Talis\",\n  \"Kessa\",\n  \"Magaltie\",\n  \"Aeris\",\n  \"Desmina\",\n  \"Krynna\",\n  \"Asralyn\",\n  \"Herra\",\n  \"Pret\",\n  \"Kory\",\n  \"Afia\",\n  \"Tessel\",\n  \"Rhiannon\",\n  \"Zara\",\n  \"Jesi\",\n  \"Belen\",\n  \"Rei\",\n  \"Ciscra\",\n  \"Temy\",\n  \"Renalee\",\n  \"Estyn\",\n  \"Maarika\",\n  \"Lynorr\",\n  \"Tiv\",\n  \"Annihya\",\n  \"Semet\",\n  \"Tamrin\",\n  \"Antia\",\n  \"Reslyn\",\n  \"Basak\",\n  \"Vixra\",\n  \"Pekka\",\n  \"Xavia\",\n  \"Beatha\",\n  \"Yarri\",\n  \"Liris\",\n  \"Sonali\",\n  \"Razra\",\n  \"Soko\",\n  \"Maeve\",\n  \"Everen\",\n  \"Yelina\",\n  \"Morwena\",\n  \"Hagar\",\n  \"Palra\",\n  \"Elysa\",\n  \"Sage\",\n  \"Ketra\",\n  \"Lynx\",\n  \"Agama\",\n  \"Thesra\",\n  \"Tezani\",\n  \"Ralia\",\n  \"Esmee\",\n  \"Heron\",\n  \"Naima\",\n  \"Rydna\",\n  \"Sparrow\",\n  \"Baakshi\",\n  \"Ibera\",\n  \"Phlox\",\n  \"Dessa\",\n  \"Braithe\",\n  \"Taewen\",\n  \"Larke\",\n  \"Silene\",\n  \"Phressa\",\n  \"Esther\",\n  \"Anika\",\n  \"Rasy\",\n  \"Harper\",\n  \"Indie\",\n  \"Vita\",\n  \"Drusila\",\n  \"Minha\",\n  \"Surane\",\n  \"Lassona\",\n  \"Merula\",\n  \"Kye\",\n  \"Jonna\",\n  \"Lyla\",\n  \"Zet\",\n  \"Orett\",\n  \"Naphtalia\",\n  \"Turi\",\n  \"Rhays\",\n  \"Shike\",\n  \"Hartie\",\n  \"Beela\",\n  \"Leska\",\n  \"Vemery\",\n  \"Lunex\",\n  \"Fidess\",\n  \"Tisette\",\n  \"Partha\",\n]","import { Opaque } from \"type-fest\";\nimport { EffectFunParams, EffectFunRepo, EffectFunRepoIndex, StatsFunIndex } from \"./effectFunctions\";\n\nexport type Tuple<T, N extends number> = N extends N ? number extends N ? T[] : _TupleOf<T, N, []> : never;\ntype _TupleOf<T, N extends number, R extends unknown[]> = R['length'] extends N ? R : _TupleOf<T, N, [T, ...R]>;\n\nexport type Nel<T> = [T, ...T[]];\n\ntype Length<T extends any[]> =\n  T extends { length: infer L } ? L : never;\ntype BuildTuple<L extends number, T extends any[] = []> =\n  T extends { length: L } ? T : BuildTuple<L, [...T, any]>;\nexport type Subtract<A extends number, B extends number> =\n  BuildTuple<A> extends [...(infer U), ...BuildTuple<B>]\n  ? Length<U>\n  : never;\ntype EQ<A, B> =\n  A extends B\n  ? (B extends A ? true : false)\n  : false;\ntype AtTerminus<A extends number, B extends number> =\n  A extends 0\n  ? true\n  : (B extends 0 ? true : false);\ntype LT<A extends number, B extends number> =\n  AtTerminus<A, B> extends true\n  ? EQ<A, B> extends true\n  ? false\n  : (A extends 0 ? true : false)\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  : LT<Subtract<A, 1>, Subtract<B, 1>>;\n\nexport type TupleUpTo<T, N extends number> =\n  EQ<N, 1> extends true ? [T] : TupleUpTo<T, Subtract<N, 1>> | Tuple<T, N>;\n\nexport type UpTo<N extends number> =\n  EQ<N, 0> extends true ? 0 : UpTo<Subtract<N, 1>> | N;\n\nexport interface Stat {\n  max: number,\n  current: UpTo<Stat['max']>,\n}\n\nexport type Status = { dodge: { active: boolean }, armor: { amount: number }, bleed: { turns: number } };\nexport interface PlayerStats { hp: Stat, stamina: Stat, staminaPerTurn: Stat, speed: Stat, attack: Stat, defence: Stat, status: Status };\nexport interface EnemyStats { hp: Stat, speed: Stat, attack: Stat, defence: Stat, distance: UpTo<Subtract<Distances, 1>>, status: Status };\n\nexport type Priorities = 5;\nexport type Distances = 5;\nexport type MonsterCount = 5;\nexport type Staminas = 5;\n\nexport interface EffectSummary {\n  origin: Target;\n  display: string;\n  phase: string;\n}\n\nexport type DisabledSkills = string[];\nexport interface Snapshot {\n  player: PlayerStats;\n  enemies: EnemiesStats;\n  target: MonsterTarget;\n  lastAttacks: EffectSummary[];\n  bot?: Nel<[Target, Effect]>;\n  eot?: Nel<[Target, Effect]>;\n  disabledSkills: DisabledSkills;\n};\n\nexport type RNG = Opaque<number[][], 'RNG'>;\n\nexport interface Play {\n  states: Nel<Snapshot>;\n  player: Player;\n  enemies: Enemies,\n  rng: RNG;\n  turns: number;\n  id: string;\n  seed: string | number;\n};\n\ntype ItemOrMonster = string /* TODO all items */ | 'Monster';\nexport type FunIndex = `${ItemOrMonster}:${string}`;\n\nexport type StatsFunRepo = { [key in StatsFunIndex]: StatsFun; }\nexport type StatsFun = (player: PlayerStats, enemies: EnemiesStats) => [PlayerStats, EnemiesStats];\n\nexport type Ranges = UpTo<Subtract<Distances, 1>>[];\n\ninterface EffectFunCallT {\n  index: EffectFunRepoIndex;\n  parameters: EffectFunParams<EffectFunRepoIndex>;\n};\nexport type EffectFunCall = Opaque<EffectFunCallT, EffectFunCallT>;\nexport const effectFunCall = <T extends EffectFunRepoIndex>(t: EffectFunParams<T> extends undefined ? T : [T, EffectFunParams<T>]): EffectFunCall =>\n  (Array.isArray(t) ? { index: t[0], parameters: t[1] } : { index: t, parameters: undefined }) as EffectFunCall;\nexport const callEffectFun = <T extends EffectFunRepoIndex>(repo: EffectFunRepo, t: T, p: EffectFunParams<T>) => {\n  const f = repo[t];\n  // @ts-expect-error: index and parameters are enforced to be compatible at construction and the runtime check above ^^^^\n  return f(p);\n}\n\ninterface EffectT {\n  display: string;\n  tooltip: string;\n  effects: Nel<EffectFunCall>;\n  priority: UpTo<Subtract<Priorities, 1>>;\n  range: Ranges;\n};\nexport type Effect = EffectT;\nexport type InventoryEffect = EffectT & {\n  stamina: UpTo<Subtract<Staminas, 1>>;\n};\n\nexport type MonsterTarget = UpTo<Subtract<MonsterCount, 1>>;\nexport type PlayerTarget = 'Player';\nexport type Target = MonsterTarget | PlayerTarget;\n\nexport type Build = Record<\n  string,\n  Item\n>;\n\nexport interface Item {\n  display: string;\n  passive?: StatsFunIndex;\n  bot?: Nel<Effect>;\n  eot?: Nel<Effect>;\n  effects?: Nel<InventoryEffect>;\n  [key: string]: any;\n};\n\nexport interface Player {\n  id: string;\n  lore: Record<string, string | number>;\n  build: Build;\n};\n\n// Place in the array for now\ntype EffectIdentity = number;\nexport interface Enemy {\n  lore: Record<string, string | number>;\n  effects: Nel<Effect>;\n  rolls: Tuple<EffectIdentity[], Distances>;\n  bot?: Nel<Effect>;\n  eot?: Nel<Effect>;\n}\n\nexport type Enemies = TupleUpTo<Enemy, MonsterCount>;\nexport type EnemiesStats = TupleUpTo<EnemyStats, MonsterCount>;\n","import React from \"react\";\nimport { Card, Button, OverlayTrigger, Popover } from \"react-bootstrap\";\nimport { Enemy, Effect, EnemyStats } from \"../utils/types\";\nimport { Seq } from \"immutable\";\n\nconst skillPercents = (effects: Effect[]) =>\n  Seq(effects).countBy((e) => e.display).toArray().map(([display, v], idx) => {\n    const { range, priority, tooltip } = effects.find(a => a.display === display)!!;\n    return <OverlayTrigger\n      key={idx}\n      placement=\"right\"\n      delay={{ show: 100, hide: 250 }}\n      overlay={<Popover>\n        <Popover.Header as=\"h3\">{display}</Popover.Header>\n        <Popover.Body>\n          {tooltip}<br />⏱:{priority}<br />🏹:{range.length === 5 ? 'Any' : range.length === 0 ? 'None' : range.map(a => a + 1).join(\", \")}\n        </Popover.Body>\n      </Popover>}\n    ><>[{(v / effects.length * 100).toFixed(2)}%] {display}<br key={idx} /></>\n    </OverlayTrigger>\n  });\n\nconst EnemyCard: React.FC<{\n  enemy: Enemy;\n  enemyStats: EnemyStats;\n  latestAttack: string | undefined;\n  isSelected?: boolean;\n  onSelect: () => void;\n  canAct: boolean;\n  hotkey: string;\n}> = ({ enemy, enemyStats, isSelected, onSelect, latestAttack, canAct, hotkey }) => (\n  <Card bg={isSelected ? \"info\" : undefined}>\n    <Card.Body>\n      <Card.Title>{enemy.lore.name} {enemyStats.hp.current > 0 ? \"\" : (<b>💀DEAD💀</b>)}</Card.Title>\n      <Card.Text>❤:{enemyStats.hp.current} 🏹:{enemyStats.distance + 1}</Card.Text>\n      {enemyStats.status.bleed.turns > 0 && ` ${enemyStats.status.bleed.turns} 🩸`}\n      {latestAttack && (<Card.Text>Latest attack: {latestAttack}</Card.Text>)}\n      <Card.Text>\n        Next attack prediction:\n        <br />\n        {skillPercents(enemy.rolls[enemyStats.distance].map((idx) => enemy.effects[idx]))}\n        <br />\n      </Card.Text>\n      {canAct && (<Button disabled={isSelected} onClick={onSelect}>[<i>{hotkey.toUpperCase()}</i>] Select</Button>)}\n    </Card.Body>\n  </Card>\n);\n\nexport default EnemyCard;\n","import React from \"react\";\nimport { Card, Button, Stack, ToggleButton, ButtonGroup, Popover, OverlayTrigger } from \"react-bootstrap\";\nimport { DisabledSkills, Player, PlayerStats } from \"../utils/types\";\nimport { Set } from 'immutable';\n\nconst PlayerCard: React.FC<{\n  selectedButtons: Set<string>,\n  player: Player;\n  playerStats: PlayerStats;\n  canAct: boolean;\n  lastAction: string | undefined;\n  onClickEffect: (index: number) => void;\n  disabledSkills: DisabledSkills;\n  setDisabledSkills: (skills: DisabledSkills) => void;\n}> = ({ selectedButtons, player, playerStats, onClickEffect, canAct, lastAction, disabledSkills, setDisabledSkills }) => (\n  <Card>\n    <Card.Body>\n      <Card.Title>{player.lore.name}{playerStats.hp.current > 0 ? \"\" : (<b> 💀DEAD💀 </b>)}</Card.Title>\n      <Card.Subtitle className=\"mb-2 text-muted\">\n        {player.build.class.display}\n      </Card.Subtitle>\n      <Card.Text>{playerStats.hp.current}/{playerStats.hp.max} ❤ {playerStats.stamina.current}/{playerStats.stamina.max} 💪</Card.Text>\n      {playerStats.status.bleed.turns > 0 && <Card.Text>` ${playerStats.status.bleed.turns} 🩸`</Card.Text>}\n      {lastAction && (<Card.Text>Last action: {lastAction}</Card.Text>)}\n    </Card.Body>\n    {canAct && (<>\n      <b>Passives</b>\n      <ButtonGroup>\n        {Object.entries(player.build)\n          .map(([k, e]) => [k, e, [...(e.bot ?? []), ...(e.eot ?? [])]] as const)\n          .map(([k, e, passives], idx) => passives.length > 0 && (<OverlayTrigger\n            key={idx}\n            placement=\"right\"\n            delay={{ show: 100, hide: 250 }}\n            overlay={<Popover>\n              <Popover.Header as=\"h3\">{e.display}</Popover.Header>\n              <Popover.Body>\n                {e.tooltip}\n              </Popover.Body>\n            </Popover>}\n          >\n            <ToggleButton\n              checked={!Set(disabledSkills).has(k)}\n              value={k}\n              id={`passive-skill-${k}`}\n              type=\"checkbox\"\n              variant=\"outline-primary\"\n              onChange={(event) => setDisabledSkills(\n                event.currentTarget.checked\n                  ? Set(disabledSkills).delete(k).toArray()\n                  : Set(disabledSkills).add(k).toArray())}>\n              {e.display}\n            </ToggleButton>\n          </OverlayTrigger>\n          ))}\n      </ButtonGroup>\n    </>)}\n    {canAct && (<Card.Body>\n      <Stack direction=\"horizontal\" gap={2}>\n        {Object.values(player.build)\n          .flatMap((a) => a.effects ?? [])\n          .map((e, idx) => (<OverlayTrigger\n            key={e.display}\n            placement=\"top\"\n            delay={{ show: 100, hide: 250 }}\n            overlay={<Popover>\n              <Popover.Header as=\"h3\">{e.display}</Popover.Header>\n              <Popover.Body>\n                {e.tooltip}\n              </Popover.Body>\n            </Popover>}\n          >\n            <div>\n              <Button\n                active={selectedButtons.has(e.display)}\n                disabled={playerStats.stamina.current < e.stamina}\n                onClick={(_) => onClickEffect(idx)}\n              >\n                [<i>{idx + 1}</i>] <b>{e.display}</b>\n              </Button>\n              <br />\n              <Card.Text>💪:{e.stamina} ⏱:{Math.max(e.priority + playerStats.speed.current)}<br />🏹:{e.range.length === 5 ? 'Any' : e.range.map(a => a + 1).join(\", \")}</Card.Text>\n            </div>\n          </OverlayTrigger>\n          ))}\n      </Stack>\n    </Card.Body>)}\n  </Card>\n);\n\nexport default PlayerCard;\n","import { Enemies, Player, Snapshot, MonsterTarget, Target, InventoryEffect, EnemiesStats, PlayerStats, Play, RNG, StatsFun, Effect, PlayerTarget, effectFunCall, DisabledSkills, EnemyStats } from \"./types\";\nimport { Seq, Set } from \"immutable\";\nimport { allRanges, effectDead, enemies, previousState } from \"./data\";\nimport { Chance } from \"chance\";\n// @ts-ignore fails on scripts despite having a d.ts file\nimport { toIndexableString } from 'pouchdb-collate';\nimport { extractFunction } from \"./effectFunctions\";\nimport { statsRepository } from \"./effectRepository\";\n\n/**\n * @returns min inclusive, max exclusive rand\n */\nfunction turnDeterministicRng(turns: number, randPerTurn: number, monsterSeed: string | number): RNG {\n  const monsterChance = new Chance(monsterSeed);\n  const monsterRng =\n    [...Array(turns).keys()]\n      .map(_ => [...Array(randPerTurn).keys()]\n        .map(_ => monsterChance.floating({ min: 0, max: 1, fixed: 2 })));\n  return monsterRng as RNG;\n}\n\nexport const turnRng = (play: Play, turn: number): ((min: number, max: number) => number) => {\n  const turnRng = [...play.rng[turn]];\n  return (min: number, max: number) => Math.floor(((max - min) * turnRng.pop()!!) + min);\n}\n\nexport const playerPassives = (player: Player): StatsFun[] =>\n  Object.values(player.build).flatMap((s) => s.passive ?? []).map(i => statsRepository[i]);\n\nexport const playerActions = (player: Player): InventoryEffect[] =>\n  Object.values(player.build).flatMap((s) => s.effects ?? []);\n\nconst enemiesBotEffects = (enemies: Enemies): [MonsterTarget, Effect][] =>\n  enemies.flatMap((e, idx) => (e.bot ?? []).map(eff => [idx as MonsterTarget, eff] as const))\n    // Sure, typescript\n    .map(a => [...a]);\n\nconst enemiesEotEffects = (enemies: Enemies): [MonsterTarget, Effect][] =>\n  enemies.flatMap((e, idx) => (e.eot ?? []).map(eff => [idx as MonsterTarget, eff] as const))\n    // Sure, typescript\n    .map(a => [...a]);\n\nexport const playerBotEffects = (player: Player, d: string[]): [PlayerTarget, Effect][] =>\n  Object.entries(player.build).flatMap(([k, s]) => !Set(d).has(k) ? s.bot ?? [] : []).map(a => ['Player', a]);\n\nexport const playerEotEffects = (player: Player, d: string[]): [PlayerTarget, Effect][] =>\n  Object.entries(player.build).flatMap(([k, s]) => !Set(d).has(k) ? s.eot ?? [] : []).map(a => ['Player', a]);\n\nexport default function start(player: Player, playerStats: PlayerStats, enemies: Enemies, enemiesStats: EnemiesStats, turns: number, seed: number | string, randPerTurn: number = 20): Play {\n  const [playerGameStats, enemyGameStats] = playerPassives(player).reduce(([p, e], fun) => fun(p, e), [playerStats, enemiesStats] as const);\n  return {\n    player,\n    enemies,\n    states: [{\n      player: playerGameStats,\n      enemies: enemyGameStats,\n      target: 0,\n      lastAttacks: [],\n      disabledSkills: []\n    }],\n    rng: turnDeterministicRng(turns, randPerTurn, seed),\n    turns,\n    id: toIndexableString([player, enemies, turns, seed]),\n    seed,\n  };\n}\n\nconst clamp = (num: number, min: number, max: number = Infinity) =>\n  Math.min(Math.max(num, min), max);\n\nconst reduceFuns = (funs: [Target, Effect][], p: Play, s: Snapshot, dodgeable: boolean, phase: string): [Play, Snapshot] =>\n  Seq(funs)\n    .sortBy(([origin, a]) => {\n      const priorityBonus = origin === 'Player' ? s.player.speed.current : s.enemies[origin]!!.speed.current;\n      return clamp(a.priority - priorityBonus, 0, 4);\n    })\n    .reduce((acc, value) => {\n      const [origin, effect] = value;\n      const [oldPlay, oldState] = acc;\n      const monsterId = origin === 'Player' ? oldState.target : origin;\n      const targetMonster = oldState.enemies[monsterId]!!;\n      const isInRange = Set([...effect.range]).has(targetMonster.distance);\n\n      if (!isInRange) {\n        const newState: Snapshot = {\n          ...oldState,\n          lastAttacks: [...oldState.lastAttacks, { origin, display: `❌❌WHIFFED❌❌ ${effect.display}`, phase }]\n        };\n        return [oldPlay, newState];\n      }\n\n      const monsterDodged = dodgeable && origin === 'Player' && targetMonster.status.dodge.active;\n      if (monsterDodged) {\n        const newState: Snapshot = {\n          ...oldState,\n          enemies: oldState.enemies.map((e, i) => i === monsterId ? { ...e, status: { ...e.status, dodge: { active: false } } } : e) as EnemiesStats,\n          lastAttacks: [...oldState.lastAttacks, { origin, display: `💨💨DODGED💨💨 ${effect.display}`, phase }]\n        };\n        return [oldPlay, newState];\n      }\n\n      const playerDodged = dodgeable && origin !== 'Player' && oldState.player.status.dodge.active;\n      if (playerDodged) {\n        const newState: Snapshot = {\n          ...oldState,\n          player: { ...oldState.player, status: { ...oldState.player.status, dodge: { active: false } } },\n          lastAttacks: [...oldState.lastAttacks, { origin, display: `💨💨DODGED💨💨 ${effect.display}`, phase }]\n        };\n        return [oldPlay, newState];\n      }\n\n      const [newPlay, newState] = extractFunction(effect)(origin, oldPlay, oldState);\n      const finalState: Snapshot = { ...newState, lastAttacks: [...newState.lastAttacks, { origin, display: effect.display, phase }] };\n      return [newPlay, finalState];\n    }, [p, s]);\n\nconst applyEffectStamina = (amount: number): Effect =>\n  ({ display: `${amount >= 0 ? '+' : ''}${amount} 💪`, tooltip: `Use ${amount} stamina`, effects: [effectFunCall(['Utility:UseStamina', { amount }])], range: allRanges, priority: 0 });\n\nconst eotCleanup: Effect =\n  ({ display: 'Cleanup', tooltip: 'Cleanup', effects: [effectFunCall('Utility:Cleanup')], range: allRanges, priority: 0 });\n\nexport const handlePlayerEffect = (play: Play, index: number): Play => {\n\n  const usedSkill = playerActions(play.player)[index];\n  const bot = previousState(play).bot ?? [];\n  const eot = previousState(play).eot ?? [];\n\n  const initialState: Snapshot = {\n    ...previousState(play),\n    lastAttacks: [],\n    bot: undefined,\n    eot: undefined,\n  };\n\n  // Stamina\n  const [preBotPlay, preBotState] =\n    reduceFuns([['Player', applyEffectStamina(previousState(play).player.staminaPerTurn.current - usedSkill.stamina)]], play, initialState, false, 'STAMINA');\n\n  // BOT\n  // Lingering effects\n  const [postBotPlay, postBotState] = reduceFuns(bot, preBotPlay, preBotState, false, 'BOT');\n  // Player & Monster effects\n  const entitiesBot: [Target, Effect][] = [...playerBotEffects(postBotPlay.player, postBotState.disabledSkills), ...enemiesBotEffects(postBotPlay.enemies)];\n  const [postEntitiesBotPlay, postEntitiesBotState] = reduceFuns(entitiesBot, postBotPlay, postBotState, false, 'BOT');\n\n  // Turn\n  const rand = turnRng(postEntitiesBotPlay, postEntitiesBotPlay.states.length);\n  const turnFunctions: [Target, Effect][] = Seq(postEntitiesBotPlay.enemies).zip(Seq(postEntitiesBotState.enemies))\n    .map(([e, stats], idx) =>\n      [idx as Target,\n      stats.hp.current > 0\n        ? e.effects[e.rolls[stats.distance][rand(0, e.rolls[stats.distance].length)]]\n        : effectDead] as const)\n    .concat([['Player' as Target, usedSkill] as const])\n    .toArray()\n    // Sure, typescript\n    .map(a => [...a]);\n\n  const [newPlay, newState] =\n    reduceFuns(turnFunctions, postEntitiesBotPlay, postEntitiesBotState, true, 'MAIN');\n\n  // EOT\n  // Player & Monster effects\n  const entitiesEot = [...playerEotEffects(newPlay.player, newState.disabledSkills), ...enemiesEotEffects(newPlay.enemies)];\n  const [postPlayerEotPlay, postPlayerEotState] = reduceFuns(entitiesEot, newPlay, newState, false, 'EOT');\n  // Lingering effects\n  const [postEotPlay, postEotState] = reduceFuns(eot, postPlayerEotPlay, postPlayerEotState, false, 'EOT');\n  // Cleanup\n  const [postCleanup, postCleanupState] = reduceFuns([['Player' as Target, eotCleanup]], postEotPlay, postEotState, false, 'EOT');\n\n  return {\n    ...postCleanup,\n    states: [...postCleanup.states, postCleanupState],\n  };\n};\n\nexport const setSelected = (play: Play, target: MonsterTarget): Play => {\n  play.states[play.states.length - 1].target = target;\n  return {\n    ...play,\n    states: [...play.states],\n  };\n}\n\nexport const setDisabledSkills = (play: Play, disabled: DisabledSkills): Play => {\n  play.states[play.states.length - 1].disabledSkills = disabled;\n  return {\n    ...play,\n    states: [...play.states],\n  };\n}\n\nexport type PlayState = 'win' | 'loss' | 'playing'\n\nexport const playState = (play: Play): PlayState => {\n  const state = play.states[play.states.length - 1];\n  return state.player.hp.current <= 0\n    ? 'loss'\n    : state.enemies.reduce((acc, monster) => acc + monster.hp.current, 0) <= 0\n      ? 'win'\n      : 'playing';\n}\n","import { Container, Row, Col, Card, Modal, ButtonGroup } from \"react-bootstrap\";\n\nimport { DisabledSkills, MonsterTarget, Play } from \"../utils/types\";\n\nimport EnemyCard from \"./Enemy\";\nimport PlayerCard from \"./Player\";\nimport usePressedKeys from \"../hooks/usePressedKeys\";\nimport { playerActions } from \"../utils/playGame\";\nimport { Seq, Set } from \"immutable\";\nimport { previousState } from \"../utils/data\";\nimport { Button } from \"react-bootstrap\";\nimport saveAs from 'file-saver';\nimport { useCallback, useState } from \"react\";\n\nexport type GameProps = {\n  game: Play;\n  setSelected: (target: MonsterTarget) => void;\n  setDisabledSkills: (disabled: DisabledSkills) => void;\n  handlePlayerEffect: (index: number) => void,\n  solveGame: (iterations: number) => void,\n  hint: (iterations: number) => void,\n  timeTravel: { undo: () => void; redo: (() => void) | undefined } | undefined,\n};\n\nconst monsterHotkeys = [\"q\", \"w\", \"e\", \"r\", \"t\", \"y\"];\n\nconst Game = ({ handlePlayerEffect, setSelected, setDisabledSkills, game, solveGame, timeTravel, hint }: GameProps): JSX.Element => {\n  const { player, enemies } = game;\n  const { player: playerStats, enemies: enemiesStats, target, lastAttacks, disabledSkills } = previousState(game);\n  const [isLogShown, setShowLog] = useState(false);\n\n  const handleCloseLog = () => setShowLog(false);\n  const handleShowLog = () => setShowLog(true);\n\n  const playerSkills = playerActions(player);\n  const monsterHealth = enemiesStats.reduce((acc, m) => m.hp.current + acc, 0);\n  const isPlayerAlive = playerStats.hp.current > 0;\n  const areMonstersAlive = monsterHealth > 0;\n  const endGame = game.states.length <= game.turns;\n  const canAct = isPlayerAlive && areMonstersAlive && endGame;\n\n  const pressed = usePressedKeys((key) => {\n    if (!canAct) return;\n    const valNum = parseInt(key);\n    if (valNum > 0 && valNum <= playerSkills.length) {\n      const hasStamina = playerSkills[valNum - 1].stamina <= playerStats.stamina.current;\n      if (!hasStamina) return;\n      handlePlayerEffect(valNum - 1);\n    }\n    if (key === \"h\") {\n      hint(100);\n    }\n\n    if (key === \"l\") {\n      setShowLog(!isLogShown);\n    }\n\n    if (key === \"s\") {\n      save();\n    }\n\n    if (key === \"a\" && game.states.length > 1 && timeTravel) {\n      timeTravel.undo();\n    }\n    if (key === \"d\" && timeTravel && timeTravel.redo != null) {\n      timeTravel.redo();\n    }\n\n    if (key === monsterHotkeys[0] && enemies.length > 0) {\n      setSelected(0 as MonsterTarget);\n    }\n    if (key === monsterHotkeys[1] && enemies.length > 1) {\n      setSelected(1 as MonsterTarget);\n    }\n    if (key === monsterHotkeys[2] && enemies.length > 2) {\n      setSelected(2 as MonsterTarget);\n    }\n    if (key === monsterHotkeys[3] && enemies.length > 3) {\n      setSelected(3 as MonsterTarget);\n    }\n    if (key === monsterHotkeys[4] && enemies.length > 4) {\n      setSelected(4 as MonsterTarget);\n    }\n  });\n\n  const selectedButtons = Set<string>([...pressed].flatMap((key: string) => {\n    const valNum = parseInt(key);\n    if (valNum > 0 && valNum <= playerSkills.length) {\n      return [playerSkills[valNum - 1].display];\n    } else {\n      return [];\n    }\n  }));\n\n  const save = useCallback(() => {\n    const blob = new Blob([JSON.stringify(game)], { type: \"application/json;charset=utf-8\" });\n    saveAs(blob, `buildmancer-${Date.now()}.json`);\n  }, [game]);\n\n  return (\n    <>\n      <Container fluid>\n        <Row className=\"justify-content-center align-items-flex-start\">\n          <Col sm={12} md={8}>\n            <Card.Title>\n              Turn {game.states.length} out of {game.turns} {!isPlayerAlive ? (<b>❌❌DEFEAT❌❌</b>) : !areMonstersAlive ? (<b>🎉🎉VICTORY🎉🎉</b>) : \"\"}\n            </Card.Title>\n            <PlayerCard\n              player={player}\n              playerStats={playerStats}\n              disabledSkills={disabledSkills}\n              setDisabledSkills={setDisabledSkills}\n              onClickEffect={(idx) => handlePlayerEffect(idx)}\n              selectedButtons={selectedButtons}\n              lastAction={lastAttacks.filter(a => a.origin === 'Player').map(a => `[${a.phase}] ${a.display}`).join(\" -> \") ?? undefined}\n              canAct={canAct} />\n            <Row>\n              {timeTravel != null && (\n                <ButtonGroup>\n                  {game.states.length > 1 && (<Button onClick={(_) => timeTravel.undo()}>[<i>A</i>] Undo ↩</Button>)}\n                  {timeTravel?.redo && (<Button onClick={(_) => timeTravel!!.redo!!()}>[<i>D</i>] Redo ↪</Button>)}\n                </ButtonGroup>\n              )}\n            </Row>\n            <Row>\n              <ButtonGroup>\n                <Button onClick={(_) => hint(100)}><i>[H]</i> Hint</Button>\n              </ButtonGroup>\n            </Row>\n            <Row>\n              {Seq(enemies).zip(Seq(enemiesStats)).map(([enemy, stats], idx) => (\n                <Col key={idx} xs={6} md={4}>\n                  <EnemyCard\n                    key={idx}\n                    enemyStats={stats}\n                    enemy={enemy}\n                    canAct={canAct}\n                    latestAttack={Seq(lastAttacks).filter(({ origin }) => origin === idx).map(a => `[${a.phase}] ${a.display}`).join(\" -> \") ?? undefined}\n                    isSelected={idx === target}\n                    onSelect={() => setSelected(idx as MonsterTarget)}\n                    hotkey={monsterHotkeys[idx]}\n                  />\n                </Col>\n              ))}\n            </Row>\n            <Card.Title>\n              Debug\n            </Card.Title>\n            <Row>\n              <ButtonGroup>\n                <Button onClick={handleShowLog}>[<i>L</i>] Log 🗒</Button>\n                <Button onClick={save}>[<i>S</i>] Dump to file 📂</Button>\n              </ButtonGroup>\n            </Row>\n            <Card.Title>\n              Cheats\n            </Card.Title>\n            <Row>\n              <ButtonGroup>\n                <Button onClick={(_) => solveGame(100)}>Solve ⌛</Button>\n                <Button onClick={(_) => solveGame(1000)}>Solve thoroughly ⌛⌛⌛</Button>\n              </ButtonGroup>\n            </Row>\n          </Col>\n        </Row>\n      </Container>\n      <Modal show={isLogShown} onHide={handleCloseLog} scrollable={true} centered={true}>\n        <Modal.Header closeButton>\n          <Modal.Title>Game Log</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          {game.states.map((s, idx) => (\n            // FIXME add key\n            <>\n              <b>Turn {idx}</b><br />\n              Player: {JSON.stringify(s.player, null, 2)}<br />\n              Enemies: {JSON.stringify(s.enemies, null, 2)}<br />\n              Target [{s.target}]<br />\n              Eot? Bot?: {JSON.stringify({ bot: s.bot, eot: s.eot }, null, 2)}<br />\n              Actions:<br />\n              {s.lastAttacks.map(a => (<>  {JSON.stringify(a, null, 2)}<br /></>))}\n            </>\n          ))}\n        </Modal.Body>\n        <Modal.Footer>\n          <Button variant=\"primary\" onClick={handleCloseLog}>\n            Close\n          </Button>\n        </Modal.Footer>\n      </Modal >\n    </>\n  );\n};\n\nexport default Game;\n","import { useEffect, useCallback, useState } from \"react\";\n\nexport default function usePressedKeys(onUp: (e: string) => void): Set<string> {\n\n  const [pressedKeys, updatePressedKeys] = useState(new Set<string>());\n\n  const downHandler = ({ key }: { key: string }) => {\n    updatePressedKeys((set) => new Set([...set, key]));\n  }\n\n  const upHandler = useCallback(({ key }: { key: string }) => {\n    updatePressedKeys((set) => new Set([...set].filter((k) => k !== key)));\n    onUp(key);\n  }, [onUp]);\n\n  useEffect(() => {\n    window.addEventListener(\"keydown\", downHandler);\n    window.addEventListener(\"keyup\", upHandler);\n\n    return () => {\n      window.removeEventListener(\"keydown\", downHandler);\n      window.removeEventListener(\"keyup\", upHandler);\n    };\n  }, [upHandler]);\n\n  return pressedKeys;\n}","import React from \"react\";\nimport { Container, Row, Form, Button, ButtonGroup, Navbar } from \"react-bootstrap\";\nimport useScroll from \"../hooks/useScroll\";\n\nimport { Player, PlayerStats } from \"../utils/types\";\nimport { build, defaultStatus, makeStat, randomName } from \"../utils/data\";\nimport Chance from 'chance';\n\nconst version = 'dev';\n\nconst selects = Object.entries(build).map(([type, options]) => ({\n  type,\n  options: options.map(({ display }, value) => ({\n    display,\n    value,\n  })),\n}));\n\nconst PlayerBuilder = ({ onSave }: { onSave: (player: Player, playerStats: PlayerStats) => void }) => {\n  const [form, setForm] = React.useState<Record<string, number>>(\n    selects.reduce(\n      (acc, { type, options }) => ({\n        ...acc,\n        [type]: options[0].value,\n      }),\n      {},\n    ),\n  );\n  const [lore, setLore] = React.useState({\n    name: randomName(),\n    age: new Chance().age(),\n  });\n  const setField = (field: string, value: number) => {\n    setForm({\n      ...form,\n      [field]: value,\n    });\n  };\n  const onFormSubmit = (e: any) => {\n    e.preventDefault();\n    onSave({\n      id: \"p-1\",\n      lore,\n      build: Object.entries(form).reduce((acc, [type, value]) => {\n        return {\n          ...acc,\n          [type]: build[type][value]\n        }\n      }, { basic: build.basic[0] }),\n    }, {\n      hp: makeStat(25),\n      stamina: makeStat(6),\n      staminaPerTurn: makeStat(1),\n      speed: makeStat(0),\n      attack: makeStat(0),\n      defence: makeStat(0),\n      status: defaultStatus,\n    });\n  };\n  const displayType = (type: string) => <b>{build[type][form[type]].display}</b>;\n  return (\n    <Form onSubmit={onFormSubmit}>\n      Build: {version}\n      <Container fluid style={{ marginBottom: '105px' }}>\n        <Row className=\"g-2\">\n          {selects.map(({ type, options }) =>\n            <ElementPicker\n              setField={(value) => setField(type, value)}\n              section={type}\n              options={options}\n              key={type}\n              isSelected={(value) => form[type] === value} />\n          )}\n        </Row>\n        <Navbar fixed=\"bottom\" bg=\"dark\" variant=\"dark\" style={{ maxHeight: '100px' }}>\n          <Container>\n            <Navbar.Text>You are <i onClick={() => setLore((lore) => ({ ...lore, name: randomName() }))}>{lore.name}</i>, the {displayType('skill')} {displayType('class')} {displayType('charm')}<br />who wields a {displayType('weapon')} and a {displayType('offhand')}<br />and wears {displayType('armor')} with {displayType('headgear')} and {displayType('footwear')}</Navbar.Text>\n            <Button type=\"submit\">This is me!</Button>\n          </Container>\n        </ Navbar>\n      </Container >\n    </Form >\n  );\n};\n\nconst ElementPicker = ({ isSelected, section, options, setField }: {\n  options: {\n    display: string;\n    value: number;\n  }[], isSelected: (value: number) => boolean, setField: (value: number) => void, section: string\n}) => {\n  const [scrollTo, scrollRef] = useScroll({\n    behavior: 'smooth',\n    block: 'start',\n  });\n\n  return (\n    <Row>\n      <Form.Label>{section}</Form.Label>\n      <br />\n      <ButtonGroup size=\"lg\" className=\"mb-2\">\n        {options.map(({ display, value }) => (\n          <Button\n            key={value}\n            name={section}\n            id={`${value}`}\n            variant={isSelected(value) ? 'primary' : 'secondary'}\n            onClick={() => { setField(value); scrollTo(); }}\n          >{display}</Button>\n        ))}\n      </ButtonGroup>\n      <div id={`${section}-scroll`} ref={scrollRef} />\n    </Row>\n  );\n}\n\nexport default PlayerBuilder;\n","import { Ref, useRef } from \"react\";\n\ntype ScrollToFn = () => void;\n\nexport default function useScroll<T extends Element>(scrollParams: ScrollIntoViewOptions): [ScrollToFn, Ref<any>] {\n  const elRef = useRef<T>(null);\n  const executeScroll = () => elRef.current!.scrollIntoView(scrollParams);\n\n  return [executeScroll, elRef];\n};\n","import React from \"react\";\nimport { Container, ButtonGroup, Form, Button, Navbar } from \"react-bootstrap\";\n\nimport { Player, Enemies, Enemy, EnemiesStats, EnemyStats } from \"../utils/types\";\nimport { enemies, randomEnemy } from \"../utils/data\";\n\nconst EncounterBuilder = ({ player, onSave }: { player: Player, onSave: (enemies: Enemies, enemiesStats: EnemiesStats) => void }) => {\n  const [encounter, setEncounter] = React.useState<[Enemy, EnemyStats][]>([]);\n  const onFormSubmit = (e: any) => {\n    e.preventDefault();\n    const enemies = encounter.map(a => a[0]);\n    const enemiesStats = encounter.map(a => a[1]);\n    // Size enforced by UI\n    onSave(enemies as Enemies, enemiesStats as EnemiesStats);\n  };\n  const displayType = (type: string) => <b>{player.build[type].display}</b>;\n  return (\n    <Form onSubmit={onFormSubmit}>\n      <Container fluid style={{ marginBottom: encounter.length > 0 ? '205px' : '105px' }}>\n        <ButtonGroup size=\"lg\" className=\"mb-2\">\n          {enemies.map((enemy) =>\n            <Button\n              key={enemy[0].lore.name}\n              disabled={encounter.length > 4}\n              onClick={() => setEncounter((e) => [...e, enemy])}\n            >{enemy[0].lore.name}</Button>\n          )}\n        </ButtonGroup>\n      </Container >\n      {\n        encounter.length > 0 &&\n        <Navbar fixed=\"bottom\" bg=\"dark\" variant=\"dark\" style={{ marginBottom: '100px' }}>\n          <Container fluid>\n            <ButtonGroup size=\"sm\" className=\"mb-2\">\n              {encounter.map((enemy, idx) => <Button key={`${enemy[0].lore.name}-${idx}`} onClick={() => setEncounter((e) => { let found = false; return e.filter((m) => (found || m[0].lore.name !== enemy[0].lore.name) || !(found = true)); })}>{enemy[0].lore.name}</Button>)}\n            </ButtonGroup>\n          </Container>\n        </ Navbar>\n      }\n      <Navbar fixed=\"bottom\" bg=\"dark\" variant=\"dark\" style={{ maxHeight: '100px' }}>\n        <Container>\n          <Navbar.Text>You are <i>{player.lore.name}</i>, the {displayType('skill')} {displayType('class')} {displayType('charm')}<br />who wields a {displayType('weapon')} and a {displayType('offhand')}<br />and wears {displayType('armor')} with {displayType('headgear')} and {displayType('footwear')}</Navbar.Text>\n          <ButtonGroup>\n            <Button\n              disabled={encounter.length < 0 || encounter.length > 5}\n              onClick={(_) => setEncounter((e) => [...e, randomEnemy()])}>\n              Add Random\n            </Button>\n            <Button type=\"submit\" disabled={encounter.length < 1 || encounter.length > 5}>To Battle!</Button>\n          </ButtonGroup>\n        </Container>\n      </ Navbar>\n    </Form >\n  );\n};\n\nexport default EncounterBuilder;\n","export default function geneticAlgorithmConstructor(options) {\n\n    function settingDefaults() {\n        return {\n\n            mutationFunction: function (phenotype) { return phenotype },\n\n            crossoverFunction: function (a, b) { return [a, b] },\n\n            fitnessFunction: function (phenotype) { return 0 },\n\n            doesABeatBFunction: undefined,\n\n            population: [],\n            populationSize: 100,\n        }\n    }\n\n    function settingWithDefaults(settings, defaults) {\n        settings = settings || {}\n\n        settings.mutationFunction = settings.mutationFunction || defaults.mutationFunction\n        settings.crossoverFunction = settings.crossoverFunction || defaults.crossoverFunction\n        settings.fitnessFunction = settings.fitnessFunction || defaults.fitnessFunction\n\n        settings.doesABeatBFunction = settings.doesABeatBFunction || defaults.doesABeatBFunction\n\n        settings.population = settings.population || defaults.population\n        if (settings.population.length <= 0) throw Error(\"population must be an array and contain at least 1 phenotypes\")\n\n        settings.populationSize = settings.populationSize || defaults.populationSize\n        if (settings.populationSize <= 0) throw Error(\"populationSize must be greater than 0\")\n\n        return settings\n    }\n\n    var settings = settingWithDefaults(options, settingDefaults())\n\n    function populate() {\n        var size = settings.population.length\n        while (settings.population.length < settings.populationSize) {\n            const rand = Math.floor(Math.random() * size);\n            settings.population.push(\n                mutate(\n                    cloneJSON(settings.population[Math.floor(rand)])\n                )\n            )\n        }\n    }\n\n    function cloneJSON(object) {\n        return JSON.parse(JSON.stringify(object))\n    }\n\n    function mutate(phenotype) {\n        return settings.mutationFunction(cloneJSON(phenotype))\n    }\n\n    function crossover(phenotype) {\n        phenotype = cloneJSON(phenotype)\n        var mate = settings.population[Math.floor(Math.random() * settings.population.length)]\n        mate = cloneJSON(mate)\n        return settings.crossoverFunction(phenotype, mate)[0]\n    }\n\n    function doesABeatB(a, b) {\n        if (settings.doesABeatBFunction) {\n            return settings.doesABeatBFunction(a, b)\n        } else {\n            return settings.fitnessFunction(a) >= settings.fitnessFunction(b)\n        }\n    }\n\n    function compete() {\n        var nextGeneration = []\n\n        for (var p = 0; p < settings.population.length - 1; p += 2) {\n            var phenotype = settings.population[p];\n            var competitor = settings.population[p + 1];\n\n            nextGeneration.push(phenotype)\n            if (doesABeatB(phenotype, competitor)) {\n                if (Math.random() < 0.5) {\n                    nextGeneration.push(mutate(phenotype))\n                } else {\n                    nextGeneration.push(crossover(phenotype))\n                }\n            } else {\n                nextGeneration.push(competitor)\n            }\n        }\n\n        settings.population = nextGeneration;\n    }\n\n\n\n    function randomizePopulationOrder() {\n\n        for (var index = 0; index < settings.population.length; index++) {\n            var otherIndex = Math.floor(Math.random() * settings.population.length)\n            var temp = settings.population[otherIndex]\n            settings.population[otherIndex] = settings.population[index]\n            settings.population[index] = temp\n        }\n    }\n\n    return {\n        evolve: function (options) {\n\n            if (options) {\n                settings = settingWithDefaults(options, settings)\n            }\n\n            populate()\n            randomizePopulationOrder()\n            compete()\n            return this\n        },\n        best: function () {\n            var scored = this.scoredPopulation()\n            var result = scored.reduce(function (a, b) {\n                return a.score >= b.score ? a : b\n            }, scored[0]).phenotype\n            return cloneJSON(result)\n        },\n        bestScore: function () {\n            return settings.fitnessFunction(this.best())\n        },\n        population: function () {\n            return cloneJSON(this.config().population)\n        },\n        scoredPopulation: function () {\n            return this.population().map(function (phenotype) {\n                return {\n                    phenotype: cloneJSON(phenotype),\n                    score: settings.fitnessFunction(phenotype)\n                }\n            })\n        },\n        config: function () {\n            return cloneJSON(settings)\n        },\n        clone: function (options) {\n            return geneticAlgorithmConstructor(\n                settingWithDefaults(options,\n                    settingWithDefaults(this.config(), settings)\n                )\n            )\n        }\n    }\n}\n","import GeneticAlgorithmConstructor, { GeneticAlgorithmConfig, ScoredPhenotype } from '../geneticalgorithm/geneticalgorithm';\nimport { handlePlayerEffect, playerActions, setSelected } from '../utils/playGame';\nimport Chance from 'chance';\nimport { MonsterTarget, Play } from '../utils/types';\nimport { previousState } from '../utils/data';\nimport prettyjson from 'prettyjson';\nimport { Seq } from 'immutable';\n\nexport type TinkererOptions = typeof defaultTinkererOptions & { turns?: number };\n\nexport const defaultTinkererOptions = {\n  playerSeed: \"Miau\",\n  weights: { monster: 0.70, player: 0.125, turn: 0.1, stamina: 0.075 },\n  debug: false,\n};\n\nexport const gameRender = (results: ScoredPhenotype<Play>[]): string => {\n  const best: ScoredPhenotype<Play> = Seq(results).maxBy(a => a.score)!!;\n  const lastState = previousState(best.phenotype);\n  return `BEST BY ${best.score} in ${best.phenotype.states.length - 1} turns\\n` +\n    prettyjson.render([\n      lastState.lastAttacks.map(({ origin, display, phase }) => [origin === 'Player' ? 'Player' : `${best.phenotype.enemies[origin]!!.lore.name} [${origin}]`, display, phase]),\n      Seq(best.phenotype.enemies).zip(Seq(lastState.enemies)).flatMap(([enemy, stats], idx) => [`[${idx}] ${enemy.lore.name}`, stats]).toArray(),\n      lastState.player,\n    ]);\n}\n\nexport default function tinkerer(play: Play, iter: number, optionsOverride?: Partial<TinkererOptions>): ScoredPhenotype<Play>[] {\n  const options: TinkererOptions = { ...defaultTinkererOptions, ...optionsOverride };\n  const range = [...Array(iter).keys()];\n  const rand = new Chance(options.playerSeed);\n  const actions = playerActions(play.player);\n  const config: GeneticAlgorithmConfig<Play> = {\n    mutationFunction: (oldPlay) => {\n      const latestState = previousState(oldPlay);\n      const monsterHealth = latestState.enemies.reduce((acc, monster) => acc + monster.hp.current, 0);\n      const playerHealth = latestState.player.hp.current;\n      if (playerHealth === 0 || monsterHealth === 0) {\n        return oldPlay;\n      }\n      let newPlay = oldPlay;\n      while (rand.d6() === 6 || (previousState(newPlay).enemies[previousState(newPlay).target]?.hp ?? 0) <= 0) {\n        newPlay = setSelected(newPlay, rand.natural({ min: 0, max: previousState(newPlay).enemies.length - 1 }) as MonsterTarget);\n      }\n      const latest = previousState(newPlay);\n      const unavailable = actions.map((a, idx) => [a, idx] as const).filter(([a, _]) => a.stamina > latest.player.stamina.current).map(([_, idx]) => idx);\n      newPlay = handlePlayerEffect(\n        newPlay,\n        rand.natural({ min: 0, max: actions.length - 1, exclude: unavailable })\n      );\n      return newPlay;\n    },\n    fitnessFunction: (play) => {\n      const latestState = previousState(play);\n      const monsterHealth = latestState.enemies.reduce((acc, monster) => acc + monster.hp.current, 0);\n      const playerHealth = latestState.player.hp.current;\n      const playerStamina = latestState.player.stamina.current;\n      const startPlayerHealth = play.states[0].player.hp.max;\n      const startPlayerStamina = play.states[0].player.stamina.max;\n      const startMonsterHealth = play.states[0].enemies.reduce((acc, monster) => acc + monster.hp.current, 0);\n\n      const monsterKillingFitness = ((startMonsterHealth - monsterHealth) / startMonsterHealth);\n      const playerAlivenessFitness = (playerHealth / startPlayerHealth);\n      const killSpeedFitness = (play.turns - play.states.length) / play.turns;\n      const staminaFitness = (playerStamina / startPlayerStamina);\n\n      const fitness = (monsterKillingFitness * options.weights.monster) + (playerAlivenessFitness * options.weights.player) + (killSpeedFitness * options.weights.turn) + (staminaFitness * options.weights.stamina);\n      if (options.debug) {\n        console.log(`MH: ${monsterHealth} | PH: ${playerHealth} | TR: ${play.states.length}\\nFitness: ${fitness} | MF: ${monsterKillingFitness} | PF: ${playerAlivenessFitness} | SF: ${staminaFitness} | TF: ${killSpeedFitness}\\nWeights: ${JSON.stringify(options.weights)}`);\n      }\n      return fitness;\n    },\n    population: range.map((_) => play),\n    populationSize: iter,\n  }\n\n  const turns = optionsOverride?.turns ? optionsOverride?.turns : play.turns;\n  let gen = new GeneticAlgorithmConstructor<Play>(config);\n  for (let i = 0; i < turns; i++) {\n    gen = gen.evolve();\n  }\n  return gen.scoredPopulation();\n}\n","import WebSocket from 'ws';\nimport { assign, createMachine, interpret } from 'xstate';\nimport { inspect } from '@xstate/inspect/lib/server.js';\n\nconst isDebug = process.env['SMD'] === '1';\n\nif (isDebug) {\n  inspect({\n    server: new WebSocket.Server({\n      port: 8888\n    })\n  });\n}\n\nconst toMenu = {\n  on: {\n    MENU: { target: 'main' },\n  }\n}\n\nconst quick = {\n  initial: 'play',\n  states: {\n    play: {\n      entry: ['reset'],\n      on: {\n        WIN: { target: 'win' },\n        LOSE: { target: 'lose' }\n      }\n    },\n    win: { type: 'final' as const },\n    lose: { type: 'final' as const },\n  },\n  ...toMenu,\n};\n\nconst single = {\n  initial: 'player',\n  states: {\n    player: {\n      entry: ['reset'],\n      on: {\n        PLAYER: { target: 'encounter' }\n      }\n    },\n    encounter: {\n      on: {\n        ENCOUNTER: { target: 'play' }\n      }\n    },\n    play: {\n      on: {\n        WIN: { target: 'win' },\n        LOSE: { target: 'lose' }\n      }\n    },\n    win: { type: 'final' as const },\n    lose: { type: 'final' as const },\n  },\n  ...toMenu,\n};\n\nconst arcade = {\n  initial: 'player',\n  states: {\n    player: {\n      entry: ['reset'],\n      on: {\n        PLAYER: { target: 'play' }\n      }\n    },\n    play: {\n      on: {\n        WIN: [\n          { target: 'victory', cond: 'isFinal' },\n          { target: 'play', actions: ['bumpVictories'], internal: true },\n        ],\n        LOSE: { target: 'defeat' }\n      }\n    },\n    victory: {\n      type: 'final' as const,\n    },\n    defeat: {\n      type: 'final' as const,\n    },\n  },\n  ...toMenu,\n};\n\nconst survival = {\n  initial: 'player',\n  states: {\n    player: {\n      entry: ['reset'],\n      on: {\n        PLAYER: { target: 'play' }\n      }\n    },\n    play: {\n      on: {\n        WIN: { target: 'play', actions: ['bumpVictories'] },\n        LOSE: { target: 'defeat' }\n      }\n    },\n    defeat: {\n      type: 'final' as const,\n      on: {\n        // ACK: { target: '#menus.leaderboards' }\n      }\n    },\n  },\n  ...toMenu,\n};\n\nconst puzzle = {\n  initial: 'puzzle',\n  states: {\n    puzzle: {\n      on: {\n        PLAYER: { target: 'player' }\n      }\n    },\n    player: {\n      on: {\n        SELECTED: { target: 'play' }\n      }\n    },\n    play: {\n      on: {\n        COMPLETE: { target: 'complete' },\n      }\n    },\n    complete: {\n      on: {\n        NEXT: { target: 'player' },\n        SELECT: { target: 'puzzle' },\n      }\n    },\n  },\n  ...toMenu,\n};\n\nconst makeArcadeContext = () => ({\n  victories: 0,\n  score: 0,\n  seed: Math.random(),\n});\nconst makeSurvivalContext = () => ({\n  victories: 0,\n  seed: Math.random(),\n});\nconst makeSingleContext = () => ({\n  seed: Math.random(),\n});\nconst makeGameContext = () => ({\n  arcadeContext: makeArcadeContext(),\n  survivalContext: makeSurvivalContext(),\n  singleContext: makeSingleContext(),\n});\n\nexport const gameMenuMachine = createMachine({\n  tsTypes: {} as import(\"./menuStateMachine.typegen\").Typegen0,\n  id: 'menus',\n  initial: 'main',\n  context: makeGameContext(),\n  states: {\n    main: {\n      on: {\n        QUICK: { target: 'quick' },\n        SINGLE: { target: 'single' },\n        ARCADE: { target: 'arcade' },\n        SURVIVAL: { target: 'survival' },\n        // PUZZLE: { target: 'puzzle' },\n        // LEADERBOARDS: { target: 'leaderboards' },\n      }\n    },\n    quick: {\n      ...quick,\n    },\n    single: {\n      ...single,\n    },\n    arcade: {\n      ...arcade,\n    },\n    survival: {\n      ...survival,\n    },\n    // puzzle: {\n    //   ...puzzle,\n    // },\n    // leaderboards: {\n    //   ...toMenu,\n    // }\n  },\n}, {\n  guards: {\n    isFinal: ({ arcadeContext: { victories } }) => victories + 1 >= 7,\n  },\n  actions: {\n    bumpVictories: assign({\n      arcadeContext: ({ arcadeContext }, _event) => ({ ...arcadeContext, victories: arcadeContext.victories + 1, seed: Math.random() }),\n      survivalContext: ({ survivalContext }, _event) => ({ ...survivalContext, victories: survivalContext.victories + 1, seed: Math.random() }),\n    }),\n    reset: assign({\n      survivalContext: (c, e) => makeSurvivalContext(),\n      arcadeContext: (c, e) => makeArcadeContext(),\n      singleContext: (c, e) => makeSingleContext(),\n    }),\n  }\n});\n\nif (isDebug) {\n  interpret(gameMenuMachine, { devTools: true })\n    .onTransition((state) => console.log(state))\n    .start();\n}\n","import React from \"react\";\nimport { Container, Card, Row, Button } from \"react-bootstrap\";\n\nconst Menu: React.FC<{\n  title: string;\n  states: string[];\n  onClick: (value: string) => void\n}> = ({ title, states, onClick }) =>\n    <Container fluid style={{ marginBottom: '105px' }}>\n      <Row className=\"g-2\">\n        <Card.Title>\n          {title}\n        </Card.Title>\n      </Row>\n      {states.map(state =>\n        <Row className=\"g-2\" key={state}>\n          <Button size=\"lg\" className=\"mb-2\"\n            key={state}\n            variant={'primary'}\n            onClick={() => { onClick(state); }}\n          >{state}</Button>\n        </Row>\n      )}</Container >;\n\nexport default Menu;\n","import React, { useCallback, useEffect } from \"react\";\nimport \"./App.css\";\n// import { readString } from \"react-papaparse\";\nimport { Snapshot, Play } from \"./utils/types\";\n\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport Game from \"./components/Game\";\nimport PlayerBuilder from \"./components/PlayerBuilder\";\nimport EncounterBuilder from \"./components/EncounterBuilder\";\nimport play, { handlePlayerEffect, PlayState, playState, setDisabledSkills, setSelected } from \"./utils/playGame\";\nimport tinkerer from \"./tinkerer/tinkerer\";\nimport { Seq } from \"immutable\";\nimport { previousState, randomEnemy, randomPlayer } from \"./utils/data\";\nimport { useMachine } from '@xstate/react';\nimport { gameMenuMachine } from \"./menuStateMachine\";\nimport Menu from \"./components/menus/Menu\";\n\nfunction App() {\n  const player = randomPlayer();\n  const [state, send] = useMachine(gameMenuMachine, { devTools: true });\n  const event = state.event;\n\n  switch (true) {\n    case state.matches('main'):\n      return <Menu\n        title={\"Main Menu\"}\n        states={Object.keys(gameMenuMachine.states.main.on)}\n        onClick={send}\n      />;\n    // QUICK\n    case state.matches({ quick: 'play' }): {\n      const player = randomPlayer();\n      const encounter = randomEnemy();\n      return <SingleGame\n        play={play(player[0], player[1], [encounter[0]], [encounter[1]], 50, state.context.singleContext.seed)}\n        timeTravel={true}\n        onGameEnd={(result, game) => { send(result === 'win' ? 'WIN' : 'LOSE', { result, game }) }}\n      />;\n    }\n    case state.matches({ quick: 'win' }):\n    case state.matches({ quick: 'lose' }):\n      return <Menu\n        title={`${event.result} in ${event.game.states.length - 1} turns`}\n        states={[\"MENU\"]}\n        onClick={send}\n      />;\n    // SINGLE\n    case state.matches({ single: 'player' }):\n      return <PlayerBuilder onSave={(player, playerStats) => { send('PLAYER', { player: [player, playerStats] }); }} />;\n    case state.matches({ single: 'encounter' }):\n      return <EncounterBuilder\n        player={player[0]}\n        onSave={(enemies, enemiesStats) => { send('ENCOUNTER', { encounter: [enemies, enemiesStats], player: event.player }) }}\n      />;\n    case state.matches({ single: 'play' }): {\n      return <SingleGame\n        play={play(event.player[0], event.player[1], event.encounter[0], event.encounter[1], 50, state.context.singleContext.seed)}\n        timeTravel={true}\n        onGameEnd={(result, game) => { send(result === 'win' ? 'WIN' : 'LOSE', { result, game }) }}\n      />;\n    }\n    case state.matches({ single: 'win' }):\n    case state.matches({ single: 'lose' }):\n      return <Menu\n        title={`${event.result} in ${event.game.states.length - 1} turns`}\n        states={[\"MENU\"]}\n        onClick={send}\n      />;\n    // ARCADE\n    case state.matches({ arcade: 'player' }): {\n      const encounter = randomEnemy();\n      return <PlayerBuilder onSave={(player, playerStats) => { send('PLAYER', { game: play(player, playerStats, [encounter[0]], [encounter[1]], 50, state.context.survivalContext.seed) }); }} />;\n    }\n    case state.matches({ arcade: 'play' }): {\n      return <SingleGame\n        play={event.game}\n        timeTravel={false}\n        onGameEnd={(result: PlayState, game: Play) => {\n          const encounter = randomEnemy();\n          const firstState: Snapshot = game.states[0];\n          send(result === 'win' ? 'WIN' : 'LOSE', { result, game: play(game.player, firstState.player, [encounter[0]], [encounter[1]], 50, state.context.survivalContext.seed) });\n        }}\n      />;\n    }\n    case state.matches({ arcade: 'victory' }): {\n      return <Menu\n        title={`VICTORY!`}\n        states={[\"MENU\"]}\n        onClick={send}\n      />;\n    }\n    case state.matches({ arcade: 'defeat' }): {\n      return <Menu\n        title={`Failed after ${state.context.arcadeContext.victories} victories`}\n        states={[\"MENU\"]}\n        onClick={send}\n      />;\n    }\n    // SURVIVAL\n    case state.matches({ survival: 'player' }): {\n      const encounter = randomEnemy();\n      return <PlayerBuilder onSave={(player, playerStats) => { send('PLAYER', { game: play(player, playerStats, [encounter[0]], [encounter[1]], 50, state.context.survivalContext.seed) }); }} />;\n    }\n    case state.matches({ survival: 'play' }): {\n      return <SingleGame\n        play={event.game}\n        timeTravel={false}\n        onGameEnd={(result, game) => {\n          const encounter = randomEnemy();\n          const lastState: Snapshot = game.states[event.game.states.length - 1];\n          send(result === 'win' ? 'WIN' : 'LOSE', { result, game: play(game.player, lastState.player, [encounter[0]], [encounter[1]], 50, state.context.survivalContext.seed) });\n        }}\n      />;\n    }\n    case state.matches({ survival: 'defeat' }): {\n      return <Menu\n        title={`Completed after ${state.context.survivalContext.victories} victories`}\n        states={[\"MENU\"]}\n        onClick={send}\n      />;\n    }\n    default:\n      return <>{JSON.stringify(state.value)}</>;\n  }\n}\n\nconst SingleGame = ({ play, timeTravel, onGameEnd }: { play: Play; timeTravel: boolean, onGameEnd: (state: PlayState, play: Play) => void }) => {\n  const [game, setGame] = React.useState<Play>(play);\n  const [redo, setRedo] = React.useState<Snapshot[]>([]);\n\n  useEffect(() => {\n    setGame(play);\n  }, [play]);\n\n  useEffect(() => {\n    const gameState = playState(game);\n    const hasEnded = gameState !== 'playing';\n    if (hasEnded) {\n      onGameEnd(gameState, game);\n    }\n  }, [game]);\n\n  const timeTravelObj = timeTravel ? {\n    redo: redo.length > 0 ? (() => {\n      const newRedo = [...redo];\n      const latest = newRedo.pop() as Snapshot;\n      setRedo(newRedo);\n      setGame({ ...game, states: [...game.states, latest] });\n    }) : undefined,\n    undo: () => {\n      setRedo([...redo, previousState(game)]);\n      setGame({ ...game, states: [game.states[0], ...game.states.slice(1, -1)] });\n    }\n  } : undefined;\n\n  return (<Game\n    game={game}\n    timeTravel={timeTravelObj}\n    setSelected={(idx) => { setRedo([]); setGame(setSelected(game, idx)); }}\n    setDisabledSkills={(disabled) => { setRedo([]); setGame(setDisabledSkills(game, disabled)) }}\n    handlePlayerEffect={(idx) => { setRedo([]); setGame(handlePlayerEffect(game, idx)); }}\n    solveGame={(iterations) => setGame(Seq(tinkerer(game, iterations, { turns: game.turns - game.states.length })).maxBy(a => a.score)!!.phenotype)}\n    hint={(iterations) =>\n      setGame({\n        ...game,\n        states: [...game.states, Seq(tinkerer(game, iterations, { turns: game.turns - game.states.length })).maxBy(a => a.score)!!.phenotype.states[game.states.length]]\n      })\n    }\n  />\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://cra.link/PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://cra.link/PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorkerRegistration from './serviceWorkerRegistration';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://cra.link/PWA\nserviceWorkerRegistration.register();\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","import { allRanges, enemies, makeStat, startState } from \"./data\";\nimport { EffectFun, ParametrizedFun, ReduceFun } from \"./effectFunctions\";\nimport { Effect, effectFunCall, Enemies, EnemiesStats, Enemy, EnemyStats, MonsterTarget, Nel, Play, PlayerStats, Snapshot, StatsFun, StatsFunRepo, Status, Target } from \"./types\";\n\nexport type EffectFunctionRepository = { [k in keyof EffectFunctionT]: (params: EffectFunctionT[k]) => ReduceFun };\nexport type EffectFunctionT = {\n  'Target:Poison': { target: Target; lifespan: number };\n  'Monster:Summon': { enemy: number };\n  'Monster:Dead': undefined;\n  'Basic:Rest': undefined;\n  'Basic:Advance': undefined;\n  'Basic:Retreat': undefined;\n  'Effect:Dodge': undefined;\n  'Effect:Armor': { amount: number };\n  'Axe:Chop': undefined;\n  'Axe:Cut': undefined;\n  'Axe:Bleed': undefined;\n  'Hook:GetHere': undefined;\n  'Monster:Swipe': undefined;\n  'Monster:Roar': undefined;\n  'Monster:Jump': undefined;\n  'BootsOfFlight:EOT': undefined;\n  'Utility:UseStamina': { amount: number };\n  'Utility:Cleanup': undefined;\n  'Debug:GGWP': undefined;\n  'Debug:Sudoku': undefined;\n}\n\nexport const statsRepository = {\n  'Charm:ofHealth': (player: PlayerStats, enemies: EnemiesStats): [PlayerStats, EnemiesStats] => [{ ...player, hp: makeStat(player.hp.current + 10) }, enemies],\n  'Charm:ofHaste': (player: PlayerStats, enemies: EnemiesStats): [PlayerStats, EnemiesStats] => [{ ...player, staminaPerTurn: makeStat(player.staminaPerTurn.current + 1) }, enemies],\n  'Charm:ofResilience': (player: PlayerStats, enemies: EnemiesStats): [PlayerStats, EnemiesStats] => [{ ...player, stamina: makeStat(player.stamina.current + 3) }, enemies],\n  'Charm:ofStrength': (player: PlayerStats, enemies: EnemiesStats): [PlayerStats, EnemiesStats] => [{ ...player, attack: makeStat(player.attack.current + 1) }, enemies],\n  'Charm:ofSwiftness': (player: PlayerStats, enemies: EnemiesStats): [PlayerStats, EnemiesStats] => [{ ...player, speed: makeStat(player.speed.current + 1) }, enemies],\n  'Charm:ofDefence': (player: PlayerStats, enemies: EnemiesStats): [PlayerStats, EnemiesStats] => [{ ...player, defence: makeStat(player.defence.current + 1) }, enemies],\n}\n\nexport type Op = '+' | '*';\nexport type StatsOpFun<T> = [Op, keyof T, T[keyof T]];\nconst applyObject = <T extends { [k: string]: number }>(op: Op, obj: T, apply: Partial<T>): T =>\n  Object.entries(apply).reduce((acc, [k, v]) => {\n    if (v == null) {\n      return acc;\n    }\n    return applyKvp(op, acc, k, v);\n  }, obj);\n\nconst applyKvp = <T extends { [k: string]: number }>(op: Op, obj: T, k: keyof T, v: T[keyof T]): T => {\n  const copy = { ...obj };\n  op === '+'\n    ? copy[k] = copy[k] + v as T[keyof T]\n    : op === '*'\n      ? copy[k] = copy[k] * v as T[keyof T]\n      : void 0;\n  return copy;\n};\n\nconst effectFun = <T>(...funs: Nel<ParametrizedFun<T>>): EffectFun<T> =>\n  // TODO check direction of the fold\n  (funs.length > 1\n    ? funs.reduce((acc, value) => (params) => (origin, play, oldState) => {\n      const [newPlay, newState] = acc(params)(origin, play, oldState);\n      return value(params)(origin, newPlay, newState);\n    }) : funs[0]) as EffectFun<T>;\n\nconst debugFunctions = {\n  'Debug:GGWP': effectFun(\n    () => (_, play, currentState) => [play, { ...currentState, enemies: currentState.enemies.map(m => ({ ...m, hp: { ...m.hp, current: 0 } })) as EnemiesStats }]\n  ),\n  'Debug:Sudoku': effectFun(\n    () => (_, play, currentState) => [play, { ...currentState, player: { ...currentState.player, hp: { ...currentState.player.hp, current: 0 } } }]\n  ),\n}\n\nconst repo: EffectFunctionRepository = {\n  'Target:Poison': effectFun(\n    ({ target }) => (origin, play, currentState) => [play, target === 'Player' ? actions.attackPlayer(currentState, origin as MonsterTarget, 1) : actions.attackMonster(currentState, target, 1)],\n    (params) => (origin, play, currentState) => [play,\n      (params.target !== 'Player' && currentState.enemies[params.target]!!.hp.current > 0)\n        && (params.lifespan > 0)\n        ? actions.addEotEffect(currentState, origin, { display: `Poison ${play.enemies[params.target]!!.lore.name} [${params.target + 1}]`, tooltip: '', range: allRanges, priority: 4, effects: [effectFunCall(['Target:Poison', { ...params, lifespan: params.lifespan - 1 }])] })\n        : currentState],\n  ),\n  'Monster:Summon': effectFun(\n    ({ enemy }) => (_origin, play, currentState) => actions.addEnemy(play, currentState, enemies[enemy][0], enemies[enemy][1])\n  ),\n  'Monster:Dead': effectFun(\n    () => (_origin, play, currentState) => [play, currentState]\n  ),\n  'Utility:UseStamina': effectFun(\n    ({ amount }) => (_origin, play, currentState) => [play, actions.modifyPlayerStamina(currentState, amount)]\n  ),\n  'Utility:Cleanup': effectFun(\n    () => (_origin, play, currentState) => [play, actions.changeStatusPlayer(currentState, (o) => ({ ...o, armor: { amount: 0 }, bleed: { turns: Math.max(o.bleed.turns - 1, 0) }, dodge: { active: false } }))],\n    () => (_origin, play, currentState) => [play, currentState.enemies.reduce((acc, v, idx) => actions.changeStatusMonster(acc, idx as MonsterTarget, (o) => ({ ...o, armor: { amount: 0 }, bleed: { turns: Math.max(o.bleed.turns - 1, 0) }, dodge: { active: false } })), currentState)],\n  ),\n  'Basic:Rest': effectFun(\n    () => (_origin, play, currentState) => [play, currentState]\n  ),\n  'Basic:Advance': effectFun(\n    () => (_origin, play, currentState) => [play, actions.changeDistance(currentState, currentState.target, -2)]\n  ),\n  'Basic:Retreat': effectFun(\n    () => (_origin, play, currentState) => [play, actions.changeDistance(currentState, currentState.target, 2)]\n  ),\n  'Effect:Dodge': effectFun(\n    () => (_origin, play, currentState) => [play, actions.changeStatusPlayer(currentState, (o) => ({ ...o, dodge: { active: true } }))]\n  ),\n  'Axe:Chop': effectFun(\n    () => (_, play, currentState) => [play, actions.attackMonster(currentState, currentState.target, 3)]\n  ),\n  'Axe:Cut': effectFun(\n    () => (_, play, currentState) => [play, actions.attackMonster(currentState, currentState.target, 3)],\n    () => (origin, play, currentState) => [play,\n      actions.addEotEffect(currentState, origin, { display: `Poison ${play.enemies[currentState.target]!!.lore.name} [${currentState.target + 1}]`, tooltip: '', range: allRanges, priority: 4, effects: [effectFunCall(['Target:Poison', { target: currentState.target, lifespan: 2 }])] })]\n  ),\n  'Axe:Bleed': effectFun(\n    () => (_, play, currentState) => [play, actions.attackMonster(currentState, currentState.target, 2)],\n    () => (_, play, currentState) => [play, actions.changeStatusMonster(currentState, currentState.target, (o) => ({ ...o, bleed: { turns: o.bleed.turns + 5 } }))]\n  ),\n  'Effect:Armor': effectFun(\n    () => (_, play, currentState) => [play, actions.changeStatusPlayer(currentState, (o) => ({ ...o, armor: { amount: 3 } }))]\n  ),\n  'Hook:GetHere': effectFun(\n    () => (_, play, currentState) => [play, actions.attackMonster(currentState, currentState.target, 3)],\n    () => (_origin, play, currentState) => [play, actions.changeDistance(currentState, currentState.target, -1)]\n  ),\n  'Monster:Swipe': effectFun(\n    () => (origin, play, currentState) => [play, actions.attackPlayer(currentState, origin as MonsterTarget, 2)]\n  ),\n  'Monster:Roar': effectFun(\n    () => (_, play, currentState) => [play, actions.modifyPlayerStamina(currentState, -5)]\n  ),\n  'Monster:Jump': effectFun(\n    () => (origin, play, currentState) => [play, actions.changeDistance(currentState, origin, -2)]\n  ),\n  'BootsOfFlight:EOT': effectFun(\n    () => (_, play, currentState) => [play, currentState.enemies.reduce((s, _m, idx) => actions.changeDistance(s, idx as MonsterTarget, -2), currentState)]\n  ),\n  ...debugFunctions,\n};\n\nconst clamp = (num: number, min: number, max: number = Infinity) =>\n  Math.min(Math.max(num, min), max);\n\nconst updateMonster = (enemies: EnemiesStats, target: Target, override: (stats: EnemyStats) => Partial<EnemyStats>): EnemiesStats =>\n  enemies.map((m, idx) =>\n    (idx === target)\n      ? { ...m, ...override(m) }\n      : m) as EnemiesStats;\n\nconst updatePlayer = (curr: Snapshot, override: (player: PlayerStats) => Partial<PlayerStats>): Snapshot => {\n  return {\n    ...curr,\n    player: { ...curr.player, ...override(curr.player) }\n  };\n}\n\nconst updatePlayerStat = <T extends keyof PlayerStats>(curr: Snapshot, key: T, modify: (player: PlayerStats[T]) => Partial<PlayerStats[T]>): Snapshot => {\n  const player = curr.player;\n  player[key] = {\n    ...player[key],\n    ...modify(player[key])\n  }\n  return {\n    ...curr,\n    player\n  };\n}\n\nconst actions = {\n  attackPlayer,\n  attackMonster,\n  changeStatusPlayer: (curr: Snapshot, updateStatus: (oldStatus: Status) => Status): Snapshot => ({\n    ...curr,\n    player: { ...curr.player, status: updateStatus(curr.player.status) }\n  }),\n  changeStatusMonster: (curr: Snapshot, target: MonsterTarget, updateStatus: (oldStatus: Status) => Status): Snapshot => ({\n    ...curr,\n    enemies: updateMonster(curr.enemies, target, ({ status }) => ({ status: updateStatus(status) })),\n  }),\n  changeDistance: (curr: Snapshot, origin: Target, amount: number): Snapshot =>\n  ({\n    ...curr,\n    enemies: updateMonster(curr.enemies, origin, ({ distance }) => ({ distance: clamp(distance + amount, 0, 4) as MonsterTarget })),\n  }),\n  removeMonster: (currPlay: Play, currSnap: Snapshot, target: MonsterTarget): [Play, Snapshot] =>\n    [\n      { ...currPlay, enemies: currPlay.enemies.filter((_, idx) => idx === target) as Enemies },\n      { ...currSnap, target: 0, enemies: currSnap.enemies.filter((_, idx) => idx === target) as EnemiesStats }\n    ],\n  modifyPlayerStamina: (\n    curr: Snapshot,\n    amount: number,\n  ): Snapshot =>\n    updatePlayerStat(curr, 'stamina', stamina => ({\n      current: clamp(stamina.current + amount, 0, stamina.max)\n    })),\n  addEotEffect: (\n    curr: Snapshot,\n    origin: Target,\n    effect: Effect,\n  ): Snapshot => ({\n    ...curr,\n    eot: [...(curr.eot ?? []), [origin, effect]],\n  }),\n  addBotEffect: (\n    curr: Snapshot,\n    origin: Target,\n    effect: Effect,\n  ): Snapshot => ({\n    ...curr,\n    bot: [...(curr.eot ?? []), [origin, effect]],\n  }),\n  addEnemy: (\n    play: Play,\n    curr: Snapshot,\n    enemy: Enemy,\n    enemyStats: EnemyStats,\n  ): [Play, Snapshot] => {\n    return play.enemies.length < 5\n      ? [{\n        ...play,\n        enemies: [...play.enemies, enemy] as Enemies,\n      }, {\n        ...curr,\n        enemies: [...curr.enemies, enemyStats] as EnemiesStats,\n      }]\n      : [play, curr];\n  }\n};\n\nfunction attackMonster(curr: Snapshot, target: MonsterTarget, amount: number): Snapshot {\n  const monster = curr.enemies[target]!!;\n  const armor = monster.status.armor.amount;\n  const damage = amount + curr.player.attack.current;\n  const afterDefence = Math.max(damage - monster.defence.current, 0);\n  const afterArmor = Math.max(afterDefence - armor, 0);\n  const armorSpent = armor - (afterDefence - afterArmor);\n  const afterBleed = afterArmor + (monster.status.bleed.turns > 0 ? 1 : 0);\n  return ({\n    ...curr,\n    enemies: updateMonster(curr.enemies, target, ({ status, hp }) => ({\n      hp: { max: hp.max, current: clamp(hp.current - afterBleed, 0, hp.max) },\n      status:\n        { ...status, armor: { amount: armorSpent } }\n    })),\n  });\n}\n\nfunction attackPlayer(curr: Snapshot, monster: MonsterTarget, amount: number): Snapshot {\n  const armor = curr.player.status.armor.amount;\n  const damage = amount + curr.player.attack.current;\n  const afterDefence = Math.max(damage - curr.player.defence.current, 0);\n  const afterArmor = Math.max(afterDefence - armor, 0);\n  const armorSpent = armor - (afterDefence - afterArmor);\n  const afterBleed = afterArmor + (curr.player.status.bleed.turns > 0 ? 1 : 0);\n  return updatePlayer(curr, ({ hp, status }) => ({\n    hp: { max: hp.max, current: clamp(hp.current - afterBleed, 0, hp.max) },\n    status: { ...status, armor: { amount: status.armor.amount - armorSpent } }\n  }));\n}\n\nexport default repo;\n","import { createIs, is } from 'typescript-is';\nimport { Opaque } from \"type-fest\";\nimport { callEffectFun, Effect, FunIndex, Play, Snapshot, Target } from \"./types\";\nimport effectRepository, { EffectFunctionRepository, EffectFunctionT, statsRepository } from './effectRepository';\n\nexport type ReduceFun = (origin: Target, play: Play, newState: Snapshot) => [Play, Snapshot];\nexport type ParametrizedFun<T> = (params: T) => ReduceFun;\nexport type EffectFun<T> = Opaque<ParametrizedFun<T>, ParametrizedFun<T>>;\n\nexport type EffectFunRepo = EffectFunctionRepository;\nexport type EffectFunRepoIndex = keyof EffectFunctionT & FunIndex;\nexport type EffectFunParams<T extends EffectFunRepoIndex> = Parameters<EffectFunRepo[T]>[0];\n\nexport type StatsFunIndex = keyof typeof statsRepository;\n\nconst isNode = typeof process === 'undefined';\n\nexport function extractFunction({ effects }: Effect): ReduceFun {\n  if (!isNode || !effects.map(({ index, parameters }) => isAnyEffectFunParams(index, parameters)).includes(false)) {\n    return (origin, play, startState) => effects.reduce((acc, { index, parameters }) =>\n      callEffectFun(effectRepository, index, parameters)(origin, ...acc), [play, startState]);\n  }\n  throw new Error(`ValidationException: ${JSON.stringify(effects.filter(({ index, parameters }) => !isAnyEffectFunParams(index, parameters)))}`);\n}\n\nconst assignObject = <T extends EffectFunRepoIndex>(idx: T, obj: object, value: any): object => {\n  // @ts-ignore\n  obj[idx as string] = value;\n  return { ...obj };\n}\n\n// Uses all the tricks in the book for runtime validation\nconst validators = !isNode\n  ? {} as { [k: string]: any }\n  : Object.keys(effectRepository)\n    // eslint-disable-next-line array-callback-return\n    .reduce((obj, idx) => {\n      if (!is<EffectFunRepoIndex>(idx)) {\n        return obj;\n      }\n      switch (idx) {\n        case 'Target:Poison': return assignObject(idx, obj, [createIs<typeof idx>(), createIs<EffectFunParams<typeof idx>>()]);\n        case 'Monster:Summon': return assignObject(idx, obj, [createIs<typeof idx>(), createIs<EffectFunParams<typeof idx>>()]);\n        case 'Monster:Dead': return assignObject(idx, obj, [createIs<typeof idx>(), createIs<EffectFunParams<typeof idx>>()]);\n        case 'Utility:Cleanup': return assignObject(idx, obj, [createIs<typeof idx>(), createIs<EffectFunParams<typeof idx>>()]);\n        case 'Utility:UseStamina': return assignObject(idx, obj, [createIs<typeof idx>(), createIs<EffectFunParams<typeof idx>>()]);\n        case 'Basic:Rest': return assignObject(idx, obj, [createIs<typeof idx>(), createIs<EffectFunParams<typeof idx>>()]);\n        case 'Basic:Advance': return assignObject(idx, obj, [createIs<typeof idx>(), createIs<EffectFunParams<typeof idx>>()]);\n        case 'Basic:Retreat': return assignObject(idx, obj, [createIs<typeof idx>(), createIs<EffectFunParams<typeof idx>>()]);\n        case 'Effect:Dodge': return assignObject(idx, obj, [createIs<typeof idx>(), createIs<EffectFunParams<typeof idx>>()]);\n        case 'Effect:Armor': return assignObject(idx, obj, [createIs<typeof idx>(), createIs<EffectFunParams<typeof idx>>()]);\n        case 'Axe:Chop': return assignObject(idx, obj, [createIs<typeof idx>(), createIs<EffectFunParams<typeof idx>>()]);\n        case 'Axe:Cut': return assignObject(idx, obj, [createIs<typeof idx>(), createIs<EffectFunParams<typeof idx>>()]);\n        case 'Axe:Bleed': return assignObject(idx, obj, [createIs<typeof idx>(), createIs<EffectFunParams<typeof idx>>()]);\n        case 'Hook:GetHere': return assignObject(idx, obj, [createIs<typeof idx>(), createIs<EffectFunParams<typeof idx>>()]);\n        case 'Monster:Swipe': return assignObject(idx, obj, [createIs<typeof idx>(), createIs<EffectFunParams<typeof idx>>()]);\n        case 'Monster:Roar': return assignObject(idx, obj, [createIs<typeof idx>(), createIs<EffectFunParams<typeof idx>>()]);\n        case 'Monster:Jump': return assignObject(idx, obj, [createIs<typeof idx>(), createIs<EffectFunParams<typeof idx>>()]);\n        case 'BootsOfFlight:EOT': return assignObject(idx, obj, [createIs<typeof idx>(), createIs<EffectFunParams<typeof idx>>()]);\n        case 'Debug:GGWP': return assignObject(idx, obj, [createIs<typeof idx>(), createIs<EffectFunParams<typeof idx>>()]);\n        case 'Debug:Sudoku': return assignObject(idx, obj, [createIs<typeof idx>(), createIs<EffectFunParams<typeof idx>>()]);\n      }\n    }, {}) as Validators;\ntype Validators = { [k in EffectFunRepoIndex]: [(object: any) => object is k, (object: any) => object is EffectFunParams<k>] };\n\nexport function isAnyEffectFunParams(idx: any, value: any): value is EffectFunParams<EffectFunRepoIndex> {\n  if (is<EffectFunRepoIndex>(idx)) {\n    const v = validators[idx];\n    if (v != null) {\n      return v[0](idx) && v[1](value);\n    }\n  }\n  return false;\n}\n\nexport function isEffectFunParams<T extends EffectFunRepoIndex>(expected: T, idx: any, value: any): value is EffectFunParams<T> {\n  if (expected === idx) {\n    const v = validators[expected];\n    return v[0](idx) && v[1](value);\n  }\n  return false;\n}\n\n// Jest doesn't work so this should do\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nconst test = () => {\n  const assertF = (a: any, b: any) => a === b ? void 0 : console.log(`Failed ${a.toString()} compared to ${b.toString()} ${new Error().stack?.split('\\n')[2].trim()}`);\n  const [idx1, value1] = JSON.parse(JSON.stringify(['Monster:Summon', { enemy: 1 }]));\n  assertF(true, isAnyEffectFunParams(idx1, value1));\n  assertF(false, isEffectFunParams('Target:Poison', idx1, value1));\n  assertF(false, isAnyEffectFunParams('Target:Poison', value1));\n\n  const [idx2, value2] = JSON.parse(JSON.stringify(['Monster:Summon', { patatas: 1 }]));\n  assertF(false, isAnyEffectFunParams(idx2, value2));\n\n  const [idx3, value3] = JSON.parse(JSON.stringify(['Monster:Patatas', {}]));\n  assertF(false, isAnyEffectFunParams(idx3, value3));\n\n  const [idx4, value4] = JSON.parse(JSON.stringify(['Monster:Swipe']));\n  assertF(true, isAnyEffectFunParams(idx4, value4));\n  assertF(false, isAnyEffectFunParams(idx4, value4 ?? null));\n  assertF(true, isAnyEffectFunParams(idx4, value4 ?? undefined));\n\n  const [idx5, value5] = JSON.parse(JSON.stringify(['Monster:Swipe', undefined]));\n  assertF(false, isAnyEffectFunParams(idx5, value5));\n  assertF(false, isAnyEffectFunParams(idx5, value5 ?? null));\n  assertF(true, isAnyEffectFunParams(idx5, value5 ?? undefined));\n}\n\n// node --experimental-specifier-resolution=node --loader ts-node/esm src/utils/effectFunctions.ts \n// test();\n"],"sourceRoot":""}