{"version":3,"sources":["game/data.ts","components/PlayerBuilder.tsx","hooks/useScroll.tsx","components/EncounterBuilder.tsx","components/menus/Menu.tsx","geneticalgorithm/geneticalgorithm.js","game/tinkerer.ts","components/Enemy.tsx","components/Player.tsx","components/Game.tsx","hooks/useForceRerender.tsx","hooks/usePressedKeys.tsx","components/menus/SingleGame.tsx","components/menus/LoadScreen.tsx","App.tsx","reportWebVitals.ts","index.tsx","game/effectRepository.ts","game/playGame.ts","game/zFunDump.ts","game/modding.ts","game/types.ts","stateMachines/menuStateMachine.ts","serviceWorkerRegistration.ts"],"names":["previousState","play","states","length","makeRange","number","Set","allRanges","selfRange","makeStat","amount","max","current","defaultStatus","dodge","active","armor","bleed","turns","stun","randomEnemy","Chance","pickone","enemies","dummyEnemy","globals","trainingEnemy","randomName","names","Math","floor","random","randomBuild","rng","buildOverride","debug","build","basic","class","skill","weapon","offhand","footwear","headgear","charm","consumable","playerStatsDefault","hp","stamina","staminaPerTurn","speed","attack","defence","status","randomPlayer","statsOverride","id","string","lore","name","age","weapons","display","tooltip","effects","effectFunCall","priority","dodgeable","range","target","passives","eot","rolls","distance","enemy","updateGlobals","systemBuildKeys","ElementPicker","isSelected","section","options","setField","scrollParams","elRef","useRef","scrollIntoView","useScroll","behavior","block","scrollTo","scrollRef","Row","Form","Label","ButtonGroup","size","className","map","item","Button","variant","onClick","ref","PlayerBuilder","onSave","player","playerStats","React","useState","form","setForm","setLore","displayType","type","postBuildPlayerStats","buildPlayer","onSubmit","e","preventDefault","Container","fluid","style","marginBottom","safeEntries","filter","has","values","value","field","Navbar","fixed","bg","maxHeight","Text","EncounterBuilder","encounter","setEncounter","a","enemiesStats","disabled","idx","found","m","_","Menu","title","Card","Title","state","geneticAlgorithmConstructor","settingWithDefaults","settings","defaults","mutationFunction","crossoverFunction","fitnessFunction","doesABeatBFunction","population","Error","populationSize","phenotype","b","undefined","cloneJSON","object","JSON","parse","stringify","mutate","crossover","mate","evolve","rand","push","populate","index","otherIndex","temp","randomizePopulationOrder","nextGeneration","p","competitor","compete","this","best","scored","scoredPopulation","reduce","score","bestScore","config","clone","defaultTinkererOptions","playerSeed","weights","monster","turn","findBestPlay","iter","optionsOverride","oldPlay","latestState","monsterHealth","acc","newPlay","d6","setSelected","natural","min","latest","actions","playerActions","inventory","unavailable","handlePlayerEffect","exclude","playerHealth","playerStamina","startPlayerHealth","startPlayerStamina","startMonsterHealth","monsterKillingFitness","playerAlivenessFitness","killSpeedFitness","staminaFitness","fitness","console","log","rangeArr","gen","GeneticAlgorithmConstructor","i","Seq","sortBy","toArray","EnemyCard","enemyStats","onSelect","latestAttack","canAct","hotkey","Body","countBy","v","find","OverlayTrigger","placement","delay","show","hide","overlay","Popover","Header","as","join","toFixed","toUpperCase","PlayerCard","selectedButtons","inventoryStats","onClickEffect","lastAction","disabledSkills","setDisabledSkills","k","bot","hasPassives","Subtitle","ToggleButton","checked","onChange","event","currentTarget","delete","add","Stack","direction","gap","clamp","monsterHotkeys","Game","game","solveGame","timeTravel","hint","onMenu","lastAttacks","isLogShown","setShowLog","forceUpdate","setValue","useForceRerender","useEffect","ingame","handleCloseLog","playerSkills","isPlayerAlive","areMonstersAlive","endGame","pressed","onUp","pressedKeys","updatePressedKeys","downHandler","key","set","upHandler","useCallback","window","addEventListener","removeEventListener","usePressedKeys","valNum","parseInt","save","undo","redo","flatMap","blob","Blob","saveAs","Date","now","Col","sm","md","Player","origin","phase","zip","stats","xs","Enemy","Modal","onHide","scrollable","centered","closeButton","s","Footer","SingleGame","onGameEnd","setGame","setRedo","gameState","playState","timeTravelObj","newRedo","pop","slice","iterations","maxBy","LoadScreen","onLoad","loadError","setLoadError","load","data","playRaw","fileData","files","reader","FileReader","onloadend","ev","result","readAsText","rawData","Alert","Group","Control","accept","muted","rows","placeholder","App","useMachine","gameMenuMachine","devTools","send","matches","Object","keys","main","on","quick","makeGameNew","context","singleContext","seed","single","training","arcade","survivalContext","arcadeContext","victories","otherEnemy","firstState","makeGameNextLevel","survival","lastState","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","container","document","getElementById","createRoot","render","StrictMode","serviceWorkerRegistration","effectFun","fun","params","oldState","applyPoison","currentState","pipe","changeStatPlayer","changeStatMonster","newState","addBotEffect","engineFunctions","_origin","changeStatusPlayer","o","changeStatusMonster","effectFunRepo","changeDistance","attackMonster","modifyPlayerStamina","gameTarget","attackPlayer","addEnemy","_m","updateMonster","override","updatePlayer","curr","damage","afterDefence","afterArmor","armorSpent","afterBleed","f","updateStatus","removeMonster","currPlay","currSnap","modify","updatePlayerStat","addEotEffect","effect","statsRepository","turnDeterministicRng","randPerTurn","monsterSeed","monsterChance","floating","used","playerPassives","playerGameStats","enemyGameStats","toIndexableString","version","reduceFuns","funs","priorityBonus","monsterId","targetMonster","isStunnedPlayer","isStunnedMonster","startState","parameters","callEffectFun","extractFunction","effectEotCleanup","effectDead","d","lastTurnState","usedSkill","initialState","preBotPlay","preBotState","postBotPlay","postBotState","entitiesBot","eff","postEntitiesBotPlay","postEntitiesBotState","turnRng","turnFunctions","roll","concat","entitiesEot","playerEotEffects","enemiesEotEffects","postPlayerEotPlay","postPlayerEotState","postEotPlay","postEotState","postCleanup","postCleanupState","scoreGame","hpLoss","staminaLoss","Array","num","Infinity","t","globalsDefault","globalThis","theThis","__buildmancer","isArray","repo","entries","isDebug","process","inspect","server","WebSocket","Server","port","toMenu","MENU","initial","entry","WIN","LOSE","win","lose","PLAYER","ENCOUNTER","cond","internal","victory","defeat","puzzle","SELECTED","COMPLETE","complete","NEXT","SELECT","LOAD","makeArcadeContext","makeSurvivalContext","makeSingleContext","createMachine","tsTypes","QUICK","SINGLE","TRAINING","ARCADE","SURVIVAL","guards","isFinal","bumpVictories","assign","_event","bumpScore","reset","c","interpret","onTransition","start","isLocalhost","Boolean","location","hostname","match","register","navigator","URL","href","swUrl","fetch","headers","response","contentType","get","indexOf","serviceWorker","ready","registration","unregister","reload","registerValidSW","catch","checkValidServiceWorker","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","error"],"mappings":"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B2C,QAAS3C,EAAS,GAClB4C,OAAQxC,IAIZ,CACE,CACE6C,KAAM,CACJC,KAAM,QAERK,QAAS,CACP,CACEF,QAAS,QACTC,QAAS,QACTG,SAAU,EACVC,WAAW,EACXH,QAAS,CAACC,YAAc,CAAC,iBAAkB,CAAEvD,OAAQ,MACrD0D,MAAOhE,MAGXoE,MAAO,CAAC,CAAC,GAAI,CAAC,GAAI,CAAC,GAAI,CAAC,GAAI,CAAC,KAE/B,CACEzB,GAAItC,EAAS,GACbgE,SAAU,EACVvB,MAAOzC,EAAS,GAChB0C,OAAQ1C,EAAS,GACjB2C,QAAS3C,EAAS,GAClB4C,OAAQxC,KAKRe,EAAQ,CACZ,QACA,QACA,SACA,MACA,QACA,UACA,QACA,QACA,QACA,UACA,SACA,SACA,QACA,WACA,QACA,QACA,SACA,QACA,SACA,SACA,SACA,SACA,UACA,SACA,SACA,SACA,OACA,QACA,OACA,QACA,MACA,SACA,SACA,OACA,UACA,QACA,UACA,SACA,UACA,QACA,SACA,SACA,UACA,SACA,OACA,QACA,SACA,SACA,UACA,QACA,OACA,UACA,OACA,SACA,SACA,QACA,UACA,SACA,SACA,OACA,QACA,QACA,SACA,QACA,QACA,SACA,SACA,OACA,OACA,SACA,QACA,QACA,UACA,SACA,QACA,UACA,UACA,UACA,WACA,QACA,WACA,QACA,SACA,SACA,OACA,SACA,QACA,QACA,OACA,WACA,SACA,QACA,UACA,SACA,UACA,SACA,SACA,SACA,SACA,QACA,QACA,OACA,OACA,QACA,QACA,WACA,QACA,UACA,SACA,UACA,QACA,OACA,OACA,OACA,SACA,WACA,OACA,OACA,QACA,MACA,SACA,OACA,UACA,QACA,UACA,SACA,MACA,UACA,QACA,SACA,QACA,SACA,QACA,QACA,QACA,QACA,SACA,QACA,QACA,SACA,QACA,OACA,QACA,SACA,SACA,UACA,QACA,QACA,QACA,OACA,QACA,OACA,QACA,SACA,SACA,QACA,QACA,QACA,QACA,QACA,UACA,UACA,QACA,QACA,QACA,U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","file":"static/js/main.78dfb09a.chunk.js","sourcesContent":["import { Chance } from 'chance';\nimport { Subtract } from 'type-fest/source/internal';\nimport { globals, updateGlobals } from './modding';\nimport {\n  Build,\n  Distances,\n  Item,\n  Player,\n  PlayerStats,\n  Ranges,\n  Snapshot,\n  UpTo,\n  Play,\n  effectFunCall,\n  Stat,\n  Status,\n  BuildRepository,\n  EnemyRepository,\n  EnemyInfo,\n} from './types';\n\nexport const startState = (play: Play): Snapshot => play.states[0];\nexport const previousState = (play: Play): Snapshot =>\n  play.states[play.states.length - 1];\n\nexport const makeRange = (...number: UpTo<Subtract<Distances, 1>>[]) =>\n  [...new Set(number)] as Ranges;\nexport const allRanges = makeRange(0, 1, 2, 3, 4);\nexport const selfRange = allRanges;\n\nexport const makeStat = (amount: number, max: number = amount): Stat => ({\n  current: amount,\n  max,\n});\nexport const defaultStatus: Status = {\n  dodge: { active: false },\n  armor: { amount: 0 },\n  bleed: { turns: 0 },\n  stun: { active: false },\n};\n\nexport const randomEnemy = (): EnemyInfo => new Chance().pickone(enemies);\nexport const dummyEnemy = (): EnemyInfo => globals().trainingEnemy;\n\nexport const randomName = () => names[Math.floor(Math.random() * names.length)];\n\nexport const randomBuild = (\n  rng: Chance.Chance,\n  buildOverride?: Partial<Build>\n) => ({\n  debug: build.debug[globals().debug ? 1 : 0],\n  basic: rng.pickone(build.basic),\n  class: rng.pickone(build.class),\n  skill: rng.pickone(build.skill),\n  armor: rng.pickone(build.armor),\n  weapon: rng.pickone(build.weapon),\n  offhand: rng.pickone(build.offhand),\n  footwear: rng.pickone(build.footwear),\n  headgear: rng.pickone(build.headgear),\n  charm: rng.pickone(build.charm),\n  consumable: rng.pickone(build.consumable),\n  ...buildOverride,\n});\n\nexport const playerStatsDefault: PlayerStats = {\n  hp: makeStat(10),\n  stamina: makeStat(6),\n  staminaPerTurn: makeStat(2),\n  speed: makeStat(0),\n  attack: makeStat(0),\n  defence: makeStat(0),\n  status: defaultStatus,\n};\n\nexport const randomPlayer = (\n  statsOverride?: PlayerStats,\n  buildOverride?: Partial<Build>\n): [Player, PlayerStats] => {\n  const rng = new Chance();\n  return [\n    {\n      id: rng.string(),\n      lore: {\n        name: randomName(),\n        age: rng.age(),\n      },\n      build: randomBuild(rng, buildOverride),\n    },\n    {\n      ...playerStatsDefault,\n      ...statsOverride,\n    },\n  ];\n};\n\nconst weapons: Item[] = [\n  {\n    display: 'Sword',\n    tooltip: 'All-rounder',\n    effects: [\n      {\n        display: 'Slash',\n        tooltip: 'Swings at the enemy',\n        effects: [effectFunCall(['Basic:Attack', { amount: 2 }])],\n        priority: 3,\n        dodgeable: true,\n        stamina: 2,\n        range: makeRange(0, 1),\n      },\n      {\n        display: 'Pommel Hit',\n        tooltip: 'Deals a quick blow',\n        effects: [effectFunCall(['Basic:Attack', { amount: 2 }])],\n        priority: 2,\n        dodgeable: true,\n        stamina: 2,\n        range: makeRange(0),\n      },\n      {\n        display: 'Overhead Slice',\n        tooltip: 'Moves into melee and deals a heavy blow',\n        effects: [\n          effectFunCall(['Basic:Move', { amount: -1 }]),\n          effectFunCall(['Basic:Attack', { amount: 4 }]),\n        ],\n        priority: 4,\n        dodgeable: true,\n        stamina: 3,\n        range: makeRange(1),\n      },\n    ],\n  },\n  {\n    display: 'Greatsword',\n    tooltip: 'Specialized in big damage',\n    effects: [\n      {\n        display: 'Rend',\n        tooltip: 'Swings at the enemy',\n        effects: [effectFunCall(['Basic:Attack', { amount: 3 }])],\n        priority: 4,\n        dodgeable: true,\n        stamina: 4,\n        range: makeRange(0, 1),\n      },\n      {\n        display: 'Feint',\n        tooltip: 'Quick step backwards',\n        effects: [effectFunCall(['Basic:Move', { amount: 1 }])],\n        priority: 1,\n        dodgeable: false,\n        stamina: 1,\n        range: makeRange(0, 1),\n      },\n      {\n        display: 'Earth Flattener',\n        tooltip: 'Charges a monstruous stunning blow',\n        effects: [\n          effectFunCall(['Basic:Move', { amount: 5 }]),\n          effectFunCall('Effect:Stun'),\n        ],\n        priority: 4,\n        dodgeable: true,\n        stamina: 6,\n        range: makeRange(1),\n      },\n    ],\n  },\n  {\n    display: 'Twinblades',\n    tooltip: 'Specialized in mobility',\n    effects: [\n      {\n        display: 'Swoosh',\n        tooltip: 'Deals a strike and moves back',\n        effects: [\n          effectFunCall(['Basic:Attack', { amount: 2 }]),\n          effectFunCall(['Basic:Move', { amount: 1 }]),\n        ],\n        priority: 2,\n        dodgeable: true,\n        stamina: 2,\n        range: makeRange(0, 1),\n      },\n      {\n        display: 'Fiuuum',\n        tooltip: 'Jump attack',\n        effects: [\n          effectFunCall(['Basic:Move', { amount: -2 }]),\n          effectFunCall(['Basic:Attack', { amount: 3 }]),\n        ],\n        priority: 4,\n        dodgeable: true,\n        stamina: 3,\n        range: makeRange(2, 3),\n      },\n      {\n        display: 'SwishSwishSwishSwish',\n        tooltip: 'Deals multiple low damage hits',\n        effects: [\n          effectFunCall(['Basic:Attack', { amount: 1 }]),\n          effectFunCall(['Basic:Attack', { amount: 1 }]),\n          effectFunCall(['Basic:Attack', { amount: 1 }]),\n          effectFunCall(['Basic:Attack', { amount: 1 }]),\n        ],\n        priority: 3,\n        dodgeable: true,\n        stamina: 4,\n        range: makeRange(0),\n      },\n    ],\n  },\n  {\n    display: 'Katana',\n    tooltip: 'Specialized in bleeding',\n    effects: [\n      {\n        display: 'Slice & Dice',\n        tooltip: 'Deals two swift strikes',\n        effects: [\n          effectFunCall(['Basic:Attack', { amount: 1 }]),\n          effectFunCall(['Basic:Attack', { amount: 1 }]),\n        ],\n        priority: 3,\n        dodgeable: true,\n        stamina: 2,\n        range: makeRange(0, 1),\n      },\n      {\n        display: 'Wakizashi',\n        tooltip: 'Short sword with a quick attack causing bleeding',\n        effects: [\n          effectFunCall(['Basic:Attack', { amount: 1 }]),\n          effectFunCall(['Effect:Bleed', { target: 'Monster', turns: 2 }]),\n        ],\n        priority: 2,\n        dodgeable: true,\n        stamina: 4,\n        range: makeRange(0, 1),\n      },\n      {\n        display: 'Unsheathe',\n        tooltip: 'Dodges the next attack and deals damage',\n        effects: [\n          effectFunCall('Effect:Dodge'),\n          effectFunCall(['Basic:Attack', { amount: 3 }]),\n        ],\n        priority: 1,\n        dodgeable: true,\n        stamina: 4,\n        range: makeRange(0),\n      },\n    ],\n  },\n  {\n    display: 'Axe',\n    tooltip: 'Specialized in debuffs',\n    effects: [\n      {\n        display: 'Chop',\n        tooltip: 'A slow but reliable attack',\n        effects: [effectFunCall(['Basic:Attack', { amount: 2 }])],\n        priority: 4,\n        dodgeable: true,\n        stamina: 3,\n        range: makeRange(0, 1),\n      },\n      {\n        display: 'Aim for the head!',\n        tooltip: 'Cripples the monster',\n        effects: [\n          effectFunCall(['Effect:Defence', { target: 'Monster', amount: -1 }]),\n          effectFunCall(['Effect:Bleed', { target: 'Player', turns: 3 }]),\n        ],\n        priority: 4,\n        dodgeable: true,\n        stamina: 5,\n        range: makeRange(1),\n      },\n      {\n        display: 'Target the limbs!',\n        tooltip: 'Weakens the monster',\n        effects: [\n          effectFunCall(['Effect:Attack', { target: 'Monster', amount: -1 }]),\n          effectFunCall(['Effect:Bleed', { target: 'Player', turns: 3 }]),\n        ],\n        priority: 4,\n        dodgeable: true,\n        stamina: 5,\n        range: makeRange(1),\n      },\n    ],\n  },\n  {\n    display: 'Lance',\n    tooltip: 'Specialized in mid-range attacks',\n    effects: [\n      {\n        display: 'Pierce',\n        tooltip: 'Pokes the enemy',\n        effects: [effectFunCall(['Basic:Attack', { amount: 2 }])],\n        priority: 3,\n        dodgeable: true,\n        stamina: 2,\n        range: makeRange(0, 1, 2),\n      },\n      {\n        display: 'Charge!!',\n        tooltip: 'Runs towards the enemy to deal a massive blow',\n        effects: [\n          effectFunCall(['Basic:Move', { amount: -5 }]),\n          effectFunCall(['Basic:Attack', { amount: 4 }]),\n        ],\n        priority: 1,\n        dodgeable: true,\n        stamina: 3,\n        range: makeRange(4),\n      },\n    ],\n  },\n  {\n    display: 'Hammer',\n    tooltip: 'Specialized in stunning',\n    effects: [\n      {\n        display: 'Head Banger',\n        tooltip: 'Hits the enemy in the head',\n        effects: [\n          effectFunCall(['Basic:Attack', { amount: 2 }]),\n          effectFunCall('Effect:Stun'),\n        ],\n        priority: 4,\n        dodgeable: true,\n        stamina: 4,\n        range: makeRange(0),\n      },\n      {\n        display: 'Large swing',\n        tooltip: 'Uses the inertia of the hammer to safely advance',\n        effects: [\n          effectFunCall(['Basic:Move', { amount: -3 }]),\n          effectFunCall('Effect:Stun'),\n        ],\n        priority: 3,\n        dodgeable: true,\n        stamina: 3,\n        range: makeRange(1, 2, 3),\n      },\n      {\n        display: 'Go for the ankles',\n        tooltip: 'Slows down the enemy',\n        effects: [\n          effectFunCall(['Effect:Speed', { target: 'Monster', amount: -1 }]),\n          effectFunCall('Effect:Stun'),\n        ],\n        priority: 4,\n        dodgeable: true,\n        stamina: 6,\n        range: makeRange(1),\n      },\n    ],\n  },\n  {\n    display: 'Finger Claw',\n    tooltip: 'Specialized in poison',\n    effects: [\n      {\n        display: 'Caress',\n        tooltip: 'Applies poison to the monster',\n        effects: [\n          effectFunCall(['Effect:Poison', { target: 'Monster', turns: 2 }]),\n        ],\n        priority: 3,\n        dodgeable: false,\n        stamina: 2,\n        range: makeRange(0),\n      },\n      {\n        display: 'Backflip',\n        tooltip: 'Dodges an attack and moves backward',\n        effects: [\n          effectFunCall('Effect:Dodge'),\n          effectFunCall(['Basic:Move', { amount: 2 }]),\n        ],\n        priority: 1,\n        dodgeable: false,\n        stamina: 4,\n        range: makeRange(0, 1),\n      },\n    ],\n  },\n  {\n    display: 'Bow',\n    tooltip: 'Specialized in ranged attacks',\n    effects: [\n      {\n        display: 'Relaxed Shot',\n        tooltip: 'Shoots an arrow',\n        effects: [effectFunCall(['Basic:Attack', { amount: 2 }])],\n        priority: 3,\n        dodgeable: true,\n        stamina: 2,\n        range: makeRange(3, 4),\n      },\n      {\n        display: 'Power Draw',\n        tooltip: 'Shoots your strongest arrow and makes you weaker',\n        effects: [\n          effectFunCall(['Basic:Attack', { amount: 6 }]),\n          effectFunCall(['Effect:Attack', { target: 'Player', amount: -1 }]),\n        ],\n        priority: 3,\n        dodgeable: true,\n        stamina: 4,\n        range: makeRange(4),\n      },\n    ],\n  },\n  {\n    display: 'Magic Staff',\n    tooltip: 'Specialized in multiple attacks',\n    effects: [\n      {\n        display: 'Bolt',\n        tooltip: 'Shoots a low damage bolt',\n        effects: [effectFunCall(['Basic:Attack', { amount: 1 }])],\n        priority: 3,\n        dodgeable: true,\n        stamina: 3,\n        range: allRanges,\n      },\n      {\n        display: 'Pew Pew Pew',\n        tooltip: 'Shoots a barrage of bolts',\n        effects: [\n          effectFunCall(['Basic:Attack', { amount: 1 }]),\n          effectFunCall(['Basic:Attack', { amount: 1 }]),\n          effectFunCall(['Basic:Attack', { amount: 1 }]),\n          effectFunCall(['Basic:Attack', { amount: 1 }]),\n        ],\n        priority: 4,\n        dodgeable: true,\n        stamina: 8,\n        range: makeRange(2, 3, 4),\n      },\n    ],\n  },\n];\n\nexport const build: BuildRepository = {\n  debug: [\n    {\n      display: 'None',\n    },\n    {\n      display: 'Debug',\n      effects: [\n        {\n          display: 'GGWP',\n          tooltip: 'Wins the game',\n          priority: 1,\n          dodgeable: false,\n          stamina: 0,\n          range: allRanges,\n          effects: [effectFunCall('Debug:GGWP')],\n        },\n        {\n          display: 'SUDOKU',\n          tooltip: 'Loses the game',\n          priority: 1,\n          dodgeable: false,\n          stamina: 0,\n          range: allRanges,\n          effects: [effectFunCall('Debug:Sudoku')],\n        },\n      ],\n    },\n  ],\n  basic: [\n    {\n      display: 'Basic',\n      effects: [\n        {\n          display: 'Rest',\n          tooltip: 'Skip the turn and restore stamina',\n          priority: 4,\n          dodgeable: false,\n          stamina: 0,\n          range: selfRange,\n          effects: [effectFunCall('Basic:Rest')],\n        },\n        {\n          display: 'Advance',\n          tooltip: 'Move closer',\n          priority: 4,\n          dodgeable: false,\n          stamina: 1,\n          range: selfRange,\n          effects: [effectFunCall(['Basic:Move', { amount: -1 }])],\n        },\n        {\n          display: 'Retreat',\n          tooltip: 'Move farther',\n          effects: [effectFunCall(['Basic:Move', { amount: 1 }])],\n          priority: 4,\n          dodgeable: false,\n          stamina: 1,\n          range: selfRange,\n        },\n      ],\n    },\n  ],\n  class: [\n    {\n      display: 'Warrior',\n      passives: ['+Attack', '+Defence', '+Stamina'],\n      effects: [\n        {\n          display: 'Well placed kick',\n          tooltip: 'Last resource attack',\n          effects: [effectFunCall(['Basic:Attack', { amount: 2 }])],\n          priority: 2,\n          dodgeable: true,\n          stamina: 1,\n          range: makeRange(0, 1),\n        },\n      ],\n    },\n    {\n      display: 'Rogue',\n      passives: ['+Speed', '+Speed', '-Attack', '-Stamina'],\n      effects: [\n        {\n          display: 'Strategic Retreat',\n          tooltip: 'Jump backwards',\n          effects: [effectFunCall(['Basic:Move', { amount: 999 }])],\n          priority: 2,\n          dodgeable: false,\n          stamina: 1,\n          range: selfRange,\n        },\n      ],\n    },\n    {\n      display: 'Berserk',\n      passives: [\n        '+Attack',\n        '+Attack',\n        '+Attack',\n        '-Defence',\n        '-Defence',\n        '-Health',\n      ],\n      effects: [\n        {\n          display: 'All or Nothing!',\n          tooltip: 'Deals massive damage and leaves you weakened',\n          priority: 2,\n          dodgeable: true,\n          stamina: 0,\n          range: makeRange(0, 1, 2),\n          amount: 1,\n          effects: [\n            effectFunCall(['Basic:Move', { amount: -5 }]),\n            effectFunCall(['Basic:Attack', { amount: 2 }]),\n            effectFunCall(['Basic:Attack', { amount: 2 }]),\n            effectFunCall(['Basic:Attack', { amount: 2 }]),\n            effectFunCall(['Basic:Attack', { amount: 2 }]),\n            effectFunCall(['Effect:Defence', { target: 'Player', amount: -3 }]),\n            effectFunCall(['Effect:Speed', { target: 'Player', amount: -1 }]),\n          ],\n        },\n      ],\n    },\n    {\n      display: 'Mage',\n      passives: ['+StaPerTurn', '+Stamina', '-Health', '-Speed'],\n      effects: [\n        {\n          display: 'Just having a thought',\n          tooltip: 'Restores stamina for the next action',\n          priority: 4,\n          dodgeable: false,\n          amount: 2,\n          stamina: 0,\n          range: selfRange,\n          effects: [effectFunCall(['Basic:Stamina', { amount: 999 }])],\n        },\n      ],\n    },\n    {\n      display: 'Cleric',\n      passives: ['+Defence', '+Stamina'],\n      effects: [\n        {\n          display: 'Minor Healing',\n          tooltip: 'Restores some HP',\n          amount: 3,\n          effects: [effectFunCall(['Basic:HP', { amount: 5 }])],\n          priority: 3,\n          dodgeable: false,\n          stamina: 3,\n          range: selfRange,\n        },\n      ],\n    },\n  ],\n  skill: [\n    {\n      display: 'Sturdy',\n      effects: [\n        {\n          display: 'Endure the pain',\n          tooltip: 'Blocks some damage',\n          effects: [effectFunCall(['Effect:Armor', { amount: 2 }])],\n          priority: 1,\n          dodgeable: false,\n          stamina: 2,\n          range: selfRange,\n        },\n      ],\n    },\n    {\n      display: 'Nimble',\n      effects: [\n        {\n          display: 'Dodge',\n          tooltip: 'Avoid one enemy attack',\n          effects: [effectFunCall('Effect:Dodge')],\n          priority: 2,\n          dodgeable: false,\n          stamina: 4,\n          range: selfRange,\n        },\n      ],\n    },\n    {\n      display: 'Resourceful',\n      effects: [\n        {\n          display: 'Dodge this!',\n          tooltip: 'Throws a stone',\n          effects: [effectFunCall(['Basic:Attack', { amount: 2 }])],\n          priority: 3,\n          dodgeable: true,\n          stamina: 3,\n          range: makeRange(3, 4),\n        },\n      ],\n    },\n  ],\n  weapon: weapons,\n  offhand: [\n    {\n      display: 'Hook',\n      passives: ['-Stamina'],\n      effects: [\n        {\n          display: 'Get over here!',\n          tooltip: 'Moves enemy closer',\n          effects: [\n            effectFunCall(['Basic:Attack', { amount: 3 }]),\n            effectFunCall(['Basic:Move', { amount: -2 }]),\n          ],\n          priority: 4,\n          dodgeable: true,\n          stamina: 3,\n          range: makeRange(2, 3, 4),\n        },\n      ],\n    },\n    {\n      display: 'Parry Dagger',\n      passives: ['-Defence'],\n      effects: [\n        {\n          display: 'Get over here!',\n          tooltip: 'Avoids a melee attack',\n          effects: [effectFunCall('Effect:Dodge')],\n          priority: 2,\n          dodgeable: false,\n          stamina: 2,\n          range: makeRange(1),\n        },\n      ],\n    },\n    {\n      display: 'Shield',\n      passives: ['+Defence', '-Speed'],\n      effects: [\n        {\n          display: 'Not today!',\n          tooltip: 'Blocks a lot of damage',\n          effects: [effectFunCall(['Effect:Armor', { amount: 5 }])],\n          priority: 2,\n          dodgeable: false,\n          stamina: 4,\n          range: selfRange,\n        },\n      ],\n    },\n    {\n      display: 'Focus',\n      passives: ['+Speed', '+StaPerTurn'],\n    },\n    {\n      display: 'Wand',\n      passives: ['-Defence', '-StaPerTurn'],\n      effects: [\n        {\n          display: 'Magic Bolt',\n          tooltip: 'Shoots mana bolts until the caster faints',\n          effects: [effectFunCall('Wand:MagicBolt')],\n          priority: 3,\n          dodgeable: true,\n          stamina: 1,\n          range: makeRange(3, 4),\n        },\n      ],\n    },\n  ],\n  armor: [\n    {\n      display: 'Heavy',\n      passives: [\n        '+Defence',\n        '+Defence',\n        '+Defence',\n        '+Defence',\n        '-Speed',\n        '-Speed',\n        '-StaPerTurn',\n      ],\n    },\n    {\n      display: 'Medium',\n      passives: ['+Defence', '+Defence', '-StaPerTurn'],\n    },\n    {\n      display: 'Light',\n      passives: ['+Defence'],\n    },\n    {\n      display: 'None',\n      passives: ['+Speed'],\n    },\n  ],\n  headgear: [\n    {\n      display: 'Helm',\n      passives: ['+Defence', '+Defence', '-Speed', '-StaPerTurn'],\n      tooltip: 'Big protection for slow combatants',\n    },\n    {\n      display: 'Feather Cap',\n      passives: ['+StaPerTurn', '+Stamina'],\n      tooltip: \"Makes you feel energized, doesn't it?\",\n    },\n    {\n      display: 'Mage Hat',\n      passives: ['-StaPerTurn'],\n      tooltip: 'Small tricks for big plays',\n      effects: [\n        {\n          display: 'Flash!',\n          tooltip: 'Blinks you to a better position',\n          effects: [\n            effectFunCall(['Basic:Attack', { amount: 1 }]),\n            effectFunCall(['Basic:Move', { amount: 2 }]),\n          ],\n          priority: 3,\n          dodgeable: true,\n          stamina: 4,\n          range: makeRange(1, 2),\n        },\n      ],\n    },\n  ],\n  footwear: [\n    {\n      display: 'Slippers of Dooooodge!',\n      tooltip: 'Allows you to dodge attacks',\n      passives: ['-Stamina'],\n      effects: [\n        {\n          display: 'Advanced Dodge',\n          tooltip: 'Avoid 1 attack',\n          effects: [effectFunCall('Effect:Dodge')],\n          priority: 1,\n          dodgeable: false,\n          stamina: 3,\n          range: selfRange,\n        },\n      ],\n    },\n    {\n      display: 'Boots of Flight',\n      tooltip: 'Avoid your enemies',\n      passives: ['-StaPerTurn', '-Defence'],\n      eot: [\n        {\n          display: 'Flight!',\n          tooltip: 'Increases distance every turn',\n          priority: 0,\n          dodgeable: false,\n          range: allRanges,\n          effects: [effectFunCall('BootsOfFlight:EOT')],\n        },\n      ],\n    },\n    {\n      display: 'Greaves of Stability',\n      tooltip: 'Extra resilient',\n      passives: ['+Defence', '-Speed'],\n      effects: [\n        {\n          display: 'Dig your heels',\n          tooltip: 'Resists damage',\n          effects: [effectFunCall(['Effect:Armor', { amount: 3 }])],\n          priority: 1,\n          dodgeable: false,\n          stamina: 4,\n          range: selfRange,\n        },\n      ],\n    },\n  ],\n  charm: [\n    {\n      display: 'of Health',\n      passives: ['+Health', '-Speed'],\n      tooltip: 'Increases your maximum health',\n    },\n    {\n      display: 'of Haste',\n      passives: ['+StaPerTurn', '-Stamina'],\n      tooltip: 'Increases your maximum stamina regeneration',\n    },\n    {\n      display: 'of Resilience',\n      passives: ['+Stamina', '-StaPerTurn'],\n      tooltip: 'Increases your maximum stamina',\n    },\n    {\n      display: 'of Strength',\n      passives: ['+Attack', '-Health', '-StaPerTurn'],\n      tooltip: 'Increases your maximum attack',\n    },\n    {\n      display: 'of Swiftness',\n      passives: ['+Speed', '-Attack'],\n      tooltip: 'Increases your maximum speed',\n    },\n    {\n      display: 'of Defence',\n      passives: ['+Defence', '-Stamina', '-Speed'],\n      tooltip: 'Increases your maximum defence',\n    },\n  ],\n  consumable: [\n    {\n      display: 'Healing Potion',\n      effects: [\n        {\n          display: 'Healing!',\n          tooltip: 'Restores some HP',\n          effects: [effectFunCall(['Basic:HP', { amount: 4 }])],\n          priority: 4,\n          dodgeable: false,\n          stamina: 5,\n          amount: 3,\n          range: selfRange,\n        },\n      ],\n    },\n    {\n      display: 'Pot of Razors',\n      effects: [\n        {\n          display: 'Throw pot',\n          tooltip: 'Causes bleeding',\n          amount: 2,\n          effects: [\n            effectFunCall(['Effect:Bleed', { target: 'Monster', turns: 3 }]),\n          ],\n          priority: 4,\n          dodgeable: true,\n          stamina: 5,\n          range: selfRange,\n        },\n      ],\n    },\n    {\n      display: 'Life Bubble',\n      effects: [\n        {\n          display: 'Activate Bubble',\n          tooltip: 'Protects against a single source of damage this turn',\n          effects: [effectFunCall('Effect:Dodge')],\n          priority: 1,\n          dodgeable: false,\n          stamina: 1,\n          amount: 1,\n          range: selfRange,\n        },\n      ],\n    },\n    {\n      display: 'Pet Rock',\n      effects: [\n        {\n          display: 'Rock, to me!',\n          tooltip: 'Reduces damage',\n          effects: [effectFunCall(['Effect:Armor', { amount: 3 }])],\n          priority: 2,\n          dodgeable: false,\n          stamina: 3,\n          amount: 3,\n          range: selfRange,\n        },\n      ],\n    },\n  ],\n};\n\nexport const enemies: EnemyRepository = [\n  [\n    {\n      lore: {\n        name: 'Sacapuntas',\n      },\n      rolls: [\n        [0, 1, 2, 1, 0],\n        [0, 1, 0, 0, 0],\n        [0, 0, 0, 0, 0],\n        [0, 0, 0, 0, 0],\n        [0, 1, 2, 1, 0, 0],\n      ],\n      effects: [\n        {\n          display: 'Swipe',\n          tooltip: 'Swipe',\n          priority: 3,\n          dodgeable: true,\n          effects: [effectFunCall(['Monster:Attack', { amount: 3 }])],\n          range: makeRange(0, 1),\n        },\n\n        {\n          display: 'Roar',\n          tooltip: 'Roar',\n          priority: 1,\n          dodgeable: true,\n          effects: [effectFunCall(['Basic:Stamina', { amount: -5 }])],\n          range: allRanges,\n        },\n        {\n          display: 'Jump',\n          tooltip: 'Jump',\n          priority: 2,\n          dodgeable: true,\n          effects: [effectFunCall(['Monster:Move', { amount: -4 }])],\n          range: makeRange(2, 3, 4),\n        },\n      ],\n    },\n    {\n      hp: makeStat(25),\n      distance: 4,\n      speed: makeStat(0),\n      attack: makeStat(0),\n      defence: makeStat(0),\n      status: defaultStatus,\n    },\n  ],\n  [\n    {\n      lore: {\n        name: 'Toro',\n      },\n      effects: [\n        {\n          display: 'Swipe',\n          tooltip: 'Swipe',\n          priority: 3,\n          dodgeable: true,\n          effects: [effectFunCall(['Monster:Attack', { amount: 3 }])],\n          range: allRanges,\n        },\n        {\n          display: 'Jump',\n          tooltip: 'Jump',\n          priority: 2,\n          dodgeable: true,\n          effects: [effectFunCall(['Monster:Move', { amount: -4 }])],\n          range: makeRange(2, 3, 4),\n        },\n      ],\n      rolls: [\n        [0, 0, 0, 0, 0],\n        [0, 0, 0, 0, 0],\n        [1, 1, 0, 0, 0],\n        [1, 1, 1, 0, 0],\n        [1, 1, 1, 1, 0],\n      ],\n    },\n    {\n      hp: makeStat(22),\n      distance: 4,\n      speed: makeStat(0),\n      attack: makeStat(0),\n      defence: makeStat(0),\n      status: defaultStatus,\n    },\n  ],\n  [\n    {\n      lore: {\n        name: 'Summoner',\n      },\n      effects: [\n        {\n          display: 'Swipe',\n          tooltip: 'Swipe',\n          priority: 3,\n          dodgeable: true,\n          effects: [effectFunCall(['Monster:Attack', { amount: 3 }])],\n          range: makeRange(0, 1),\n        },\n\n        {\n          display: 'Retreat',\n          tooltip: 'Jump',\n          priority: 3,\n          dodgeable: true,\n          effects: [effectFunCall(['Monster:Move', { amount: 5 }])],\n          range: allRanges,\n        },\n        {\n          display: 'Summon Smol',\n          tooltip: 'Summon Smol',\n          priority: 4,\n          dodgeable: true,\n          effects: [effectFunCall(['Monster:Summon', { enemy: 4 }])],\n          range: makeRange(2, 3, 4),\n        },\n\n        {\n          display: 'Spit',\n          tooltip: 'Ranged attack',\n          priority: 4,\n          dodgeable: true,\n          effects: [effectFunCall(['Monster:Attack', { amount: 2 }])],\n          range: makeRange(2, 3, 4),\n        },\n      ],\n      rolls: [\n        [1, 1, 1, 0, 0],\n        [1, 1, 1, 0, 0],\n        [1, 1, 3, 3, 0],\n        [2, 3, 3, 3, 0],\n        [2, 2, 3, 3, 0],\n      ],\n    },\n    {\n      hp: makeStat(30),\n      distance: 4,\n      speed: makeStat(0),\n      attack: makeStat(0),\n      defence: makeStat(0),\n      status: defaultStatus,\n    },\n  ],\n  [\n    {\n      lore: {\n        name: 'Body',\n      },\n      effects: [\n        {\n          display: 'Swipe',\n          tooltip: 'Swipe',\n          priority: 3,\n          dodgeable: true,\n          effects: [effectFunCall(['Monster:Attack', { amount: 3 }])],\n          range: makeRange(),\n        },\n      ],\n      rolls: [[0], [0], [0], [0], [0]],\n    },\n    {\n      hp: makeStat(300),\n      distance: 0,\n      speed: makeStat(0),\n      attack: makeStat(0),\n      defence: makeStat(0),\n      status: defaultStatus,\n    },\n  ],\n\n  [\n    {\n      lore: {\n        name: 'Smol',\n      },\n      effects: [\n        {\n          display: 'Swipe',\n          tooltip: 'Swipe',\n          priority: 3,\n          dodgeable: true,\n          effects: [effectFunCall(['Monster:Attack', { amount: 3 }])],\n          range: makeRange(),\n        },\n      ],\n      rolls: [[0], [0], [0], [0], [0]],\n    },\n    {\n      hp: makeStat(5),\n      distance: 0,\n      speed: makeStat(0),\n      attack: makeStat(0),\n      defence: makeStat(0),\n      status: defaultStatus,\n    },\n  ],\n];\n\nconst names = [\n  'Lydan',\n  'Syrin',\n  'Ptorik',\n  'Joz',\n  'Varog',\n  'Gethrod',\n  'Hezra',\n  'Feron',\n  'Ophni',\n  'Colborn',\n  'Fintis',\n  'Gatlin',\n  'Jinto',\n  'Hagalbar',\n  'Krinn',\n  'Lenox',\n  'Revvyn',\n  'Hodus',\n  'Dimian',\n  'Paskel',\n  'Kontas',\n  'Weston',\n  'Azamarr',\n  'Jather',\n  'Tekren',\n  'Jareth',\n  'Adon',\n  'Zaden',\n  'Eune',\n  'Graff',\n  'Tez',\n  'Jessop',\n  'Gunnar',\n  'Pike',\n  'Domnhar',\n  'Baske',\n  'Jerrick',\n  'Mavrek',\n  'Riordan',\n  'Wulfe',\n  'Straus',\n  'Tyvrik',\n  'Henndar',\n  'Favroe',\n  'Whit',\n  'Jaris',\n  'Renham',\n  'Kagran',\n  'Lassrin',\n  'Vadim',\n  'Arlo',\n  'Quintis',\n  'Vale',\n  'Caelan',\n  'Yorjan',\n  'Khron',\n  'Ishmael',\n  'Jakrin',\n  'Fangar',\n  'Roux',\n  'Baxar',\n  'Hawke',\n  'Gatlen',\n  'Barak',\n  'Nazim',\n  'Kadric',\n  'Paquin',\n  'Kent',\n  'Moki',\n  'Rankar',\n  'Lothe',\n  'Ryven',\n  'Clawsen',\n  'Pakker',\n  'Embre',\n  'Cassian',\n  'Verssek',\n  'Dagfinn',\n  'Ebraheim',\n  'Nesso',\n  'Eldermar',\n  'Rivik',\n  'Rourke',\n  'Barton',\n  'Hemm',\n  'Sarkin',\n  'Blaiz',\n  'Talon',\n  'Agro',\n  'Zagaroth',\n  'Turrek',\n  'Esdel',\n  'Lustros',\n  'Zenner',\n  'Baashar',\n  'Dagrod',\n  'Gentar',\n  'Feston',\n  'Syrana',\n  'Resha',\n  'Varin',\n  'Wren',\n  'Yuni',\n  'Talis',\n  'Kessa',\n  'Magaltie',\n  'Aeris',\n  'Desmina',\n  'Krynna',\n  'Asralyn',\n  'Herra',\n  'Pret',\n  'Kory',\n  'Afia',\n  'Tessel',\n  'Rhiannon',\n  'Zara',\n  'Jesi',\n  'Belen',\n  'Rei',\n  'Ciscra',\n  'Temy',\n  'Renalee',\n  'Estyn',\n  'Maarika',\n  'Lynorr',\n  'Tiv',\n  'Annihya',\n  'Semet',\n  'Tamrin',\n  'Antia',\n  'Reslyn',\n  'Basak',\n  'Vixra',\n  'Pekka',\n  'Xavia',\n  'Beatha',\n  'Yarri',\n  'Liris',\n  'Sonali',\n  'Razra',\n  'Soko',\n  'Maeve',\n  'Everen',\n  'Yelina',\n  'Morwena',\n  'Hagar',\n  'Palra',\n  'Elysa',\n  'Sage',\n  'Ketra',\n  'Lynx',\n  'Agama',\n  'Thesra',\n  'Tezani',\n  'Ralia',\n  'Esmee',\n  'Heron',\n  'Naima',\n  'Rydna',\n  'Sparrow',\n  'Baakshi',\n  'Ibera',\n  'Phlox',\n  'Dessa',\n  'Braithe',\n  'Taewen',\n  'Larke',\n  'Silene',\n  'Phressa',\n  'Esther',\n  'Anika',\n  'Rasy',\n  'Harper',\n  'Indie',\n  'Vita',\n  'Drusila',\n  'Minha',\n  'Surane',\n  'Lassona',\n  'Merula',\n  'Kye',\n  'Jonna',\n  'Lyla',\n  'Zet',\n  'Orett',\n  'Naphtalia',\n  'Turi',\n  'Rhays',\n  'Shike',\n  'Hartie',\n  'Beela',\n  'Leska',\n  'Vemery',\n  'Lunex',\n  'Fidess',\n  'Tisette',\n  'Partha',\n];\n\nupdateGlobals({ build, enemies });\n","import React from 'react';\nimport {\n  Container,\n  Row,\n  Form,\n  Button,\n  ButtonGroup,\n  Navbar,\n} from 'react-bootstrap';\nimport useScroll from '../hooks/useScroll';\n\nimport { Build, Item, Player, PlayerStats, safeEntries } from '../game/types';\nimport { build, randomEnemy, randomName, randomPlayer } from '../game/data';\nimport { Set } from 'immutable';\nimport { buildPlayer } from '../game/playGame';\n\nconst systemBuildKeys: Set<keyof Build> = Set(['debug', 'basic']);\n\nconst PlayerBuilder = ({\n  onSave,\n}: {\n  onSave: (player: Player, playerStats: PlayerStats) => void;\n}) => {\n  const [player, playerStats] = randomPlayer();\n  const [form, setForm] = React.useState<Build>(player.build);\n  const [lore, setLore] = React.useState(player.lore);\n  const setField = <T extends keyof Build>(field: T, value: Build[T]) => {\n    setForm({\n      ...form,\n      [field]: value,\n    });\n  };\n  const onFormSubmit = (e: any) => {\n    e.preventDefault();\n    onSave(\n      {\n        id: 'p-1',\n        lore,\n        build: form,\n      },\n      playerStats\n    );\n  };\n  const displayType = (type: keyof Build) => <b>{form[type].display}</b>;\n\n  const postBuildPlayerStats = buildPlayer(\n    { ...player, build: form },\n    playerStats,\n    [randomEnemy()[1]]\n  )[0];\n\n  return (\n    <Form onSubmit={onFormSubmit}>\n      <Container fluid style={{ marginBottom: '105px' }}>\n        <Row className=\"g-2\">\n          {safeEntries(build)\n            .filter(([type, _]) => !systemBuildKeys.has(type))\n            .map(([type, values]) => (\n              <ElementPicker\n                setField={(value) => setField(type, value)}\n                section={type}\n                options={values as Item[]}\n                key={type}\n                isSelected={(value) => form[type].display === value.display}\n              />\n            ))}\n        </Row>\n        <Navbar\n          fixed=\"bottom\"\n          bg=\"dark\"\n          variant=\"dark\"\n          style={{ maxHeight: '100px' }}\n        >\n          <Container>\n            <Navbar.Text>\n              You are{' '}\n              <i\n                onClick={() =>\n                  setLore((lore) => ({ ...lore, name: randomName() }))\n                }\n              >\n                {lore.name}\n              </i>\n              , the {displayType('skill')} {displayType('class')}{' '}\n              {displayType('charm')}\n              <br />\n              who wields a {displayType('weapon')} and a{' '}\n              {displayType('offhand')}\n              <br />\n              and wears {displayType('armor')} with {displayType('headgear')}{' '}\n              and {displayType('footwear')}\n            </Navbar.Text>\n            <Navbar.Text>\n              {postBuildPlayerStats.hp.current}/{postBuildPlayerStats.hp.max} ❤\n              <br />\n              {postBuildPlayerStats.stamina.current}/\n              {postBuildPlayerStats.stamina.max} 💪 (\n              {postBuildPlayerStats.staminaPerTurn.current >= 0 && '+'}\n              {postBuildPlayerStats.staminaPerTurn.current})<br />\n              Attack {postBuildPlayerStats.attack.current} | Defence{' '}\n              {postBuildPlayerStats.defence.current} | Speed{' '}\n              {postBuildPlayerStats.speed.current}\n            </Navbar.Text>\n            <Button type=\"submit\">This is me!</Button>\n          </Container>\n        </Navbar>\n      </Container>\n    </Form>\n  );\n};\n\nconst ElementPicker = ({\n  isSelected,\n  section,\n  options,\n  setField,\n}: {\n  options: Item[];\n  isSelected: (value: Item) => boolean;\n  setField: (value: Item) => void;\n  section: string;\n}) => {\n  const [scrollTo, scrollRef] = useScroll({\n    behavior: 'smooth',\n    block: 'start',\n  });\n\n  return (\n    <Row>\n      <Form.Label>{section}</Form.Label>\n      <br />\n      <ButtonGroup size=\"lg\" className=\"mb-2\">\n        {options.map((item) => (\n          <Button\n            key={item.display}\n            name={section}\n            id={`${item.display}`}\n            variant={isSelected(item) ? 'primary' : 'secondary'}\n            onClick={() => {\n              setField(item);\n              scrollTo();\n            }}\n          >\n            {item.display}\n          </Button>\n        ))}\n      </ButtonGroup>\n      <div id={`${section}-scroll`} ref={scrollRef} />\n    </Row>\n  );\n};\n\nexport default PlayerBuilder;\n","import { Ref, useRef } from 'react';\n\ntype ScrollToFn = () => void;\n\nexport default function useScroll<T extends Element>(\n  scrollParams: ScrollIntoViewOptions\n): [ScrollToFn, Ref<any>] {\n  const elRef = useRef<T>(null);\n  const executeScroll = () => elRef.current!.scrollIntoView(scrollParams);\n\n  return [executeScroll, elRef];\n}\n","import React from 'react';\nimport { Container, ButtonGroup, Form, Button, Navbar } from 'react-bootstrap';\n\nimport { Player, Enemies, EnemiesStats, Build, EnemyInfo } from '../game/types';\nimport { enemies, randomEnemy } from '../game/data';\n\nconst EncounterBuilder = ({\n  player,\n  onSave,\n}: {\n  player: Player;\n  onSave: (enemies: Enemies, enemiesStats: EnemiesStats) => void;\n}) => {\n  const [encounter, setEncounter] = React.useState<EnemyInfo[]>([]);\n  const onFormSubmit = (e: any) => {\n    e.preventDefault();\n    const enemies = encounter.map((a) => a[0]);\n    const enemiesStats = encounter.map((a) => a[1]);\n    // Size enforced by UI\n    onSave(enemies as Enemies, enemiesStats as EnemiesStats);\n  };\n  const displayType = (type: keyof Build) => (\n    <b>{player.build[type].display}</b>\n  );\n  return (\n    <Form onSubmit={onFormSubmit}>\n      <Container\n        fluid\n        style={{ marginBottom: encounter.length > 0 ? '205px' : '105px' }}\n      >\n        <ButtonGroup size=\"lg\" className=\"mb-2\">\n          {enemies.map((enemy) => (\n            <Button\n              key={enemy[0].lore.name}\n              disabled={encounter.length > 4}\n              onClick={() => setEncounter((e) => [...e, enemy])}\n            >\n              {enemy[0].lore.name}\n            </Button>\n          ))}\n        </ButtonGroup>\n      </Container>\n      {encounter.length > 0 && (\n        <Navbar\n          fixed=\"bottom\"\n          bg=\"dark\"\n          variant=\"dark\"\n          style={{ marginBottom: '100px' }}\n        >\n          <Container fluid>\n            <ButtonGroup size=\"sm\" className=\"mb-2\">\n              {encounter.map((enemy, idx) => (\n                <Button\n                  key={`${enemy[0].lore.name}-${idx}`}\n                  onClick={() =>\n                    setEncounter((e) => {\n                      let found = false;\n                      return e.filter(\n                        (m) =>\n                          found ||\n                          m[0].lore.name !== enemy[0].lore.name ||\n                          !(found = true)\n                      );\n                    })\n                  }\n                >\n                  {enemy[0].lore.name}\n                </Button>\n              ))}\n            </ButtonGroup>\n          </Container>\n        </Navbar>\n      )}\n      <Navbar\n        fixed=\"bottom\"\n        bg=\"dark\"\n        variant=\"dark\"\n        style={{ maxHeight: '100px' }}\n      >\n        <Container>\n          <Navbar.Text>\n            You are <i>{player.lore.name}</i>, the {displayType('skill')}{' '}\n            {displayType('class')} {displayType('charm')}\n            <br />\n            who wields a {displayType('weapon')} and a {displayType('offhand')}\n            <br />\n            and wears {displayType('armor')} with {displayType('headgear')} and{' '}\n            {displayType('footwear')}\n          </Navbar.Text>\n          <ButtonGroup>\n            <Button\n              disabled={encounter.length < 0 || encounter.length > 4}\n              onClick={(_) => setEncounter((e) => [...e, randomEnemy()])}\n            >\n              Add Random\n            </Button>\n            <Button\n              type=\"submit\"\n              disabled={encounter.length < 1 || encounter.length > 5}\n            >\n              To Battle!\n            </Button>\n          </ButtonGroup>\n        </Container>\n      </Navbar>\n    </Form>\n  );\n};\n\nexport default EncounterBuilder;\n","import React from 'react';\nimport { Container, Card, Row, Button } from 'react-bootstrap';\n\nconst Menu: React.FC<{\n  title: string;\n  states: string[];\n  onClick: (value: string) => void;\n}> = ({ title, states, onClick }) => (\n  <Container fluid style={{ marginBottom: '105px' }}>\n    <Row className=\"g-2\">\n      <Card.Title>{title}</Card.Title>\n    </Row>\n    {states.map((state) => (\n      <Row className=\"g-2\" key={state}>\n        <Button\n          size=\"lg\"\n          className=\"mb-2\"\n          key={state}\n          variant={'primary'}\n          onClick={() => {\n            onClick(state);\n          }}\n        >\n          {state}\n        </Button>\n      </Row>\n    ))}\n  </Container>\n);\n\nexport default Menu;\n","export default function geneticAlgorithmConstructor(options) {\n  function settingDefaults() {\n    return {\n      mutationFunction: function (phenotype) {\n        return phenotype;\n      },\n\n      crossoverFunction: function (a, b) {\n        return [a, b];\n      },\n\n      fitnessFunction: function (phenotype) {\n        return 0;\n      },\n\n      doesABeatBFunction: undefined,\n\n      population: [],\n      populationSize: 100,\n    };\n  }\n\n  function settingWithDefaults(settings, defaults) {\n    settings = settings || {};\n\n    settings.mutationFunction =\n      settings.mutationFunction || defaults.mutationFunction;\n    settings.crossoverFunction =\n      settings.crossoverFunction || defaults.crossoverFunction;\n    settings.fitnessFunction =\n      settings.fitnessFunction || defaults.fitnessFunction;\n\n    settings.doesABeatBFunction =\n      settings.doesABeatBFunction || defaults.doesABeatBFunction;\n\n    settings.population = settings.population || defaults.population;\n    if (settings.population.length <= 0)\n      throw Error(\n        'population must be an array and contain at least 1 phenotypes'\n      );\n\n    settings.populationSize =\n      settings.populationSize || defaults.populationSize;\n    if (settings.populationSize <= 0)\n      throw Error('populationSize must be greater than 0');\n\n    return settings;\n  }\n\n  var settings = settingWithDefaults(options, settingDefaults());\n\n  function populate() {\n    var size = settings.population.length;\n    while (settings.population.length < settings.populationSize) {\n      const rand = Math.floor(Math.random() * size);\n      settings.population.push(\n        mutate(cloneJSON(settings.population[Math.floor(rand)]))\n      );\n    }\n  }\n\n  function cloneJSON(object) {\n    return JSON.parse(JSON.stringify(object));\n  }\n\n  function mutate(phenotype) {\n    return settings.mutationFunction(cloneJSON(phenotype));\n  }\n\n  function crossover(phenotype) {\n    phenotype = cloneJSON(phenotype);\n    var mate =\n      settings.population[\n        Math.floor(Math.random() * settings.population.length)\n      ];\n    mate = cloneJSON(mate);\n    return settings.crossoverFunction(phenotype, mate)[0];\n  }\n\n  function doesABeatB(a, b) {\n    if (settings.doesABeatBFunction) {\n      return settings.doesABeatBFunction(a, b);\n    } else {\n      return settings.fitnessFunction(a) >= settings.fitnessFunction(b);\n    }\n  }\n\n  function compete() {\n    var nextGeneration = [];\n\n    for (var p = 0; p < settings.population.length - 1; p += 2) {\n      var phenotype = settings.population[p];\n      var competitor = settings.population[p + 1];\n\n      nextGeneration.push(phenotype);\n      if (doesABeatB(phenotype, competitor)) {\n        if (Math.random() < 0.5) {\n          nextGeneration.push(mutate(phenotype));\n        } else {\n          nextGeneration.push(crossover(phenotype));\n        }\n      } else {\n        nextGeneration.push(competitor);\n      }\n    }\n\n    settings.population = nextGeneration;\n  }\n\n  function randomizePopulationOrder() {\n    for (var index = 0; index < settings.population.length; index++) {\n      var otherIndex = Math.floor(Math.random() * settings.population.length);\n      var temp = settings.population[otherIndex];\n      settings.population[otherIndex] = settings.population[index];\n      settings.population[index] = temp;\n    }\n  }\n\n  return {\n    evolve: function (options) {\n      if (options) {\n        settings = settingWithDefaults(options, settings);\n      }\n\n      populate();\n      randomizePopulationOrder();\n      compete();\n      return this;\n    },\n    best: function () {\n      var scored = this.scoredPopulation();\n      var result = scored.reduce(function (a, b) {\n        return a.score >= b.score ? a : b;\n      }, scored[0]).phenotype;\n      return cloneJSON(result);\n    },\n    bestScore: function () {\n      return settings.fitnessFunction(this.best());\n    },\n    population: function () {\n      return cloneJSON(this.config().population);\n    },\n    scoredPopulation: function () {\n      return this.population().map(function (phenotype) {\n        return {\n          phenotype: cloneJSON(phenotype),\n          score: settings.fitnessFunction(phenotype),\n        };\n      });\n    },\n    config: function () {\n      return cloneJSON(settings);\n    },\n    clone: function (options) {\n      return geneticAlgorithmConstructor(\n        settingWithDefaults(\n          options,\n          settingWithDefaults(this.config(), settings)\n        )\n      );\n    },\n  };\n}\n","import GeneticAlgorithmConstructor, {\n  GeneticAlgorithmConfig,\n  ScoredPhenotype,\n} from '../geneticalgorithm/geneticalgorithm';\nimport {\n  handlePlayerEffect,\n  makeGameNew,\n  playerActions,\n  setSelected,\n} from './playGame';\nimport Chance from 'chance';\nimport {\n  Enemies,\n  EnemiesStats,\n  EnemyInfo,\n  MonsterTarget,\n  Play,\n  Player,\n  Seed,\n} from './types';\nimport { build, playerStatsDefault, previousState } from './data';\nimport { Seq } from 'immutable';\nimport { rangeArr } from './zFunDump';\n\nexport type TinkererOptions = typeof defaultTinkererOptions & {\n  turns?: number;\n};\n\nexport const defaultTinkererOptions = {\n  playerSeed: 'Miau',\n  weights: { monster: 0.7, player: 0.125, turn: 0.1, stamina: 0.075 },\n  debug: false,\n};\n\nexport function findBestPlay(\n  play: Play,\n  iter: number,\n  optionsOverride?: Partial<TinkererOptions>\n): ScoredPhenotype<Play>[] {\n  const options: TinkererOptions = {\n    ...defaultTinkererOptions,\n    ...optionsOverride,\n  };\n  const rand = new Chance(options.playerSeed);\n  const config: GeneticAlgorithmConfig<Play> = {\n    mutationFunction: (oldPlay) => {\n      const latestState = previousState(oldPlay);\n      const monsterHealth = latestState.enemies.reduce(\n        (acc, monster) => acc + monster.hp.current,\n        0\n      );\n      const playerHealth = latestState.player.hp.current;\n      if (playerHealth === 0 || monsterHealth === 0) {\n        return oldPlay;\n      }\n      let newPlay = oldPlay;\n      while (\n        rand.d6() === 6 ||\n        (previousState(newPlay).enemies[previousState(newPlay).target]?.hp ??\n          0) <= 0\n      ) {\n        newPlay = setSelected(\n          newPlay,\n          rand.natural({\n            min: 0,\n            max: previousState(newPlay).enemies.length - 1,\n          }) as MonsterTarget\n        );\n      }\n      const latest = previousState(newPlay);\n      const actions = playerActions(play.player, latest.inventory);\n      const unavailable = actions\n        .map((a, idx) => [a, idx] as const)\n        .filter(([a, _]) => a.stamina > latest.player.stamina.current)\n        .map(([_, idx]) => idx);\n      newPlay = handlePlayerEffect(\n        newPlay,\n        rand.natural({ min: 0, max: actions.length - 1, exclude: unavailable })\n      );\n      return newPlay;\n    },\n    fitnessFunction: (play) => {\n      const latestState = previousState(play);\n      const monsterHealth = latestState.enemies.reduce(\n        (acc, monster) => acc + monster.hp.current,\n        0\n      );\n      const playerHealth = latestState.player.hp.current;\n      const playerStamina = latestState.player.stamina.current;\n      const startPlayerHealth = play.states[0].player.hp.max;\n      const startPlayerStamina = play.states[0].player.stamina.max;\n      const startMonsterHealth = play.states[0].enemies.reduce(\n        (acc, monster) => acc + monster.hp.current,\n        0\n      );\n\n      const monsterKillingFitness =\n        (startMonsterHealth - monsterHealth) / startMonsterHealth;\n      const playerAlivenessFitness = playerHealth / startPlayerHealth;\n      const killSpeedFitness = (play.turns - play.states.length) / play.turns;\n      const staminaFitness = playerStamina / startPlayerStamina;\n\n      const fitness =\n        monsterKillingFitness * options.weights.monster +\n        playerAlivenessFitness * options.weights.player +\n        killSpeedFitness * options.weights.turn +\n        staminaFitness * options.weights.stamina;\n      if (options.debug) {\n        console.log(\n          `MH: ${monsterHealth} | PH: ${playerHealth} | TR: ${\n            play.states.length\n          }\\nFitness: ${fitness} | MF: ${monsterKillingFitness} | PF: ${playerAlivenessFitness} | SF: ${staminaFitness} | TF: ${killSpeedFitness}\\nWeights: ${JSON.stringify(\n            options.weights\n          )}`\n        );\n      }\n      return fitness;\n    },\n    population: rangeArr(iter).map((_) => play),\n    populationSize: iter,\n  };\n\n  const turns = optionsOverride?.turns ?? play.turns;\n  let gen = new GeneticAlgorithmConstructor<Play>(config);\n  for (let i = 0; i < turns; i++) {\n    gen = gen.evolve();\n  }\n  return Seq(gen.scoredPopulation())\n    .sortBy((a) => 1000 / a.score)\n    .toArray();\n}\n\nexport const findBestBuild = (\n  players: Player[],\n  enemies: [Seed, EnemyInfo[]][],\n  iter: number,\n  gameIter: number,\n  populationTotal?: number,\n  optionsOverride?: Partial<TinkererOptions>\n): ScoredPhenotype<Player>[] => {\n  const options: TinkererOptions = {\n    ...defaultTinkererOptions,\n    ...optionsOverride,\n  };\n  const rng = new Chance(options.playerSeed);\n  const config: GeneticAlgorithmConfig<Player> = {\n    mutationFunction: (player: Player) => {\n      const toChange = rng.pickone(\n        Object.keys(player.build)\n      ) as keyof typeof build;\n      return {\n        ...player,\n        build: {\n          ...player.build,\n          [toChange]: rng.pickone(build[toChange]),\n        },\n      };\n    },\n    fitnessFunction: (player: Player) =>\n      Seq(enemies)\n        .flatMap((g) =>\n          Seq(\n            findBestPlay(\n              makeGameNew(\n                player,\n                playerStatsDefault,\n                g[1].map((a) => a[0]) as Enemies,\n                g[1].map((a) => a[1]) as EnemiesStats,\n                optionsOverride?.turns ?? 50,\n                g[0]\n              ),\n              gameIter,\n              optionsOverride\n            )\n          ).take(2)\n        )\n        .reduce((acc, v) => acc + v.score, 0),\n    population: players,\n    populationSize: populationTotal ?? players.length,\n  };\n\n  let gen = new GeneticAlgorithmConstructor<Player>(config);\n  for (let i = 0; i < iter; i++) {\n    gen = gen.evolve();\n  }\n\n  return Seq(gen.scoredPopulation())\n    .sortBy((a) => 1000 / a.score)\n    .toArray();\n};\n","import React from 'react';\nimport { Card, Button, OverlayTrigger, Popover } from 'react-bootstrap';\nimport { Enemy, Effect, EnemyStats } from '../game/types';\nimport { Seq } from 'immutable';\n\nconst skillPercents = (effects: Effect[]) =>\n  Seq(effects)\n    .countBy((e) => e.display)\n    .toArray()\n    .map(([display, v], idx) => {\n      const { range, priority, tooltip } = effects.find(\n        (a) => a.display === display\n      )!!;\n      return (\n        <OverlayTrigger\n          key={idx}\n          placement=\"right\"\n          delay={{ show: 100, hide: 250 }}\n          overlay={\n            <Popover>\n              <Popover.Header as=\"h3\">{display}</Popover.Header>\n              <Popover.Body>\n                {tooltip}\n                <br />\n                ⏱:{priority}\n                <br />\n                🏹:\n                {range.length === 5\n                  ? 'Any'\n                  : range.length === 0\n                  ? 'None'\n                  : range.map((a) => a + 1).join(', ')}\n              </Popover.Body>\n            </Popover>\n          }\n        >\n          <>\n            [{((v / effects.length) * 100).toFixed(2)}%] {display}\n            <br key={idx} />\n          </>\n        </OverlayTrigger>\n      );\n    });\n\nconst EnemyCard: React.FC<{\n  enemy: Enemy;\n  enemyStats: EnemyStats;\n  latestAttack: string | undefined;\n  isSelected?: boolean;\n  onSelect: () => void;\n  canAct: boolean;\n  hotkey: string;\n}> = ({\n  enemy,\n  enemyStats,\n  isSelected,\n  onSelect,\n  latestAttack,\n  canAct,\n  hotkey,\n}) => (\n  <Card bg={isSelected ? 'info' : undefined}>\n    <Card.Body>\n      <Card.Title>\n        {enemy.lore.name} {enemyStats.hp.current > 0 ? '' : <b>💀DEAD💀</b>}\n      </Card.Title>\n      <Card.Text>\n        ❤:{enemyStats.hp.current} 🏹:{enemyStats.distance + 1}\n      </Card.Text>\n      <Card.Text>\n        Attack {enemyStats.attack.current}\n        <br />\n        Defence {enemyStats.defence.current}\n        <br />\n        Speed {enemyStats.speed.current}\n      </Card.Text>\n      {enemyStats.status.bleed.turns > 0 && (\n        <Card.Text>{enemyStats.status.bleed.turns} 🩸</Card.Text>\n      )}\n      {latestAttack && <Card.Text>Latest attack: {latestAttack}</Card.Text>}\n      <Card.Text>\n        Next attack prediction:\n        <br />\n        {skillPercents(\n          enemy.rolls[enemyStats.distance].map((idx) => enemy.effects[idx])\n        )}\n        <br />\n      </Card.Text>\n      {canAct && (\n        <Button disabled={isSelected} onClick={onSelect}>\n          [<i>{hotkey.toUpperCase()}</i>] Select\n        </Button>\n      )}\n    </Card.Body>\n  </Card>\n);\n\nexport default EnemyCard;\n","import React from 'react';\nimport {\n  Card,\n  Button,\n  Stack,\n  ToggleButton,\n  ButtonGroup,\n  Popover,\n  OverlayTrigger,\n} from 'react-bootstrap';\nimport {\n  DisabledSkills,\n  InventoryStats,\n  Player,\n  PlayerStats,\n  safeEntries,\n} from '../game/types';\nimport { Set } from 'immutable';\nimport { clamp } from '../game/zFunDump';\nimport { playerActions } from '../game/playGame';\n\nconst PlayerCard: React.FC<{\n  selectedButtons: Set<string>;\n  player: Player;\n  playerStats: PlayerStats;\n  inventoryStats: InventoryStats;\n  canAct: boolean;\n  lastAction: string | undefined;\n  onClickEffect: (index: number) => void;\n  disabledSkills: DisabledSkills;\n  setDisabledSkills: (skills: DisabledSkills) => void;\n}> = ({\n  selectedButtons,\n  player,\n  playerStats,\n  inventoryStats,\n  onClickEffect,\n  canAct,\n  lastAction,\n  disabledSkills,\n  setDisabledSkills,\n}) => {\n  const passives = safeEntries(player.build).map(\n    ([k, e]) => [k, e, [...(e.bot ?? []), ...(e.eot ?? [])]] as const\n  );\n\n  const hasPassives = passives.reduce(\n    (acc, [k, e, passives]) => passives.length > 0,\n    false\n  );\n  return (\n    <Card>\n      <Card.Body>\n        <Card.Title>\n          {player.lore.name}\n          {playerStats.hp.current > 0 ? '' : <b> 💀DEAD💀 </b>}\n        </Card.Title>\n        <Card.Subtitle className=\"mb-2 text-muted\">\n          {player.build.class.display}\n        </Card.Subtitle>\n        <Card.Text>\n          Attack {playerStats.attack.current} | Defence{' '}\n          {playerStats.defence.current} | Speed {playerStats.speed.current}\n        </Card.Text>\n        <Card.Text>\n          {playerStats.hp.current}/{playerStats.hp.max} ❤\n        </Card.Text>\n        <Card.Text>\n          {playerStats.stamina.current}/{playerStats.stamina.max} 💪 (\n          {playerStats.staminaPerTurn.current >= 0 && '+'}\n          {playerStats.staminaPerTurn.current})\n        </Card.Text>\n        {playerStats.status.bleed.turns > 0 && (\n          <Card.Text>{playerStats.status.bleed.turns} 🩸</Card.Text>\n        )}\n        {lastAction && <Card.Text>Last action: {lastAction}</Card.Text>}\n      </Card.Body>\n      {canAct && hasPassives && (\n        <>\n          <b>Passives</b>\n          <ButtonGroup>\n            {passives.map(\n              ([k, e, passives], idx) =>\n                passives.length > 0 && (\n                  <OverlayTrigger\n                    key={idx}\n                    placement=\"right\"\n                    delay={{ show: 100, hide: 250 }}\n                    overlay={\n                      <Popover>\n                        <Popover.Header as=\"h3\">{e.display}</Popover.Header>\n                        <Popover.Body>{e.tooltip}</Popover.Body>\n                      </Popover>\n                    }\n                  >\n                    <ToggleButton\n                      checked={!Set(disabledSkills).has(k)}\n                      value={k}\n                      id={`passive-skill-${k}`}\n                      type=\"checkbox\"\n                      variant=\"outline-primary\"\n                      onChange={(event) =>\n                        setDisabledSkills(\n                          event.currentTarget.checked\n                            ? Set(disabledSkills).delete(k).toArray()\n                            : Set(disabledSkills).add(k).toArray()\n                        )\n                      }\n                    >\n                      {e.display}\n                    </ToggleButton>\n                  </OverlayTrigger>\n                )\n            )}\n          </ButtonGroup>\n        </>\n      )}\n      {canAct && (\n        <Card.Body>\n          <Stack direction=\"horizontal\" gap={2}>\n            {playerActions(player, inventoryStats).map((e, idx) => (\n              <OverlayTrigger\n                key={e.display}\n                placement=\"top\"\n                delay={{ show: 100, hide: 250 }}\n                overlay={\n                  <Popover>\n                    <Popover.Header as=\"h3\">{e.display}</Popover.Header>\n                    <Popover.Body>{e.tooltip}</Popover.Body>\n                  </Popover>\n                }\n              >\n                <div>\n                  <Button\n                    active={selectedButtons.has(e.display)}\n                    disabled={playerStats.stamina.current < e.stamina}\n                    onClick={(_) => onClickEffect(idx)}\n                  >\n                    [<i>{idx + 1}</i>] <b>{e.display}</b>\n                  </Button>\n                  <br />\n                  <Card.Text>\n                    💪:{e.stamina} ⏱:\n                    {clamp(e.priority - playerStats.speed.current, 0, 4)}\n                    <br />\n                    🏹:\n                    {e.range.length === 5\n                      ? 'Any'\n                      : e.range.map((a) => a + 1).join(', ')}\n                  </Card.Text>\n                </div>\n              </OverlayTrigger>\n            ))}\n          </Stack>\n        </Card.Body>\n      )}\n    </Card>\n  );\n};\n\nexport default PlayerCard;\n","import { Container, Row, Col, Card, Modal, ButtonGroup } from 'react-bootstrap';\n\nimport { DisabledSkills, MonsterTarget, Play } from '../game/types';\n\nimport EnemyCard from './Enemy';\nimport PlayerCard from './Player';\nimport usePressedKeys from '../hooks/usePressedKeys';\nimport { playerActions } from '../game/playGame';\nimport { Seq, Set } from 'immutable';\nimport { previousState } from '../game/data';\nimport { Button } from 'react-bootstrap';\nimport saveAs from 'file-saver';\nimport { useCallback, useEffect, useState } from 'react';\nimport { globals, updateGlobals } from '../game/modding';\nimport { useForceRerender } from '../hooks/useForceRerender';\n\nexport type GameProps = {\n  game: Play;\n  setSelected: (target: MonsterTarget) => void;\n  setDisabledSkills: (disabled: DisabledSkills) => void;\n  handlePlayerEffect: (index: number) => void;\n  solveGame: (iterations: number) => void;\n  hint: (iterations: number) => void;\n  timeTravel: { undo: () => void; redo: (() => void) | undefined } | undefined;\n  onMenu: () => void;\n};\n\nconst monsterHotkeys = ['q', 'w', 'e', 'r', 't', 'y'];\n\nconst Game = ({\n  handlePlayerEffect,\n  setSelected,\n  setDisabledSkills,\n  game,\n  solveGame,\n  timeTravel,\n  hint,\n  onMenu,\n}: GameProps): JSX.Element => {\n  const { player, enemies } = game;\n  const {\n    player: playerStats,\n    enemies: enemiesStats,\n    target,\n    lastAttacks,\n    disabledSkills,\n    inventory: inventoryStats,\n  } = previousState(game);\n  const [isLogShown, setShowLog] = useState(false);\n  const forceUpdate = useForceRerender();\n\n  useEffect(() => {\n    updateGlobals({ ingame: { game, forceUpdate } });\n    return () => updateGlobals({ ingame: undefined });\n  }, [game, forceUpdate]);\n\n  const handleCloseLog = () => setShowLog(false);\n  const handleShowLog = () => setShowLog(true);\n\n  const playerSkills = playerActions(player, inventoryStats);\n  const monsterHealth = enemiesStats.reduce((acc, m) => m.hp.current + acc, 0);\n  const isPlayerAlive = playerStats.hp.current > 0;\n  const areMonstersAlive = monsterHealth > 0;\n  const endGame = game.states.length < game.turns;\n  const canAct = isPlayerAlive && areMonstersAlive && endGame;\n\n  const pressed = usePressedKeys((key) => {\n    if (!canAct) return;\n    const valNum = parseInt(key);\n    if (valNum > 0 && valNum <= playerSkills.length) {\n      const hasStamina =\n        playerSkills[valNum - 1].stamina <= playerStats.stamina.current;\n      if (!hasStamina) return;\n      handlePlayerEffect(valNum - 1);\n    }\n\n    if (key === 'Escape') {\n      onMenu();\n    }\n    if (key === 'h') {\n      hint(100);\n    }\n\n    if (key === 'l') {\n      setShowLog(!isLogShown);\n    }\n\n    if (key === 's') {\n      save();\n    }\n\n    if (key === 'a' && game.states.length > 1 && timeTravel) {\n      timeTravel.undo();\n    }\n    if (key === 'd' && timeTravel && timeTravel.redo != null) {\n      timeTravel.redo();\n    }\n\n    if (key === monsterHotkeys[0] && enemies.length > 0) {\n      setSelected(0 as MonsterTarget);\n    }\n    if (key === monsterHotkeys[1] && enemies.length > 1) {\n      setSelected(1 as MonsterTarget);\n    }\n    if (key === monsterHotkeys[2] && enemies.length > 2) {\n      setSelected(2 as MonsterTarget);\n    }\n    if (key === monsterHotkeys[3] && enemies.length > 3) {\n      setSelected(3 as MonsterTarget);\n    }\n    if (key === monsterHotkeys[4] && enemies.length > 4) {\n      setSelected(4 as MonsterTarget);\n    }\n  });\n\n  const selectedButtons = Set<string>(\n    [...pressed].flatMap((key: string) => {\n      const valNum = parseInt(key);\n      if (valNum > 0 && valNum <= playerSkills.length) {\n        return [playerSkills[valNum - 1].display];\n      } else {\n        return [];\n      }\n    })\n  );\n\n  const save = useCallback(() => {\n    const blob = new Blob([JSON.stringify(game)], {\n      type: 'application/json;charset=utf-8',\n    });\n    saveAs(blob, `buildmancer-${Date.now()}.json`);\n  }, [game]);\n\n  return (\n    <>\n      <Container fluid>\n        <Row className=\"justify-content-center align-items-flex-start\">\n          <Col sm={12} md={8}>\n            <Button onClick={onMenu}>\n              [<i>Esc</i>] MAIN MENU\n            </Button>\n            <Card.Title>\n              {!isPlayerAlive ? (\n                <b>❌❌DEFEAT❌❌</b>\n              ) : !areMonstersAlive ? (\n                <b>🎉🎉VICTORY🎉🎉</b>\n              ) : (\n                ''\n              )}{' '}\n              Turn {game.states.length} out of {game.turns}\n            </Card.Title>\n            <PlayerCard\n              player={player}\n              playerStats={playerStats}\n              inventoryStats={inventoryStats}\n              disabledSkills={disabledSkills}\n              setDisabledSkills={setDisabledSkills}\n              onClickEffect={(idx) => handlePlayerEffect(idx)}\n              selectedButtons={selectedButtons}\n              lastAction={\n                lastAttacks\n                  .filter((a) => a.origin === 'Player' && a.phase === 'MAIN')\n                  .map((a) => `${a.display}`)\n                  .join(' -> ') ?? undefined\n              }\n              canAct={canAct}\n            />\n            {timeTravel != null && (\n              <Row>\n                <ButtonGroup>\n                  {game.states.length > 1 && (\n                    <Button onClick={(_) => timeTravel.undo()}>\n                      [<i>A</i>] Undo ↩\n                    </Button>\n                  )}\n                  {timeTravel.redo && (\n                    <Button onClick={(_) => timeTravel.redo!!()}>\n                      [<i>D</i>] Redo ↪\n                    </Button>\n                  )}\n                </ButtonGroup>\n              </Row>\n            )}\n            <Row>\n              <ButtonGroup>\n                <Button onClick={(_) => hint(100)}>\n                  <i>[H]</i> Hint\n                </Button>\n              </ButtonGroup>\n            </Row>\n            <Row>\n              {Seq(enemies)\n                .zip(Seq(enemiesStats))\n                .map(([enemy, stats], idx) => (\n                  <Col key={idx} xs={6} md={4}>\n                    <EnemyCard\n                      key={idx}\n                      enemyStats={stats}\n                      enemy={enemy}\n                      canAct={canAct}\n                      latestAttack={\n                        Seq(lastAttacks)\n                          .filter(\n                            ({ origin, phase }) =>\n                              origin === idx && phase === 'MAIN'\n                          )\n                          .map((a) => `${a.display}`)\n                          .join(' -> ') ?? undefined\n                      }\n                      isSelected={idx === target}\n                      onSelect={() => setSelected(idx as MonsterTarget)}\n                      hotkey={monsterHotkeys[idx]}\n                    />\n                  </Col>\n                ))}\n            </Row>\n            <Card.Title>Debug</Card.Title>\n            <Row>\n              <ButtonGroup>\n                <Button onClick={handleShowLog}>\n                  [<i>L</i>] Log 🗒\n                </Button>\n                <Button onClick={save}>\n                  [<i>S</i>] Dump to file 📂\n                </Button>\n              </ButtonGroup>\n            </Row>\n            <Card.Title>Cheats</Card.Title>\n            <Row>\n              <ButtonGroup>\n                <Button onClick={(_) => solveGame(100)}>Solve ⌛</Button>\n                <Button onClick={(_) => solveGame(1000)}>\n                  Solve thoroughly ⌛⌛⌛\n                </Button>\n              </ButtonGroup>\n            </Row>\n          </Col>\n        </Row>\n      </Container>\n      <Modal\n        show={isLogShown}\n        onHide={handleCloseLog}\n        scrollable={true}\n        centered={true}\n      >\n        <Modal.Header closeButton>\n          <Modal.Title>Game Log</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          {game.states.map((s, idx) => (\n            <div key={idx}>\n              <b>Turn {idx}</b>\n              <br />\n              Player: {JSON.stringify(s.player, null, 2)}\n              <br />\n              Enemies: {JSON.stringify(s.enemies, null, 2)}\n              <br />\n              Inventory?: {JSON.stringify(s.inventory, null, 2)}\n              <br />\n              Target [{s.target}]<br />\n              Bot?: {JSON.stringify(s.bot, null, 2)}\n              <br />\n              Eot?: {JSON.stringify(s.eot, null, 2)}\n              <br />\n              Actions:\n              <br />\n              {s.lastAttacks.map((a, idx) => (\n                <div key={idx}>\n                  {'-->'} {JSON.stringify(a, null, 2)}\n                  <br />\n                </div>\n              ))}\n            </div>\n          ))}\n        </Modal.Body>\n        <Modal.Footer>\n          <Button variant=\"primary\" onClick={handleCloseLog}>\n            Close\n          </Button>\n        </Modal.Footer>\n      </Modal>\n    </>\n  );\n};\n\nexport default Game;\n","import React from 'react';\n\nexport function useForceRerender() {\n  const [value, setValue] = React.useState(false);\n  return () => setValue(!value);\n}\n","import { useEffect, useCallback, useState } from 'react';\n\nexport default function usePressedKeys(onUp: (e: string) => void): Set<string> {\n  const [pressedKeys, updatePressedKeys] = useState(new Set<string>());\n\n  const downHandler = ({ key }: { key: string }) => {\n    updatePressedKeys((set) => new Set([...set, key]));\n  };\n\n  const upHandler = useCallback(\n    ({ key }: { key: string }) => {\n      updatePressedKeys((set) => new Set([...set].filter((k) => k !== key)));\n      onUp(key);\n    },\n    [onUp]\n  );\n\n  useEffect(() => {\n    window.addEventListener('keydown', downHandler);\n    window.addEventListener('keyup', upHandler);\n\n    return () => {\n      window.removeEventListener('keydown', downHandler);\n      window.removeEventListener('keyup', upHandler);\n    };\n  }, [upHandler]);\n\n  return pressedKeys;\n}\n","import { Seq } from 'immutable';\nimport React from 'react';\nimport { findBestPlay } from '../../game/tinkerer';\nimport { previousState } from '../../game/data';\nimport {\n  PlayState,\n  playState,\n  setSelected,\n  setDisabledSkills,\n  handlePlayerEffect,\n} from '../../game/playGame';\nimport { Play, Snapshot } from '../../game/types';\nimport Game from '../Game';\n\nconst SingleGame = ({\n  play,\n  timeTravel,\n  onGameEnd,\n  onMenu,\n}: {\n  play: Play;\n  timeTravel: boolean;\n  onGameEnd: (state: PlayState, play: Play) => void;\n  onMenu: () => void;\n}) => {\n  const [game, setGame] = React.useState<Play>(play);\n  const [redo, setRedo] = React.useState<Snapshot[]>([]);\n\n  React.useEffect(() => {\n    setGame(play);\n  }, [play]);\n\n  React.useEffect(() => {\n    const gameState = playState(game);\n    const hasEnded = gameState !== 'playing';\n    if (hasEnded) {\n      onGameEnd(gameState, game);\n    }\n  }, [game]);\n\n  const timeTravelObj = timeTravel\n    ? {\n        redo:\n          redo.length > 0\n            ? () => {\n                const newRedo = [...redo];\n                const latest = newRedo.pop() as Snapshot;\n                setRedo(newRedo);\n                setGame({ ...game, states: [...game.states, latest] });\n              }\n            : undefined,\n        undo: () => {\n          setRedo([...redo, previousState(game)]);\n          setGame({\n            ...game,\n            states: [game.states[0], ...game.states.slice(1, -1)],\n          });\n        },\n      }\n    : undefined;\n\n  return (\n    <Game\n      game={game}\n      timeTravel={timeTravelObj}\n      onMenu={onMenu}\n      setSelected={(idx) => {\n        setRedo([]);\n        setGame(setSelected(game, idx));\n      }}\n      setDisabledSkills={(disabled) => {\n        setRedo([]);\n        setGame(setDisabledSkills(game, disabled));\n      }}\n      handlePlayerEffect={(idx) => {\n        setRedo([]);\n        setGame(handlePlayerEffect(game, idx));\n      }}\n      solveGame={(iterations) =>\n        setGame(\n          Seq(\n            findBestPlay(game, iterations, {\n              turns: game.turns - game.states.length,\n            })\n          ).maxBy((a) => a.score)!!.phenotype\n        )\n      }\n      hint={(iterations) =>\n        setGame({\n          ...game,\n          states: [\n            ...game.states,\n            Seq(\n              findBestPlay(game, iterations, {\n                turns: game.turns - game.states.length,\n              })\n            ).maxBy((a) => a.score)!!.phenotype.states[game.states.length],\n          ],\n        })\n      }\n    />\n  );\n};\n\nexport default SingleGame;\n","import React from 'react';\nimport { Form, Col, Row, Alert, Button, Container } from 'react-bootstrap';\nimport { Play } from '../../game/types';\nimport { playSchema } from '../../game/typesSchemas';\n\nconst LoadScreen = ({\n  onLoad,\n  onMenu,\n}: {\n  onLoad: (g: Play) => void;\n  onMenu: () => void;\n}) => {\n  const [loadError, setLoadError] = React.useState<string | undefined>();\n  const load = (data: string) => {\n    try {\n      const playRaw = JSON.parse(data);\n      try {\n        // FIXME update schema\n        //playSchema.parse(playRaw);\n        onLoad(playRaw as Play);\n      } catch (e) {\n        setLoadError('Failed to Load - Invalid Data');\n      }\n    } catch (e) {\n      setLoadError('Failed to Load - Bad Data');\n    }\n  };\n  const onFormSubmit = (e: any) => {\n    e.preventDefault();\n    if (e.target?.fileData?.files[0] != null) {\n      const reader = new FileReader();\n      reader.onloadend = (ev: ProgressEvent<FileReader>) => {\n        const result = ev.target?.result as string | undefined;\n        if (result != null) {\n          load(result);\n        } else {\n          setLoadError('Failed to read file');\n        }\n      };\n      reader.readAsText(e.target.fileData.files[0]);\n    } else if (\n      e.target?.rawData?.value != null &&\n      e.target?.rawData?.value != ''\n    ) {\n      load(e.target.rawData.value);\n    }\n  };\n  return (\n    <Form onSubmit={onFormSubmit}>\n      <Container fluid>\n        <Col>\n          <Row>\n            {loadError && (\n              <>\n                <Alert variant={'danger'}>{loadError}</Alert>\n                <br />\n                <br />\n              </>\n            )}\n          </Row>\n          <Row>\n            <Form.Group>\n              <Form.Label>Load File</Form.Label>\n              <Form.Control type=\"file\" name=\"fileData\" accept=\".json\" />\n              <Form.Text muted>Select the file to load</Form.Text>\n            </Form.Group>\n          </Row>\n          <br />\n          <Row>\n            <Form.Group>\n              <Form.Label>Load</Form.Label>\n              <Form.Control\n                name=\"rawData\"\n                as=\"textarea\"\n                rows={3}\n                placeholder=\"Save Data\"\n              />\n              <Form.Text muted>Paste the text of your savegame here</Form.Text>\n            </Form.Group>\n          </Row>\n          <br />\n          <Button variant=\"primary\" type=\"submit\">\n            Load\n          </Button>\n        </Col>\n        <br />\n        <Button onClick={onMenu}>MAIN MENU</Button>\n      </Container>\n    </Form>\n  );\n};\n\nexport default LoadScreen;\n","import './App.css';\n// import { readString } from \"react-papaparse\";\nimport {\n  Snapshot,\n  Play,\n  EnemyStats,\n  Enemy,\n  EnemiesStats,\n  Enemies,\n} from './game/types';\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport PlayerBuilder from './components/PlayerBuilder';\nimport EncounterBuilder from './components/EncounterBuilder';\nimport { makeGameNew, makeGameNextLevel, PlayState } from './game/playGame';\nimport { dummyEnemy, randomEnemy, randomPlayer } from './game/data';\nimport { useMachine } from '@xstate/react';\nimport { gameMenuMachine } from './stateMachines/menuStateMachine';\nimport Menu from './components/menus/Menu';\nimport SingleGame from './components/menus/SingleGame';\nimport LoadScreen from './components/menus/LoadScreen';\n\nfunction App() {\n  const [state, send] = useMachine(gameMenuMachine, { devTools: true });\n  const event = state.event;\n  const onMenu = () => {\n    send('MENU');\n  };\n\n  switch (true) {\n    case state.matches('main'):\n      return (\n        <Menu\n          title={'Main Menu'}\n          states={Object.keys(gameMenuMachine.states.main.on)}\n          onClick={send}\n        />\n      );\n    // QUICK\n    case state.matches({ quick: 'play' }): {\n      const player = randomPlayer();\n      const encounter = randomEnemy();\n      return (\n        <SingleGame\n          play={makeGameNew(\n            player[0],\n            player[1],\n            [encounter[0]],\n            [encounter[1]],\n            50,\n            state.context.singleContext.seed\n          )}\n          onMenu={onMenu}\n          timeTravel={true}\n          onGameEnd={(result, game) => {\n            send(result === 'win' ? 'WIN' : 'LOSE', { result, game });\n          }}\n        />\n      );\n    }\n    case state.matches({ quick: 'win' }):\n    case state.matches({ quick: 'lose' }):\n      return (\n        <Menu\n          title={`${event.result} in ${event.game.states.length - 1} turns`}\n          states={['MENU']}\n          onClick={send}\n        />\n      );\n    // SINGLE\n    case state.matches({ single: 'player' }):\n      return (\n        <PlayerBuilder\n          onSave={(player, playerStats) => {\n            send('PLAYER', { player: [player, playerStats] });\n          }}\n        />\n      );\n    case state.matches({ single: 'encounter' }):\n      return (\n        <EncounterBuilder\n          player={event.player[0]}\n          onSave={(enemies, enemiesStats) => {\n            send('ENCOUNTER', {\n              encounter: [enemies, enemiesStats],\n              player: event.player,\n            });\n          }}\n        />\n      );\n    case state.matches({ single: 'play' }): {\n      return (\n        <SingleGame\n          play={makeGameNew(\n            event.player[0],\n            event.player[1],\n            event.encounter[0],\n            event.encounter[1],\n            50,\n            state.context.singleContext.seed\n          )}\n          onMenu={onMenu}\n          timeTravel={true}\n          onGameEnd={(result, game) => {\n            send(result === 'win' ? 'WIN' : 'LOSE', { result, game });\n          }}\n        />\n      );\n    }\n    case state.matches({ single: 'win' }):\n    case state.matches({ single: 'lose' }):\n      return (\n        <Menu\n          title={`${event.result} in ${event.game.states.length - 1} turns`}\n          states={['MENU']}\n          onClick={send}\n        />\n      );\n    // TRAINING\n    case state.matches({ training: 'player' }):\n      return (\n        <PlayerBuilder\n          onSave={(player, playerStats) => {\n            send('PLAYER', { player: [player, playerStats] });\n          }}\n        />\n      );\n    case state.matches({ training: 'play' }): {\n      const player = randomPlayer();\n      const encounter = dummyEnemy();\n      return (\n        <SingleGame\n          play={makeGameNew(\n            player[0],\n            player[1],\n            [encounter[0]],\n            [encounter[1]],\n            50,\n            state.context.singleContext.seed\n          )}\n          onMenu={onMenu}\n          timeTravel={true}\n          onGameEnd={(result, game) => {\n            send(result === 'win' ? 'WIN' : 'LOSE', { result, game });\n          }}\n        />\n      );\n    }\n    case state.matches({ training: 'win' }):\n    case state.matches({ training: 'lose' }):\n      return (\n        <Menu\n          title={`You have dealt a lot of damage! Well done 💯`}\n          states={['MENU']}\n          onClick={send}\n        />\n      );\n    // ARCADE\n    case state.matches({ arcade: 'player' }): {\n      const encounter = randomEnemy();\n      return (\n        <PlayerBuilder\n          onSave={(player, playerStats) => {\n            send('PLAYER', {\n              game: makeGameNew(\n                player,\n                playerStats,\n                [encounter[0]],\n                [encounter[1]],\n                50,\n                state.context.survivalContext.seed\n              ),\n            });\n          }}\n        />\n      );\n    }\n    case state.matches({ arcade: 'play' }): {\n      return (\n        <SingleGame\n          play={event.game}\n          timeTravel={false}\n          onMenu={onMenu}\n          onGameEnd={(result: PlayState, game: Play) => {\n            let encounter = [[], []] as [Enemy[], EnemyStats[]];\n            if (state.context.arcadeContext.victories >= 0) {\n              const otherEnemy = randomEnemy();\n              encounter = [\n                [...encounter[0], otherEnemy[0]],\n                [...encounter[1], otherEnemy[1]],\n              ];\n            }\n            if (state.context.arcadeContext.victories >= 2) {\n              const otherEnemy = randomEnemy();\n              encounter = [\n                [...encounter[0], otherEnemy[0]],\n                [...encounter[1], otherEnemy[1]],\n              ];\n            }\n            if (state.context.arcadeContext.victories >= 5) {\n              const otherEnemy = randomEnemy();\n              encounter = [\n                [...encounter[0], otherEnemy[0]],\n                [...encounter[1], otherEnemy[1]],\n              ];\n            }\n            const firstState: Snapshot = game.states[0];\n            send(result === 'win' ? 'WIN' : 'LOSE', {\n              result,\n              game: makeGameNextLevel(\n                game.player,\n                firstState.player,\n                encounter[0] as Enemies,\n                encounter[1] as EnemiesStats,\n                {},\n                50,\n                state.context.survivalContext.seed\n              ),\n            });\n          }}\n        />\n      );\n    }\n    case state.matches({ arcade: 'victory' }): {\n      return (\n        <Menu\n          title={`🎉🎉VICTORY!🎉🎉 Final score: ${state.context.arcadeContext.score}`}\n          states={['MENU']}\n          onClick={send}\n        />\n      );\n    }\n    case state.matches({ arcade: 'defeat' }): {\n      return (\n        <Menu\n          title={`Failed after ${state.context.arcadeContext.victories} victories`}\n          states={['MENU']}\n          onClick={send}\n        />\n      );\n    }\n    // SURVIVAL\n    case state.matches({ survival: 'player' }): {\n      const encounter = randomEnemy();\n      return (\n        <PlayerBuilder\n          onSave={(player, playerStats) => {\n            send('PLAYER', {\n              game: makeGameNew(\n                player,\n                playerStats,\n                [encounter[0]],\n                [encounter[1]],\n                50,\n                state.context.survivalContext.seed\n              ),\n            });\n          }}\n        />\n      );\n    }\n    case state.matches({ survival: 'play' }): {\n      return (\n        <SingleGame\n          play={event.game}\n          onMenu={onMenu}\n          timeTravel={false}\n          onGameEnd={(result, game) => {\n            const encounter = randomEnemy();\n            const lastState: Snapshot =\n              game.states[event.game.states.length - 1];\n            send(result === 'win' ? 'WIN' : 'LOSE', {\n              result,\n              game: makeGameNextLevel(\n                game.player,\n                lastState.player,\n                [encounter[0]],\n                [encounter[1]],\n                lastState.inventory,\n                50,\n                state.context.survivalContext.seed\n              ),\n            });\n          }}\n        />\n      );\n    }\n    case state.matches({ survival: 'defeat' }): {\n      return (\n        <Menu\n          title={`Completed after ${state.context.survivalContext.victories} victories`}\n          states={['MENU']}\n          onClick={send}\n        />\n      );\n    }\n    // LOAD\n    case state.matches({ load: 'load' }): {\n      return (\n        <LoadScreen onLoad={(game) => send('LOAD', { game })} onMenu={onMenu} />\n      );\n    }\n    case state.matches({ load: 'play' }): {\n      return (\n        <SingleGame\n          play={event.game}\n          onMenu={onMenu}\n          timeTravel={true}\n          onGameEnd={(result, game) => {\n            send(result === 'win' ? 'WIN' : 'LOSE', { result, game });\n          }}\n        />\n      );\n    }\n    case state.matches({ load: 'win' }):\n    case state.matches({ load: 'lose' }):\n      return (\n        <Menu\n          title={`${event.result} in ${event.game.states.length - 1} turns`}\n          states={['MENU']}\n          onClick={send}\n        />\n      );\n    default:\n      return <>{JSON.stringify(state.value)}</>;\n  }\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport { createRoot } from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorkerRegistration from './serviceWorkerRegistration';\nimport reportWebVitals from './reportWebVitals';\n\nconst container = document.getElementById('root');\nconst root = createRoot(container!);\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://cra.link/PWA\nserviceWorkerRegistration.register();\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","import { Opaque } from 'type-fest';\nimport { allRanges, enemies, makeStat } from './data';\nimport { updateGlobals } from './modding';\nimport {\n  callEffectFun,\n  Effect,\n  effectFunCall,\n  Enemies,\n  EnemiesStats,\n  Enemy,\n  EnemyStats,\n  FunIndex,\n  MonsterTarget,\n  Play,\n  PlayerStats,\n  Snapshot,\n  Status,\n  Target,\n} from './types';\nimport { clamp, pipe } from './zFunDump';\n\n// #region Effect funs\n\nexport function extractFunction({ effects }: Effect): ReduceFun {\n  return (origin, play, startState) =>\n    effects.reduce(\n      (acc, { index, parameters }) =>\n        callEffectFun(effectFunRepo, index, parameters)(origin, ...acc),\n      [play, startState]\n    );\n}\n\nconst effectFun = <T>(fun: ParametrizedFun<T>): EffectFun<T> =>\n  ((params) => (origin, play, oldState) =>\n    fun(params)(origin, play, oldState)) as EffectFun<T>;\n\nconst applyPoison = (\n  play: Play,\n  currentState: Snapshot,\n  { target, turns }: ReduceFunctionT['Reduce:PoisonBOT']\n) =>\n  pipe(\n    target === 'Player'\n      ? actions.changeStatPlayer(currentState, ({ hp }) => ({\n          hp: { ...hp, current: Math.max(0, hp.current - 1) },\n        }))\n      : actions.changeStatMonster(\n          currentState,\n          currentState.target,\n          ({ hp }) => ({ hp: { ...hp, current: Math.max(0, hp.current - 1) } })\n        ),\n    (newState) =>\n      turns > 0\n        ? actions.addBotEffect(newState, 'Player', {\n            display: `Poison ${\n              target === 'Player'\n                ? 'Player'\n                : play.enemies[target]!!.lore.name + '[' + (target + 1)\n            } + \"]\"`,\n            tooltip: '',\n            range: allRanges,\n            priority: 4,\n            dodgeable: false,\n            effects: [\n              effectFunCall([\n                'Reduce:PoisonBOT',\n                { target: target, turns: turns - 1 },\n              ]),\n            ],\n          })\n        : newState\n  );\n\ntype SystemFunctionT = {\n  'Utility:Cleanup': undefined;\n  'Debug:GGWP': undefined;\n  'Debug:Sudoku': undefined;\n};\ntype BasicFunctionT = {\n  'Basic:Rest': undefined;\n  'Basic:Move': { amount: number };\n  'Basic:Attack': { amount: number };\n  'Basic:Stamina': { amount: number };\n  'Basic:HP': { amount: number };\n};\nexport type EffectTarget = 'Player' | 'Monster';\ntype StatusFunctionT = {\n  'Effect:Poison': { target: EffectTarget; turns: number };\n  'Effect:Dodge': undefined;\n  'Effect:Armor': { amount: number };\n  'Effect:Stun': undefined;\n  'Effect:Bleed': { target: EffectTarget; turns: number };\n  'Effect:Defence': { target: EffectTarget; amount: number };\n  'Effect:Speed': { target: EffectTarget; amount: number };\n  'Effect:Attack': { target: EffectTarget; amount: number };\n};\ntype MonsterFunctionT = {\n  'Monster:Summon': { enemy: number };\n  'Monster:Dead': undefined;\n  'Monster:Attack': { amount: number };\n  'Monster:Move': { amount: number };\n};\ntype ItemFunctionT = {\n  'Wand:MagicBolt': undefined;\n  'BootsOfFlight:EOT': undefined;\n};\ntype ReduceFunctionT = {\n  'Reduce:PoisonBOT': { target: Target; turns: number };\n};\n\nconst engineFunctions = {\n  'Debug:GGWP': effectFun(() => (_, play, currentState) => [\n    play,\n    {\n      ...currentState,\n      enemies: currentState.enemies.map((m) => ({\n        ...m,\n        hp: { ...m.hp, current: 0 },\n      })) as EnemiesStats,\n    },\n  ]),\n  'Debug:Sudoku': effectFun(() => (_, play, currentState) => [\n    play,\n    {\n      ...currentState,\n      player: {\n        ...currentState.player,\n        hp: { ...currentState.player.hp, current: 0 },\n      },\n    },\n  ]),\n  'Utility:Cleanup': effectFun(() => (_origin, play, currentState) => [\n    play,\n    pipe(\n      actions.changeStatusPlayer(currentState, (o) => ({\n        ...o,\n        armor: { amount: 0 },\n        bleed: { turns: Math.max(o.bleed.turns - 1, 0) },\n        dodge: { active: false },\n        stun: { active: false },\n      })),\n      (newState) =>\n        newState.enemies.reduce(\n          (acc, v, idx) =>\n            actions.changeStatusMonster(acc, idx as MonsterTarget, (o) => ({\n              ...o,\n              armor: { amount: 0 },\n              bleed: { turns: Math.max(o.bleed.turns - 1, 0) },\n              dodge: { active: false },\n              stun: { active: false },\n            })),\n          currentState\n        )\n    ),\n  ]),\n};\n\nconst effectFunRepo: EffectFunctionRepository = {\n  ...engineFunctions,\n  // #region BASIC\n  'Basic:Rest': effectFun(() => (_origin, play, currentState) => [\n    play,\n    currentState,\n  ]),\n  'Basic:Move': effectFun(({ amount }) => (_origin, play, currentState) => [\n    play,\n    actions.changeDistance(currentState, currentState.target, amount),\n  ]),\n  'Basic:Attack': effectFun(({ amount }) => (_origin, play, currentState) => [\n    play,\n    actions.attackMonster(currentState, currentState.target, amount),\n  ]),\n  'Basic:Stamina': effectFun(({ amount }) => (_origin, play, currentState) => [\n    play,\n    actions.modifyPlayerStamina(currentState, amount),\n  ]),\n  'Basic:HP': effectFun(({ amount }) => (_origin, play, currentState) => [\n    play,\n    actions.changeStatPlayer(currentState, ({ hp }) => ({\n      hp: { ...hp, current: clamp(hp.current + amount, 0, hp.max) },\n    })),\n  ]),\n  // #endregion BASIC\n  // #region EFFECTS\n  'Effect:Dodge': effectFun(() => (origin, play, currentState) => [\n    play,\n    origin === 'Player'\n      ? actions.changeStatusPlayer(currentState, (o) => ({\n          ...o,\n          dodge: { active: true },\n        }))\n      : actions.changeStatusMonster(currentState, currentState.target, (o) => ({\n          ...o,\n          dodge: { active: true },\n        })),\n  ]),\n  'Effect:Armor': effectFun(({ amount }) => (origin, play, currentState) => [\n    play,\n    origin === 'Player'\n      ? actions.changeStatusPlayer(currentState, (o) => ({\n          ...o,\n          armor: { amount: amount },\n        }))\n      : actions.changeStatusMonster(currentState, currentState.target, (o) => ({\n          ...o,\n          armor: { amount: amount },\n        })),\n  ]),\n  'Effect:Stun': effectFun(() => (origin, play, currentState) => [\n    play,\n    origin === 'Player'\n      ? actions.changeStatusMonster(currentState, currentState.target, (o) => ({\n          ...o,\n          stun: { active: true },\n        }))\n      : actions.changeStatusPlayer(currentState, (o) => ({\n          ...o,\n          stun: { active: true },\n        })),\n  ]),\n  'Effect:Bleed': effectFun(({ target, turns }) => (_, play, currentState) => [\n    play,\n    target === 'Player'\n      ? actions.changeStatusPlayer(currentState, (o) => ({\n          ...o,\n          bleed: { turns: turns },\n        }))\n      : actions.changeStatusMonster(currentState, currentState.target, (o) => ({\n          ...o,\n          bleed: { turns: turns },\n        })),\n  ]),\n  'Effect:Poison': effectFun(({ target, turns }) => (_, play, currentState) => [\n    play,\n    pipe(\n      target === 'Player' ? ('Player' as Target) : currentState.target,\n      (gameTarget) =>\n        applyPoison(play, currentState, { target: gameTarget, turns })\n    ),\n  ]),\n  'Reduce:PoisonBOT': effectFun((params) => (_, play, currentState) => [\n    play,\n    applyPoison(play, currentState, params),\n  ]),\n  'Effect:Attack': effectFun(\n    ({ target, amount }) =>\n      (_, play, currentState) =>\n        [\n          play,\n          target === 'Player'\n            ? actions.changeStatPlayer(currentState, ({ attack }) => ({\n                attack: {\n                  ...attack,\n                  current: Math.min(attack.current + amount, attack.max),\n                },\n              }))\n            : actions.changeStatMonster(\n                currentState,\n                currentState.target,\n                ({ attack }) => ({\n                  attack: {\n                    ...attack,\n                    current: Math.min(attack.current + amount, attack.max),\n                  },\n                })\n              ),\n        ]\n  ),\n  'Effect:Speed': effectFun(({ target, amount }) => (_, play, currentState) => [\n    play,\n    target === 'Player'\n      ? actions.changeStatPlayer(currentState, ({ speed }) => ({\n          speed: {\n            ...speed,\n            current: Math.min(speed.current + amount, speed.max),\n          },\n        }))\n      : actions.changeStatMonster(\n          currentState,\n          currentState.target,\n          ({ speed }) => ({\n            speed: {\n              ...speed,\n              current: Math.min(speed.current + amount, speed.max),\n            },\n          })\n        ),\n  ]),\n  'Effect:Defence': effectFun(\n    ({ target, amount }) =>\n      (_, play, currentState) =>\n        [\n          play,\n          target === 'Player'\n            ? actions.changeStatPlayer(currentState, ({ defence }) => ({\n                defence: {\n                  ...defence,\n                  current: Math.min(defence.current + amount, defence.max),\n                },\n              }))\n            : actions.changeStatMonster(\n                currentState,\n                currentState.target,\n                ({ defence }) => ({\n                  defence: {\n                    ...defence,\n                    current: Math.min(defence.current + amount, defence.max),\n                  },\n                })\n              ),\n        ]\n  ),\n  // #endregion EFFECTS\n  // #region MONSTERS\n  'Monster:Attack': effectFun(({ amount }) => (_origin, play, currentState) => [\n    play,\n    actions.attackPlayer(currentState, amount),\n  ]),\n  'Monster:Summon': effectFun(\n    ({ enemy }) =>\n      (_origin, play, currentState) =>\n        actions.addEnemy(\n          play,\n          currentState,\n          enemies[enemy][0],\n          enemies[enemy][1]\n        )\n  ),\n  'Monster:Dead': effectFun(() => (_origin, play, currentState) => [\n    play,\n    currentState,\n  ]),\n  'Monster:Move': effectFun(() => (origin, play, currentState) => [\n    play,\n    actions.changeDistance(currentState, origin, -2),\n  ]),\n  // #endregion MONSTERS\n  // #region ITEMS\n  'BootsOfFlight:EOT': effectFun(() => (_, play, currentState) => [\n    play,\n    currentState.enemies.reduce(\n      (s, _m, idx) => actions.changeDistance(s, idx as MonsterTarget, 2),\n      currentState\n    ),\n  ]),\n  'Wand:MagicBolt': effectFun(() => (_, play, currentState) => {\n    let state = currentState;\n    while (state.player.stamina.current) {\n      state = actions.modifyPlayerStamina(state, -2);\n      state = actions.attackMonster(state, currentState.target, 1);\n    }\n    return [play, state];\n  }),\n  // #endregion ITEMS\n};\n\nexport type EffectFunctionT = SystemFunctionT &\n  BasicFunctionT &\n  StatusFunctionT &\n  ReduceFunctionT &\n  MonsterFunctionT &\n  ItemFunctionT;\n\nexport type ReduceFun = (\n  origin: Target,\n  play: Play,\n  newState: Snapshot\n) => [Play, Snapshot];\nexport type ParametrizedFun<T> = (params: T) => ReduceFun;\nexport type EffectFun<T> = Opaque<ParametrizedFun<T>, ParametrizedFun<T>>;\n\nexport type EffectFunctionRepository = {\n  [k in keyof EffectFunctionT]: (params: EffectFunctionT[k]) => ReduceFun;\n};\nexport type EffectFunRepoIndex = keyof EffectFunctionT & FunIndex;\nexport type EffectFunParams<T extends EffectFunRepoIndex> = Parameters<\n  EffectFunctionRepository[T]\n>[0];\n\n// #endregion\n// #region Modify state\n\nconst updateMonster = (\n  enemies: EnemiesStats,\n  target: Target,\n  override: (stats: EnemyStats) => Partial<EnemyStats>\n): EnemiesStats =>\n  enemies.map((m, idx) =>\n    idx === target ? { ...m, ...override(m) } : m\n  ) as EnemiesStats;\n\nconst updatePlayer = (\n  curr: Snapshot,\n  override: (player: PlayerStats) => Partial<PlayerStats>\n): Snapshot => {\n  return {\n    ...curr,\n    player: { ...curr.player, ...override(curr.player) },\n  };\n};\n\nconst updatePlayerStat = <T extends keyof PlayerStats>(\n  curr: Snapshot,\n  key: T,\n  modify: (player: PlayerStats[T]) => Partial<PlayerStats[T]>\n): Snapshot => {\n  const player = curr.player;\n  player[key] = {\n    ...player[key],\n    ...modify(player[key]),\n  };\n  return {\n    ...curr,\n    player,\n  };\n};\n\nconst actions = {\n  attackPlayer,\n  attackMonster,\n  changeStatPlayer: updatePlayer,\n  changeStatMonster: (\n    curr: Snapshot,\n    target: MonsterTarget,\n    f: (stats: EnemyStats) => Partial<EnemyStats>\n  ): Snapshot => ({\n    ...curr,\n    enemies: updateMonster(curr.enemies, target, f),\n  }),\n  changeStatusPlayer: (\n    curr: Snapshot,\n    updateStatus: (oldStatus: Status) => Status\n  ): Snapshot => ({\n    ...curr,\n    player: { ...curr.player, status: updateStatus(curr.player.status) },\n  }),\n  changeStatusMonster: (\n    curr: Snapshot,\n    target: MonsterTarget,\n    updateStatus: (oldStatus: Status) => Status\n  ): Snapshot => ({\n    ...curr,\n    enemies: updateMonster(curr.enemies, target, ({ status }) => ({\n      status: updateStatus(status),\n    })),\n  }),\n  changeDistance: (\n    curr: Snapshot,\n    origin: Target,\n    amount: number\n  ): Snapshot => ({\n    ...curr,\n    enemies: updateMonster(curr.enemies, origin, ({ distance }) => ({\n      distance: clamp(distance + amount, 0, 4) as MonsterTarget,\n    })),\n  }),\n  removeMonster: (\n    currPlay: Play,\n    currSnap: Snapshot,\n    target: MonsterTarget\n  ): [Play, Snapshot] => [\n    {\n      ...currPlay,\n      enemies: currPlay.enemies.filter((_, idx) => idx === target) as Enemies,\n    },\n    {\n      ...currSnap,\n      target: 0,\n      enemies: currSnap.enemies.filter(\n        (_, idx) => idx === target\n      ) as EnemiesStats,\n    },\n  ],\n  modifyPlayerStamina: (curr: Snapshot, amount: number): Snapshot =>\n    updatePlayerStat(curr, 'stamina', (stamina) => ({\n      current: clamp(stamina.current + amount, 0, stamina.max),\n    })),\n  addEotEffect: (curr: Snapshot, origin: Target, effect: Effect): Snapshot => ({\n    ...curr,\n    eot: [...(curr.eot ?? []), [origin, effect]],\n  }),\n  addBotEffect: (curr: Snapshot, origin: Target, effect: Effect): Snapshot => ({\n    ...curr,\n    bot: [...(curr.eot ?? []), [origin, effect]],\n  }),\n  addEnemy: (\n    play: Play,\n    curr: Snapshot,\n    enemy: Enemy,\n    enemyStats: EnemyStats\n  ): [Play, Snapshot] => {\n    return play.enemies.length < 5\n      ? [\n          {\n            ...play,\n            enemies: [...play.enemies, enemy] as Enemies,\n          },\n          {\n            ...curr,\n            enemies: [...curr.enemies, enemyStats] as EnemiesStats,\n          },\n        ]\n      : [play, curr];\n  },\n};\n\nfunction attackMonster(\n  curr: Snapshot,\n  target: MonsterTarget,\n  amount: number\n): Snapshot {\n  const monster = curr.enemies[target]!!;\n  const armor = monster.status.armor.amount;\n  const damage = amount + curr.player.attack.current;\n  const afterDefence = Math.max(damage - monster.defence.current, 0);\n  const afterArmor = Math.max(afterDefence - armor, 0);\n  const armorSpent = armor - (afterDefence - afterArmor);\n  const afterBleed = afterArmor + (monster.status.bleed.turns > 0 ? 1 : 0);\n  return {\n    ...curr,\n    enemies: updateMonster(curr.enemies, target, ({ status, hp }) => ({\n      hp: { max: hp.max, current: clamp(hp.current - afterBleed, 0, hp.max) },\n      status: { ...status, armor: { amount: armorSpent } },\n    })),\n  };\n}\n\nfunction attackPlayer(curr: Snapshot, amount: number): Snapshot {\n  const armor = curr.player.status.armor.amount;\n  const damage = amount + curr.player.attack.current;\n  const afterDefence = Math.max(damage - curr.player.defence.current, 0);\n  const afterArmor = Math.max(afterDefence - armor, 0);\n  const armorSpent = armor - (afterDefence - afterArmor);\n  const afterBleed = afterArmor + (curr.player.status.bleed.turns > 0 ? 1 : 0);\n  return updatePlayer(curr, ({ hp, status }) => ({\n    hp: { max: hp.max, current: clamp(hp.current - afterBleed, 0, hp.max) },\n    status: { ...status, armor: { amount: status.armor.amount - armorSpent } },\n  }));\n}\n\n// #endregion\n// #region Stat funs\n\nexport type StatsFunIndex = keyof typeof statsRepository;\nexport const statsRepository = {\n  '+Health': (\n    player: PlayerStats,\n    enemies: EnemiesStats\n  ): [PlayerStats, EnemiesStats] => [\n    { ...player, hp: makeStat(player.hp.current + 3) },\n    enemies,\n  ],\n  '+StaPerTurn': (\n    player: PlayerStats,\n    enemies: EnemiesStats\n  ): [PlayerStats, EnemiesStats] => [\n    { ...player, staminaPerTurn: makeStat(player.staminaPerTurn.current + 1) },\n    enemies,\n  ],\n  '+Stamina': (\n    player: PlayerStats,\n    enemies: EnemiesStats\n  ): [PlayerStats, EnemiesStats] => [\n    { ...player, stamina: makeStat(player.stamina.current + 2) },\n    enemies,\n  ],\n  '+Attack': (\n    player: PlayerStats,\n    enemies: EnemiesStats\n  ): [PlayerStats, EnemiesStats] => [\n    { ...player, attack: makeStat(player.attack.current + 1) },\n    enemies,\n  ],\n  '+Speed': (\n    player: PlayerStats,\n    enemies: EnemiesStats\n  ): [PlayerStats, EnemiesStats] => [\n    { ...player, speed: makeStat(player.speed.current + 1) },\n    enemies,\n  ],\n  '+Defence': (\n    player: PlayerStats,\n    enemies: EnemiesStats\n  ): [PlayerStats, EnemiesStats] => [\n    { ...player, defence: makeStat(player.defence.current + 1) },\n    enemies,\n  ],\n\n  '-Health': (\n    player: PlayerStats,\n    enemies: EnemiesStats\n  ): [PlayerStats, EnemiesStats] => [\n    { ...player, hp: makeStat(player.hp.current - 3) },\n    enemies,\n  ],\n  '-StaPerTurn': (\n    player: PlayerStats,\n    enemies: EnemiesStats\n  ): [PlayerStats, EnemiesStats] => [\n    { ...player, staminaPerTurn: makeStat(player.staminaPerTurn.current - 1) },\n    enemies,\n  ],\n  '-Stamina': (\n    player: PlayerStats,\n    enemies: EnemiesStats\n  ): [PlayerStats, EnemiesStats] => [\n    { ...player, stamina: makeStat(player.stamina.current - 2) },\n    enemies,\n  ],\n  '-Attack': (\n    player: PlayerStats,\n    enemies: EnemiesStats\n  ): [PlayerStats, EnemiesStats] => [\n    { ...player, attack: makeStat(player.attack.current - 1) },\n    enemies,\n  ],\n  '-Speed': (\n    player: PlayerStats,\n    enemies: EnemiesStats\n  ): [PlayerStats, EnemiesStats] => [\n    { ...player, speed: makeStat(player.speed.current - 1) },\n    enemies,\n  ],\n  '-Defence': (\n    player: PlayerStats,\n    enemies: EnemiesStats\n  ): [PlayerStats, EnemiesStats] => [\n    { ...player, defence: makeStat(player.defence.current - 1) },\n    enemies,\n  ],\n};\n\n// #endregion\n\nupdateGlobals({ effects: effectFunRepo });\n","import {\n  Enemies,\n  Player,\n  Snapshot,\n  MonsterTarget,\n  Target,\n  InventoryEffect,\n  EnemiesStats,\n  PlayerStats,\n  Play,\n  RNG,\n  StatsFun,\n  Effect,\n  PlayerTarget,\n  effectFunCall,\n  DisabledSkills,\n  safeEntries,\n  EffectPhase,\n  InventoryStats,\n  Seed,\n} from './types';\nimport { Seq, Set } from 'immutable';\nimport { allRanges, previousState } from './data';\nimport { Chance } from 'chance';\n// @ts-ignore fails on scripts despite having a d.ts file\nimport { toIndexableString } from 'pouchdb-collate';\nimport { extractFunction, statsRepository } from './effectRepository';\nimport { clamp, rangeArr } from './zFunDump';\n\n/**\n * @returns min inclusive, max exclusive rand\n */\nfunction turnDeterministicRng(\n  turns: number,\n  randPerTurn: number,\n  monsterSeed: Seed\n): RNG {\n  const monsterChance = new Chance(monsterSeed);\n  const monsterRng = rangeArr(turns).map((_) =>\n    rangeArr(randPerTurn)\n      // If max === 1, the rng function fails\n      .map((_) => monsterChance.floating({ min: 0, max: 0.9999, fixed: 4 }))\n  );\n  return monsterRng as RNG;\n}\n\nexport const turnRng = (\n  play: Play,\n  turn: number\n): ((min: number, max: number) => number) => {\n  const turnRng = [...play.rng[turn]];\n  return (min: number, max: number) =>\n    Math.floor((max - min) * turnRng.pop()!! + min);\n};\n\nexport const playerPassives = (player: Player): StatsFun[] =>\n  safeEntries(player.build)\n    .flatMap(([_k, s]) => s.passives ?? [])\n    .map((i) => statsRepository[i]);\n\nexport const playerActions = (\n  player: Player,\n  inventoryStats: InventoryStats\n): InventoryEffect[] =>\n  safeEntries(player.build)\n    .flatMap(([_k, i]) => i.effects ?? [])\n    .filter((e) => (e.amount ?? 999) > (inventoryStats[e.display]?.used ?? 0));\n\nconst enemiesBotEffects = (enemies: Enemies): [MonsterTarget, Effect][] =>\n  enemies\n    .flatMap((e, idx) =>\n      (e.bot ?? []).map((eff) => [idx as MonsterTarget, eff] as const)\n    )\n    // Sure, typescript\n    .map((a) => [...a]);\n\nconst enemiesEotEffects = (enemies: Enemies): [MonsterTarget, Effect][] =>\n  enemies\n    .flatMap((e, idx) =>\n      (e.eot ?? []).map((eff) => [idx as MonsterTarget, eff] as const)\n    )\n    // Sure, typescript\n    .map((a) => [...a]);\n\nexport const playerBotEffects = (\n  player: Player,\n  d: DisabledSkills\n): [PlayerTarget, Effect][] =>\n  safeEntries(player.build)\n    .flatMap(([k, s]) => (!Set(d).has(k) ? s.bot ?? [] : []))\n    .map((a) => ['Player', a]);\n\nexport const playerEotEffects = (\n  player: Player,\n  d: DisabledSkills\n): [PlayerTarget, Effect][] =>\n  safeEntries(player.build)\n    .flatMap(([k, s]) => (!Set(d).has(k) ? s.eot ?? [] : []))\n    .map((a) => ['Player', a]);\n\nexport const buildPlayer = (\n  player: Player,\n  playerStats: PlayerStats,\n  enemiesStats: EnemiesStats\n): [PlayerStats, EnemiesStats] =>\n  playerPassives(player).reduce(\n    ([p, e], fun) => fun(p, e),\n    [playerStats, enemiesStats]\n  );\n\nexport function makeGameNew(\n  player: Player,\n  playerStats: PlayerStats,\n  enemies: Enemies,\n  enemiesStats: EnemiesStats,\n  turns: number,\n  seed: number | string,\n  randPerTurn: number = 20\n): Play {\n  const [playerGameStats, enemyGameStats] = buildPlayer(\n    player,\n    playerStats,\n    enemiesStats\n  );\n  return makeGameNextLevel(\n    player,\n    playerGameStats,\n    enemies,\n    enemyGameStats,\n    {},\n    turns,\n    seed,\n    randPerTurn\n  );\n}\n\nexport function makeGameNextLevel(\n  player: Player,\n  playerStats: PlayerStats,\n  enemies: Enemies,\n  enemiesStats: EnemiesStats,\n  inventoryStats: InventoryStats,\n  turns: number,\n  seed: number | string,\n  randPerTurn: number = 20\n): Play {\n  return {\n    player,\n    enemies,\n    states: [\n      {\n        player: playerStats,\n        enemies: enemiesStats,\n        inventory: inventoryStats,\n        target: 0,\n        lastAttacks: [],\n        disabledSkills: [],\n      },\n    ],\n    rng: turnDeterministicRng(turns, randPerTurn, seed),\n    turns,\n    id: toIndexableString([player, enemies, turns, seed]),\n    seed,\n    version: '1',\n  };\n}\n\nconst reduceFuns = (\n  funs: [Target, Effect][],\n  p: Play,\n  s: Snapshot,\n  phase: EffectPhase\n): [Play, Snapshot] =>\n  Seq(funs)\n    .sortBy(([origin, a]) => {\n      if (a == null) {\n        throw new Error(\n          `Error in ${phase} by ${\n            origin === 'Player' ? 'Player' : p.enemies[origin]?.lore.name\n          }`\n        );\n      }\n      const priorityBonus =\n        origin === 'Player'\n          ? s.player.speed.current\n          : s.enemies[origin]!!.speed.current;\n      return clamp(a.priority - priorityBonus, 0, 4);\n    })\n    .reduce(\n      (acc, value) => {\n        const [origin, effect] = value;\n        const [oldPlay, oldState] = acc;\n        const monsterId = origin === 'Player' ? oldState.target : origin;\n        const targetMonster = oldState.enemies[monsterId]!!;\n\n        const isDeadAttackingMonster =\n          origin !== 'Player' && targetMonster.hp.current <= 0;\n        if (isDeadAttackingMonster) {\n          const newState: Snapshot = {\n            ...oldState,\n            lastAttacks: [\n              ...oldState.lastAttacks,\n              { origin, display: `💀💀DEAD💀💀 ${effect.display}`, phase },\n            ],\n          };\n          return [oldPlay, newState];\n        }\n\n        const isStunnedPlayer =\n          origin === 'Player' && oldState.player.status.stun.active;\n        const isStunnedMonster =\n          origin !== 'Player' && targetMonster.status.stun.active;\n        const isStunned = isStunnedPlayer || isStunnedMonster;\n        if (isStunned) {\n          const newState: Snapshot = {\n            ...oldState,\n            lastAttacks: [\n              ...oldState.lastAttacks,\n              { origin, display: `💫💫STUNNED💫💫 ${effect.display}`, phase },\n            ],\n          };\n          return [oldPlay, newState];\n        }\n\n        const isInRange = Set([...effect.range]).has(targetMonster.distance);\n        if (!isInRange) {\n          const newState: Snapshot = {\n            ...oldState,\n            lastAttacks: [\n              ...oldState.lastAttacks,\n              { origin, display: `❌❌WHIFFED❌❌ ${effect.display}`, phase },\n            ],\n          };\n          return [oldPlay, newState];\n        }\n\n        const monsterDodged =\n          effect.dodgeable &&\n          origin === 'Player' &&\n          targetMonster.status.dodge.active;\n        if (monsterDodged) {\n          const newState: Snapshot = {\n            ...oldState,\n            enemies: oldState.enemies.map((e, i) =>\n              i === monsterId\n                ? { ...e, status: { ...e.status, dodge: { active: false } } }\n                : e\n            ) as EnemiesStats,\n            lastAttacks: [\n              ...oldState.lastAttacks,\n              { origin, display: `💨💨DODGED💨💨 ${effect.display}`, phase },\n            ],\n          };\n          return [oldPlay, newState];\n        }\n\n        const playerDodged =\n          effect.dodgeable &&\n          origin !== 'Player' &&\n          oldState.player.status.dodge.active;\n        if (playerDodged) {\n          const newState: Snapshot = {\n            ...oldState,\n            player: {\n              ...oldState.player,\n              status: { ...oldState.player.status, dodge: { active: false } },\n            },\n            lastAttacks: [\n              ...oldState.lastAttacks,\n              { origin, display: `💨💨DODGED💨💨 ${effect.display}`, phase },\n            ],\n          };\n          return [oldPlay, newState];\n        }\n\n        const [newPlay, newState] = extractFunction(effect)(\n          origin,\n          oldPlay,\n          oldState\n        );\n        const finalState: Snapshot = {\n          ...newState,\n          lastAttacks: [\n            ...newState.lastAttacks,\n            { origin, display: effect.display, phase },\n          ],\n        };\n        return [newPlay, finalState];\n      },\n      [p, s]\n    );\n\nconst applyEffectStamina = (amount: number): Effect => ({\n  display: `${amount >= 0 ? '+' : ''}${amount} 💪`,\n  tooltip: `Use ${amount} stamina`,\n  effects: [effectFunCall(['Basic:Stamina', { amount }])],\n  range: allRanges,\n  priority: 0,\n  dodgeable: false,\n});\n\nconst effectEotCleanup: Effect = {\n  display: 'Cleanup',\n  tooltip: 'Cleanup',\n  effects: [effectFunCall('Utility:Cleanup')],\n  range: allRanges,\n  priority: 0,\n  dodgeable: false,\n};\n\nconst effectDead: Effect = {\n  display: '⚰',\n  tooltip: '⚰',\n  priority: 4,\n  effects: [effectFunCall('Monster:Dead')],\n  range: allRanges,\n  dodgeable: false,\n};\n\nexport const handlePlayerEffect = (play: Play, index: number): Play => {\n  const lastTurnState = previousState(play);\n  const usedSkill = playerActions(play.player, lastTurnState.inventory)[index];\n  const bot = lastTurnState.bot ?? [];\n  const eot = lastTurnState.eot ?? [];\n\n  const initialState: Snapshot = {\n    ...lastTurnState,\n    lastAttacks: [],\n    bot: undefined,\n    eot: undefined,\n    inventory: {\n      ...lastTurnState.inventory,\n      [usedSkill.display]: {\n        used: 1 + (lastTurnState.inventory[usedSkill.display]?.used ?? 0),\n      },\n    },\n  };\n\n  // Stamina\n  const [preBotPlay, preBotState] = reduceFuns(\n    [\n      [\n        'Player',\n        applyEffectStamina(\n          lastTurnState.player.staminaPerTurn.current - usedSkill.stamina\n        ),\n      ],\n    ],\n    play,\n    initialState,\n    'MAIN'\n  );\n\n  // BOT\n  // Lingering effects\n  const [postBotPlay, postBotState] = reduceFuns(\n    bot,\n    preBotPlay,\n    preBotState,\n    'BOT'\n  );\n  // Player & Monster effects\n  const entitiesBot: [Target, Effect][] = [\n    ...playerBotEffects(postBotPlay.player, postBotState.disabledSkills),\n    ...enemiesBotEffects(postBotPlay.enemies),\n  ];\n  const [postEntitiesBotPlay, postEntitiesBotState] = reduceFuns(\n    entitiesBot,\n    postBotPlay,\n    postBotState,\n    'BOT'\n  );\n\n  // Turn\n  const rand = turnRng(postEntitiesBotPlay, postEntitiesBotPlay.states.length);\n  const turnFunctions: [Target, Effect][] = Seq(postEntitiesBotPlay.enemies)\n    .zip(Seq(postEntitiesBotState.enemies))\n    .map(([e, stats], idx) => {\n      if (stats.hp.current > 0) {\n        const rolls = e.rolls[stats.distance];\n        const roll = rand(0, e.rolls[stats.distance].length);\n        // if (isNaN(roll)) {\n        //   throw new Error('Out of RNG exception');\n        // }\n        const effect = e.effects[rolls[roll]];\n        // if (effect == null) {\n        //   throw new Error(`Rolled outside the table ${JSON.stringify({ roll, rolls, effects: e.effects })}`);\n        // }\n        return [idx as Target, effect] as const;\n      } else {\n        return [idx as Target, effectDead] as const;\n      }\n    })\n    .concat([['Player' as Target, usedSkill] as const])\n    .toArray()\n    // Sure, typescript\n    .map((a) => [...a]);\n\n  const [newPlay, newState] = reduceFuns(\n    turnFunctions,\n    postEntitiesBotPlay,\n    postEntitiesBotState,\n    'MAIN'\n  );\n\n  // EOT\n  // Player & Monster effects\n  const entitiesEot = [\n    ...playerEotEffects(newPlay.player, newState.disabledSkills),\n    ...enemiesEotEffects(newPlay.enemies),\n  ];\n  const [postPlayerEotPlay, postPlayerEotState] = reduceFuns(\n    entitiesEot,\n    newPlay,\n    newState,\n    'EOT'\n  );\n  // Lingering effects\n  const [postEotPlay, postEotState] = reduceFuns(\n    eot,\n    postPlayerEotPlay,\n    postPlayerEotState,\n    'EOT'\n  );\n  // Cleanup\n  const [postCleanup, postCleanupState] = reduceFuns(\n    [['Player' as Target, effectEotCleanup]],\n    postEotPlay,\n    postEotState,\n    'EOT'\n  );\n\n  const endOfTurn: Play = {\n    ...postCleanup,\n    states: [...postCleanup.states, postCleanupState],\n  };\n\n  return endOfTurn;\n};\n\nexport const setSelected = (play: Play, target: MonsterTarget): Play => {\n  play.states[play.states.length - 1].target = target;\n  return {\n    ...play,\n    states: [...play.states],\n  };\n};\n\nexport const setDisabledSkills = (\n  play: Play,\n  disabled: DisabledSkills\n): Play => {\n  play.states[play.states.length - 1].disabledSkills = disabled;\n  return {\n    ...play,\n    states: [...play.states],\n  };\n};\n\nexport type PlayState = 'win' | 'loss' | 'playing';\n\nexport const playState = (play: Play): PlayState => {\n  const state = play.states[play.states.length - 1];\n  return state.player.hp.current <= 0\n    ? 'loss'\n    : state.enemies.reduce((acc, monster) => acc + monster.hp.current, 0) <= 0\n    ? 'win'\n    : 'playing';\n};\n\nexport const scoreGame = (play: Play): number => {\n  const firstState = play.states[0];\n  const lastState = play.states[play.states.length - 1];\n\n  const turns = play.states.length; // 1-50\n  const hpLoss =\n    Math.max(0, firstState.player.hp.max - lastState.player.hp.current) /\n    firstState.player.hp.max; // 0-1\n  const staminaLoss =\n    Math.max(\n      0,\n      firstState.player.stamina.max - lastState.player.stamina.current\n    ) / firstState.player.hp.max; // 0-1\n  const enemies = lastState.enemies.length; // 1-5\n\n  return Math.floor(\n    enemies * (500 * hpLoss + 150 * staminaLoss + (500 - turns * 10))\n  );\n};\n","export const rangeArr = (max: number, min: number = 0) => {\n  let range = [...Array(max).keys()];\n  if (min >= 0) {\n    range.filter((i) => i < min);\n  }\n  return range;\n};\n\nexport const clamp = (num: number, min: number, max: number = Infinity) =>\n  Math.min(Math.max(num, min), max);\n\nexport const pipe = <T, U>(t: T, f: (t: T) => U): U => f(t);\n\nexport const pipe2 = <T, U, A>(t: T, u: U, f: (t: T, u: U) => A): A => f(t, u);\n\nexport const pipe3 = <T, U, V, A>(\n  t: T,\n  u: U,\n  v: V,\n  f: (t: T, u: U, v: V) => A\n): A => f(t, u, v);\n","import { EffectFunctionRepository } from './effectRepository';\nimport {\n  BuildRepository,\n  effectFunCall,\n  EnemyInfo,\n  EnemyRepository,\n  Play,\n} from './types';\n\nexport type Globals = {\n  debug: boolean;\n  trainingEnemy: EnemyInfo;\n  build?: BuildRepository;\n  effects?: EffectFunctionRepository;\n  enemies?: EnemyRepository;\n  ingame?: {\n    game: Play;\n    forceUpdate: () => void;\n  };\n};\n\nconst globalsDefault: Globals = {\n  debug: false,\n  trainingEnemy: [\n    {\n      lore: {\n        name: '🤖 Dummy 🤖',\n      },\n      effects: [\n        {\n          display: 'Approve of your life choices',\n          tooltip: \"You're doing great!\",\n          priority: 4,\n          effects: [effectFunCall(['Monster:Attack', { amount: 0 }])],\n          dodgeable: true,\n          range: [0, 1, 2, 3, 4],\n        },\n      ],\n      rolls: [[0], [0], [0], [0], [0]],\n    },\n    {\n      hp: { current: 300, max: 300 },\n      distance: 0,\n      speed: { current: 0, max: 0 },\n      attack: { current: 0, max: 0 },\n      defence: { current: 0, max: 0 },\n      status: {\n        dodge: { active: false },\n        armor: { amount: 0 },\n        bleed: { turns: 0 },\n        stun: { active: false },\n      },\n    },\n  ],\n};\n\nexport const globals = (): Globals =>\n  // @ts-ignore\n  globalThis.__buildmancer;\n\nexport const updateGlobals = (p: Partial<Globals>) => {\n  const theThis = globalThis as unknown as { __buildmancer: Globals };\n  theThis.__buildmancer = {\n    ...globalsDefault,\n    ...(theThis.__buildmancer ?? {}),\n    ...p,\n  };\n};\n\nupdateGlobals({});\n","import { Opaque } from 'type-fest';\nimport {\n  EffectFunParams,\n  EffectFunctionRepository,\n  EffectFunRepoIndex,\n  StatsFunIndex,\n} from './effectRepository';\n\nexport type Tuple<T, N extends number> = N extends N\n  ? number extends N\n    ? T[]\n    : _TupleOf<T, N, []>\n  : never;\ntype _TupleOf<T, N extends number, R extends unknown[]> = R['length'] extends N\n  ? R\n  : _TupleOf<T, N, [T, ...R]>;\n\nexport type Nel<T> = [T, ...T[]];\n\ntype Length<T extends any[]> = T extends { length: infer L } ? L : never;\ntype BuildTuple<L extends number, T extends any[] = []> = T extends {\n  length: L;\n}\n  ? T\n  : BuildTuple<L, [...T, any]>;\nexport type Subtract<\n  A extends number,\n  B extends number\n> = BuildTuple<A> extends [...infer U, ...BuildTuple<B>] ? Length<U> : never;\ntype EQ<A, B> = A extends B ? (B extends A ? true : false) : false;\ntype AtTerminus<A extends number, B extends number> = A extends 0\n  ? true\n  : B extends 0\n  ? true\n  : false;\ntype LT<A extends number, B extends number> = AtTerminus<A, B> extends true\n  ? EQ<A, B> extends true\n    ? false\n    : A extends 0\n    ? true\n    : false\n  : LT<Subtract<A, 1>, Subtract<B, 1>>;\n\nexport type TupleUpTo<T, N extends number> = EQ<N, 1> extends true\n  ? [T]\n  : TupleUpTo<T, Subtract<N, 1>> | Tuple<T, N>;\n\nexport type UpTo<N extends number> = EQ<N, 0> extends true\n  ? 0\n  : UpTo<Subtract<N, 1>> | N;\n\nexport interface Stat {\n  max: number;\n  current: UpTo<Stat['max']>;\n}\n\nexport interface Status {\n  dodge: { active: boolean };\n  stun: { active: boolean };\n  armor: { amount: number };\n  bleed: { turns: number };\n};\nexport interface PlayerStats {\n  hp: Stat;\n  stamina: Stat;\n  staminaPerTurn: Stat;\n  speed: Stat;\n  attack: Stat;\n  defence: Stat;\n  status: Status;\n}\nexport interface EnemyStats {\n  hp: Stat;\n  speed: Stat;\n  attack: Stat;\n  defence: Stat;\n  distance: UpTo<Subtract<Distances, 1>>;\n  status: Status;\n}\nexport type InventoryStats = {\n  [k in Item['display']]: { used: number };\n};\n\nexport type Priorities = 5;\nexport type Distances = 5;\nexport type MonsterCount = 5;\nexport type Staminas = 10;\n\nexport type EffectPhase = 'MAIN' | 'EOT' | 'BOT';\nexport interface EffectSummary {\n  origin: Target;\n  display: string;\n  phase: EffectPhase;\n}\n\nexport type DisabledSkills = (keyof BuildRepository)[];\nexport interface Snapshot {\n  player: PlayerStats;\n  enemies: EnemiesStats;\n  inventory: InventoryStats;\n  target: MonsterTarget;\n  lastAttacks: EffectSummary[];\n  bot?: Nel<[Target, Effect]>;\n  eot?: Nel<[Target, Effect]>;\n  disabledSkills: DisabledSkills;\n}\n\nexport type RNG = Opaque<number[][], 'RNG'>;\n\nexport type VersionString = '1';\nexport type Seed = number | string;\nexport interface Play {\n  states: Nel<Snapshot>;\n  player: Player;\n  enemies: Enemies;\n  rng: RNG;\n  turns: number;\n  id: string;\n  seed: Seed;\n  version: VersionString;\n}\n\ntype ItemOrMonster = string /* TODO all items */ | 'Monster';\nexport type FunIndex = `${ItemOrMonster}:${string}`;\n\nexport type StatsFunRepo = { [key in StatsFunIndex]: StatsFun };\nexport type StatsFun = (\n  player: PlayerStats,\n  enemies: EnemiesStats\n) => [PlayerStats, EnemiesStats];\n\nexport type Ranges = UpTo<Subtract<Distances, 1>>[];\n\ninterface EffectFunCallT {\n  index: EffectFunRepoIndex;\n  parameters: EffectFunParams<EffectFunRepoIndex>;\n}\nexport type EffectFunCall = Opaque<EffectFunCallT, EffectFunCallT>;\nexport const effectFunCall = <T extends EffectFunRepoIndex>(\n  t: EffectFunParams<T> extends undefined ? T : [T, EffectFunParams<T>]\n): EffectFunCall =>\n  (Array.isArray(t)\n    ? { index: t[0], parameters: t[1] }\n    : { index: t, parameters: undefined }) as EffectFunCall;\nexport const callEffectFun = <T extends EffectFunRepoIndex>(\n  repo: EffectFunctionRepository,\n  t: T,\n  p: EffectFunParams<T>\n) => {\n  const f = repo[t];\n  // @ts-expect-error: index and parameters are enforced to be compatible at construction and the runtime check above ^^^^\n  return f(p);\n};\n\nexport interface Effect {\n  display: string;\n  tooltip: string;\n  effects: Nel<EffectFunCall>;\n  priority: UpTo<Subtract<Priorities, 1>>;\n  range: Ranges;\n  dodgeable: boolean;\n}\nexport interface InventoryEffect extends Effect {\n  stamina: UpTo<Subtract<Staminas, 1>>;\n  amount?: number;\n}\n\nexport type MonsterTarget = UpTo<Subtract<MonsterCount, 1>>;\nexport type PlayerTarget = 'Player';\nexport type Target = MonsterTarget | PlayerTarget;\n\nexport interface BuildRepository {\n  debug: Item[];\n  basic: Item[];\n  class: Item[];\n  skill: Item[];\n  weapon: Item[];\n  offhand: Item[];\n  consumable: Item[];\n  armor: Item[];\n  headgear: Item[];\n  footwear: Item[];\n  charm: Item[];\n}\nexport type Build = {\n  [k in keyof BuildRepository]: Item;\n};\n\nexport type EnemyInfo = [Enemy, EnemyStats];\nexport type EnemyRepository = EnemyInfo[];\n\nexport interface Item {\n  display: string;\n  tooltip?: string;\n  passives?: StatsFunIndex[];\n  bot?: Nel<Effect>;\n  eot?: Nel<Effect>;\n  effects?: Nel<InventoryEffect>;\n  //[key: string]: any;\n}\n\nexport interface Player {\n  id: string;\n  lore: Record<string, string | number>;\n  build: Build;\n}\n\n// Place in the array for now\ntype EffectIdentity = number;\nexport interface Enemy {\n  lore: Record<string, string | number>;\n  effects: Nel<Effect>;\n  rolls: Tuple<EffectIdentity[], Distances>;\n  bot?: Nel<Effect>;\n  eot?: Nel<Effect>;\n}\n\nexport type Enemies = TupleUpTo<Enemy, MonsterCount>;\nexport type EnemiesStats = TupleUpTo<EnemyStats, MonsterCount>;\n\nexport const safeEntries = <T, K extends keyof T>(o: {\n  [s in K]: T[s];\n}): [K, T[K]][] => Object.entries(o).map(([k, v]) => [k as K, v as T[K]]);\n","import WebSocket from 'ws';\nimport { assign, createMachine, interpret } from 'xstate';\nimport { inspect } from '@xstate/inspect/lib/server.js';\nimport { scoreGame } from '../game/playGame';\n\nconst isDebug = process && process.env['SMD'] === '1';\n\nif (isDebug) {\n  inspect({\n    server: new WebSocket.Server({\n      port: 8888,\n    }),\n  });\n}\n\nconst toMenu = {\n  on: {\n    MENU: { target: 'main' },\n  },\n};\n\nconst quick = {\n  initial: 'play',\n  states: {\n    play: {\n      entry: ['reset'],\n      on: {\n        WIN: { target: 'win' },\n        LOSE: { target: 'lose' },\n      },\n    },\n    win: { type: 'final' as const },\n    lose: { type: 'final' as const },\n  },\n  ...toMenu,\n};\n\nconst single = {\n  initial: 'player',\n  states: {\n    player: {\n      entry: ['reset'],\n      on: {\n        PLAYER: { target: 'encounter' },\n      },\n    },\n    encounter: {\n      on: {\n        ENCOUNTER: { target: 'play' },\n      },\n    },\n    play: {\n      on: {\n        WIN: { target: 'win' },\n        LOSE: { target: 'lose' },\n      },\n    },\n    win: { type: 'final' as const },\n    lose: { type: 'final' as const },\n  },\n  ...toMenu,\n};\n\nconst arcade = {\n  initial: 'player',\n  states: {\n    player: {\n      entry: ['reset'],\n      on: {\n        PLAYER: { target: 'play' },\n      },\n    },\n    play: {\n      on: {\n        WIN: [\n          { target: 'victory', cond: 'isFinal' },\n          {\n            target: 'play',\n            actions: ['bumpVictories', 'bumpScore'],\n            internal: true,\n          },\n        ],\n        LOSE: { target: 'defeat' },\n      },\n    },\n    victory: {\n      type: 'final' as const,\n    },\n    defeat: {\n      type: 'final' as const,\n    },\n  },\n  ...toMenu,\n};\n\nconst survival = {\n  initial: 'player',\n  states: {\n    player: {\n      entry: ['reset'],\n      on: {\n        PLAYER: { target: 'play' },\n      },\n    },\n    play: {\n      on: {\n        WIN: { target: 'play', actions: ['bumpVictories'] },\n        LOSE: { target: 'defeat' },\n      },\n    },\n    defeat: {\n      type: 'final' as const,\n      on: {\n        // ACK: { target: '#menus.leaderboards' }\n      },\n    },\n  },\n  ...toMenu,\n};\n\nconst puzzle = {\n  initial: 'puzzle',\n  states: {\n    puzzle: {\n      on: {\n        PLAYER: { target: 'player' },\n      },\n    },\n    player: {\n      on: {\n        SELECTED: { target: 'play' },\n      },\n    },\n    play: {\n      on: {\n        COMPLETE: { target: 'complete' },\n      },\n    },\n    complete: {\n      on: {\n        NEXT: { target: 'player' },\n        SELECT: { target: 'puzzle' },\n      },\n    },\n  },\n  ...toMenu,\n};\n\nconst load = {\n  initial: 'load',\n  states: {\n    load: {\n      on: {\n        LOAD: { target: 'play' },\n      },\n    },\n    play: {\n      on: {\n        WIN: { target: 'win' },\n        LOSE: { target: 'lose' },\n      },\n    },\n    win: { type: 'final' as const },\n    lose: { type: 'final' as const },\n  },\n  ...toMenu,\n};\n\nconst training = {\n  initial: 'player',\n  states: {\n    player: {\n      entry: ['reset'],\n      on: {\n        PLAYER: { target: 'play' },\n      },\n    },\n    play: {\n      on: {\n        WIN: { target: 'win' },\n        LOSE: { target: 'lose' },\n      },\n    },\n    win: { type: 'final' as const },\n    lose: { type: 'final' as const },\n  },\n  ...toMenu,\n};\n\nconst makeArcadeContext = () => ({\n  victories: 0,\n  score: 0,\n  seed: Math.random(),\n});\nconst makeSurvivalContext = () => ({\n  victories: 0,\n  seed: Math.random(),\n});\nconst makeSingleContext = () => ({\n  seed: Math.random(),\n});\nconst makeGameContext = () => ({\n  arcadeContext: makeArcadeContext(),\n  survivalContext: makeSurvivalContext(),\n  singleContext: makeSingleContext(),\n});\n\nexport const gameMenuMachine = createMachine(\n  {\n    tsTypes: {} as import('./menuStateMachine.typegen').Typegen0,\n    id: 'menus',\n    initial: 'main',\n    context: makeGameContext(),\n    states: {\n      main: {\n        on: {\n          QUICK: { target: 'quick' },\n          SINGLE: { target: 'single' },\n          TRAINING: { target: 'training' },\n          ARCADE: { target: 'arcade' },\n          SURVIVAL: { target: 'survival' },\n          LOAD: { target: 'load' },\n          // PUZZLE: { target: 'puzzle' },\n          // LEADERBOARDS: { target: 'leaderboards' },\n        },\n      },\n      quick: {\n        ...quick,\n      },\n      single: {\n        ...single,\n      },\n      arcade: {\n        ...arcade,\n      },\n      survival: {\n        ...survival,\n      },\n      load: {\n        ...load,\n      },\n      training: {\n        ...training,\n      },\n      // puzzle: {\n      //   ...puzzle,\n      // },\n      // leaderboards: {\n      //   ...toMenu,\n      // }\n    },\n  },\n  {\n    guards: {\n      isFinal: ({ arcadeContext: { victories } }) => victories + 1 >= 7,\n    },\n    actions: {\n      bumpVictories: assign({\n        arcadeContext: ({ arcadeContext }, _event) => ({\n          ...arcadeContext,\n          victories: arcadeContext.victories + 1,\n          seed: Math.random(),\n        }),\n        survivalContext: ({ survivalContext }, _event) => ({\n          ...survivalContext,\n          victories: survivalContext.victories + 1,\n          seed: Math.random(),\n        }),\n      }),\n      bumpScore: assign({\n        arcadeContext: ({ arcadeContext }, { game }) => ({\n          ...arcadeContext,\n          score: arcadeContext.score + scoreGame(game),\n          seed: Math.random(),\n        }),\n      }),\n      reset: assign({\n        survivalContext: (c, e) => makeSurvivalContext(),\n        arcadeContext: (c, e) => makeArcadeContext(),\n        singleContext: (c, e) => makeSingleContext(),\n      }),\n    },\n  }\n);\n\nif (isDebug) {\n  interpret(gameMenuMachine, { devTools: true })\n    .onTransition((state) => console.log(state))\n    .start();\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (\n    process &&\n    process.env.NODE_ENV === 'production' &&\n    'serviceWorker' in navigator\n  ) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://cra.link/PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://cra.link/PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n"],"sourceRoot":""}