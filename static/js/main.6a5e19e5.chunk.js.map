{"version":3,"sources":["components/Enemy.tsx","components/Player.tsx","utils/data.ts","playGame.ts","components/Game.tsx","hooks/usePressedKeys.tsx","components/PlayerBuilder.tsx","hooks/useScroll.tsx","components/EncounterBuilder.tsx","geneticalgorithm/geneticalgorithm.js","tinkerer/tinkerer.ts","App.tsx","serviceWorkerRegistration.ts","reportWebVitals.ts","index.tsx"],"names":["EnemyCard","effects","enemy","enemyStats","isSelected","onSelect","latestAttack","canAct","Card","bg","undefined","Body","Title","lore","name","hp","Text","distance","rolls","map","idx","Seq","countBy","e","display","toArray","v","find","a","range","priority","length","toFixed","join","Button","disabled","onClick","PlayerCard","selectedButtons","player","playerStats","onClickEffect","lastAction","Subtitle","className","build","class","stamina","Stack","direction","gap","Object","values","flatMap","active","has","_","startState","play","states","previousState","makeRange","number","Set","selfRange","effectDead","effect","effectRepository","_origin","_play","newState","actions","changeDistance","target","currentState","attackMonster","funs","reduce","acc","value","origin","chain","attackPlayer","modifyPlayerStamina","_p","enemies","s","m","basic","skill","weapon","offhand","consumable","armor","headgear","footwear","bot","eot","charm","passive","randomName","names","Math","floor","random","rage","clamp","num","min","max","turnDeterministicRng","turns","randPerTurn","monsterSeed","monsterChance","Chance","Array","keys","floating","fixed","updateMonster","override","playerActions","start","curr","amount","handlePlayerEffect","index","usedSkill","rand","turn","turnRng","rng","pop","functions","zip","stats","concat","sortBy","latestState","staminaPerTurn","oldState","lastAttacks","setSelected","Game","game","solveGame","undo","redo","hint","enemiesStats","playerSkills","monsterHealth","isPlayerAlive","areMonstersAlive","endGame","pressed","onUp","useState","pressedKeys","updatePressedKeys","downHandler","key","set","upHandler","useCallback","filter","k","useEffect","window","addEventListener","removeEventListener","usePressedKeys","valNum","parseInt","Container","fluid","Row","Col","sm","md","Player","xs","Enemy","first","selects","entries","type","options","ElementPicker","section","setField","scrollParams","elRef","useRef","current","scrollIntoView","useScroll","behavior","block","scrollTo","scrollRef","Form","Label","ButtonGroup","size","id","variant","ref","PlayerBuilder","onSave","React","form","setForm","age","setLore","displayType","onSubmit","preventDefault","style","marginBottom","field","Navbar","maxHeight","EncounterBuilder","encounter","setEncounter","found","pickone","geneticAlgorithmConstructor","settingWithDefaults","settings","defaults","mutationFunction","crossoverFunction","fitnessFunction","doesABeatBFunction","population","Error","populationSize","phenotype","b","cloneJSON","object","JSON","parse","stringify","mutate","crossover","mate","evolve","push","populate","otherIndex","temp","randomizePopulationOrder","nextGeneration","p","competitor","compete","this","best","scored","scoredPopulation","score","bestScore","config","clone","defaultTinkererOptions","playerSeed","weights","monster","debug","tinkerer","iter","optionsOverride","oldPlay","newPlay","d6","natural","latest","unavailable","exclude","playerHealth","playerStamina","startPlayerHealth","startPlayerStamina","startMonsterHealth","monsterKillingFitness","playerAlivenessFitness","killSpeedFitness","staminaFitness","fitness","console","log","gen","GeneticAlgorithmConstructor","i","App","status","setStatus","playerBuild","setPlayerBuild","encounterBuild","setGame","setRedo","seed","toIndexableString","encounterStats","newRedo","slice","iterations","maxBy","isLocalhost","Boolean","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","onUpdate","onSuccess","catch","error","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById","URL","process","href","fetch","headers","response","contentType","get","indexOf","ready","unregister","reload","checkValidServiceWorker","serviceWorkerRegistration"],"mappings":"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,QACA,QACA,SACA,QACA,SACA,SACA,SACA,SACA,WACA,UACA,UACA,SACA,OACA,QACA,QACA,QACA,MACA,SACA,SACA,OACA,UACA,QACA,UACA,SACA,UACA,QACA,SACA,UACA,UACA,SACA,OACA,QACA,SACA,SACA,WACA,QACA,OACA,UACA,OACA,SACA,SACA,QACA,UACA,SACA,SACA,OACA,QACA,QACA,SACA,QACA,QACA,SACA,SACA,OACA,OACA,SACA,QACA,QACA,UACA,SACA,QACA,UACA,UACA,UACA,WACA,QACA,WACA,QACA,SACA,SACA,OACA,SACA,SACA,QACA,OACA,WACA,SACA,QACA,UACA,SACA,WACA,UACA,SACA,SACA,SACA,QACA,QACA,OACA,OACA,QACA,QACA,WACA,QACA,UACA,SACA,WACA,QACA,OACA,OACA,OACA,SACA,WACA,OACA,OACA,QACA,MACA,SACA,OACA,WACA,QACA,UACA,SACA,MACA,UACA,QACA,SACA,QACA,SACA,QACA,QACA,SACA,QACA,UACA,QACA,QACA,SACA,SACA,OACA,QACA,SACA,SACA,UACA,QACA,QACA,QACA,OACA,QACA,OACA,QACA,UACA,SACA,QACA,QACA,QACA,QACA,SACA,UACA,WACA,QACA,QACA,QACA,UACA,SACA,QACA,SACA,UACA,SACA,QACA,QACA,SACA,QACA,OACA,UACA,QACA,SACA,UACA,SACA,MACA,QACA,OACA,MACA,QACA,YACA,OACA,QACA,QACA,SACA,QACA,QACA,UACA,QACA,SACA,UACA,U,QCjdIK,EAAQ,SAACC,EAAaC,EAAaC,GAA3B,OACZP,KAAKM,IAAIN,KAAKO,IAAIF,EAAKC,GAAMC,IAK/B,SAASC,EAAqBC,EAAeC,EAAqBC,GAChE,IAAMC,EAAgB,IAAIC,SAAOF,GAKjC,OAHE,YAAIG,MAAML,GAAOM,QACdlG,KAAI,SAAAqC,GAAC,OAAI,YAAI4D,MAAMJ,GAAaK,QAC9BlG,KAAI,SAAAqC,GAAC,OAAI0D,EAAcI,SAAS,CAAEV,IAAK,EAAGC,IAAK,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","file":"static/js/main.6a5e19e5.chunk.js","sourcesContent":["import React from \"react\";\nimport { Card, Button } from \"react-bootstrap\";\nimport { Enemy, Effect, EnemyStats } from \"../types\";\nimport { Seq } from \"immutable\";\n\nconst skillPercents = (effects: Effect[]) =>\n  Seq(effects).countBy((e) => e.display).toArray().map(([display, v], idx) => {\n    const { range, priority } = effects.find(a => a.display === display)!!;\n    return <>[{(v / effects.length * 100).toFixed(2)}%] {display} ⏱:{priority} 🏹:{range.length === 5 ? 'Any' : range.map(a => a + 1).join(\",\")}<br key={idx} /></>\n  });\n\nconst EnemyCard: React.FC<{\n  enemy: Enemy;\n  enemyStats: EnemyStats;\n  latestAttack: string | undefined;\n  isSelected?: boolean;\n  onSelect: () => void;\n  canAct: boolean;\n}> = ({ enemy, enemyStats, isSelected, onSelect, latestAttack, canAct }) => (\n  <Card bg={isSelected ? \"info\" : undefined}>\n    <Card.Body>\n      <Card.Title>{enemy.lore.name} {enemyStats.hp > 0 ? \"\" : (<b>💀DEAD💀</b>)}</Card.Title>\n      <Card.Text>❤:{enemyStats.hp} 🏹:{enemyStats.distance}</Card.Text>\n      {latestAttack && (<Card.Text>Latest attack: {latestAttack}</Card.Text>)}\n      <Card.Text>\n        Next attack prediction:\n        <br />\n        {skillPercents(enemy.rolls[enemyStats.distance - 1].map((idx) => enemy.effects[idx]))}\n        <br />\n      </Card.Text>\n      {canAct && (<Button disabled={isSelected} onClick={onSelect}>Select</Button>)}\n    </Card.Body>\n  </Card>\n);\n\nexport default EnemyCard;\n","import React from \"react\";\nimport { Card, Button, Stack } from \"react-bootstrap\";\nimport { Player, PlayerStats } from \"../types\";\n\nconst PlayerCard: React.FC<{\n  selectedButtons: Set<string>,\n  player: Player;\n  playerStats: PlayerStats;\n  canAct: boolean;\n  lastAction: string | undefined;\n  onClickEffect: (index: number) => void;\n}> = ({ selectedButtons, player, playerStats, onClickEffect, canAct, lastAction }) => (\n  <Card>\n    <Card.Body>\n      <Card.Title>{player.lore.name}{playerStats.hp > 0 ? \"\" : (<b> 💀DEAD💀 </b>)}</Card.Title>\n      <Card.Subtitle className=\"mb-2 text-muted\">\n        {player.build.class.display}\n      </Card.Subtitle>\n      <Card.Text>{playerStats.hp} ❤ {playerStats.stamina} 💪</Card.Text>\n      {lastAction && (<Card.Text>Last action: {lastAction}</Card.Text>)}\n    </Card.Body>\n    {canAct && (<Card.Body>\n      <Stack direction=\"horizontal\" gap={2}>\n        {Object.values(player.build)\n          .flatMap((a) => a.effects)\n          .map((e, idx) => (<div>\n            <Button\n              key={e.display}\n              active={selectedButtons.has(e.display)}\n              disabled={playerStats.stamina < e.stamina}\n              onClick={(_) => onClickEffect(idx)}\n            >\n              [<i>{idx + 1}</i>] <b>{e.display}</b>\n            </Button>\n            <Card.Text>💪:{e.stamina} ⏱:{e.priority}<br />🏹:{e.range.length === 5 ? 'Any' : e.range.map(a => a + 1).join(\",\")}</Card.Text>\n          </div>\n          ))}\n      </Stack>\n    </Card.Body>)}\n  </Card>\n);\n\nexport default PlayerCard;\n","import { Chance } from \"chance\";\nimport { Subtract } from \"type-fest/source/internal\";\nimport { actions } from \"../playGame\";\nimport { Build, Distances, Effect, EffectFun, EffectFunRepo, Enemy, EnemyStats, Item, MonsterTarget, Player, PlayerStats, Ranges, Snapshot, StatsFunRepo, UpTo, Play } from \"../types\";\n\nexport const startState = (play: Play): Snapshot => play.states[0];\nexport const previousState = (play: Play): Snapshot => play.states[play.states.length - 1];\n\nexport const chain = (...funs: Array<EffectFun>): EffectFun =>\n  // TODO check direction of the fold\n  funs.reduce((acc, value) => (origin, play, newState) => value(origin, play, acc(origin, play, newState)));\n\nexport const randomEnemy = (): [Enemy, EnemyStats] => new Chance().pickone(enemies);\n\nexport const randomPlayer = (statsOverride?: PlayerStats, buildOverride?: Build): [Player, PlayerStats] => {\n  const rng = new Chance();\n  return [{\n    id: rng.string(),\n    lore: {\n      name: randomName(),\n      age: rng.age(),\n    },\n    build: {\n      basic: rng.pickone(build.basic),\n      class: rng.pickone(build.class),\n      armor: rng.pickone(build.armor),\n      weapon: rng.pickone(build.weapon),\n      offhand: rng.pickone(build.offhand),\n      footwear: rng.pickone(build.footwear),\n      headwear: rng.pickone(build.headwear),\n      charm: rng.pickone(build.charm),\n      ...buildOverride,\n    }\n  }, {\n    hp: 25,\n    stamina: 8,\n    staminaPerTurn: 2,\n    ...statsOverride,\n  }];\n}\n\nexport const makeRange = (...number: UpTo<Subtract<Distances, 1>>[]) => [...new Set(number)] as Ranges;\nexport const allRanges = makeRange(0, 1, 2, 3, 4);\nexport const selfRange = allRanges;\n\nexport const effectDead: Effect = { display: \"DEAD\", priority: 4, effect: \"Monster:Dead\", range: makeRange() };\nexport const effectRepository: EffectFunRepo = {\n  'Monster:Dead': (_origin, _play, newState) => newState,\n  'Basic:Rest': (_origin, _play, newState) => newState,\n  'Basic:Advance': (_origin, _play, newState) => actions.changeDistance(newState, newState.target, -2),\n  'Basic:Retreat': (_origin, _play, newState) => actions.changeDistance(newState, newState.target, 2),\n  'Axe:Chop': (_, play, currentState) => actions.attackMonster(startState(play), currentState, 3),\n  'Axe:Cut': (_, play, currentState) => actions.attackMonster(startState(play), currentState, 3),\n  'Hook:GetHere': chain(\n    (_, play, currentState) => actions.attackMonster(startState(play), currentState, 3),\n    (_origin, _play, currentState) => actions.changeDistance(currentState, currentState.target, -1),\n  ),\n  'Monster:Swipe': (_, play, currentState) => actions.attackPlayer(startState(play), currentState, 2),\n  'Monster:Roar': (_, play, currentState) => actions.modifyPlayerStamina(startState(play), currentState, -5),\n  'Monster:Jump': (origin, _, currentState) => actions.changeDistance(currentState, origin, -2),\n  'BootsOfFlight:BOT': (_, _p, currentState) => currentState.enemies.reduce((s, m, idx) => actions.changeDistance(s, idx as MonsterTarget, 2), currentState),\n  'BootsOfFlight:EOT': (_, _p, currentState) => currentState.enemies.reduce((s, m, idx) => actions.changeDistance(s, idx as MonsterTarget, -2), currentState),\n};\n\nexport const statsRepository: StatsFunRepo = {\n  'Charm:ofHealth': (player, enemies) => [{ ...player, hp: player.hp + 10 }, enemies],\n  'Charm:ofHaste': (player, enemies) => [{ ...player, staminaPerTurn: player.staminaPerTurn + 1 }, enemies],\n  'Charm:ofResilience': (player, enemies) => [{ ...player, stamina: player.stamina + 10 }, enemies],\n}\n\nexport const build: Record<\n  string,\n  Item[]\n> = {\n  basic: [\n    {\n      display: \"Basic\",\n      effects: [\n        {\n          display: \"Rest\",\n          effect: \"Basic:Rest\",\n          priority: 4,\n          stamina: 0,\n          range: selfRange,\n        },\n        {\n          display: \"Advance\",\n          effect: \"Basic:Advance\",\n          priority: 4,\n          stamina: 1,\n          range: selfRange,\n        },\n        {\n          display: \"Retreat\",\n          effect: \"Basic:Retreat\",\n          priority: 4,\n          stamina: 1,\n          range: selfRange,\n        }\n      ]\n    }\n  ],\n  class: [\n    {\n      display: \"Warrior\",\n      effects: [],\n    },\n    {\n      display: \"Mage\",\n      effects: [],\n    },\n    {\n      display: \"Rogue\",\n      effects: [],\n    },\n  ],\n  skill: [\n    {\n      display: \"Sturdy\",\n      effects: [],\n    },\n    {\n      display: \"Nimble\",\n      effects: [],\n    },\n  ],\n  weapon: [\n    {\n      display: \"Axe\",\n      effects: [\n        {\n          display: \"Chop\",\n          effect: \"Axe:Chop\",\n          priority: 2,\n          stamina: 2,\n          range: makeRange(0, 1),\n        },\n        {\n          display: \"Cut\",\n          effect: \"Axe:Cut\",\n          priority: 3,\n          stamina: 2,\n          range: makeRange(0),\n        },\n      ],\n    },\n  ],\n  offhand: [\n    {\n      display: \"Hook\",\n      effects: [\n        {\n          display: \"Get over here!\",\n          effect: \"Hook:GetHere\",\n          priority: 4,\n          stamina: 3,\n          range: makeRange(2, 3, 4),\n        },\n      ],\n    },\n  ],\n  consumable: [\n    {\n      display: \"Potion\",\n      effects: [],\n    },\n  ],\n  armor: [\n    {\n      display: \"Heavy\",\n      effects: [],\n    },\n  ],\n  headgear: [\n    {\n      display: \"Helm\",\n      effects: [],\n    },\n  ],\n  footwear: [\n    {\n      display: \"Boots of Flight\",\n      bot: [\"BootsOfFlight:BOT\"],\n      eot: [\"BootsOfFlight:EOT\"],\n      effects: [],\n    },\n  ],\n  charm: [\n    {\n      display: \"of Health\",\n      effects: [],\n      passive: \"Charm:ofHealth\",\n    },\n    {\n      display: \"of Haste\",\n      effects: [],\n      passive: \"Charm:ofHaste\",\n    },\n    {\n      display: \"of Resilience\",\n      effects: [],\n      passive: \"Charm:ofResilience\",\n    },\n  ],\n};\n\nexport const randomName = () => names[Math.floor(Math.random() * names.length)];\n\nexport const enemies: [Enemy, EnemyStats][] = [\n  [{\n    lore: {\n      name: \"Sacapuntas\",\n    },\n    rolls: [\n      [0, 1, 2, 1, 0],\n      [0, 1, 0, 0, 0],\n      [0, 0, 0, 0, 0],\n      [0, 0, 0, 0, 0],\n      [0, 1, 2, 1, 0, 0],\n    ],\n    effects: [\n      { display: \"Swipe\", priority: 3, effect: \"Monster:Swipe\", range: makeRange(0, 1) },\n      { display: \"Roar\", priority: 1, effect: \"Monster:Roar\", range: makeRange(0, 1, 2, 3, 4) },\n      { display: \"Jump\", priority: 2, effect: \"Monster:Jump\", range: makeRange(2, 3, 4) },\n    ],\n  }, {\n    hp: 25,\n    rage: 0,\n    distance: 4,\n  }],\n  [{\n    lore: {\n      name: \"Cacahue\",\n    },\n    effects: [\n      { display: \"Swipe\", priority: 3, effect: \"Monster:Swipe\", range: makeRange(0, 1) },\n      { display: \"Roar\", priority: 1, effect: \"Monster:Roar\", range: makeRange(0, 1, 2, 3, 4) },\n      { display: \"Jump\", priority: 2, effect: \"Monster:Jump\", range: makeRange(2, 3, 4) },\n    ],\n    rolls: [\n      [0, 0, 0, 1, 0],\n      [0, 0, 0, 0, 0],\n      [0, 0, 0, 0, 0],\n      [0, 0, 0, 0, 0],\n      [0, 0, 2, 0, 0],\n    ]\n  }, {\n    hp: 30,\n    rage: 0,\n    distance: 4,\n  }],\n  [{\n    lore: {\n      name: \"Toro\",\n    },\n    effects: [\n      { display: \"Swipe\", priority: 3, effect: \"Monster:Swipe\", range: makeRange(0, 1) },\n      { display: \"Roar\", priority: 1, effect: \"Monster:Roar\", range: makeRange(0, 1, 2, 3, 4) },\n      { display: \"Jump\", priority: 2, effect: \"Monster:Jump\", range: makeRange(2, 3, 4) },\n    ],\n    rolls: [\n      [0, 0, 0, 1, 0],\n      [0, 0, 0, 0, 0],\n      [0, 0, 0, 0, 0],\n      [0, 0, 0, 0, 0],\n      [0, 0, 2, 0, 0],\n    ]\n  }, {\n    hp: 22,\n    rage: 0,\n    distance: 4,\n  }],\n];\n\nconst names = [\n  \"Lydan\",\n  \"Syrin\",\n  \"Ptorik\",\n  \"Joz\",\n  \"Varog\",\n  \"Gethrod\",\n  \"Hezra\",\n  \"Feron\",\n  \"Ophni\",\n  \"Colborn\",\n  \"Fintis\",\n  \"Gatlin\",\n  \"Jinto\",\n  \"Hagalbar\",\n  \"Krinn\",\n  \"Lenox\",\n  \"Revvyn\",\n  \"Hodus\",\n  \"Dimian\",\n  \"Paskel\",\n  \"Kontas\",\n  \"Weston\",\n  \"Azamarr \",\n  \"Jather \",\n  \"Tekren \",\n  \"Jareth\",\n  \"Adon\",\n  \"Zaden\",\n  \"Eune \",\n  \"Graff\",\n  \"Tez\",\n  \"Jessop\",\n  \"Gunnar\",\n  \"Pike\",\n  \"Domnhar\",\n  \"Baske\",\n  \"Jerrick\",\n  \"Mavrek\",\n  \"Riordan\",\n  \"Wulfe\",\n  \"Straus\",\n  \"Tyvrik \",\n  \"Henndar\",\n  \"Favroe\",\n  \"Whit\",\n  \"Jaris\",\n  \"Renham\",\n  \"Kagran\",\n  \"Lassrin \",\n  \"Vadim\",\n  \"Arlo\",\n  \"Quintis\",\n  \"Vale\",\n  \"Caelan\",\n  \"Yorjan\",\n  \"Khron\",\n  \"Ishmael\",\n  \"Jakrin\",\n  \"Fangar\",\n  \"Roux\",\n  \"Baxar\",\n  \"Hawke\",\n  \"Gatlen\",\n  \"Barak\",\n  \"Nazim\",\n  \"Kadric\",\n  \"Paquin\",\n  \"Kent\",\n  \"Moki\",\n  \"Rankar\",\n  \"Lothe\",\n  \"Ryven\",\n  \"Clawsen\",\n  \"Pakker\",\n  \"Embre\",\n  \"Cassian\",\n  \"Verssek\",\n  \"Dagfinn\",\n  \"Ebraheim\",\n  \"Nesso\",\n  \"Eldermar\",\n  \"Rivik\",\n  \"Rourke\",\n  \"Barton\",\n  \"Hemm\",\n  \"Sarkin\",\n  \"Blaiz \",\n  \"Talon\",\n  \"Agro\",\n  \"Zagaroth\",\n  \"Turrek\",\n  \"Esdel\",\n  \"Lustros\",\n  \"Zenner\",\n  \"Baashar \",\n  \"Dagrod \",\n  \"Gentar\",\n  \"Feston\",\n  \"Syrana\",\n  \"Resha\",\n  \"Varin\",\n  \"Wren\",\n  \"Yuni\",\n  \"Talis\",\n  \"Kessa\",\n  \"Magaltie\",\n  \"Aeris\",\n  \"Desmina\",\n  \"Krynna\",\n  \"Asralyn \",\n  \"Herra\",\n  \"Pret\",\n  \"Kory\",\n  \"Afia\",\n  \"Tessel\",\n  \"Rhiannon\",\n  \"Zara\",\n  \"Jesi\",\n  \"Belen\",\n  \"Rei\",\n  \"Ciscra\",\n  \"Temy\",\n  \"Renalee \",\n  \"Estyn\",\n  \"Maarika\",\n  \"Lynorr\",\n  \"Tiv\",\n  \"Annihya\",\n  \"Semet\",\n  \"Tamrin\",\n  \"Antia\",\n  \"Reslyn\",\n  \"Basak\",\n  \"Vixra\",\n  \"Pekka \",\n  \"Xavia\",\n  \"Beatha \",\n  \"Yarri\",\n  \"Liris\",\n  \"Sonali\",\n  \"Razra \",\n  \"Soko\",\n  \"Maeve\",\n  \"Everen\",\n  \"Yelina\",\n  \"Morwena\",\n  \"Hagar\",\n  \"Palra\",\n  \"Elysa\",\n  \"Sage\",\n  \"Ketra\",\n  \"Lynx\",\n  \"Agama\",\n  \"Thesra \",\n  \"Tezani\",\n  \"Ralia\",\n  \"Esmee\",\n  \"Heron\",\n  \"Naima\",\n  \"Rydna \",\n  \"Sparrow\",\n  \"Baakshi \",\n  \"Ibera\",\n  \"Phlox\",\n  \"Dessa\",\n  \"Braithe\",\n  \"Taewen\",\n  \"Larke\",\n  \"Silene\",\n  \"Phressa\",\n  \"Esther\",\n  \"Anika\",\n  \"Rasy \",\n  \"Harper\",\n  \"Indie\",\n  \"Vita\",\n  \"Drusila\",\n  \"Minha\",\n  \"Surane\",\n  \"Lassona\",\n  \"Merula\",\n  \"Kye\",\n  \"Jonna\",\n  \"Lyla\",\n  \"Zet\",\n  \"Orett\",\n  \"Naphtalia\",\n  \"Turi\",\n  \"Rhays\",\n  \"Shike\",\n  \"Hartie\",\n  \"Beela\",\n  \"Leska\",\n  \"Vemery \",\n  \"Lunex\",\n  \"Fidess\",\n  \"Tisette\",\n  \"Partha\",\n]","import { Enemies, Player, Snapshot, MonsterTarget, Target, EnemyStats, InventoryEffect, EnemiesStats, PlayerStats, Play, RNG } from \"./types\";\nimport { Seq } from \"immutable\";\nimport { effectDead, effectRepository, previousState } from \"./utils/data\";\nimport { Chance } from \"chance\";\n// @ts-ignore fails on scripts despite having a d.ts file\nimport { toIndexableString } from 'pouchdb-collate';\n\nconst clamp = (num: number, min: number, max: number) =>\n  Math.min(Math.max(num, min), max);\n\n/**\n * @returns min inclusive, max exclusive rand\n */\nfunction turnDeterministicRng(turns: number, randPerTurn: number, monsterSeed: string | number): RNG {\n  const monsterChance = new Chance(monsterSeed);\n  const monsterRng =\n    [...Array(turns).keys()]\n      .map(_ => [...Array(randPerTurn).keys()]\n        .map(_ => monsterChance.floating({ min: 0, max: 1, fixed: 2 })));\n  return monsterRng as RNG;\n}\n\nexport const turnRng = (play: Play, turn: number) => (min: number, max: number): number => {\n  const turnRng = [...play.rng[turn]];\n  return Math.floor(((max - min) * turnRng.pop()!!) + min);\n}\n\nconst updateMonster = (enemies: EnemiesStats, target: Target, override: (stats: EnemyStats) => object): EnemiesStats =>\n  enemies.map((m, idx) =>\n    (idx === target)\n      ? { ...m, ...override(m) }\n      : m) as EnemiesStats;\n\nexport const playerActions = (player: Player): InventoryEffect[] =>\n  Object.values(player.build).flatMap((s) => s.effects);\n\nexport const actions = {\n  attackMonster: (start: Snapshot, curr: Snapshot, amount: number): Snapshot =>\n  ({\n    ...curr,\n    enemies: updateMonster(curr.enemies, curr.target, ({ hp }) => ({ hp: clamp(hp - amount, 0, start.enemies[curr.target]!!/* enforced by UI */.hp) })),\n  }),\n  changeDistance: (curr: Snapshot, origin: Target, amount: number): Snapshot =>\n  ({\n    ...curr,\n    enemies: updateMonster(curr.enemies, origin, ({ distance }) => ({ distance: clamp(distance + amount, 1, 5) })),\n  }),\n\n  attackPlayer: (start: Snapshot, curr: Snapshot, amount: number): Snapshot =>\n  ({\n    ...curr,\n    player: {\n      ...curr.player,\n      hp: clamp(curr.player.hp - amount, 0, start.player.hp)\n    },\n  }),\n  modifyPlayerStamina: (\n    start: Snapshot,\n    curr: Snapshot,\n    amount: number,\n  ): Snapshot =>\n  ({\n    ...curr,\n    player: {\n      ...curr.player,\n      stamina: clamp(curr.player.stamina + amount, 0, start.player.stamina),\n    },\n  }),\n};\n\nexport default function play(player: Player, playerStats: PlayerStats, enemies: Enemies, enemiesStats: EnemiesStats, turns: number, seed: number | string, randPerTurn: number = 20): Play {\n  return {\n    player,\n    enemies,\n    states: [{\n      player: playerStats,\n      enemies: enemiesStats,\n      target: 0,\n      lastAttacks: []\n    }],\n    rng: turnDeterministicRng(turns, randPerTurn, seed),\n    turns,\n    id: toIndexableString([player, enemies, turns, seed]),\n    seed,\n  };\n}\n\nexport const handlePlayerEffect = (play: Play, index: number): Play => {\n  const { enemies, player } = previousState(play);\n  const playerSkills = playerActions(play.player);\n  const usedSkill = playerSkills[index];\n  const rand = turnRng(play, play.states.length - 1);\n  const functions = Seq(play.enemies).zip(Seq(enemies))\n    .map(([e, stats], idx) =>\n      [idx as Target, stats.hp < 1\n        ? e.effects[e.rolls[stats.distance - 1][rand(0, e.rolls[stats.distance - 1].length)]]\n        : effectDead] as const)\n    .concat([['Player' as Target, usedSkill] as const])\n    .sortBy(([_origin, effect]) => effect.priority);\n\n  const latestState: Snapshot =\n    actions.modifyPlayerStamina(play.states[0], previousState(play), player.staminaPerTurn - usedSkill.stamina);\n  const [newState, lastAttacks] =\n    functions.reduce((acc, value) => {\n      const [origin, effect] = value;\n      const [oldState, lastAttacks] = acc;\n      const target = origin === 'Player' ? latestState.target : origin;\n      const isInRange = new Set([...effect.range]).has(latestState.enemies[target]?.distance!!);\n      return isInRange\n        ? [effectRepository[effect.effect](origin, play, oldState), [...lastAttacks, [origin, effect.display] as [Target, string]]]\n        : [oldState, [...lastAttacks, [origin, `${effect.display} ❌❌WHIFF❌❌`] as [Target, string]]];\n    }, [latestState, [] as [Target, string][]]);\n  newState.lastAttacks = lastAttacks;\n  return {\n    ...play,\n    states: [...play.states, newState],\n  };\n};\n\nexport const setSelected = (play: Play, target: MonsterTarget): Play => {\n  play.states[play.states.length - 1].target = target;\n  return {\n    ...play,\n    states: [...play.states],\n  };\n}\n","import { Container, Row, Col, Card } from \"react-bootstrap\";\n\nimport { MonsterTarget } from \"../types\";\n\nimport EnemyCard from \"./Enemy\";\nimport PlayerCard from \"./Player\";\nimport usePressedKeys from \"../hooks/usePressedKeys\";\nimport { Play, playerActions } from \"../playGame\";\nimport { Seq } from \"immutable\";\nimport { previousState } from \"../utils/data\";\nimport { Button } from \"react-bootstrap\";\n\nexport type GameProps = {\n  game: Play;\n  setSelected: (target: MonsterTarget) => void;\n  handlePlayerEffect: (index: number) => void,\n  solveGame: (iterations: number) => void,\n  hint: (iterations: number) => void,\n  undo: () => void\n  redo: (() => void) | undefined;\n};\n\nconst Game = ({ handlePlayerEffect, setSelected, game, solveGame, undo, redo, hint }: GameProps): JSX.Element => {\n  const { player, enemies } = game;\n  const { player: playerStats, enemies: enemiesStats, target, lastAttacks } = previousState(game);\n\n  const playerSkills = playerActions(player);\n  const monsterHealth = enemiesStats.reduce((acc, m) => m.hp + acc, 0);\n  const isPlayerAlive = playerStats.hp > 0;\n  const areMonstersAlive = monsterHealth > 0;\n  const endGame = game.states.length <= game.turns;\n  const canAct = isPlayerAlive && areMonstersAlive && endGame;\n\n  const pressed = usePressedKeys((key) => {\n    if (!canAct) return;\n    const valNum = parseInt(key);\n    if (valNum > 0 && valNum <= playerSkills.length) {\n      const hasStamina = playerSkills[valNum - 1].stamina <= playerStats.stamina;\n      if (!hasStamina) return;\n      handlePlayerEffect(valNum - 1);\n    }\n  });\n\n  const selectedButtons = new Set<string>([...pressed].flatMap((key: string) => {\n    const valNum = parseInt(key);\n    if (valNum > 0 && valNum <= playerSkills.length) {\n      return [playerSkills[valNum - 1].display];\n    } else {\n      return [];\n    }\n  }));\n\n  return (\n    <Container fluid>\n      <Row className=\"justify-content-center align-items-flex-start\">\n        <Col sm={12} md={8}>\n          <Row>\n            <Card.Title>\n              Turn {game.states.length} out of {game.turns} {!isPlayerAlive ? (<b>❌❌DEFEAT❌❌</b>) : !areMonstersAlive ? (<b>🎉🎉VICTORY🎉🎉</b>) : \"\"}\n            </Card.Title>\n          </Row>\n          <Row>\n            <Col>\n              <PlayerCard\n                player={player}\n                playerStats={playerStats}\n                onClickEffect={handlePlayerEffect}\n                selectedButtons={selectedButtons}\n                lastAction={(lastAttacks.find(a => a[0] === 'Player') ?? [undefined, undefined])[1]}\n                canAct={canAct} />\n            </Col>\n          </Row>\n          <Row className=\"mt-2 g-2\">\n            {Seq(enemies).zip(Seq(enemiesStats)).map(([enemy, stats], idx) => (\n              <Col key={idx} xs={6} md={4}>\n                <EnemyCard\n                  key={idx}\n                  enemyStats={stats}\n                  enemy={enemy}\n                  canAct={canAct}\n                  latestAttack={Seq(lastAttacks).filter(([target, _]) => target === idx).map(v => v[1]).first()}\n                  isSelected={idx === target}\n                  onSelect={() => setSelected(idx as MonsterTarget)}\n                />\n              </Col>\n            ))}\n          </Row>\n          <Row>\n            {game.states.length > 1 && (<Button onClick={(_) => undo()}>Undo ↩</Button>)}\n            {redo && (<Button onClick={(_) => redo()}>Redo ↪</Button>)}\n            <Button onClick={(_) => hint(100)}>Hint</Button>\n            <Button onClick={(_) => solveGame(100)}>Solve ⌛</Button>\n            <Button onClick={(_) => solveGame(1000)}>Solve thoroughly ⌛⌛⌛</Button>\n          </Row>\n        </Col>\n      </Row>\n    </Container>\n  );\n};\n\nexport default Game;\n","import { useEffect, useCallback, useState } from \"react\";\n\nexport default function usePressedKeys(onUp: (e: string) => void): Set<string> {\n\n  const [pressedKeys, updatePressedKeys] = useState(new Set<string>());\n\n  const downHandler = ({ key }: { key: string }) => {\n    updatePressedKeys((set) => new Set([...set, key]));\n  }\n\n  const upHandler = useCallback(({ key }: { key: string }) => {\n    updatePressedKeys((set) => new Set([...set].filter((k) => k !== key)));\n    onUp(key);\n  }, [onUp]);\n\n  useEffect(() => {\n    window.addEventListener(\"keydown\", downHandler);\n    window.addEventListener(\"keyup\", upHandler);\n\n    return () => {\n      window.removeEventListener(\"keydown\", downHandler);\n      window.removeEventListener(\"keyup\", upHandler);\n    };\n  }, [upHandler]);\n\n  return pressedKeys;\n}","import React from \"react\";\nimport { Container, Row, Form, Button, ButtonGroup, Navbar } from \"react-bootstrap\";\nimport useScroll from \"../hooks/useScroll\";\n\nimport { Player, PlayerStats } from \"../types\";\nimport { build, randomName } from \"../utils/data\";\nimport Chance from 'chance';\n\nconst selects = Object.entries(build).map(([type, options]) => ({\n  type,\n  options: options.map(({ display }, value) => ({\n    display,\n    value,\n  })),\n}));\n\nconst PlayerBuilder = ({ onSave }: { onSave: (player: Player, playerStats: PlayerStats) => void }) => {\n  const [form, setForm] = React.useState<Record<string, number>>(\n    selects.reduce(\n      (acc, { type, options }) => ({\n        ...acc,\n        [type]: options[0].value,\n      }),\n      {},\n    ),\n  );\n  const [lore, setLore] = React.useState({\n    name: randomName(),\n    age: new Chance().age(),\n  });\n  const setField = (field: string, value: number) => {\n    setForm({\n      ...form,\n      [field]: value,\n    });\n  };\n  const onFormSubmit = (e: any) => {\n    e.preventDefault();\n    onSave({\n      id: \"p-1\",\n      lore,\n      build: Object.entries(form).reduce((acc, [type, value]) => {\n        return {\n          ...acc,\n          [type]: build[type][value]\n        }\n      }, { basic: build.basic[0] }),\n    }, {\n      hp: 25,\n      stamina: 8,\n      staminaPerTurn: 2,\n    });\n  };\n  const displayType = (type: string) => <b>{build[type][form[type]].display}</b>;\n  return (\n    <Form onSubmit={onFormSubmit}>\n      <Container fluid style={{ marginBottom: '105px' }}>\n        <Row className=\"g-2\">\n          {selects.map(({ type, options }) =>\n            <ElementPicker\n              setField={(value) => setField(type, value)}\n              section={type}\n              options={options}\n              key={type}\n              isSelected={(value) => form[type] === value} />\n          )}\n        </Row>\n        <Navbar fixed=\"bottom\" bg=\"dark\" variant=\"dark\" style={{ maxHeight: '100px' }}>\n          <Container>\n            <Navbar.Text>You are <i onClick={() => setLore((lore) => ({ ...lore, name: randomName() }))}>{lore.name}</i>, the {displayType('skill')} {displayType('class')} {displayType('charm')}<br />who wields a {displayType('weapon')} and a {displayType('offhand')}<br />and wears {displayType('armor')} with {displayType('headgear')} and {displayType('footwear')}</Navbar.Text>\n            <Button type=\"submit\">Pick your foe!</Button>\n          </Container>\n        </ Navbar>\n      </Container >\n    </Form >\n  );\n};\n\nconst ElementPicker = ({ isSelected, section, options, setField }: {\n  options: {\n    display: string;\n    value: number;\n  }[], isSelected: (value: number) => boolean, setField: (value: number) => void, section: string\n}) => {\n  const [scrollTo, scrollRef] = useScroll({\n    behavior: 'smooth',\n    block: 'start',\n  });\n\n  return (\n    <Row>\n      <Form.Label>{section}</Form.Label>\n      <br />\n      <ButtonGroup size=\"lg\" className=\"mb-2\">\n        {options.map(({ display, value }) => (\n          <Button\n            key={value}\n            name={section}\n            id={`${value}`}\n            variant={isSelected(value) ? 'primary' : 'secondary'}\n            onClick={() => { setField(value); scrollTo(); }}\n          >{display}</Button>\n        ))}\n      </ButtonGroup>\n      <div id={`${section}-scroll`} ref={scrollRef} />\n    </Row>\n  );\n}\n\nexport default PlayerBuilder;\n","import { Ref, useRef } from \"react\";\n\ntype ScrollToFn = () => void;\n\nexport default function useScroll<T extends Element>(scrollParams: ScrollIntoViewOptions): [ScrollToFn, Ref<any>] {\n  const elRef = useRef<T>(null);\n  const executeScroll = () => elRef.current!.scrollIntoView(scrollParams);\n\n  return [executeScroll, elRef];\n};\n","import React from \"react\";\nimport { Container, ButtonGroup, Form, Button, Navbar } from \"react-bootstrap\";\n\nimport { Player, Enemies, Enemy, EnemiesStats, EnemyStats } from \"../types\";\nimport { enemies, randomEnemy } from \"../utils/data\";\n\nconst EncounterBuilder = ({ player, onSave }: { player: Player, onSave: (enemies: Enemies, enemiesStats: EnemiesStats) => void }) => {\n  const [encounter, setEncounter] = React.useState<[Enemy, EnemyStats][]>([]);\n  const onFormSubmit = (e: any) => {\n    e.preventDefault();\n    const enemies = encounter.map(a => a[0]);\n    const enemiesStats = encounter.map(a => a[1]);\n    // Size enforced by UI\n    onSave(enemies as Enemies, enemiesStats as EnemiesStats);\n  };\n  const displayType = (type: string) => <b>{player.build[type].display}</b>;\n  return (\n    <Form onSubmit={onFormSubmit}>\n      <Container fluid style={{ marginBottom: encounter.length > 0 ? '205px' : '105px' }}>\n        <ButtonGroup size=\"lg\" className=\"mb-2\">\n          {enemies.map((enemy) =>\n            <Button\n              key={enemy[0].lore.name}\n              disabled={encounter.length > 4}\n              onClick={() => setEncounter((e) => [...e, enemy])}\n            >{enemy[0].lore.name}</Button>\n          )}\n        </ButtonGroup>\n      </Container >\n      {\n        encounter.length > 0 &&\n        <Navbar fixed=\"bottom\" bg=\"dark\" variant=\"dark\" style={{ marginBottom: '100px' }}>\n          <Container fluid>\n            <ButtonGroup size=\"sm\" className=\"mb-2\">\n              {encounter.map((enemy, idx) => <Button key={`${enemy[0].lore.name}-${idx}`} onClick={() => setEncounter((e) => { let found = false; return e.filter((m) => (found || m[0].lore.name !== enemy[0].lore.name) || !(found = true)); })}>{enemy[0].lore.name}</Button>)}\n            </ButtonGroup>\n          </Container>\n        </ Navbar>\n      }\n      <Navbar fixed=\"bottom\" bg=\"dark\" variant=\"dark\" style={{ maxHeight: '100px' }}>\n        <Container>\n          <Navbar.Text>You are <i>{player.lore.name}</i>, the {displayType('skill')} {displayType('class')} {displayType('charm')}<br />who wields a {displayType('weapon')} and a {displayType('offhand')}<br />and wears {displayType('armor')} with {displayType('headgear')} and {displayType('footwear')}</Navbar.Text>\n          <ButtonGroup>\n            <Button\n              disabled={encounter.length < 0 || encounter.length > 5}\n              onClick={(_) => setEncounter((e) => [...e, randomEnemy()])}>\n              Add Random\n            </Button>\n            <Button type=\"submit\" disabled={encounter.length < 1 || encounter.length > 5}>To Battle!</Button>\n          </ButtonGroup>\n        </Container>\n      </ Navbar>\n    </Form >\n  );\n};\n\nexport default EncounterBuilder;\n","export default function geneticAlgorithmConstructor(options) {\n\n    function settingDefaults() {\n        return {\n\n            mutationFunction: function (phenotype) { return phenotype },\n\n            crossoverFunction: function (a, b) { return [a, b] },\n\n            fitnessFunction: function (phenotype) { return 0 },\n\n            doesABeatBFunction: undefined,\n\n            population: [],\n            populationSize: 100,\n        }\n    }\n\n    function settingWithDefaults(settings, defaults) {\n        settings = settings || {}\n\n        settings.mutationFunction = settings.mutationFunction || defaults.mutationFunction\n        settings.crossoverFunction = settings.crossoverFunction || defaults.crossoverFunction\n        settings.fitnessFunction = settings.fitnessFunction || defaults.fitnessFunction\n\n        settings.doesABeatBFunction = settings.doesABeatBFunction || defaults.doesABeatBFunction\n\n        settings.population = settings.population || defaults.population\n        if (settings.population.length <= 0) throw Error(\"population must be an array and contain at least 1 phenotypes\")\n\n        settings.populationSize = settings.populationSize || defaults.populationSize\n        if (settings.populationSize <= 0) throw Error(\"populationSize must be greater than 0\")\n\n        return settings\n    }\n\n    var settings = settingWithDefaults(options, settingDefaults())\n\n    function populate() {\n        var size = settings.population.length\n        while (settings.population.length < settings.populationSize) {\n            const rand = Math.floor(Math.random() * size);\n            settings.population.push(\n                mutate(\n                    cloneJSON(settings.population[Math.floor(rand)])\n                )\n            )\n        }\n    }\n\n    function cloneJSON(object) {\n        return JSON.parse(JSON.stringify(object))\n    }\n\n    function mutate(phenotype) {\n        return settings.mutationFunction(cloneJSON(phenotype))\n    }\n\n    function crossover(phenotype) {\n        phenotype = cloneJSON(phenotype)\n        var mate = settings.population[Math.floor(Math.random() * settings.population.length)]\n        mate = cloneJSON(mate)\n        return settings.crossoverFunction(phenotype, mate)[0]\n    }\n\n    function doesABeatB(a, b) {\n        if (settings.doesABeatBFunction) {\n            return settings.doesABeatBFunction(a, b)\n        } else {\n            return settings.fitnessFunction(a) >= settings.fitnessFunction(b)\n        }\n    }\n\n    function compete() {\n        var nextGeneration = []\n\n        for (var p = 0; p < settings.population.length - 1; p += 2) {\n            var phenotype = settings.population[p];\n            var competitor = settings.population[p + 1];\n\n            nextGeneration.push(phenotype)\n            if (doesABeatB(phenotype, competitor)) {\n                if (Math.random() < 0.5) {\n                    nextGeneration.push(mutate(phenotype))\n                } else {\n                    nextGeneration.push(crossover(phenotype))\n                }\n            } else {\n                nextGeneration.push(competitor)\n            }\n        }\n\n        settings.population = nextGeneration;\n    }\n\n\n\n    function randomizePopulationOrder() {\n\n        for (var index = 0; index < settings.population.length; index++) {\n            var otherIndex = Math.floor(Math.random() * settings.population.length)\n            var temp = settings.population[otherIndex]\n            settings.population[otherIndex] = settings.population[index]\n            settings.population[index] = temp\n        }\n    }\n\n    return {\n        evolve: function (options) {\n\n            if (options) {\n                settings = settingWithDefaults(options, settings)\n            }\n\n            populate()\n            randomizePopulationOrder()\n            compete()\n            return this\n        },\n        best: function () {\n            var scored = this.scoredPopulation()\n            var result = scored.reduce(function (a, b) {\n                return a.score >= b.score ? a : b\n            }, scored[0]).phenotype\n            return cloneJSON(result)\n        },\n        bestScore: function () {\n            return settings.fitnessFunction(this.best())\n        },\n        population: function () {\n            return cloneJSON(this.config().population)\n        },\n        scoredPopulation: function () {\n            return this.population().map(function (phenotype) {\n                return {\n                    phenotype: cloneJSON(phenotype),\n                    score: settings.fitnessFunction(phenotype)\n                }\n            })\n        },\n        config: function () {\n            return cloneJSON(settings)\n        },\n        clone: function (options) {\n            return geneticAlgorithmConstructor(\n                settingWithDefaults(options,\n                    settingWithDefaults(this.config(), settings)\n                )\n            )\n        }\n    }\n}\n","import GeneticAlgorithmConstructor, { GeneticAlgorithmConfig, ScoredPhenotype } from '../geneticalgorithm/geneticalgorithm';\nimport { handlePlayerEffect, playerActions, setSelected } from '../playGame';\nimport Chance from 'chance';\nimport { MonsterTarget, Play } from '../types';\nimport { previousState } from '../utils/data';\nimport prettyjson from 'prettyjson';\nimport { Seq } from 'immutable';\n\nexport type TinkererOptions = typeof defaultTinkererOptions & { turns?: number };\n\nexport const defaultTinkererOptions = {\n  playerSeed: \"Miau\",\n  weights: { monster: 0.70, player: 0.125, turn: 0.05, stamina: 0.075 },\n  debug: false,\n};\n\nexport const gameRender = (results: ScoredPhenotype<Play>[]): string => {\n  const best: ScoredPhenotype<Play> = Seq(results).maxBy(a => a.score)!!;\n  const lastState = previousState(best.phenotype);\n  return `BEST BY ${best.score} in ${best.phenotype.states.length - 1} turns\\n` +\n    prettyjson.render([\n      lastState.lastAttacks.flatMap(([target, id]) => [target === 'Player' ? 'Player' : `[${target}] ${best.phenotype.enemies[target]!!.lore.name}`, id]),\n      Seq(best.phenotype.enemies).zip(Seq(lastState.enemies)).flatMap(([enemy, stats], idx) => [`[${idx}] ${enemy.lore.name}`, stats]).toArray(),\n      lastState.player,\n    ]);\n}\n\nexport default function tinkerer(play: Play, iter: number, optionsOverride?: Partial<TinkererOptions>): ScoredPhenotype<Play>[] {\n  const options: TinkererOptions = { ...defaultTinkererOptions, ...optionsOverride };\n  const range = [...Array(iter).keys()];\n  const rand = new Chance(options.playerSeed);\n  const actions = playerActions(play.player);\n  const config: GeneticAlgorithmConfig<Play> = {\n    mutationFunction: (oldPlay) => {\n      const latestState = previousState(oldPlay);\n      const monsterHealth = latestState.enemies.reduce((acc, monster) => acc + monster.hp, 0);\n      const playerHealth = latestState.player.hp;\n      if (playerHealth === 0 || monsterHealth === 0) {\n        return oldPlay;\n      }\n      let newPlay = oldPlay;\n      while (rand.d6() === 6 || (previousState(newPlay).enemies[previousState(newPlay).target]?.hp ?? 0) <= 0) {\n        newPlay = setSelected(newPlay, rand.natural({ min: 0, max: previousState(newPlay).enemies.length - 1 }) as MonsterTarget);\n      }\n      const latest = previousState(newPlay);\n      const unavailable = actions.map((a, idx) => [a, idx] as const).filter(([a, _]) => a.stamina > latest.player.stamina).map(([_, idx]) => idx);\n      newPlay = handlePlayerEffect(\n        newPlay,\n        rand.natural({ min: 0, max: actions.length - 1, exclude: unavailable })\n      );\n      return newPlay;\n    },\n    fitnessFunction: (play) => {\n      const latestState = previousState(play);\n      const monsterHealth = latestState.enemies.reduce((acc, monster) => acc + monster.hp, 0);\n      const playerHealth = latestState.player.hp;\n      const playerStamina = latestState.player.stamina;\n      const startPlayerHealth = play.states[0].player.hp;\n      const startPlayerStamina = play.states[0].player.hp;\n      const startMonsterHealth = play.states[0].enemies.reduce((acc, monster) => acc + monster.hp, 0);\n\n      const monsterKillingFitness = ((startMonsterHealth - monsterHealth) / startMonsterHealth);\n      const playerAlivenessFitness = (playerHealth / startPlayerHealth);\n      const killSpeedFitness = (play.turns - play.states.length) / play.turns;\n      const staminaFitness = (playerStamina / startPlayerStamina);\n\n      const fitness = (monsterKillingFitness * options.weights.monster) + (playerAlivenessFitness * options.weights.player) + (killSpeedFitness * options.weights.turn) + (staminaFitness * options.weights.stamina);\n      if (options.debug) {\n        console.log(`MH: ${monsterHealth} | PH: ${playerHealth} | TR: ${play.states.length}\\nFitness: ${fitness} | MF: ${monsterKillingFitness} | PF: ${playerAlivenessFitness} | SF: ${staminaFitness} | TF: ${killSpeedFitness}\\nWeights: ${JSON.stringify(options.weights)}`);\n      }\n      return fitness;\n    },\n    population: range.map((_) => play),\n    populationSize: iter,\n  }\n\n  const turns = optionsOverride?.turns ? optionsOverride?.turns : play.turns;\n  let gen = new GeneticAlgorithmConstructor<Play>(config);\n  for (let i = 0; i < turns; i++) {\n    gen = gen.evolve();\n  }\n  return gen.scoredPopulation();\n}\n","import React from \"react\";\nimport \"./App.css\";\n// import { readString } from \"react-papaparse\";\nimport { Enemies, EnemiesStats, Player, PlayerStats, Snapshot, Play } from \"./types\";\n\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport Game from \"./components/Game\";\nimport PlayerBuilder from \"./components/PlayerBuilder\";\nimport EncounterBuilder from \"./components/EncounterBuilder\";\nimport play, { handlePlayerEffect, setSelected } from \"./playGame\";\nimport tinkerer from \"./tinkerer/tinkerer\";\nimport { Seq } from \"immutable\";\nimport { previousState } from \"./utils/data\";\n\ntype AppStatus = \"buildPlayer\" | \"buildEncounter\" | \"game\" | \"endGame\";\n\nfunction App() {\n  const [status, setStatus] = React.useState<AppStatus>(\"buildPlayer\");\n  const [playerBuild, setPlayerBuild] = React.useState<\n    [Player, PlayerStats] | undefined\n  >();\n  const [encounterBuild, setEncounter] = React.useState<[Enemies, EnemiesStats]>();\n  const [game, setGame] = React.useState<Play | undefined>();\n  const [redo, setRedo] = React.useState<Snapshot[]>([]);\n\n  const handleSavePlayer = (player: Player, playerStats: PlayerStats) => {\n    setPlayerBuild([player, playerStats]);\n    setStatus(\"buildEncounter\");\n  };\n  const handleSaveEncounter = (encounter: Enemies, encounterStats: EnemiesStats) => {\n    setEncounter([encounter, encounterStats]);\n    setStatus(\"game\");\n  }\n\n  if (!game && playerBuild && encounterBuild) {\n    const [player, playerStats] = playerBuild;\n    const [encounter, encounterStats] = encounterBuild;\n    const game = play(player, playerStats, encounter, encounterStats, 50, 'PACC');\n    setGame(game);\n  }\n\n  return (\n    <div className=\"App\">\n      {status === \"buildPlayer\" ? (\n        <PlayerBuilder onSave={handleSavePlayer} />\n      ) : null}\n      {status === \"buildEncounter\" && playerBuild ? (\n        <EncounterBuilder\n          player={playerBuild[0]}\n          onSave={handleSaveEncounter}\n        />\n      ) : null}\n      {status === \"game\" && game ? (\n        <Game\n          game={game}\n          redo={redo.length > 0 ? (() => {\n            const newRedo = [...redo];\n            const latest = newRedo.pop() as Snapshot;\n            setRedo(newRedo);\n            setGame({ ...game, states: [...game.states, latest] });\n          }) : undefined}\n          undo={() => {\n            setRedo([...redo, previousState(game)]);\n            setGame({ ...game, states: [game.states[0], ...game.states.slice(1, -1)] });\n          }}\n          setSelected={(idx) => { setRedo([]); setGame(setSelected(game, idx)); }}\n          handlePlayerEffect={(idx) => { setRedo([]); setGame(handlePlayerEffect(game, idx)); }}\n          solveGame={(iterations) => setGame(Seq(tinkerer(game, iterations, { turns: game.turns - game.states.length })).maxBy(a => a.score)!!.phenotype)}\n          hint={(iterations) =>\n            setGame({\n              ...game,\n              states: [...game.states, Seq(tinkerer(game, iterations, { turns: game.turns - game.states.length })).maxBy(a => a.score)!!.phenotype.states[game.states.length]]\n            })\n          }\n        />\n      ) : null}\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://cra.link/PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://cra.link/PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorkerRegistration from './serviceWorkerRegistration';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://cra.link/PWA\nserviceWorkerRegistration.register();\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}