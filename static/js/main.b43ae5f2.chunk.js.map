{"version":3,"sources":["utils/data.ts","utils/types.ts","components/Enemy.tsx","components/Player.tsx","components/Game.tsx","hooks/usePressedKeys.tsx","components/PlayerBuilder.tsx","hooks/useScroll.tsx","components/EncounterBuilder.tsx","geneticalgorithm/geneticalgorithm.js","tinkerer/tinkerer.ts","components/menus/Menu.tsx","App.tsx","reportWebVitals.ts","index.tsx","utils/effectRepository.ts","utils/playGame.ts","utils/zFunDump.ts","menuStateMachine.ts","serviceWorkerRegistration.ts"],"names":["previousState","play","states","length","randomEnemy","Chance","pickone","enemies","randomPlayer","statsOverride","buildOverride","rng","id","string","lore","name","randomName","age","build","debug","basic","class","skill","armor","weapon","offhand","footwear","headgear","charm","consumable","hp","makeStat","stamina","staminaPerTurn","speed","attack","defence","status","defaultStatus","makeRange","number","Set","allRanges","selfRange","amount","current","max","dodge","active","bleed","turns","stun","weapons","display","effects","tooltip","effectFunCall","priority","range","passives","eot","names","Math","floor","random","rolls","distance","enemy","t","Array","isArray","index","parameters","undefined","callEffectFun","repo","p","f","safeEntries","o","Object","entries","map","EnemyCard","enemyStats","isSelected","onSelect","latestAttack","canAct","hotkey","Card","bg","Body","Title","Text","idx","Seq","countBy","e","toArray","v","find","a","OverlayTrigger","placement","delay","show","hide","overlay","Popover","Header","as","join","toFixed","Button","disabled","onClick","toUpperCase","PlayerCard","selectedButtons","player","playerStats","onClickEffect","lastAction","disabledSkills","setDisabledSkills","Subtitle","className","ButtonGroup","k","bot","ToggleButton","checked","has","value","type","variant","onChange","event","currentTarget","delete","add","Stack","direction","gap","values","flatMap","_","monsterHotkeys","Game","handlePlayerEffect","setSelected","game","solveGame","timeTravel","hint","onMenu","enemiesStats","target","lastAttacks","useState","isLogShown","setShowLog","handleCloseLog","playerSkills","playerActions","monsterHealth","reduce","acc","m","isPlayerAlive","areMonstersAlive","endGame","pressed","onUp","pressedKeys","updatePressedKeys","downHandler","key","set","upHandler","useCallback","filter","useEffect","window","addEventListener","removeEventListener","usePressedKeys","valNum","parseInt","save","undo","redo","blob","Blob","JSON","stringify","saveAs","Date","now","Container","fluid","Row","Col","sm","md","Player","origin","phase","zip","stats","xs","Enemy","Modal","onHide","scrollable","centered","closeButton","s","Footer","systemBuildKeys","ElementPicker","section","options","setField","scrollParams","elRef","useRef","scrollIntoView","useScroll","behavior","block","scrollTo","scrollRef","Form","Label","size","item","ref","PlayerBuilder","onSave","React","form","setForm","setLore","displayType","postBuildPlayerStats","buildPlayer","onSubmit","preventDefault","style","marginBottom","field","Navbar","fixed","maxHeight","EncounterBuilder","encounter","setEncounter","found","geneticAlgorithmConstructor","settingWithDefaults","settings","defaults","mutationFunction","crossoverFunction","fitnessFunction","doesABeatBFunction","population","Error","populationSize","phenotype","b","cloneJSON","object","parse","mutate","crossover","mate","evolve","rand","push","populate","otherIndex","temp","randomizePopulationOrder","nextGeneration","competitor","compete","this","best","scored","scoredPopulation","score","bestScore","config","clone","defaultTinkererOptions","playerSeed","weights","monster","turn","tinkerer","iter","optionsOverride","rangeArr","actions","oldPlay","latestState","newPlay","d6","natural","min","latest","unavailable","exclude","playerHealth","playerStamina","startPlayerHealth","startPlayerStamina","startMonsterHealth","monsterKillingFitness","playerAlivenessFitness","killSpeedFitness","staminaFitness","fitness","console","log","gen","GeneticAlgorithmConstructor","i","Menu","title","state","SingleGame","onGameEnd","setGame","setRedo","gameState","playState","timeTravelObj","newRedo","pop","slice","iterations","maxBy","App","useMachine","gameMenuMachine","devTools","send","matches","keys","main","on","quick","context","singleContext","seed","result","single","arcade","survivalContext","firstState","arcadeContext","victories","survival","lastState","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","container","document","getElementById","createRoot","render","StrictMode","serviceWorkerRegistration","effectFun","funs","params","oldState","newState","engineFunctions","currentState","_origin","changeStatusPlayer","changeStatusMonster","effectFunRepo","changeDistance","attackMonster","modifyPlayerStamina","attackPlayer","lifespan","addEotEffect","addEnemy","_m","clamp","num","Infinity","updateMonster","override","curr","damage","afterDefence","afterArmor","armorSpent","afterBleed","updatePlayer","updateStatus","removeMonster","currPlay","currSnap","modify","updatePlayerStat","effect","addBotEffect","statsRepository","turnDeterministicRng","randPerTurn","monsterSeed","monsterChance","floating","playerPassives","fun","start","playerGameStats","enemyGameStats","toIndexableString","reduceFuns","dodgeable","sortBy","priorityBonus","monsterId","targetMonster","isStunnedPlayer","isStunnedMonster","startState","extractFunction","effectEotCleanup","effectDead","d","lastTurnState","usedSkill","initialState","preBotPlay","preBotState","postBotPlay","postBotState","entitiesBot","eff","postEntitiesBotPlay","postEntitiesBotState","turnRng","turnFunctions","concat","entitiesEot","playerEotEffects","enemiesEotEffects","postPlayerEotPlay","postPlayerEotState","postEotPlay","postEotState","postCleanup","postCleanupState","scoreGame","hpLoss","staminaLoss","isDebug","process","inspect","server","WebSocket","Server","port","toMenu","MENU","initial","entry","WIN","LOSE","win","lose","PLAYER","ENCOUNTER","cond","internal","victory","defeat","makeArcadeContext","puzzle","SELECTED","COMPLETE","complete","NEXT","SELECT","makeSurvivalContext","makeSingleContext","createMachine","tsTypes","QUICK","SINGLE","ARCADE","SURVIVAL","guards","isFinal","bumpVictories","assign","_event","bumpScore","reset","c","interpret","onTransition","isLocalhost","Boolean","location","hostname","match","register","navigator","URL","href","swUrl","fetch","headers","response","contentType","get","indexOf","serviceWorker","ready","registration","unregister","reload","registerValidSW","catch","checkValidServiceWorker","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","error"],"mappings":"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A,UACA,SACA,SACA,QACA,WACA,QACA,QACA,SACA,QACA,SACA,SACA,SACA,SACA,UACA,SACA,SACA,SACA,OACA,QACA,OACA,QACA,MACA,SACA,SACA,OACA,UACA,QACA,UACA,SACA,UACA,QACA,SACA,SACA,UACA,SACA,OACA,QACA,SACA,SACA,UACA,QACA,OACA,UACA,OACA,SACA,SACA,QACA,UACA,SACA,SACA,OACA,QACA,QACA,SACA,QACA,QACA,SACA,SACA,OACA,OACA,SACA,QACA,QACA,UACA,SACA,QACA,UACA,UACA,UACA,WACA,QACA,WACA,QACA,SACA,SACA,OACA,SACA,QACA,QACA,OACA,WACA,SACA,QACA,UACA,SACA,UACA,SACA,SACA,SACA,SACA,QACA,QACA,OACA,OACA,QACA,QACA,WACA,QACA,UACA,SACA,UACA,QACA,OACA,OACA,OACA,SACA,WACA,OACA,OACA,QACA,MACA,SACA,OACA,UACA,QACA,UACA,SACA,MACA,UACA,QACA,SACA,QACA,SACA,QACA,QACA,QACA,QACA,SACA,QACA,QACA,SACA,QACA,OACA,QACA,SACA,SACA,UACA,QACA,QACA,QACA,OACA,QACA,OACA,QACA,SACA,SACA,QACA,QACA,QACA,QACA,QACA,UACA,UACA,QACA,QACA,QACA,UACA,SACA,QACA,SACA,UACA,SACA,QACA,OACA,SACA,QACA,OACA,UACA,QACA,SACA,UACA,SACA,MACA,QACA,OACA,MACA,QACA,YACA,OACA,QACA,QACA,SACA,QACA,QACA,SACA,QACA,SACA,UACA,W,6LC9nBWL,EAAgB,SAA+BY,GAA/B,OAC1BC,MAAMC,QAAQF,GAAK,CAAEG,MAAOH,EAAE,GAAII,WAAYJ,EAAE,IAAO,CAAEG,MAAOH,EAAGI,gBAAYC,IACrEC,EAAgB,SAA+BC,EAAqBP,EAAMQ,GAGrF,OAAOC,EAFGF,EAAKP,IAENQ,IAgEJ,SAASE,EAAkCC,GAGhD,OAAOC,OAAOC,QAAQF,GAAGG,KAAI,yCAAY,CAAZ,gB,+MC1IhBC,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","file":"static/js/main.b43ae5f2.chunk.js","sourcesContent":["import { Chance } from \"chance\";\nimport { Subtract } from \"type-fest/source/internal\";\nimport { Build, Distances, Enemy, EnemyStats, Item, Player, PlayerStats, Ranges, Snapshot, UpTo, Play, effectFunCall, Stat, Status, BuildRepository } from \"./types\";\n\nexport const startState = (play: Play): Snapshot => play.states[0];\nexport const previousState = (play: Play): Snapshot => play.states[play.states.length - 1];\n\nexport const randomEnemy = (): [Enemy, EnemyStats] => new Chance().pickone(enemies);\n\nexport const randomPlayer = (statsOverride?: PlayerStats, buildOverride?: Partial<Build>): [Player, PlayerStats] => {\n  const rng = new Chance();\n  return [{\n    id: rng.string(),\n    lore: {\n      name: randomName(),\n      age: rng.age(),\n    },\n    build: {\n      debug: build.debug[0],\n      basic: rng.pickone(build.basic),\n      class: rng.pickone(build.class),\n      skill: rng.pickone(build.skill),\n      armor: rng.pickone(build.armor),\n      weapon: rng.pickone(build.weapon),\n      offhand: rng.pickone(build.offhand),\n      footwear: rng.pickone(build.footwear),\n      headgear: rng.pickone(build.headgear),\n      charm: rng.pickone(build.charm),\n      consumable: rng.pickone(build.consumable),\n      ...buildOverride,\n    }\n  }, {\n    hp: makeStat(25),\n    stamina: makeStat(8),\n    staminaPerTurn: makeStat(2),\n    speed: makeStat(0),\n    attack: makeStat(0),\n    defence: makeStat(0),\n    status: defaultStatus,\n    ...statsOverride,\n  }];\n}\n\nexport const makeRange = (...number: UpTo<Subtract<Distances, 1>>[]) => [...new Set(number)] as Ranges;\nexport const allRanges = makeRange(0, 1, 2, 3, 4);\nexport const selfRange = allRanges;\n\nexport const makeStat = (amount: number): Stat => ({ current: amount, max: amount });\nexport const defaultStatus: Status = {\n  dodge: { active: false },\n  armor: { amount: 0 },\n  bleed: { turns: 0 },\n  stun: { active: false },\n}\n\n\n// TODO\nconst weapons: Item[] = [\n  {\n    display: \"Axe\",\n    effects: [\n      {\n        display: \"Chop\",\n        tooltip: \"Chop\",\n        effects: [effectFunCall(\"Axe:Chop\")],\n        priority: 2,\n        stamina: 2,\n        range: makeRange(0, 1),\n      },\n      {\n        display: \"Cut\",\n        tooltip: \"Cut\",\n        effects: [effectFunCall(\"Axe:Cut\")],\n        priority: 3,\n        stamina: 2,\n        range: makeRange(0),\n      },\n      {\n        display: \"Bleed\",\n        tooltip: \"Makes the enemy bleed\",\n        effects: [effectFunCall(\"Axe:Bleed\")],\n        priority: 3,\n        stamina: 2,\n        range: allRanges,\n      },\n    ],\n  },\n];\n\nexport const build: BuildRepository = {\n  debug: [\n    {\n      display: \"None\",\n    },\n    {\n      display: \"Debug\",\n      effects: [\n        {\n          display: \"GGWP\",\n          tooltip: \"Wins the game\",\n          priority: 1,\n          stamina: 0,\n          range: allRanges,\n          effects: [effectFunCall('Debug:GGWP')]\n        },\n        {\n          display: \"SUDOKU\",\n          tooltip: \"Loses the game\",\n          priority: 1,\n          stamina: 0,\n          range: allRanges,\n          effects: [effectFunCall('Debug:Sudoku')]\n        },\n      ]\n    }\n  ],\n  basic: [\n    {\n      display: \"Basic\",\n      effects: [\n        {\n          display: \"Rest\",\n          tooltip: \"Skip the turn and restore stamina\",\n          priority: 4,\n          stamina: 0,\n          range: selfRange,\n          effects: [effectFunCall('Basic:Rest')]\n        },\n        {\n          display: \"Advance\",\n          tooltip: \"Move closer\",\n          priority: 4,\n          stamina: 1,\n          range: selfRange,\n          effects: [effectFunCall(['Basic:Advance', { amount: 1 }])]\n        },\n        {\n          display: \"Retreat\",\n          tooltip: \"Move farther\",\n          effects: [effectFunCall([\"Basic:Retreat\", { amount: 1 }])],\n          priority: 4,\n          stamina: 1,\n          range: selfRange,\n        }\n      ]\n    }\n  ],\n  class: [\n    {\n      display: \"Warrior\",\n      passives: [\"+Attack\", \"+Defence\", \"+Stamina\"],\n      effects: [\n        {\n          display: \"Strategic Kick\",\n          tooltip: \"Last resource attack\",\n          effects: [effectFunCall([\"Basic:Attack\", { amount: 2 }])],\n          priority: 2,\n          stamina: 1,\n          range: makeRange(1),\n        }\n      ]\n\n    },\n    {\n      display: \"Mage\",\n      passives: [\"+StaPerTurn\", \"+Stamina\", \"-Health\"],\n      effects: [\n        {\n          display: \"Just having a thought\",\n          tooltip: \"Restores stamina for the next action\",\n          priority: 4,\n          stamina: 0,\n          range: selfRange,\n          effects: [effectFunCall(['Basic:Stamina', { amount: 999 }])]\n        },\n      ]\n    },\n    {\n      display: \"Rogue\",\n      passives: [\"+Speed\", \"+Speed\", \"-Attack\", \"-Stamina\"],\n      effects: [\n        {\n          display: \"Strategic retreat\",\n          tooltip: \"Jump backwards\",\n          effects: [effectFunCall([\"Basic:Retreat\", { amount: 4 }])],\n          priority: 4,\n          stamina: 1,\n          range: selfRange,\n        }\n      ]\n    },\n    {\n      display: \"Berserk\",\n      passives: [\"+Attack\", \"+Attack\", \"+Attack\", \"+Attack\", \"-Defence\", \"-Defence\", \"-Health\"],\n    },\n  ],\n  skill: [\n    {\n      display: \"Sturdy\",\n      effects: [\n        {\n          display: \"Endure the pain\",\n          tooltip: \"Blocks some damage\",\n          effects: [effectFunCall([\"Effect:Armor\", { amount: 2 }])],\n          priority: 1,\n          stamina: 2,\n          range: selfRange,\n        },\n      ]\n    },\n    {\n      display: \"Nimble\",\n      effects: [\n        {\n          display: \"Dodge\",\n          tooltip: \"Avoid 1 enemy attack\",\n          effects: [effectFunCall(\"Effect:Dodge\")],\n          priority: 2,\n          stamina: 4,\n          range: selfRange,\n        }\n      ]\n    },\n    {\n      display: \"Resourceful\",\n      effects: [\n        {\n          display: \"Dodge this!\",\n          tooltip: \"Throws a stone\",\n          effects: [effectFunCall([\"Basic:Attack\", { amount: 2 }])],\n          priority: 4,\n          stamina: 3,\n          range: makeRange(3, 4),\n        }\n      ]\n    },\n  ],\n  weapon: weapons,\n  offhand: [\n    {\n      display: \"Hook\",\n      passives: [\"-Stamina\"],\n      effects: [\n        {\n          display: \"Get over here!\",\n          tooltip: \"Moves enemy closer\",\n          effects: [effectFunCall(\"Hook:GetHere\")],\n          priority: 4,\n          stamina: 3,\n          range: makeRange(2, 3, 4),\n        },\n      ],\n    },\n    {\n      display: \"Parry Dagger\",\n      passives: [\"-Defence\"],\n      effects: [\n        {\n          display: \"Get over here!\",\n          tooltip: \"Avoids a melee attack\",\n          effects: [effectFunCall(\"Effect:Dodge\")],\n          priority: 2,\n          stamina: 2,\n          range: makeRange(1),\n        },\n      ],\n    },\n    {\n      display: \"Shield\",\n      passives: [\"+Defence\", \"-Speed\"],\n      effects: [\n        {\n          display: \"Not today!\",\n          tooltip: \"Blocks a lot of damage\",\n          effects: [effectFunCall([\"Effect:Armor\", { amount: 5 }])],\n          priority: 2,\n          stamina: 4,\n          range: selfRange,\n        },\n      ],\n    },\n    {\n      display: \"Focus\",\n      passives: [\"+Speed\", \"+StaPerTurn\"]\n    },\n    {\n      display: \"Wand\",\n      passives: [\"-Defence\", \"-StaPerTurn\"],\n      effects: [\n        {\n          display: \"Magic Bolt\",\n          tooltip: \"Shoots mana bolts until the caster faints\",\n          effects: [effectFunCall(\"Wand:MagicBolt\")],\n          priority: 3,\n          stamina: 1,\n          range: makeRange(3, 4),\n        }\n      ]\n    },\n  ],\n  armor: [\n    {\n      display: \"Heavy\",\n      passives: [\"+Defence\", \"+Defence\", \"+Defence\", \"+Defence\", \"-Speed\", \"-Speed\", \"-StaPerTurn\"],\n    },\n    {\n      display: \"Medium\",\n      passives: [\"+Defence\", \"+Defence\", \"-StaPerTurn\"],\n    },\n    {\n      display: \"Light\",\n      passives: [\"+Defence\"],\n    },\n    {\n      display: \"None\",\n      passives: [],\n    },\n  ],\n  // TODO\n  headgear: [\n    {\n      display: \"Helm\",\n      passives: [\"+Defence\", \"+Defence\", \"-Speed\", \"-StaPerTurn\"],\n      tooltip: \"Big protection for slow combatants\",\n    },\n    {\n      display: \"Feather Cap\",\n      passives: [\"+StaPerTurn\", \"+Stamina\"],\n      tooltip: \"Makes you feel energized, doesn't it?\",\n    },\n    {\n      display: \"Mage Hat\",\n      passives: [\"-StaPerTurn\"],\n      tooltip: \"Small tricks for big plays\",\n      effects: [\n        {\n          display: \"Flash!\",\n          tooltip: \"Blinks you to a better position\",\n          effects: [\n            effectFunCall([\"Basic:Attack\", { amount: 1 }]),\n            effectFunCall([\"Basic:Retreat\", { amount: 2 }])\n          ],\n          priority: 3,\n          stamina: 4,\n          range: makeRange(1, 2),\n        }\n      ]\n    },\n  ],\n  footwear: [\n    {\n      display: \"Slippers of Dooooodge!\",\n      tooltip: \"Allows you to dodge attacks\",\n      passives: [\"-Stamina\"],\n      effects: [\n        {\n          display: \"Advanced Dodge\",\n          tooltip: \"Avoid 1 attack\",\n          effects: [effectFunCall(\"Effect:Dodge\")],\n          priority: 1,\n          stamina: 3,\n          range: selfRange,\n        },\n      ],\n    },\n    {\n      display: \"Boots of Flight\",\n      tooltip: \"Avoid your enemies\",\n      passives: [\"-StaPerTurn\", \"-Defence\"],\n      eot: [{\n        display: \"Flight!\",\n        tooltip: \"Increases distance every turn\",\n        priority: 0,\n        range: allRanges,\n        effects: [effectFunCall('BootsOfFlight:EOT')],\n      }],\n    },\n    {\n      display: \"Greaves of Stability\",\n      tooltip: \"Extra resilient\",\n      passives: [\"+Defence\", \"-Speed\"],\n      effects: [\n        {\n          display: \"Dig your heels\",\n          tooltip: \"Resists damage\",\n          effects: [effectFunCall([\"Effect:Armor\", { amount: 3 }])],\n          priority: 1,\n          stamina: 4,\n          range: selfRange,\n        },\n      ],\n    },\n  ],\n  charm: [\n    {\n      display: \"of Health\",\n      passives: [\"+Health\", \"-Speed\"],\n      tooltip: \"Increases your maximum health\",\n    },\n    {\n      display: \"of Haste\",\n      passives: [\"+StaPerTurn\", \"-Stamina\"],\n      tooltip: \"Increases your maximum stamina regeneration\",\n    },\n    {\n      display: \"of Resilience\",\n      passives: [\"+Stamina\", \"-StaPerTurn\"],\n      tooltip: \"Increases your maximum stamina\",\n    },\n    {\n      display: \"of Strength\",\n      passives: [\"+Attack\", \"-Health\", \"-StaPerTurn\"],\n      tooltip: \"Increases your maximum attack\",\n    },\n    {\n      display: \"of Swiftness\",\n      passives: [\"+Speed\", \"-Attack\"],\n      tooltip: \"Increases your maximum speed\",\n    },\n    {\n      display: \"of Defence\",\n      passives: [\"+Defence\", \"-Stamina\", \"-Speed\"],\n      tooltip: \"Increases your maximum defence\",\n    },\n  ],\n  // TODO\n  consumable: [\n    {\n      display: \"Potion\",\n    },\n  ],\n};\n\nexport const randomName = () => names[Math.floor(Math.random() * names.length)];\n\nexport const enemies: [Enemy, EnemyStats][] = [\n  [{\n    lore: {\n      name: \"Sacapuntas\",\n    },\n    rolls: [\n      [0, 1, 2, 1, 0],\n      [0, 1, 0, 0, 0],\n      [0, 0, 0, 0, 0],\n      [0, 0, 0, 0, 0],\n      [0, 1, 2, 1, 0, 0],\n    ],\n    effects: [\n      { display: \"Swipe\", tooltip: \"Swipe\", priority: 3, effects: [effectFunCall(\"Monster:Swipe\")], range: makeRange(0, 1) },\n      { display: \"Roar\", tooltip: \"Swipe\", priority: 1, effects: [effectFunCall(\"Monster:Roar\")], range: allRanges },\n      { display: \"Jump\", tooltip: \"Swipe\", priority: 2, effects: [effectFunCall(\"Monster:Jump\")], range: makeRange(2, 3, 4) },\n    ],\n  }, {\n    hp: makeStat(25),\n    distance: 4,\n    speed: makeStat(0),\n    attack: makeStat(0),\n    defence: makeStat(0),\n    status: defaultStatus,\n  }],\n  [{\n    lore: {\n      name: \"Toro\",\n    },\n    effects: [\n      { display: \"Swipe\", tooltip: \"Swipe\", priority: 3, effects: [effectFunCall(\"Monster:Swipe\")], range: allRanges },\n      { display: \"Jump\", tooltip: \"Jump\", priority: 2, effects: [effectFunCall(\"Monster:Jump\")], range: makeRange(2, 3, 4) },\n    ],\n    rolls: [\n      [0, 0, 0, 0, 0],\n      [0, 0, 0, 0, 0],\n      [1, 1, 0, 0, 0],\n      [1, 1, 1, 0, 0],\n      [1, 1, 1, 1, 0],\n    ]\n  }, {\n    hp: makeStat(22),\n    distance: 4,\n    speed: makeStat(0),\n    attack: makeStat(0),\n    defence: makeStat(0),\n    status: defaultStatus,\n  }],\n  [{\n    lore: {\n      name: \"Summoner\",\n    },\n    effects: [\n      { display: \"Swipe\", tooltip: \"Swipe\", priority: 3, effects: [effectFunCall(\"Monster:Swipe\")], range: makeRange(0, 1) },\n      { display: \"Jump\", tooltip: \"Jump\", priority: 3, effects: [effectFunCall(\"Monster:Jump\")], range: allRanges },\n      { display: \"Summon Toro\", tooltip: \"Summon Toro\", priority: 4, effects: [effectFunCall([\"Monster:Summon\", { enemy: 1 }])], range: makeRange(2, 3, 4) },\n    ],\n    rolls: [\n      [0, 0, 0, 0, 0],\n      [1, 0, 0, 0, 0],\n      [1, 1, 2, 0, 0],\n      [1, 1, 2, 0, 0],\n      [1, 2, 2, 0, 0],\n    ]\n  }, {\n    hp: makeStat(30),\n    distance: 4,\n    speed: makeStat(0),\n    attack: makeStat(0),\n    defence: makeStat(0),\n    status: defaultStatus,\n  }],\n  [{\n    lore: {\n      name: \"Body\",\n    },\n    effects: [\n      { display: \"Swipe\", tooltip: \"Swipe\", priority: 3, effects: [effectFunCall(\"Monster:Swipe\")], range: makeRange() },\n    ],\n    rolls: [\n      [0],\n      [0],\n      [0],\n      [0],\n      [0],\n    ]\n  }, {\n    hp: makeStat(300),\n    distance: 0,\n    speed: makeStat(0),\n    attack: makeStat(0),\n    defence: makeStat(0),\n    status: defaultStatus,\n  }],\n\n  [{\n    lore: {\n      name: \"Smol\",\n    },\n    effects: [\n      { display: \"Swipe\", tooltip: \"Swipe\", priority: 3, effects: [effectFunCall(\"Monster:Swipe\")], range: makeRange() },\n    ],\n    rolls: [\n      [0],\n      [0],\n      [0],\n      [0],\n      [0],\n    ]\n  }, {\n    hp: makeStat(5),\n    distance: 0,\n    speed: makeStat(0),\n    attack: makeStat(0),\n    defence: makeStat(0),\n    status: defaultStatus,\n  }],\n];\n\nconst names = [\n  \"Lydan\",\n  \"Syrin\",\n  \"Ptorik\",\n  \"Joz\",\n  \"Varog\",\n  \"Gethrod\",\n  \"Hezra\",\n  \"Feron\",\n  \"Ophni\",\n  \"Colborn\",\n  \"Fintis\",\n  \"Gatlin\",\n  \"Jinto\",\n  \"Hagalbar\",\n  \"Krinn\",\n  \"Lenox\",\n  \"Revvyn\",\n  \"Hodus\",\n  \"Dimian\",\n  \"Paskel\",\n  \"Kontas\",\n  \"Weston\",\n  \"Azamarr\",\n  \"Jather\",\n  \"Tekren\",\n  \"Jareth\",\n  \"Adon\",\n  \"Zaden\",\n  \"Eune\",\n  \"Graff\",\n  \"Tez\",\n  \"Jessop\",\n  \"Gunnar\",\n  \"Pike\",\n  \"Domnhar\",\n  \"Baske\",\n  \"Jerrick\",\n  \"Mavrek\",\n  \"Riordan\",\n  \"Wulfe\",\n  \"Straus\",\n  \"Tyvrik\",\n  \"Henndar\",\n  \"Favroe\",\n  \"Whit\",\n  \"Jaris\",\n  \"Renham\",\n  \"Kagran\",\n  \"Lassrin\",\n  \"Vadim\",\n  \"Arlo\",\n  \"Quintis\",\n  \"Vale\",\n  \"Caelan\",\n  \"Yorjan\",\n  \"Khron\",\n  \"Ishmael\",\n  \"Jakrin\",\n  \"Fangar\",\n  \"Roux\",\n  \"Baxar\",\n  \"Hawke\",\n  \"Gatlen\",\n  \"Barak\",\n  \"Nazim\",\n  \"Kadric\",\n  \"Paquin\",\n  \"Kent\",\n  \"Moki\",\n  \"Rankar\",\n  \"Lothe\",\n  \"Ryven\",\n  \"Clawsen\",\n  \"Pakker\",\n  \"Embre\",\n  \"Cassian\",\n  \"Verssek\",\n  \"Dagfinn\",\n  \"Ebraheim\",\n  \"Nesso\",\n  \"Eldermar\",\n  \"Rivik\",\n  \"Rourke\",\n  \"Barton\",\n  \"Hemm\",\n  \"Sarkin\",\n  \"Blaiz\",\n  \"Talon\",\n  \"Agro\",\n  \"Zagaroth\",\n  \"Turrek\",\n  \"Esdel\",\n  \"Lustros\",\n  \"Zenner\",\n  \"Baashar\",\n  \"Dagrod\",\n  \"Gentar\",\n  \"Feston\",\n  \"Syrana\",\n  \"Resha\",\n  \"Varin\",\n  \"Wren\",\n  \"Yuni\",\n  \"Talis\",\n  \"Kessa\",\n  \"Magaltie\",\n  \"Aeris\",\n  \"Desmina\",\n  \"Krynna\",\n  \"Asralyn\",\n  \"Herra\",\n  \"Pret\",\n  \"Kory\",\n  \"Afia\",\n  \"Tessel\",\n  \"Rhiannon\",\n  \"Zara\",\n  \"Jesi\",\n  \"Belen\",\n  \"Rei\",\n  \"Ciscra\",\n  \"Temy\",\n  \"Renalee\",\n  \"Estyn\",\n  \"Maarika\",\n  \"Lynorr\",\n  \"Tiv\",\n  \"Annihya\",\n  \"Semet\",\n  \"Tamrin\",\n  \"Antia\",\n  \"Reslyn\",\n  \"Basak\",\n  \"Vixra\",\n  \"Pekka\",\n  \"Xavia\",\n  \"Beatha\",\n  \"Yarri\",\n  \"Liris\",\n  \"Sonali\",\n  \"Razra\",\n  \"Soko\",\n  \"Maeve\",\n  \"Everen\",\n  \"Yelina\",\n  \"Morwena\",\n  \"Hagar\",\n  \"Palra\",\n  \"Elysa\",\n  \"Sage\",\n  \"Ketra\",\n  \"Lynx\",\n  \"Agama\",\n  \"Thesra\",\n  \"Tezani\",\n  \"Ralia\",\n  \"Esmee\",\n  \"Heron\",\n  \"Naima\",\n  \"Rydna\",\n  \"Sparrow\",\n  \"Baakshi\",\n  \"Ibera\",\n  \"Phlox\",\n  \"Dessa\",\n  \"Braithe\",\n  \"Taewen\",\n  \"Larke\",\n  \"Silene\",\n  \"Phressa\",\n  \"Esther\",\n  \"Anika\",\n  \"Rasy\",\n  \"Harper\",\n  \"Indie\",\n  \"Vita\",\n  \"Drusila\",\n  \"Minha\",\n  \"Surane\",\n  \"Lassona\",\n  \"Merula\",\n  \"Kye\",\n  \"Jonna\",\n  \"Lyla\",\n  \"Zet\",\n  \"Orett\",\n  \"Naphtalia\",\n  \"Turi\",\n  \"Rhays\",\n  \"Shike\",\n  \"Hartie\",\n  \"Beela\",\n  \"Leska\",\n  \"Vemery\",\n  \"Lunex\",\n  \"Fidess\",\n  \"Tisette\",\n  \"Partha\",\n]","import { Opaque } from \"type-fest\";\nimport { EffectFunParams, EffectFunRepo, EffectFunRepoIndex, StatsFunIndex } from \"./effectRepository\";\n\nexport type Tuple<T, N extends number> = N extends N ? number extends N ? T[] : _TupleOf<T, N, []> : never;\ntype _TupleOf<T, N extends number, R extends unknown[]> = R['length'] extends N ? R : _TupleOf<T, N, [T, ...R]>;\n\nexport type Nel<T> = [T, ...T[]];\n\ntype Length<T extends any[]> =\n  T extends { length: infer L } ? L : never;\ntype BuildTuple<L extends number, T extends any[] = []> =\n  T extends { length: L } ? T : BuildTuple<L, [...T, any]>;\nexport type Subtract<A extends number, B extends number> =\n  BuildTuple<A> extends [...(infer U), ...BuildTuple<B>]\n  ? Length<U>\n  : never;\ntype EQ<A, B> =\n  A extends B\n  ? (B extends A ? true : false)\n  : false;\ntype AtTerminus<A extends number, B extends number> =\n  A extends 0\n  ? true\n  : (B extends 0 ? true : false);\ntype LT<A extends number, B extends number> =\n  AtTerminus<A, B> extends true\n  ? EQ<A, B> extends true\n  ? false\n  : (A extends 0 ? true : false)\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  : LT<Subtract<A, 1>, Subtract<B, 1>>;\n\nexport type TupleUpTo<T, N extends number> =\n  EQ<N, 1> extends true ? [T] : TupleUpTo<T, Subtract<N, 1>> | Tuple<T, N>;\n\nexport type UpTo<N extends number> =\n  EQ<N, 0> extends true ? 0 : UpTo<Subtract<N, 1>> | N;\n\nexport interface Stat {\n  max: number,\n  current: UpTo<Stat['max']>,\n}\n\nexport type Status = {\n  dodge: { active: boolean },\n  stun: { active: boolean },\n  armor: { amount: number },\n  bleed: { turns: number }\n};\nexport interface PlayerStats {\n  hp: Stat,\n  stamina: Stat,\n  staminaPerTurn: Stat,\n  speed: Stat,\n  attack: Stat,\n  defence: Stat,\n  status: Status\n};\nexport interface EnemyStats {\n  hp: Stat,\n  speed: Stat,\n  attack: Stat,\n  defence: Stat,\n  distance: UpTo<Subtract<Distances, 1>>,\n  status: Status\n};\n\nexport type Priorities = 5;\nexport type Distances = 5;\nexport type MonsterCount = 5;\nexport type Staminas = 10;\n\nexport interface EffectSummary {\n  origin: Target;\n  display: string;\n  phase: string;\n}\n\nexport type DisabledSkills = (keyof BuildRepository)[];\nexport interface Snapshot {\n  player: PlayerStats;\n  enemies: EnemiesStats;\n  target: MonsterTarget;\n  lastAttacks: EffectSummary[];\n  bot?: Nel<[Target, Effect]>;\n  eot?: Nel<[Target, Effect]>;\n  disabledSkills: DisabledSkills;\n};\n\nexport type RNG = Opaque<number[][], 'RNG'>;\n\nexport interface Play {\n  states: Nel<Snapshot>;\n  player: Player;\n  enemies: Enemies,\n  rng: RNG;\n  turns: number;\n  id: string;\n  seed: string | number;\n};\n\ntype ItemOrMonster = string /* TODO all items */ | 'Monster';\nexport type FunIndex = `${ItemOrMonster}:${string}`;\n\nexport type StatsFunRepo = { [key in StatsFunIndex]: StatsFun; }\nexport type StatsFun = (player: PlayerStats, enemies: EnemiesStats) => [PlayerStats, EnemiesStats];\n\nexport type Ranges = UpTo<Subtract<Distances, 1>>[];\n\ninterface EffectFunCallT {\n  index: EffectFunRepoIndex;\n  parameters: EffectFunParams<EffectFunRepoIndex>;\n};\nexport type EffectFunCall = Opaque<EffectFunCallT, EffectFunCallT>;\nexport const effectFunCall = <T extends EffectFunRepoIndex>(t: EffectFunParams<T> extends undefined ? T : [T, EffectFunParams<T>]): EffectFunCall =>\n  (Array.isArray(t) ? { index: t[0], parameters: t[1] } : { index: t, parameters: undefined }) as EffectFunCall;\nexport const callEffectFun = <T extends EffectFunRepoIndex>(repo: EffectFunRepo, t: T, p: EffectFunParams<T>) => {\n  const f = repo[t];\n  // @ts-expect-error: index and parameters are enforced to be compatible at construction and the runtime check above ^^^^\n  return f(p);\n}\n\nexport interface Effect {\n  display: string;\n  tooltip: string;\n  effects: Nel<EffectFunCall>;\n  priority: UpTo<Subtract<Priorities, 1>>;\n  range: Ranges;\n};\nexport interface InventoryEffect extends Effect {\n  stamina: UpTo<Subtract<Staminas, 1>>;\n};\n\nexport type MonsterTarget = UpTo<Subtract<MonsterCount, 1>>;\nexport type PlayerTarget = 'Player';\nexport type Target = MonsterTarget | PlayerTarget;\n\nexport interface BuildRepository {\n  debug: Item[];\n  basic: Item[];\n  class: Item[];\n  skill: Item[];\n  weapon: Item[];\n  offhand: Item[];\n  consumable: Item[];\n  armor: Item[];\n  headgear: Item[];\n  footwear: Item[];\n  charm: Item[];\n}\nexport type Build = {\n  [k in keyof BuildRepository]: Item\n};\n\nexport interface Item {\n  display: string;\n  tooltip?: string;\n  passives?: StatsFunIndex[];\n  bot?: Nel<Effect>;\n  eot?: Nel<Effect>;\n  effects?: Nel<InventoryEffect>;\n  //[key: string]: any;\n};\n\nexport interface Player {\n  id: string;\n  lore: Record<string, string | number>;\n  build: Build;\n};\n\n// Place in the array for now\ntype EffectIdentity = number;\nexport interface Enemy {\n  lore: Record<string, string | number>;\n  effects: Nel<Effect>;\n  rolls: Tuple<EffectIdentity[], Distances>;\n  bot?: Nel<Effect>;\n  eot?: Nel<Effect>;\n}\n\nexport type Enemies = TupleUpTo<Enemy, MonsterCount>;\nexport type EnemiesStats = TupleUpTo<EnemyStats, MonsterCount>;\n\nexport function safeEntries<T, K extends keyof T>(o: {\n  [s in K]: T[s];\n}): [K, T[K]][] {\n  return Object.entries(o).map(([k, v]) => [k as K, v as T[K]]);\n}\n","import React from \"react\";\nimport { Card, Button, OverlayTrigger, Popover } from \"react-bootstrap\";\nimport { Enemy, Effect, EnemyStats } from \"../utils/types\";\nimport { Seq } from \"immutable\";\n\nconst skillPercents = (effects: Effect[]) =>\n  Seq(effects).countBy((e) => e.display).toArray().map(([display, v], idx) => {\n    const { range, priority, tooltip } = effects.find(a => a.display === display)!!;\n    return <OverlayTrigger\n      key={idx}\n      placement=\"right\"\n      delay={{ show: 100, hide: 250 }}\n      overlay={<Popover>\n        <Popover.Header as=\"h3\">{display}</Popover.Header>\n        <Popover.Body>\n          {tooltip}<br />⏱:{priority}<br />🏹:{range.length === 5 ? 'Any' : range.length === 0 ? 'None' : range.map(a => a + 1).join(\", \")}\n        </Popover.Body>\n      </Popover>}\n    ><>[{(v / effects.length * 100).toFixed(2)}%] {display}<br key={idx} /></>\n    </OverlayTrigger>\n  });\n\nconst EnemyCard: React.FC<{\n  enemy: Enemy;\n  enemyStats: EnemyStats;\n  latestAttack: string | undefined;\n  isSelected?: boolean;\n  onSelect: () => void;\n  canAct: boolean;\n  hotkey: string;\n}> = ({ enemy, enemyStats, isSelected, onSelect, latestAttack, canAct, hotkey }) => (\n  <Card bg={isSelected ? \"info\" : undefined}>\n    <Card.Body>\n      <Card.Title>{enemy.lore.name} {enemyStats.hp.current > 0 ? \"\" : (<b>💀DEAD💀</b>)}</Card.Title>\n      <Card.Text>❤:{enemyStats.hp.current} 🏹:{enemyStats.distance + 1}</Card.Text>\n      {enemyStats.status.bleed.turns > 0 && ` ${enemyStats.status.bleed.turns} 🩸`}\n      {latestAttack && (<Card.Text>Latest attack: {latestAttack}</Card.Text>)}\n      <Card.Text>\n        Next attack prediction:\n        <br />\n        {skillPercents(enemy.rolls[enemyStats.distance].map((idx) => enemy.effects[idx]))}\n        <br />\n      </Card.Text>\n      {canAct && (<Button disabled={isSelected} onClick={onSelect}>[<i>{hotkey.toUpperCase()}</i>] Select</Button>)}\n    </Card.Body>\n  </Card>\n);\n\nexport default EnemyCard;\n","import React from \"react\";\nimport { Card, Button, Stack, ToggleButton, ButtonGroup, Popover, OverlayTrigger } from \"react-bootstrap\";\nimport { DisabledSkills, Player, PlayerStats, safeEntries } from \"../utils/types\";\nimport { Set } from 'immutable';\n\nconst PlayerCard: React.FC<{\n  selectedButtons: Set<string>,\n  player: Player;\n  playerStats: PlayerStats;\n  canAct: boolean;\n  lastAction: string | undefined;\n  onClickEffect: (index: number) => void;\n  disabledSkills: DisabledSkills;\n  setDisabledSkills: (skills: DisabledSkills) => void;\n}> = ({ selectedButtons, player, playerStats, onClickEffect, canAct, lastAction, disabledSkills, setDisabledSkills }) => (\n  <Card>\n    <Card.Body>\n      <Card.Title>{player.lore.name}{playerStats.hp.current > 0 ? \"\" : (<b> 💀DEAD💀 </b>)}</Card.Title>\n      <Card.Subtitle className=\"mb-2 text-muted\">\n        {player.build.class.display}\n      </Card.Subtitle>\n      <Card.Text>{playerStats.hp.current}/{playerStats.hp.max} ❤ {playerStats.stamina.current}/{playerStats.stamina.max} 💪</Card.Text>\n      {playerStats.status.bleed.turns > 0 && <Card.Text>` ${playerStats.status.bleed.turns} 🩸`</Card.Text>}\n      {lastAction && (<Card.Text>Last action: {lastAction}</Card.Text>)}\n    </Card.Body>\n    {canAct && (<>\n      <b>Passives</b>\n      <ButtonGroup>\n        {safeEntries(player.build)\n          .map(([k, e]) => [k, e, [...(e.bot ?? []), ...(e.eot ?? [])]] as const)\n          .map(([k, e, passives], idx) => passives.length > 0 && (<OverlayTrigger\n            key={idx}\n            placement=\"right\"\n            delay={{ show: 100, hide: 250 }}\n            overlay={<Popover>\n              <Popover.Header as=\"h3\">{e.display}</Popover.Header>\n              <Popover.Body>\n                {e.tooltip}\n              </Popover.Body>\n            </Popover>}\n          >\n            <ToggleButton\n              checked={!Set(disabledSkills).has(k)}\n              value={k}\n              id={`passive-skill-${k}`}\n              type=\"checkbox\"\n              variant=\"outline-primary\"\n              onChange={(event) => setDisabledSkills(\n                event.currentTarget.checked\n                  ? Set(disabledSkills).delete(k).toArray()\n                  : Set(disabledSkills).add(k).toArray())}>\n              {e.display}\n            </ToggleButton>\n          </OverlayTrigger>\n          ))}\n      </ButtonGroup>\n    </>)}\n    {canAct && (<Card.Body>\n      <Stack direction=\"horizontal\" gap={2}>\n        {Object.values(player.build)\n          .flatMap((a) => a.effects ?? [])\n          .map((e, idx) => (<OverlayTrigger\n            key={e.display}\n            placement=\"top\"\n            delay={{ show: 100, hide: 250 }}\n            overlay={<Popover>\n              <Popover.Header as=\"h3\">{e.display}</Popover.Header>\n              <Popover.Body>\n                {e.tooltip}\n              </Popover.Body>\n            </Popover>}\n          >\n            <div>\n              <Button\n                active={selectedButtons.has(e.display)}\n                disabled={playerStats.stamina.current < e.stamina}\n                onClick={(_) => onClickEffect(idx)}\n              >\n                [<i>{idx + 1}</i>] <b>{e.display}</b>\n              </Button>\n              <br />\n              <Card.Text>💪:{e.stamina} ⏱:{Math.max(e.priority + playerStats.speed.current)}<br />🏹:{e.range.length === 5 ? 'Any' : e.range.map(a => a + 1).join(\", \")}</Card.Text>\n            </div>\n          </OverlayTrigger>\n          ))}\n      </Stack>\n    </Card.Body>)}\n  </Card>\n);\n\nexport default PlayerCard;\n","import { Container, Row, Col, Card, Modal, ButtonGroup } from \"react-bootstrap\";\n\nimport { DisabledSkills, MonsterTarget, Play } from \"../utils/types\";\n\nimport EnemyCard from \"./Enemy\";\nimport PlayerCard from \"./Player\";\nimport usePressedKeys from \"../hooks/usePressedKeys\";\nimport { playerActions } from \"../utils/playGame\";\nimport { Seq, Set } from \"immutable\";\nimport { previousState } from \"../utils/data\";\nimport { Button } from \"react-bootstrap\";\nimport saveAs from 'file-saver';\nimport { useCallback, useState } from \"react\";\n\nexport type GameProps = {\n  game: Play;\n  setSelected: (target: MonsterTarget) => void;\n  setDisabledSkills: (disabled: DisabledSkills) => void;\n  handlePlayerEffect: (index: number) => void,\n  solveGame: (iterations: number) => void,\n  hint: (iterations: number) => void,\n  timeTravel: { undo: () => void; redo: (() => void) | undefined } | undefined,\n  onMenu: () => void,\n};\n\nconst monsterHotkeys = [\"q\", \"w\", \"e\", \"r\", \"t\", \"y\"];\n\nconst Game = ({ handlePlayerEffect, setSelected, setDisabledSkills, game, solveGame, timeTravel, hint, onMenu }: GameProps): JSX.Element => {\n  const { player, enemies } = game;\n  const { player: playerStats, enemies: enemiesStats, target, lastAttacks, disabledSkills } = previousState(game);\n  const [isLogShown, setShowLog] = useState(false);\n\n  const handleCloseLog = () => setShowLog(false);\n  const handleShowLog = () => setShowLog(true);\n\n  const playerSkills = playerActions(player);\n  const monsterHealth = enemiesStats.reduce((acc, m) => m.hp.current + acc, 0);\n  const isPlayerAlive = playerStats.hp.current > 0;\n  const areMonstersAlive = monsterHealth > 0;\n  const endGame = game.states.length < game.turns;\n  const canAct = isPlayerAlive && areMonstersAlive && endGame;\n\n  const pressed = usePressedKeys((key) => {\n    if (!canAct) return;\n    const valNum = parseInt(key);\n    if (valNum > 0 && valNum <= playerSkills.length) {\n      const hasStamina = playerSkills[valNum - 1].stamina <= playerStats.stamina.current;\n      if (!hasStamina) return;\n      handlePlayerEffect(valNum - 1);\n    }\n\n    if (key === \"Escape\") {\n      onMenu();\n    }\n    if (key === \"h\") {\n      hint(100);\n    }\n\n    if (key === \"l\") {\n      setShowLog(!isLogShown);\n    }\n\n    if (key === \"s\") {\n      save();\n    }\n\n    if (key === \"a\" && game.states.length > 1 && timeTravel) {\n      timeTravel.undo();\n    }\n    if (key === \"d\" && timeTravel && timeTravel.redo != null) {\n      timeTravel.redo();\n    }\n\n    if (key === monsterHotkeys[0] && enemies.length > 0) {\n      setSelected(0 as MonsterTarget);\n    }\n    if (key === monsterHotkeys[1] && enemies.length > 1) {\n      setSelected(1 as MonsterTarget);\n    }\n    if (key === monsterHotkeys[2] && enemies.length > 2) {\n      setSelected(2 as MonsterTarget);\n    }\n    if (key === monsterHotkeys[3] && enemies.length > 3) {\n      setSelected(3 as MonsterTarget);\n    }\n    if (key === monsterHotkeys[4] && enemies.length > 4) {\n      setSelected(4 as MonsterTarget);\n    }\n  });\n\n  const selectedButtons = Set<string>([...pressed].flatMap((key: string) => {\n    const valNum = parseInt(key);\n    if (valNum > 0 && valNum <= playerSkills.length) {\n      return [playerSkills[valNum - 1].display];\n    } else {\n      return [];\n    }\n  }));\n\n  const save = useCallback(() => {\n    const blob = new Blob([JSON.stringify(game)], { type: \"application/json;charset=utf-8\" });\n    saveAs(blob, `buildmancer-${Date.now()}.json`);\n  }, [game]);\n\n  return (\n    <>\n      <Container fluid>\n        <Row className=\"justify-content-center align-items-flex-start\">\n          <Col sm={12} md={8}>\n            <Button onClick={onMenu}>[<i>Esc</i>] MAIN MENU</Button>\n            <Card.Title>\n              Turn {game.states.length} out of {game.turns} {!isPlayerAlive ? (<b>❌❌DEFEAT❌❌</b>) : !areMonstersAlive ? (<b>🎉🎉VICTORY🎉🎉</b>) : \"\"}\n            </Card.Title>\n            <PlayerCard\n              player={player}\n              playerStats={playerStats}\n              disabledSkills={disabledSkills}\n              setDisabledSkills={setDisabledSkills}\n              onClickEffect={(idx) => handlePlayerEffect(idx)}\n              selectedButtons={selectedButtons}\n              lastAction={lastAttacks.filter(a => a.origin === 'Player').map(a => `[${a.phase}] ${a.display}`).join(\" -> \") ?? undefined}\n              canAct={canAct} />\n            <Row>\n              {timeTravel != null && (\n                <ButtonGroup>\n                  {game.states.length > 1 && (<Button onClick={(_) => timeTravel.undo()}>[<i>A</i>] Undo ↩</Button>)}\n                  {timeTravel?.redo && (<Button onClick={(_) => timeTravel!!.redo!!()}>[<i>D</i>] Redo ↪</Button>)}\n                </ButtonGroup>\n              )}\n            </Row>\n            <Row>\n              <ButtonGroup>\n                <Button onClick={(_) => hint(100)}><i>[H]</i> Hint</Button>\n              </ButtonGroup>\n            </Row>\n            <Row>\n              {Seq(enemies).zip(Seq(enemiesStats)).map(([enemy, stats], idx) => (\n                <Col key={idx} xs={6} md={4}>\n                  <EnemyCard\n                    key={idx}\n                    enemyStats={stats}\n                    enemy={enemy}\n                    canAct={canAct}\n                    latestAttack={Seq(lastAttacks).filter(({ origin }) => origin === idx).map(a => `[${a.phase}] ${a.display}`).join(\" -> \") ?? undefined}\n                    isSelected={idx === target}\n                    onSelect={() => setSelected(idx as MonsterTarget)}\n                    hotkey={monsterHotkeys[idx]}\n                  />\n                </Col>\n              ))}\n            </Row>\n            <Card.Title>\n              Debug\n            </Card.Title>\n            <Row>\n              <ButtonGroup>\n                <Button onClick={handleShowLog}>[<i>L</i>] Log 🗒</Button>\n                <Button onClick={save}>[<i>S</i>] Dump to file 📂</Button>\n              </ButtonGroup>\n            </Row>\n            <Card.Title>\n              Cheats\n            </Card.Title>\n            <Row>\n              <ButtonGroup>\n                <Button onClick={(_) => solveGame(100)}>Solve ⌛</Button>\n                <Button onClick={(_) => solveGame(1000)}>Solve thoroughly ⌛⌛⌛</Button>\n              </ButtonGroup>\n            </Row>\n          </Col>\n        </Row>\n      </Container>\n      <Modal show={isLogShown} onHide={handleCloseLog} scrollable={true} centered={true}>\n        <Modal.Header closeButton>\n          <Modal.Title>Game Log</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          {game.states.map((s, idx) => (\n            // FIXME add key\n            <>\n              <b>Turn {idx}</b><br />\n              Player: {JSON.stringify(s.player, null, 2)}<br />\n              Enemies: {JSON.stringify(s.enemies, null, 2)}<br />\n              Target [{s.target}]<br />\n              Eot? Bot?: {JSON.stringify({ bot: s.bot, eot: s.eot }, null, 2)}<br />\n              Actions:<br />\n              {s.lastAttacks.map(a => (<>  {JSON.stringify(a, null, 2)}<br /></>))}\n            </>\n          ))}\n        </Modal.Body>\n        <Modal.Footer>\n          <Button variant=\"primary\" onClick={handleCloseLog}>\n            Close\n          </Button>\n        </Modal.Footer>\n      </Modal >\n    </>\n  );\n};\n\nexport default Game;\n","import { useEffect, useCallback, useState } from \"react\";\n\nexport default function usePressedKeys(onUp: (e: string) => void): Set<string> {\n\n  const [pressedKeys, updatePressedKeys] = useState(new Set<string>());\n\n  const downHandler = ({ key }: { key: string }) => {\n    updatePressedKeys((set) => new Set([...set, key]));\n  }\n\n  const upHandler = useCallback(({ key }: { key: string }) => {\n    updatePressedKeys((set) => new Set([...set].filter((k) => k !== key)));\n    onUp(key);\n  }, [onUp]);\n\n  useEffect(() => {\n    window.addEventListener(\"keydown\", downHandler);\n    window.addEventListener(\"keyup\", upHandler);\n\n    return () => {\n      window.removeEventListener(\"keydown\", downHandler);\n      window.removeEventListener(\"keyup\", upHandler);\n    };\n  }, [upHandler]);\n\n  return pressedKeys;\n}","import React from \"react\";\nimport { Container, Row, Form, Button, ButtonGroup, Navbar } from \"react-bootstrap\";\nimport useScroll from \"../hooks/useScroll\";\n\nimport { Build, Item, Player, PlayerStats, safeEntries } from \"../utils/types\";\nimport { build, randomEnemy, randomName, randomPlayer } from \"../utils/data\";\nimport { Set } from 'immutable';\nimport { buildPlayer } from \"src/utils/playGame\";\n\nconst systemBuildKeys: Set<keyof Build> = Set(['debug', 'basic']);\n\nconst PlayerBuilder = ({ onSave }: { onSave: (player: Player, playerStats: PlayerStats) => void }) => {\n  const [player, playerStats] = randomPlayer();\n  const [form, setForm] = React.useState<Build>(player.build);\n  const [lore, setLore] = React.useState(player.lore);\n  const setField = <T extends keyof Build>(field: T, value: Build[T]) => {\n    setForm({\n      ...form,\n      [field]: value,\n    });\n  };\n  const onFormSubmit = (e: any) => {\n    e.preventDefault();\n    onSave({\n      id: \"p-1\",\n      lore,\n      build: form,\n    }, playerStats);\n  };\n  const displayType = (type: keyof Build) => <b>{form[type].display}</b>;\n\n  const postBuildPlayerStats = buildPlayer({ ...player, build: form }, playerStats, [randomEnemy()[1]])[0];\n\n  return (\n    <Form onSubmit={onFormSubmit}>\n      <Container fluid style={{ marginBottom: '105px' }}>\n        <Row className=\"g-2\">\n          {safeEntries(build)\n            .filter(([type, _]) => !systemBuildKeys.has(type))\n            .map(([type, values]) =>\n              <ElementPicker\n                setField={(value) => setField(type, value)}\n                section={type}\n                options={(values as Item[])}\n                key={type}\n                isSelected={(value) => form[type].display === value.display} />)\n          }\n        </Row>\n        <Navbar fixed=\"bottom\" bg=\"dark\" variant=\"dark\" style={{ maxHeight: '100px' }}>\n          <Container>\n            <Navbar.Text>You are <i onClick={() => setLore((lore) => ({ ...lore, name: randomName() }))}>{lore.name}</i>, the {displayType('skill')} {displayType('class')} {displayType('charm')}<br />who wields a {displayType('weapon')} and a {displayType('offhand')}<br />and wears {displayType('armor')} with {displayType('headgear')} and {displayType('footwear')}</Navbar.Text>\n            <Navbar.Text>HP | Speed<br />Attack | Defence<br />Stamina | Per Turn</Navbar.Text>\n            <Navbar.Text>{postBuildPlayerStats.hp.max} | {postBuildPlayerStats.speed.max}<br />{postBuildPlayerStats.attack.max} | {postBuildPlayerStats.defence.max}<br />{postBuildPlayerStats.stamina.max} | {postBuildPlayerStats.staminaPerTurn.max}</Navbar.Text>\n            <Button type=\"submit\">This is me!</Button>\n          </Container>\n        </ Navbar>\n      </Container >\n    </Form >\n  );\n};\n\nconst ElementPicker = ({ isSelected, section, options, setField }: {\n  options: Item[], isSelected: (value: Item) => boolean, setField: (value: Item) => void, section: string\n}) => {\n  const [scrollTo, scrollRef] = useScroll({\n    behavior: 'smooth',\n    block: 'start',\n  });\n\n  return (\n    <Row>\n      <Form.Label>{section}</Form.Label>\n      <br />\n      <ButtonGroup size=\"lg\" className=\"mb-2\">\n        {options.map((item) => (\n          <Button\n            key={item.display}\n            name={section}\n            id={`${item.display}`}\n            variant={isSelected(item) ? 'primary' : 'secondary'}\n            onClick={() => { setField(item); scrollTo(); }}\n          >{item.display}</Button>\n        ))}\n      </ButtonGroup>\n      <div id={`${section}-scroll`} ref={scrollRef} />\n    </Row>\n  );\n}\n\nexport default PlayerBuilder;\n","import { Ref, useRef } from \"react\";\n\ntype ScrollToFn = () => void;\n\nexport default function useScroll<T extends Element>(scrollParams: ScrollIntoViewOptions): [ScrollToFn, Ref<any>] {\n  const elRef = useRef<T>(null);\n  const executeScroll = () => elRef.current!.scrollIntoView(scrollParams);\n\n  return [executeScroll, elRef];\n};\n","import React from \"react\";\nimport { Container, ButtonGroup, Form, Button, Navbar } from \"react-bootstrap\";\n\nimport { Player, Enemies, Enemy, EnemiesStats, EnemyStats, Build } from \"../utils/types\";\nimport { enemies, randomEnemy } from \"../utils/data\";\n\nconst EncounterBuilder = ({ player, onSave }: { player: Player, onSave: (enemies: Enemies, enemiesStats: EnemiesStats) => void }) => {\n  const [encounter, setEncounter] = React.useState<[Enemy, EnemyStats][]>([]);\n  const onFormSubmit = (e: any) => {\n    e.preventDefault();\n    const enemies = encounter.map(a => a[0]);\n    const enemiesStats = encounter.map(a => a[1]);\n    // Size enforced by UI\n    onSave(enemies as Enemies, enemiesStats as EnemiesStats);\n  };\n  const displayType = (type: keyof Build) => <b>{player.build[type].display}</b>;\n  return (\n    <Form onSubmit={onFormSubmit}>\n      <Container fluid style={{ marginBottom: encounter.length > 0 ? '205px' : '105px' }}>\n        <ButtonGroup size=\"lg\" className=\"mb-2\">\n          {enemies.map((enemy) =>\n            <Button\n              key={enemy[0].lore.name}\n              disabled={encounter.length > 4}\n              onClick={() => setEncounter((e) => [...e, enemy])}\n            >{enemy[0].lore.name}</Button>\n          )}\n        </ButtonGroup>\n      </Container >\n      {\n        encounter.length > 0 &&\n        <Navbar fixed=\"bottom\" bg=\"dark\" variant=\"dark\" style={{ marginBottom: '100px' }}>\n          <Container fluid>\n            <ButtonGroup size=\"sm\" className=\"mb-2\">\n              {encounter.map((enemy, idx) => <Button key={`${enemy[0].lore.name}-${idx}`} onClick={() => setEncounter((e) => { let found = false; return e.filter((m) => (found || m[0].lore.name !== enemy[0].lore.name) || !(found = true)); })}>{enemy[0].lore.name}</Button>)}\n            </ButtonGroup>\n          </Container>\n        </ Navbar>\n      }\n      <Navbar fixed=\"bottom\" bg=\"dark\" variant=\"dark\" style={{ maxHeight: '100px' }}>\n        <Container>\n          <Navbar.Text>You are <i>{player.lore.name}</i>, the {displayType('skill')} {displayType('class')} {displayType('charm')}<br />who wields a {displayType('weapon')} and a {displayType('offhand')}<br />and wears {displayType('armor')} with {displayType('headgear')} and {displayType('footwear')}</Navbar.Text>\n          <ButtonGroup>\n            <Button\n              disabled={encounter.length < 0 || encounter.length > 5}\n              onClick={(_) => setEncounter((e) => [...e, randomEnemy()])}>\n              Add Random\n            </Button>\n            <Button type=\"submit\" disabled={encounter.length < 1 || encounter.length > 5}>To Battle!</Button>\n          </ButtonGroup>\n        </Container>\n      </ Navbar>\n    </Form >\n  );\n};\n\nexport default EncounterBuilder;\n","export default function geneticAlgorithmConstructor(options) {\n\n    function settingDefaults() {\n        return {\n\n            mutationFunction: function (phenotype) { return phenotype },\n\n            crossoverFunction: function (a, b) { return [a, b] },\n\n            fitnessFunction: function (phenotype) { return 0 },\n\n            doesABeatBFunction: undefined,\n\n            population: [],\n            populationSize: 100,\n        }\n    }\n\n    function settingWithDefaults(settings, defaults) {\n        settings = settings || {}\n\n        settings.mutationFunction = settings.mutationFunction || defaults.mutationFunction\n        settings.crossoverFunction = settings.crossoverFunction || defaults.crossoverFunction\n        settings.fitnessFunction = settings.fitnessFunction || defaults.fitnessFunction\n\n        settings.doesABeatBFunction = settings.doesABeatBFunction || defaults.doesABeatBFunction\n\n        settings.population = settings.population || defaults.population\n        if (settings.population.length <= 0) throw Error(\"population must be an array and contain at least 1 phenotypes\")\n\n        settings.populationSize = settings.populationSize || defaults.populationSize\n        if (settings.populationSize <= 0) throw Error(\"populationSize must be greater than 0\")\n\n        return settings\n    }\n\n    var settings = settingWithDefaults(options, settingDefaults())\n\n    function populate() {\n        var size = settings.population.length\n        while (settings.population.length < settings.populationSize) {\n            const rand = Math.floor(Math.random() * size);\n            settings.population.push(\n                mutate(\n                    cloneJSON(settings.population[Math.floor(rand)])\n                )\n            )\n        }\n    }\n\n    function cloneJSON(object) {\n        return JSON.parse(JSON.stringify(object))\n    }\n\n    function mutate(phenotype) {\n        return settings.mutationFunction(cloneJSON(phenotype))\n    }\n\n    function crossover(phenotype) {\n        phenotype = cloneJSON(phenotype)\n        var mate = settings.population[Math.floor(Math.random() * settings.population.length)]\n        mate = cloneJSON(mate)\n        return settings.crossoverFunction(phenotype, mate)[0]\n    }\n\n    function doesABeatB(a, b) {\n        if (settings.doesABeatBFunction) {\n            return settings.doesABeatBFunction(a, b)\n        } else {\n            return settings.fitnessFunction(a) >= settings.fitnessFunction(b)\n        }\n    }\n\n    function compete() {\n        var nextGeneration = []\n\n        for (var p = 0; p < settings.population.length - 1; p += 2) {\n            var phenotype = settings.population[p];\n            var competitor = settings.population[p + 1];\n\n            nextGeneration.push(phenotype)\n            if (doesABeatB(phenotype, competitor)) {\n                if (Math.random() < 0.5) {\n                    nextGeneration.push(mutate(phenotype))\n                } else {\n                    nextGeneration.push(crossover(phenotype))\n                }\n            } else {\n                nextGeneration.push(competitor)\n            }\n        }\n\n        settings.population = nextGeneration;\n    }\n\n\n\n    function randomizePopulationOrder() {\n\n        for (var index = 0; index < settings.population.length; index++) {\n            var otherIndex = Math.floor(Math.random() * settings.population.length)\n            var temp = settings.population[otherIndex]\n            settings.population[otherIndex] = settings.population[index]\n            settings.population[index] = temp\n        }\n    }\n\n    return {\n        evolve: function (options) {\n\n            if (options) {\n                settings = settingWithDefaults(options, settings)\n            }\n\n            populate()\n            randomizePopulationOrder()\n            compete()\n            return this\n        },\n        best: function () {\n            var scored = this.scoredPopulation()\n            var result = scored.reduce(function (a, b) {\n                return a.score >= b.score ? a : b\n            }, scored[0]).phenotype\n            return cloneJSON(result)\n        },\n        bestScore: function () {\n            return settings.fitnessFunction(this.best())\n        },\n        population: function () {\n            return cloneJSON(this.config().population)\n        },\n        scoredPopulation: function () {\n            return this.population().map(function (phenotype) {\n                return {\n                    phenotype: cloneJSON(phenotype),\n                    score: settings.fitnessFunction(phenotype)\n                }\n            })\n        },\n        config: function () {\n            return cloneJSON(settings)\n        },\n        clone: function (options) {\n            return geneticAlgorithmConstructor(\n                settingWithDefaults(options,\n                    settingWithDefaults(this.config(), settings)\n                )\n            )\n        }\n    }\n}\n","import GeneticAlgorithmConstructor, { GeneticAlgorithmConfig, ScoredPhenotype } from '../geneticalgorithm/geneticalgorithm';\nimport { handlePlayerEffect, playerActions, setSelected } from '../utils/playGame';\nimport Chance from 'chance';\nimport { MonsterTarget, Play } from '../utils/types';\nimport { previousState } from '../utils/data';\nimport prettyjson from 'prettyjson';\nimport { Seq } from 'immutable';\nimport { rangeArr } from 'src/utils/zFunDump';\n\nexport type TinkererOptions = typeof defaultTinkererOptions & { turns?: number };\n\nexport const defaultTinkererOptions = {\n  playerSeed: \"Miau\",\n  weights: { monster: 0.70, player: 0.125, turn: 0.1, stamina: 0.075 },\n  debug: false,\n};\n\nexport const gameRender = (results: ScoredPhenotype<Play>[]): string => {\n  const best: ScoredPhenotype<Play> = Seq(results).maxBy(a => a.score)!!;\n  const lastState = previousState(best.phenotype);\n  return `BEST BY ${best.score} in ${best.phenotype.states.length - 1} turns\\n` +\n    prettyjson.render([\n      lastState.lastAttacks.map(({ origin, display, phase }) => [origin === 'Player' ? 'Player' : `${best.phenotype.enemies[origin]!!.lore.name} [${origin}]`, display, phase]),\n      Seq(best.phenotype.enemies).zip(Seq(lastState.enemies)).flatMap(([enemy, stats], idx) => [`[${idx}] ${enemy.lore.name}`, stats]).toArray(),\n      lastState.player,\n    ]);\n}\n\nexport default function tinkerer(play: Play, iter: number, optionsOverride?: Partial<TinkererOptions>): ScoredPhenotype<Play>[] {\n  const options: TinkererOptions = { ...defaultTinkererOptions, ...optionsOverride };\n  const range = rangeArr(iter);\n  const rand = new Chance(options.playerSeed);\n  const actions = playerActions(play.player);\n  const config: GeneticAlgorithmConfig<Play> = {\n    mutationFunction: (oldPlay) => {\n      const latestState = previousState(oldPlay);\n      const monsterHealth = latestState.enemies.reduce((acc, monster) => acc + monster.hp.current, 0);\n      const playerHealth = latestState.player.hp.current;\n      if (playerHealth === 0 || monsterHealth === 0) {\n        return oldPlay;\n      }\n      let newPlay = oldPlay;\n      while (rand.d6() === 6 || (previousState(newPlay).enemies[previousState(newPlay).target]?.hp ?? 0) <= 0) {\n        newPlay = setSelected(newPlay, rand.natural({ min: 0, max: previousState(newPlay).enemies.length - 1 }) as MonsterTarget);\n      }\n      const latest = previousState(newPlay);\n      const unavailable = actions.map((a, idx) => [a, idx] as const).filter(([a, _]) => a.stamina > latest.player.stamina.current).map(([_, idx]) => idx);\n      newPlay = handlePlayerEffect(\n        newPlay,\n        rand.natural({ min: 0, max: actions.length - 1, exclude: unavailable })\n      );\n      return newPlay;\n    },\n    fitnessFunction: (play) => {\n      const latestState = previousState(play);\n      const monsterHealth = latestState.enemies.reduce((acc, monster) => acc + monster.hp.current, 0);\n      const playerHealth = latestState.player.hp.current;\n      const playerStamina = latestState.player.stamina.current;\n      const startPlayerHealth = play.states[0].player.hp.max;\n      const startPlayerStamina = play.states[0].player.stamina.max;\n      const startMonsterHealth = play.states[0].enemies.reduce((acc, monster) => acc + monster.hp.current, 0);\n\n      const monsterKillingFitness = ((startMonsterHealth - monsterHealth) / startMonsterHealth);\n      const playerAlivenessFitness = (playerHealth / startPlayerHealth);\n      const killSpeedFitness = (play.turns - play.states.length) / play.turns;\n      const staminaFitness = (playerStamina / startPlayerStamina);\n\n      const fitness = (monsterKillingFitness * options.weights.monster) + (playerAlivenessFitness * options.weights.player) + (killSpeedFitness * options.weights.turn) + (staminaFitness * options.weights.stamina);\n      if (options.debug) {\n        console.log(`MH: ${monsterHealth} | PH: ${playerHealth} | TR: ${play.states.length}\\nFitness: ${fitness} | MF: ${monsterKillingFitness} | PF: ${playerAlivenessFitness} | SF: ${staminaFitness} | TF: ${killSpeedFitness}\\nWeights: ${JSON.stringify(options.weights)}`);\n      }\n      return fitness;\n    },\n    population: range.map((_) => play),\n    populationSize: iter,\n  }\n\n  const turns = optionsOverride?.turns ? optionsOverride?.turns : play.turns;\n  let gen = new GeneticAlgorithmConstructor<Play>(config);\n  for (let i = 0; i < turns; i++) {\n    gen = gen.evolve();\n  }\n  return gen.scoredPopulation();\n}\n","import React from \"react\";\nimport { Container, Card, Row, Button } from \"react-bootstrap\";\n\nconst Menu: React.FC<{\n  title: string;\n  states: string[];\n  onClick: (value: string) => void\n}> = ({ title, states, onClick }) =>\n    <Container fluid style={{ marginBottom: '105px' }}>\n      <Row className=\"g-2\">\n        <Card.Title>\n          {title}\n        </Card.Title>\n      </Row>\n      {states.map(state =>\n        <Row className=\"g-2\" key={state}>\n          <Button size=\"lg\" className=\"mb-2\"\n            key={state}\n            variant={'primary'}\n            onClick={() => { onClick(state); }}\n          >{state}</Button>\n        </Row>\n      )}</Container >;\n\nexport default Menu;\n","import React from \"react\";\nimport \"./App.css\";\n// import { readString } from \"react-papaparse\";\nimport { Snapshot, Play } from \"./utils/types\";\n\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport Game from \"./components/Game\";\nimport PlayerBuilder from \"./components/PlayerBuilder\";\nimport EncounterBuilder from \"./components/EncounterBuilder\";\nimport play, { handlePlayerEffect, PlayState, playState, setDisabledSkills, setSelected } from \"./utils/playGame\";\nimport tinkerer from \"./tinkerer/tinkerer\";\nimport { Seq } from \"immutable\";\nimport { previousState, randomEnemy, randomPlayer } from \"./utils/data\";\nimport { useMachine } from '@xstate/react';\nimport { gameMenuMachine } from \"./menuStateMachine\";\nimport Menu from \"./components/menus/Menu\";\n\nfunction App() {\n  const [state, send] = useMachine(gameMenuMachine, { devTools: true });\n  const event = state.event;\n  const onMenu = () => {\n    send('MENU');\n  }\n\n  switch (true) {\n    case state.matches('main'):\n      return <Menu\n        title={\"Main Menu\"}\n        states={Object.keys(gameMenuMachine.states.main.on)}\n        onClick={send}\n      />;\n    // QUICK\n    case state.matches({ quick: 'play' }): {\n      const player = randomPlayer();\n      const encounter = randomEnemy();\n      return <SingleGame\n        play={play(player[0], player[1], [encounter[0]], [encounter[1]], 50, state.context.singleContext.seed)}\n        onMenu={onMenu}\n        timeTravel={true}\n        onGameEnd={(result, game) => { send(result === 'win' ? 'WIN' : 'LOSE', { result, game }) }}\n      />;\n    }\n    case state.matches({ quick: 'win' }):\n    case state.matches({ quick: 'lose' }):\n      return <Menu\n        title={`${event.result} in ${event.game.states.length - 1} turns`}\n        states={[\"MENU\"]}\n        onClick={send}\n      />;\n    // SINGLE\n    case state.matches({ single: 'player' }):\n      return <PlayerBuilder onSave={(player, playerStats) => { send('PLAYER', { player: [player, playerStats] }); }} />;\n    case state.matches({ single: 'encounter' }):\n      return <EncounterBuilder\n        player={event.player[0]}\n        onSave={(enemies, enemiesStats) => { send('ENCOUNTER', { encounter: [enemies, enemiesStats], player: event.player }) }}\n      />;\n    case state.matches({ single: 'play' }): {\n      return <SingleGame\n        play={play(event.player[0], event.player[1], event.encounter[0], event.encounter[1], 50, state.context.singleContext.seed)}\n        onMenu={onMenu}\n        timeTravel={true}\n        onGameEnd={(result, game) => { send(result === 'win' ? 'WIN' : 'LOSE', { result, game }) }}\n      />;\n    }\n    case state.matches({ single: 'win' }):\n    case state.matches({ single: 'lose' }):\n      return <Menu\n        title={`${event.result} in ${event.game.states.length - 1} turns`}\n        states={[\"MENU\"]}\n        onClick={send}\n      />;\n    // ARCADE\n    case state.matches({ arcade: 'player' }): {\n      const encounter = randomEnemy();\n      return <PlayerBuilder onSave={(player, playerStats) => { send('PLAYER', { game: play(player, playerStats, [encounter[0]], [encounter[1]], 50, state.context.survivalContext.seed) }); }} />;\n    }\n    case state.matches({ arcade: 'play' }): {\n      return <SingleGame\n        play={event.game}\n        timeTravel={false}\n        onMenu={onMenu}\n        onGameEnd={(result: PlayState, game: Play) => {\n          const encounter = randomEnemy();\n          const firstState: Snapshot = game.states[0];\n          send(result === 'win' ? 'WIN' : 'LOSE', { result, game: play(game.player, firstState.player, [encounter[0]], [encounter[1]], 50, state.context.survivalContext.seed) });\n        }}\n      />;\n    }\n    case state.matches({ arcade: 'victory' }): {\n      return <Menu\n        title={`🎉🎉VICTORY!🎉🎉 Final score: ${state.context.arcadeContext.score}`}\n        states={[\"MENU\"]}\n        onClick={send}\n      />;\n    }\n    case state.matches({ arcade: 'defeat' }): {\n      return <Menu\n        title={`Failed after ${state.context.arcadeContext.victories} victories`}\n        states={[\"MENU\"]}\n        onClick={send}\n      />;\n    }\n    // SURVIVAL\n    case state.matches({ survival: 'player' }): {\n      const encounter = randomEnemy();\n      return <PlayerBuilder onSave={(player, playerStats) => { send('PLAYER', { game: play(player, playerStats, [encounter[0]], [encounter[1]], 50, state.context.survivalContext.seed) }); }} />;\n    }\n    case state.matches({ survival: 'play' }): {\n      return <SingleGame\n        play={event.game}\n        onMenu={onMenu}\n        timeTravel={false}\n        onGameEnd={(result, game) => {\n          const encounter = randomEnemy();\n          const lastState: Snapshot = game.states[event.game.states.length - 1];\n          send(result === 'win' ? 'WIN' : 'LOSE', { result, game: play(game.player, lastState.player, [encounter[0]], [encounter[1]], 50, state.context.survivalContext.seed) });\n        }}\n      />;\n    }\n    case state.matches({ survival: 'defeat' }): {\n      return <Menu\n        title={`Completed after ${state.context.survivalContext.victories} victories`}\n        states={[\"MENU\"]}\n        onClick={send}\n      />;\n    }\n    default:\n      return <>{JSON.stringify(state.value)}</>;\n  }\n}\n\nconst SingleGame = ({ play, timeTravel, onGameEnd, onMenu }: { play: Play; timeTravel: boolean, onGameEnd: (state: PlayState, play: Play) => void, onMenu: () => void }) => {\n  const [game, setGame] = React.useState<Play>(play);\n  const [redo, setRedo] = React.useState<Snapshot[]>([]);\n\n  React.useEffect(() => {\n    setGame(play);\n  }, [play]);\n\n  React.useEffect(() => {\n    const gameState = playState(game);\n    const hasEnded = gameState !== 'playing';\n    if (hasEnded) {\n      onGameEnd(gameState, game);\n    }\n  }, [game]);\n\n  const timeTravelObj = timeTravel ? {\n    redo: redo.length > 0 ? (() => {\n      const newRedo = [...redo];\n      const latest = newRedo.pop() as Snapshot;\n      setRedo(newRedo);\n      setGame({ ...game, states: [...game.states, latest] });\n    }) : undefined,\n    undo: () => {\n      setRedo([...redo, previousState(game)]);\n      setGame({ ...game, states: [game.states[0], ...game.states.slice(1, -1)] });\n    }\n  } : undefined;\n\n  return (<Game\n    game={game}\n    timeTravel={timeTravelObj}\n    onMenu={onMenu}\n    setSelected={(idx) => { setRedo([]); setGame(setSelected(game, idx)); }}\n    setDisabledSkills={(disabled) => { setRedo([]); setGame(setDisabledSkills(game, disabled)) }}\n    handlePlayerEffect={(idx) => { setRedo([]); setGame(handlePlayerEffect(game, idx)); }}\n    solveGame={(iterations) => setGame(Seq(tinkerer(game, iterations, { turns: game.turns - game.states.length })).maxBy(a => a.score)!!.phenotype)}\n    hint={(iterations) =>\n      setGame({\n        ...game,\n        states: [...game.states, Seq(tinkerer(game, iterations, { turns: game.turns - game.states.length })).maxBy(a => a.score)!!.phenotype.states[game.states.length]]\n      })\n    }\n  />\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport { createRoot } from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorkerRegistration from './serviceWorkerRegistration';\nimport reportWebVitals from './reportWebVitals';\n\nconst container = document.getElementById('root');\nconst root = createRoot(container!);\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://cra.link/PWA\nserviceWorkerRegistration.register();\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","import { Opaque } from \"type-fest\";\nimport { allRanges, enemies, makeStat } from \"./data\";\nimport { callEffectFun, Effect, effectFunCall, Enemies, EnemiesStats, Enemy, EnemyStats, FunIndex, MonsterTarget, Nel, Play, PlayerStats, Snapshot, Status, Target } from \"./types\";\n\n// #region Effect funs\n\nexport function extractFunction({ effects }: Effect): ReduceFun {\n  return (origin, play, startState) => effects.reduce((acc, { index, parameters }) =>\n    callEffectFun(effectFunRepo, index, parameters)(origin, ...acc), [play, startState]);\n}\n\nconst effectFun = <T>(...funs: Nel<ParametrizedFun<T>>): EffectFun<T> =>\n  // TODO check direction of the fold\n  (funs.length > 1\n    ? funs.reduce((acc, value) => (params) => (origin, play, oldState) => {\n      const [newPlay, newState] = acc(params)(origin, play, oldState);\n      return value(params)(origin, newPlay, newState);\n    }) : funs[0]) as EffectFun<T>;\n\nexport type ReduceFun = (origin: Target, play: Play, newState: Snapshot) => [Play, Snapshot];\nexport type ParametrizedFun<T> = (params: T) => ReduceFun;\nexport type EffectFun<T> = Opaque<ParametrizedFun<T>, ParametrizedFun<T>>;\n\nexport type EffectFunRepo = EffectFunctionRepository;\nexport type EffectFunRepoIndex = keyof EffectFunctionT & FunIndex;\nexport type EffectFunParams<T extends EffectFunRepoIndex> = Parameters<EffectFunRepo[T]>[0];\n\nexport type EffectFunctionRepository = { [k in keyof EffectFunctionT]: (params: EffectFunctionT[k]) => ReduceFun };\nexport type EffectFunctionT = {\n  'Monster:Summon': { enemy: number };\n  'Monster:Dead': undefined;\n  'Monster:Attack': { amount: number };\n  'Basic:Rest': undefined;\n  'Basic:Advance': { amount: number };\n  'Basic:Retreat': { amount: number };\n  'Basic:Attack': { amount: number };\n  'Basic:Stamina': { amount: number };\n  'Effect:Poison': { target: Target; lifespan: number };\n  'Effect:Dodge': undefined;\n  'Effect:Armor': { amount: number };\n  'Wand:MagicBolt': undefined;\n  'Axe:Chop': undefined;\n  'Axe:Cut': undefined;\n  'Axe:Bleed': undefined;\n  'Hook:GetHere': undefined;\n  'Monster:Swipe': undefined;\n  'Monster:Roar': undefined;\n  'Monster:Jump': undefined;\n  'BootsOfFlight:EOT': undefined;\n  'Utility:Cleanup': undefined;\n  'Debug:GGWP': undefined;\n  'Debug:Sudoku': undefined;\n}\n\nconst engineFunctions = {\n  'Debug:GGWP': effectFun(\n    () => (_, play, currentState) => [play, { ...currentState, enemies: currentState.enemies.map(m => ({ ...m, hp: { ...m.hp, current: 0 } })) as EnemiesStats }]\n  ),\n  'Debug:Sudoku': effectFun(\n    () => (_, play, currentState) => [play, { ...currentState, player: { ...currentState.player, hp: { ...currentState.player.hp, current: 0 } } }]\n  ),\n  'Utility:Cleanup': effectFun(\n    () => (_origin, play, currentState) => [play, actions.changeStatusPlayer(currentState, (o) => ({ ...o, armor: { amount: 0 }, bleed: { turns: Math.max(o.bleed.turns - 1, 0) }, dodge: { active: false }, stun: { active: false } }))],\n    () => (_origin, play, currentState) => [play, currentState.enemies.reduce((acc, v, idx) => actions.changeStatusMonster(acc, idx as MonsterTarget, (o) => ({ ...o, armor: { amount: 0 }, bleed: { turns: Math.max(o.bleed.turns - 1, 0) }, dodge: { active: false }, stun: { active: false } })), currentState)],\n  ),\n}\n\nconst effectFunRepo: EffectFunctionRepository = {\n  ...engineFunctions,\n  // #region BASIC\n  'Basic:Rest': effectFun(\n    () => (_origin, play, currentState) => [play, currentState]\n  ),\n  'Basic:Advance': effectFun(\n    ({ amount }) => (_origin, play, currentState) => [play, actions.changeDistance(currentState, currentState.target, -amount)]\n  ),\n  'Basic:Retreat': effectFun(\n    ({ amount }) => (_origin, play, currentState) => [play, actions.changeDistance(currentState, currentState.target, amount)]\n  ),\n  'Basic:Attack': effectFun(\n    ({ amount }) => (_origin, play, currentState) => [play, actions.attackMonster(currentState, currentState.target, amount)]\n  ),\n  'Basic:Stamina': effectFun(\n    ({ amount }) => (_origin, play, currentState) => [play, actions.modifyPlayerStamina(currentState, amount)]\n  ),\n  // #endregion BASIC\n  // #region EFFECTS\n  'Effect:Dodge': effectFun(\n    () => (_origin, play, currentState) => [play, actions.changeStatusPlayer(currentState, (o) => ({ ...o, dodge: { active: true } }))]\n  ),\n  'Effect:Armor': effectFun(\n    () => (_, play, currentState) => [play, actions.changeStatusPlayer(currentState, (o) => ({ ...o, armor: { amount: 3 } }))]\n  ),\n  'Effect:Poison': effectFun(\n    ({ target }) => (origin, play, currentState) => [play, target === 'Player' ? actions.attackPlayer(currentState, 1) : actions.attackMonster(currentState, target, 1)],\n    (params) => (origin, play, currentState) => [play,\n      (params.target !== 'Player' && currentState.enemies[params.target]!!.hp.current > 0)\n        && (params.lifespan > 0)\n        ? actions.addEotEffect(currentState, origin, { display: `Poison ${play.enemies[params.target]!!.lore.name} [${params.target + 1}]`, tooltip: '', range: allRanges, priority: 4, effects: [effectFunCall(['Effect:Poison', { ...params, lifespan: params.lifespan - 1 }])] })\n        : currentState],\n  ),\n  // #endregion EFFECTS\n  // #region MONSTERS\n  'Monster:Attack': effectFun(\n    ({ amount }) => (_origin, play, currentState) => [play, actions.attackPlayer(currentState, amount)]\n  ),\n  'Monster:Summon': effectFun(\n    ({ enemy }) => (_origin, play, currentState) => actions.addEnemy(play, currentState, enemies[enemy][0], enemies[enemy][1])\n  ),\n  'Monster:Dead': effectFun(\n    () => (_origin, play, currentState) => [play, currentState]\n  ),\n  'Monster:Swipe': effectFun(\n    () => (_, play, currentState) => [play, actions.attackPlayer(currentState, 2)]\n  ),\n  'Monster:Roar': effectFun(\n    () => (_, play, currentState) => [play, actions.modifyPlayerStamina(currentState, -5)]\n  ),\n  'Monster:Jump': effectFun(\n    () => (origin, play, currentState) => [play, actions.changeDistance(currentState, origin, -2)]\n  ),\n  // #endregion MONSTERS\n  // #region ITEMS\n  'Axe:Chop': effectFun(\n    () => (_, play, currentState) => [play, actions.attackMonster(currentState, currentState.target, 3)]\n  ),\n  'Axe:Cut': effectFun(\n    () => (_, play, currentState) => [play, actions.attackMonster(currentState, currentState.target, 3)],\n    () => (origin, play, currentState) => [play,\n      actions.addEotEffect(currentState, origin, { display: `Poison ${play.enemies[currentState.target]!!.lore.name} [${currentState.target + 1}]`, tooltip: '', range: allRanges, priority: 4, effects: [effectFunCall(['Effect:Poison', { target: currentState.target, lifespan: 2 }])] })]\n  ),\n  'Axe:Bleed': effectFun(\n    () => (_, play, currentState) => [play, actions.attackMonster(currentState, currentState.target, 2)],\n    () => (_, play, currentState) => [play, actions.changeStatusMonster(currentState, currentState.target, (o) => ({ ...o, bleed: { turns: o.bleed.turns + 5 } }))]\n  ),\n  'Hook:GetHere': effectFun(\n    () => (_, play, currentState) => [play, actions.attackMonster(currentState, currentState.target, 3)],\n    () => (_origin, play, currentState) => [play, actions.changeDistance(currentState, currentState.target, -1)]\n  ),\n  'BootsOfFlight:EOT': effectFun(\n    () => (_, play, currentState) => [play, currentState.enemies.reduce((s, _m, idx) => actions.changeDistance(s, idx as MonsterTarget, -2), currentState)]\n  ),\n  'Wand:MagicBolt': effectFun(\n    () => (_, play, currentState) => {\n      let state = currentState;\n      while (state.player.stamina.current) {\n        state = actions.modifyPlayerStamina(state, -2);\n        state = actions.attackMonster(state, currentState.target, 1)\n      }\n      return [play, state];\n    }\n  ),\n  // #endregion ITEMS\n};\n\n// #endregion\n// #region Modify state\n\nconst clamp = (num: number, min: number, max: number = Infinity) =>\n  Math.min(Math.max(num, min), max);\n\nconst updateMonster = (enemies: EnemiesStats, target: Target, override: (stats: EnemyStats) => Partial<EnemyStats>): EnemiesStats =>\n  enemies.map((m, idx) =>\n    (idx === target)\n      ? { ...m, ...override(m) }\n      : m) as EnemiesStats;\n\nconst updatePlayer = (curr: Snapshot, override: (player: PlayerStats) => Partial<PlayerStats>): Snapshot => {\n  return {\n    ...curr,\n    player: { ...curr.player, ...override(curr.player) }\n  };\n}\n\nconst updatePlayerStat = <T extends keyof PlayerStats>(curr: Snapshot, key: T, modify: (player: PlayerStats[T]) => Partial<PlayerStats[T]>): Snapshot => {\n  const player = curr.player;\n  player[key] = {\n    ...player[key],\n    ...modify(player[key])\n  }\n  return {\n    ...curr,\n    player\n  };\n}\n\nconst actions = {\n  attackPlayer,\n  attackMonster,\n  changeStatusPlayer: (curr: Snapshot, updateStatus: (oldStatus: Status) => Status): Snapshot => ({\n    ...curr,\n    player: { ...curr.player, status: updateStatus(curr.player.status) }\n  }),\n  changeStatusMonster: (curr: Snapshot, target: MonsterTarget, updateStatus: (oldStatus: Status) => Status): Snapshot => ({\n    ...curr,\n    enemies: updateMonster(curr.enemies, target, ({ status }) => ({ status: updateStatus(status) })),\n  }),\n  changeDistance: (curr: Snapshot, origin: Target, amount: number): Snapshot =>\n  ({\n    ...curr,\n    enemies: updateMonster(curr.enemies, origin, ({ distance }) => ({ distance: clamp(distance + amount, 0, 4) as MonsterTarget })),\n  }),\n  removeMonster: (currPlay: Play, currSnap: Snapshot, target: MonsterTarget): [Play, Snapshot] =>\n    [\n      { ...currPlay, enemies: currPlay.enemies.filter((_, idx) => idx === target) as Enemies },\n      { ...currSnap, target: 0, enemies: currSnap.enemies.filter((_, idx) => idx === target) as EnemiesStats }\n    ],\n  modifyPlayerStamina: (\n    curr: Snapshot,\n    amount: number,\n  ): Snapshot =>\n    updatePlayerStat(curr, 'stamina', stamina => ({\n      current: clamp(stamina.current + amount, 0, stamina.max)\n    })),\n  addEotEffect: (\n    curr: Snapshot,\n    origin: Target,\n    effect: Effect,\n  ): Snapshot => ({\n    ...curr,\n    eot: [...(curr.eot ?? []), [origin, effect]],\n  }),\n  addBotEffect: (\n    curr: Snapshot,\n    origin: Target,\n    effect: Effect,\n  ): Snapshot => ({\n    ...curr,\n    bot: [...(curr.eot ?? []), [origin, effect]],\n  }),\n  addEnemy: (\n    play: Play,\n    curr: Snapshot,\n    enemy: Enemy,\n    enemyStats: EnemyStats,\n  ): [Play, Snapshot] => {\n    return play.enemies.length < 5\n      ? [{\n        ...play,\n        enemies: [...play.enemies, enemy] as Enemies,\n      }, {\n        ...curr,\n        enemies: [...curr.enemies, enemyStats] as EnemiesStats,\n      }]\n      : [play, curr];\n  }\n};\n\nfunction attackMonster(curr: Snapshot, target: MonsterTarget, amount: number): Snapshot {\n  const monster = curr.enemies[target]!!;\n  const armor = monster.status.armor.amount;\n  const damage = amount + curr.player.attack.current;\n  const afterDefence = Math.max(damage - monster.defence.current, 0);\n  const afterArmor = Math.max(afterDefence - armor, 0);\n  const armorSpent = armor - (afterDefence - afterArmor);\n  const afterBleed = afterArmor + (monster.status.bleed.turns > 0 ? 1 : 0);\n  return ({\n    ...curr,\n    enemies: updateMonster(curr.enemies, target, ({ status, hp }) => ({\n      hp: { max: hp.max, current: clamp(hp.current - afterBleed, 0, hp.max) },\n      status:\n        { ...status, armor: { amount: armorSpent } }\n    })),\n  });\n}\n\nfunction attackPlayer(curr: Snapshot, amount: number): Snapshot {\n  const armor = curr.player.status.armor.amount;\n  const damage = amount + curr.player.attack.current;\n  const afterDefence = Math.max(damage - curr.player.defence.current, 0);\n  const afterArmor = Math.max(afterDefence - armor, 0);\n  const armorSpent = armor - (afterDefence - afterArmor);\n  const afterBleed = afterArmor + (curr.player.status.bleed.turns > 0 ? 1 : 0);\n  return updatePlayer(curr, ({ hp, status }) => ({\n    hp: { max: hp.max, current: clamp(hp.current - afterBleed, 0, hp.max) },\n    status: { ...status, armor: { amount: status.armor.amount - armorSpent } }\n  }));\n}\n\n// #endregion\n// #region Stat funs\n\nexport type StatsFunIndex = keyof typeof statsRepository;\nexport const statsRepository = {\n  '+Health': (player: PlayerStats, enemies: EnemiesStats): [PlayerStats, EnemiesStats] => [{ ...player, hp: makeStat(player.hp.current + 10) }, enemies],\n  '+StaPerTurn': (player: PlayerStats, enemies: EnemiesStats): [PlayerStats, EnemiesStats] => [{ ...player, staminaPerTurn: makeStat(player.staminaPerTurn.current + 1) }, enemies],\n  '+Stamina': (player: PlayerStats, enemies: EnemiesStats): [PlayerStats, EnemiesStats] => [{ ...player, stamina: makeStat(player.stamina.current + 3) }, enemies],\n  '+Attack': (player: PlayerStats, enemies: EnemiesStats): [PlayerStats, EnemiesStats] => [{ ...player, attack: makeStat(player.attack.current + 1) }, enemies],\n  '+Speed': (player: PlayerStats, enemies: EnemiesStats): [PlayerStats, EnemiesStats] => [{ ...player, speed: makeStat(player.speed.current + 1) }, enemies],\n  '+Defence': (player: PlayerStats, enemies: EnemiesStats): [PlayerStats, EnemiesStats] => [{ ...player, defence: makeStat(player.defence.current + 1) }, enemies],\n\n  '-Health': (player: PlayerStats, enemies: EnemiesStats): [PlayerStats, EnemiesStats] => [{ ...player, hp: makeStat(player.hp.current - 10) }, enemies],\n  '-StaPerTurn': (player: PlayerStats, enemies: EnemiesStats): [PlayerStats, EnemiesStats] => [{ ...player, staminaPerTurn: makeStat(player.staminaPerTurn.current - 1) }, enemies],\n  '-Stamina': (player: PlayerStats, enemies: EnemiesStats): [PlayerStats, EnemiesStats] => [{ ...player, stamina: makeStat(player.stamina.current - 3) }, enemies],\n  '-Attack': (player: PlayerStats, enemies: EnemiesStats): [PlayerStats, EnemiesStats] => [{ ...player, attack: makeStat(player.attack.current - 1) }, enemies],\n  '-Speed': (player: PlayerStats, enemies: EnemiesStats): [PlayerStats, EnemiesStats] => [{ ...player, speed: makeStat(player.speed.current - 1) }, enemies],\n  '-Defence': (player: PlayerStats, enemies: EnemiesStats): [PlayerStats, EnemiesStats] => [{ ...player, defence: makeStat(player.defence.current - 1) }, enemies],\n}\n\n// #endregion","import { Enemies, Player, Snapshot, MonsterTarget, Target, InventoryEffect, EnemiesStats, PlayerStats, Play, RNG, StatsFun, Effect, PlayerTarget, effectFunCall, DisabledSkills, safeEntries } from \"./types\";\nimport { Seq, Set } from \"immutable\";\nimport { allRanges, previousState } from \"./data\";\nimport { Chance } from \"chance\";\n// @ts-ignore fails on scripts despite having a d.ts file\nimport { toIndexableString } from 'pouchdb-collate';\nimport { extractFunction, statsRepository } from \"./effectRepository\";\nimport { rangeArr } from \"./zFunDump\";\n\n/**\n * @returns min inclusive, max exclusive rand\n */\nfunction turnDeterministicRng(turns: number, randPerTurn: number, monsterSeed: string | number): RNG {\n  const monsterChance = new Chance(monsterSeed);\n  const monsterRng =\n    rangeArr(turns)\n      .map(_ => rangeArr(randPerTurn)\n        .map(_ => monsterChance.floating({ min: 0, max: 1, fixed: 2 })));\n  return monsterRng as RNG;\n}\n\nexport const turnRng = (play: Play, turn: number): ((min: number, max: number) => number) => {\n  const turnRng = [...play.rng[turn]];\n  return (min: number, max: number) => Math.floor(((max - min) * turnRng.pop()!!) + min);\n}\n\nexport const playerPassives = (player: Player): StatsFun[] =>\n  Object.values(player.build).flatMap((s) => s.passives ?? []).map(i => statsRepository[i]);\n\nexport const playerActions = (player: Player): InventoryEffect[] =>\n  Object.values(player.build).flatMap((s) => s.effects ?? []);\n\nconst enemiesBotEffects = (enemies: Enemies): [MonsterTarget, Effect][] =>\n  enemies.flatMap((e, idx) => (e.bot ?? []).map(eff => [idx as MonsterTarget, eff] as const))\n    // Sure, typescript\n    .map(a => [...a]);\n\nconst enemiesEotEffects = (enemies: Enemies): [MonsterTarget, Effect][] =>\n  enemies.flatMap((e, idx) => (e.eot ?? []).map(eff => [idx as MonsterTarget, eff] as const))\n    // Sure, typescript\n    .map(a => [...a]);\n\nexport const playerBotEffects = (player: Player, d: DisabledSkills): [PlayerTarget, Effect][] =>\n  safeEntries(player.build).flatMap(([k, s]) => !Set(d).has(k) ? s.bot ?? [] : []).map(a => ['Player', a]);\n\nexport const playerEotEffects = (player: Player, d: DisabledSkills): [PlayerTarget, Effect][] =>\n  safeEntries(player.build).flatMap(([k, s]) => !Set(d).has(k) ? s.eot ?? [] : []).map(a => ['Player', a]);\n\nexport const buildPlayer = (player: Player, playerStats: PlayerStats, enemiesStats: EnemiesStats): [PlayerStats, EnemiesStats] =>\n  playerPassives(player).reduce(([p, e], fun) => fun(p, e), [playerStats, enemiesStats]);\n\nexport default function start(player: Player, playerStats: PlayerStats, enemies: Enemies, enemiesStats: EnemiesStats, turns: number, seed: number | string, randPerTurn: number = 20): Play {\n  const [playerGameStats, enemyGameStats] = buildPlayer(player, playerStats, enemiesStats);\n  return {\n    player,\n    enemies,\n    states: [{\n      player: playerGameStats,\n      enemies: enemyGameStats,\n      target: 0,\n      lastAttacks: [],\n      disabledSkills: []\n    }],\n    rng: turnDeterministicRng(turns, randPerTurn, seed),\n    turns,\n    id: toIndexableString([player, enemies, turns, seed]),\n    seed,\n  };\n}\n\nconst clamp = (num: number, min: number, max: number = Infinity) =>\n  Math.min(Math.max(num, min), max);\n\nconst reduceFuns = (funs: [Target, Effect][], p: Play, s: Snapshot, dodgeable: boolean, phase: string): [Play, Snapshot] =>\n  Seq(funs)\n    .sortBy(([origin, a]) => {\n      const priorityBonus = origin === 'Player' ? s.player.speed.current : s.enemies[origin]!!.speed.current;\n      return clamp(a.priority - priorityBonus, 0, 4);\n    })\n    .reduce((acc, value) => {\n      const [origin, effect] = value;\n      const [oldPlay, oldState] = acc;\n      const monsterId = origin === 'Player' ? oldState.target : origin;\n      const targetMonster = oldState.enemies[monsterId]!!;\n\n      const isStunnedPlayer = origin === 'Player' && oldState.player.status.stun.active;\n      const isStunnedMonster = origin !== 'Player' && targetMonster.status.stun.active;\n      const isStunned = isStunnedPlayer || isStunnedMonster;\n      if (isStunned) {\n        const newState: Snapshot = {\n          ...oldState,\n          lastAttacks: [...oldState.lastAttacks, { origin, display: `💫💫STUNNED💫💫 ${effect.display}`, phase }]\n        };\n        return [oldPlay, newState];\n      }\n\n\n      const isInRange = Set([...effect.range]).has(targetMonster.distance);\n\n      if (!isInRange) {\n        const newState: Snapshot = {\n          ...oldState,\n          lastAttacks: [...oldState.lastAttacks, { origin, display: `❌❌WHIFFED❌❌ ${effect.display}`, phase }]\n        };\n        return [oldPlay, newState];\n      }\n\n      const monsterDodged = dodgeable && origin === 'Player' && targetMonster.status.dodge.active;\n      if (monsterDodged) {\n        const newState: Snapshot = {\n          ...oldState,\n          enemies: oldState.enemies.map((e, i) => i === monsterId ? { ...e, status: { ...e.status, dodge: { active: false } } } : e) as EnemiesStats,\n          lastAttacks: [...oldState.lastAttacks, { origin, display: `💨💨DODGED💨💨 ${effect.display}`, phase }]\n        };\n        return [oldPlay, newState];\n      }\n\n      const playerDodged = dodgeable && origin !== 'Player' && oldState.player.status.dodge.active;\n      if (playerDodged) {\n        const newState: Snapshot = {\n          ...oldState,\n          player: { ...oldState.player, status: { ...oldState.player.status, dodge: { active: false } } },\n          lastAttacks: [...oldState.lastAttacks, { origin, display: `💨💨DODGED💨💨 ${effect.display}`, phase }]\n        };\n        return [oldPlay, newState];\n      }\n\n      const [newPlay, newState] = extractFunction(effect)(origin, oldPlay, oldState);\n      const finalState: Snapshot = { ...newState, lastAttacks: [...newState.lastAttacks, { origin, display: effect.display, phase }] };\n      return [newPlay, finalState];\n    }, [p, s]);\n\nconst applyEffectStamina = (amount: number): Effect =>\n  ({ display: `${amount >= 0 ? '+' : ''}${amount} 💪`, tooltip: `Use ${amount} stamina`, effects: [effectFunCall(['Basic:Stamina', { amount }])], range: allRanges, priority: 0 });\n\nconst effectEotCleanup: Effect =\n  ({ display: 'Cleanup', tooltip: 'Cleanup', effects: [effectFunCall('Utility:Cleanup')], range: allRanges, priority: 0 });\n\nconst effectDead: Effect =\n  { display: \"⚰\", tooltip: \"⚰\", priority: 4, effects: [effectFunCall(\"Monster:Dead\")], range: allRanges };\n\nexport const handlePlayerEffect = (play: Play, index: number): Play => {\n\n  const lastTurnState = previousState(play);\n  const usedSkill = playerActions(play.player)[index];\n  const bot = lastTurnState.bot ?? [];\n  const eot = lastTurnState.eot ?? [];\n\n  const initialState: Snapshot = {\n    ...lastTurnState,\n    lastAttacks: [],\n    bot: undefined,\n    eot: undefined,\n  };\n\n  // Stamina\n  const [preBotPlay, preBotState] =\n    reduceFuns([['Player', applyEffectStamina(lastTurnState.player.staminaPerTurn.current - usedSkill.stamina)]], play, initialState, false, 'STAMINA');\n\n  // BOT\n  // Lingering effects\n  const [postBotPlay, postBotState] = reduceFuns(bot, preBotPlay, preBotState, false, 'BOT');\n  // Player & Monster effects\n  const entitiesBot: [Target, Effect][] = [...playerBotEffects(postBotPlay.player, postBotState.disabledSkills), ...enemiesBotEffects(postBotPlay.enemies)];\n  const [postEntitiesBotPlay, postEntitiesBotState] = reduceFuns(entitiesBot, postBotPlay, postBotState, false, 'BOT');\n\n  // Turn\n  const rand = turnRng(postEntitiesBotPlay, postEntitiesBotPlay.states.length);\n  const turnFunctions: [Target, Effect][] = Seq(postEntitiesBotPlay.enemies).zip(Seq(postEntitiesBotState.enemies))\n    .map(([e, stats], idx) =>\n      [idx as Target,\n      stats.hp.current > 0\n        ? e.effects[e.rolls[stats.distance][rand(0, e.rolls[stats.distance].length)]]\n        : effectDead] as const)\n    .concat([['Player' as Target, usedSkill] as const])\n    .toArray()\n    // Sure, typescript\n    .map(a => [...a]);\n\n  const [newPlay, newState] =\n    reduceFuns(turnFunctions, postEntitiesBotPlay, postEntitiesBotState, true, 'MAIN');\n\n  // EOT\n  // Player & Monster effects\n  const entitiesEot = [...playerEotEffects(newPlay.player, newState.disabledSkills), ...enemiesEotEffects(newPlay.enemies)];\n  const [postPlayerEotPlay, postPlayerEotState] = reduceFuns(entitiesEot, newPlay, newState, false, 'EOT');\n  // Lingering effects\n  const [postEotPlay, postEotState] = reduceFuns(eot, postPlayerEotPlay, postPlayerEotState, false, 'EOT');\n  // Cleanup\n  const [postCleanup, postCleanupState] = reduceFuns([['Player' as Target, effectEotCleanup]], postEotPlay, postEotState, false, 'EOT');\n\n  return {\n    ...postCleanup,\n    states: [...postCleanup.states, postCleanupState],\n  };\n};\n\nexport const setSelected = (play: Play, target: MonsterTarget): Play => {\n  play.states[play.states.length - 1].target = target;\n  return {\n    ...play,\n    states: [...play.states],\n  };\n}\n\nexport const setDisabledSkills = (play: Play, disabled: DisabledSkills): Play => {\n  play.states[play.states.length - 1].disabledSkills = disabled;\n  return {\n    ...play,\n    states: [...play.states],\n  };\n}\n\nexport type PlayState = 'win' | 'loss' | 'playing'\n\nexport const playState = (play: Play): PlayState => {\n  const state = play.states[play.states.length - 1];\n  return state.player.hp.current <= 0\n    ? 'loss'\n    : state.enemies.reduce((acc, monster) => acc + monster.hp.current, 0) <= 0\n      ? 'win'\n      : 'playing';\n}\n\nexport const scoreGame = (play: Play): number => {\n  const firstState = play.states[0];\n  const lastState = play.states[play.states.length - 1];\n\n  const turns = play.states.length; // 1-50\n  const hpLoss = Math.max(0, firstState.player.hp.max - lastState.player.hp.current) / firstState.player.hp.max; // 0-1\n  const staminaLoss = Math.max(0, firstState.player.stamina.max - lastState.player.stamina.current) / firstState.player.hp.max; // 0-1\n  const enemies = lastState.enemies.length; // 1-5\n\n  return enemies * ((500 * hpLoss) + (150 * staminaLoss) + (500 - (turns * 10)));\n}\n","export const rangeArr = (max: number, min: number = 0) => {\n  let range = [...Array(max).keys()];\n  if (min >= 0) {\n    range.filter(i => i < min)\n  }\n  return range;\n}\n","import WebSocket from 'ws';\nimport { assign, createMachine, interpret } from 'xstate';\nimport { inspect } from '@xstate/inspect/lib/server.js';\nimport { scoreGame } from './utils/playGame';\n\nconst isDebug = process && process.env['SMD'] === '1';\n\nif (isDebug) {\n  inspect({\n    server: new WebSocket.Server({\n      port: 8888\n    })\n  });\n}\n\nconst toMenu = {\n  on: {\n    MENU: { target: 'main' },\n  }\n}\n\nconst quick = {\n  initial: 'play',\n  states: {\n    play: {\n      entry: ['reset'],\n      on: {\n        WIN: { target: 'win' },\n        LOSE: { target: 'lose' }\n      }\n    },\n    win: { type: 'final' as const },\n    lose: { type: 'final' as const },\n  },\n  ...toMenu,\n};\n\nconst single = {\n  initial: 'player',\n  states: {\n    player: {\n      entry: ['reset'],\n      on: {\n        PLAYER: { target: 'encounter' }\n      }\n    },\n    encounter: {\n      on: {\n        ENCOUNTER: { target: 'play' }\n      }\n    },\n    play: {\n      on: {\n        WIN: { target: 'win' },\n        LOSE: { target: 'lose' }\n      }\n    },\n    win: { type: 'final' as const },\n    lose: { type: 'final' as const },\n  },\n  ...toMenu,\n};\n\nconst arcade = {\n  initial: 'player',\n  states: {\n    player: {\n      entry: ['reset'],\n      on: {\n        PLAYER: { target: 'play' }\n      }\n    },\n    play: {\n      on: {\n        WIN: [\n          { target: 'victory', cond: 'isFinal' },\n          { target: 'play', actions: ['bumpVictories', 'bumpScore'], internal: true },\n        ],\n        LOSE: { target: 'defeat' }\n      }\n    },\n    victory: {\n      type: 'final' as const,\n    },\n    defeat: {\n      type: 'final' as const,\n    },\n  },\n  ...toMenu,\n};\n\nconst survival = {\n  initial: 'player',\n  states: {\n    player: {\n      entry: ['reset'],\n      on: {\n        PLAYER: { target: 'play' }\n      }\n    },\n    play: {\n      on: {\n        WIN: { target: 'play', actions: ['bumpVictories'] },\n        LOSE: { target: 'defeat' }\n      }\n    },\n    defeat: {\n      type: 'final' as const,\n      on: {\n        // ACK: { target: '#menus.leaderboards' }\n      }\n    },\n  },\n  ...toMenu,\n};\n\nconst puzzle = {\n  initial: 'puzzle',\n  states: {\n    puzzle: {\n      on: {\n        PLAYER: { target: 'player' }\n      }\n    },\n    player: {\n      on: {\n        SELECTED: { target: 'play' }\n      }\n    },\n    play: {\n      on: {\n        COMPLETE: { target: 'complete' },\n      }\n    },\n    complete: {\n      on: {\n        NEXT: { target: 'player' },\n        SELECT: { target: 'puzzle' },\n      }\n    },\n  },\n  ...toMenu,\n};\n\nconst makeArcadeContext = () => ({\n  victories: 0,\n  score: 0,\n  seed: Math.random(),\n});\nconst makeSurvivalContext = () => ({\n  victories: 0,\n  seed: Math.random(),\n});\nconst makeSingleContext = () => ({\n  seed: Math.random(),\n});\nconst makeGameContext = () => ({\n  arcadeContext: makeArcadeContext(),\n  survivalContext: makeSurvivalContext(),\n  singleContext: makeSingleContext(),\n});\n\nexport const gameMenuMachine = createMachine({\n  tsTypes: {} as import(\"./menuStateMachine.typegen\").Typegen0,\n  id: 'menus',\n  initial: 'main',\n  context: makeGameContext(),\n  states: {\n    main: {\n      on: {\n        QUICK: { target: 'quick' },\n        SINGLE: { target: 'single' },\n        ARCADE: { target: 'arcade' },\n        SURVIVAL: { target: 'survival' },\n        // PUZZLE: { target: 'puzzle' },\n        // LEADERBOARDS: { target: 'leaderboards' },\n      }\n    },\n    quick: {\n      ...quick,\n    },\n    single: {\n      ...single,\n    },\n    arcade: {\n      ...arcade,\n    },\n    survival: {\n      ...survival,\n    },\n    // puzzle: {\n    //   ...puzzle,\n    // },\n    // leaderboards: {\n    //   ...toMenu,\n    // }\n  },\n}, {\n  guards: {\n    isFinal: ({ arcadeContext: { victories } }) => victories + 1 >= 7,\n  },\n  actions: {\n    bumpVictories: assign({\n      arcadeContext: ({ arcadeContext }, _event) => ({ ...arcadeContext, victories: arcadeContext.victories + 1, seed: Math.random() }),\n      survivalContext: ({ survivalContext }, _event) => ({ ...survivalContext, victories: survivalContext.victories + 1, seed: Math.random() }),\n    }),\n    bumpScore: assign({\n      arcadeContext: ({ arcadeContext }, { game }) => ({ ...arcadeContext, score: arcadeContext.score + scoreGame(game), seed: Math.random() }),\n    }),\n    reset: assign({\n      survivalContext: (c, e) => makeSurvivalContext(),\n      arcadeContext: (c, e) => makeArcadeContext(),\n      singleContext: (c, e) => makeSingleContext(),\n    }),\n  }\n});\n\nif (isDebug) {\n  interpret(gameMenuMachine, { devTools: true })\n    .onTransition((state) => console.log(state))\n    .start();\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n  // [::1] is the IPv6 localhost address.\n  window.location.hostname === '[::1]' ||\n  // 127.0.0.0/8 are considered localhost for IPv4.\n  window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process && process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n            'worker. To learn more, visit https://cra.link/PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                'tabs for this page are closed. See https://cra.link/PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n"],"sourceRoot":""}