{"version":3,"sources":["components/Enemy.tsx","components/Player.tsx","utils/data.ts","playGame.ts","components/Game.tsx","hooks/usePressedKeys.tsx","components/PlayerBuilder.tsx","hooks/useScroll.tsx","components/EncounterBuilder.tsx","App.tsx","serviceWorkerRegistration.ts","reportWebVitals.ts","index.tsx"],"names":["EnemyCard","effects","enemy","isSelected","onSelect","latestAttack","Card","bg","undefined","Body","Title","lore","name","Text","stats","hp","distance","rolls","map","idx","Seq","countBy","e","display","toArray","k","v","length","toFixed","Button","disabled","onClick","PlayerCard","selectedButtons","player","onClickEffect","Subtitle","className","build","class","stamina","Stack","direction","gap","Object","values","flatMap","a","active","has","_","priority","startState","play","states","previousState","effectRepository","_origin","_play","newState","actions","changeDistance","target","currentState","attackMonster","chain","attackPlayer","modifyPlayerStamina","origin","basic","effect","skill","weapon","offhand","consumable","armor","headgear","footwear","charm","randomName","names","Math","floor","random","enemies","rage","funs","reduce","acc","value","clamp","num","min","max","updateMonster","override","m","playerActions","s","start","curr","amount","Game","props","handlePlayerEffect","setSelected","game","lastAttacks","playerSkills","pressed","onUp","useState","Set","pressedKeys","updatePressedKeys","downHandler","key","set","upHandler","useCallback","filter","useEffect","window","addEventListener","removeEventListener","usePressedKeys","valNum","parseInt","Container","fluid","Row","Col","sm","md","Player","xs","Enemy","first","selects","entries","type","options","ElementPicker","section","setField","scrollParams","elRef","useRef","current","scrollIntoView","useScroll","behavior","block","scrollTo","scrollRef","Form","Label","ButtonGroup","size","id","variant","ref","PlayerBuilder","onSave","React","form","setForm","age","setLore","displayType","onSubmit","preventDefault","staminaPerTurn","style","marginBottom","field","Navbar","fixed","maxHeight","EncounterBuilder","encounter","setEncounter","found","App","status","setStatus","setPlayerBuild","setGame","index","select","usedSkill","rand","functions","concat","sortBy","latestState","accState","turns","randPerTurn","monsterSeed","monsterChance","Chance","monsterRng","Array","keys","floating","turn","turnRng","pop","turnDeterministicRng","isLocalhost","Boolean","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","onUpdate","onSuccess","catch","error","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById","URL","process","href","fetch","headers","response","contentType","get","indexOf","ready","unregister","reload","checkValidServiceWorker","serviceWorkerRegistration"],"mappings":"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UACA,SACA,WACA,UACA,SACA,SACA,SACA,QACA,QACA,OACA,OACA,QACA,QACA,WACA,QACA,UACA,SACA,WACA,QACA,OACA,OACA,OACA,SACA,WACA,OACA,OACA,QACA,MACA,SACA,OACA,WACA,QACA,UACA,SACA,MACA,UACA,QACA,SACA,QACA,SACA,QACA,QACA,SACA,QACA,UACA,QACA,QACA,SACA,SACA,OACA,QACA,SACA,SACA,UACA,QACA,QACA,QACA,OACA,QACA,OACA,QACA,UACA,SACA,QACA,QACA,QACA,QACA,SACA,UACA,WACA,QACA,QACA,QACA,UACA,SACA,QACA,SACA,UACA,SACA,QACA,QACA,SACA,QACA,OACA,UACA,QACA,SACA,UACA,SACA,MACA,QACA,OACA,MACA,QACA,YACA,OACA,QACA,QACA,SACA,QACA,QACA,UACA,QACA,SACA,UACA,U,QChZWf,EAAQ,sCAAIqB,EAAJ,yBAAIA,EAAJ,uBAEnBA,EAAKC,QAAO,SAACC,EAAKC,GAAN,OAAgB,SAACrB,EAAQf,EAAMM,GAAf,OAA4B8B,EAAMrB,EAAQf,EAAMmC,EAAIpB,EAAQf,EAAMM,SAE1F+B,EAAQ,SAACC,EAAaC,EAAaC,GAA3B,OACZZ,KAAKW,IAAIX,KAAKY,IAAIF,EAAKC,GAAMC,IAiB/B,IAAMC,EAAgB,SAACV,EAAkBtB,EAAgBiC,GAAnC,OACpBX,EAAQlE,KAAI,SAAC8E,EAAG7E,GAAJ,OACTA,IAAQ2C,EAAT,YAAC,eACQkC,GADT,IACYlF,MAAM,2BAAMkF,EAAElF,OAAUiF,EAASC,EAAElF,UAC3CkF,MAEKC,EAAgB,SAAC/D,GAAD,OAC3BU,OAAOC,OAAOX,EAAOI,OAAOQ,SAAQ,SAACoD,GAAD,OAAOA,EAAEjG,YAElC2D,EAAU,CACrBI,cAAe,SAACmC,EAAiBC,EAAgBC,GAAlC,mBAAC,eAEXD,GAFU,IAGbhB,QAASU,EAAcM,EAAKhB,QAASgB,EAAKtC,QAAQ,gBAAG/C,EAAH,EAAGA,GAAH,MAAa,CAAEA,GAAI2E,EAAM3E,EAAKsF,EAAQ,EAAGF,EAA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","file":"static/js/main.a4a90a97.chunk.js","sourcesContent":["import React from \"react\";\nimport { Card, Button } from \"react-bootstrap\";\nimport { Enemy, Effect } from \"../types\";\nimport { Seq } from \"immutable\";\n\nconst skillPercents = (effects: Effect[]) =>\n  Seq(effects).countBy((e) => e.display).toArray().map(([k, v], idx) => <Card.Text key={idx}>[{(v / effects.length * 100).toFixed(2)}%] {k}</Card.Text>);\n\nconst EnemyCard: React.FC<{\n  enemy: Enemy;\n  latestAttack: string | undefined;\n  isSelected?: boolean;\n  onSelect: () => void;\n}> = ({ enemy, isSelected, onSelect, latestAttack }) => (\n  <Card bg={isSelected ? \"info\" : undefined}>\n    <Card.Body>\n      <Card.Title>{enemy.lore.name}</Card.Title>\n      <Card.Text>\n        {enemy.lore.name}. Has {enemy.stats.hp} HP and is at distance{\" \"}\n        {enemy.stats.distance}\n      </Card.Text>\n      {latestAttack && (<Card.Text>Latest attack: {latestAttack}</Card.Text>)}\n      <Card.Text>Next attack prediction:</Card.Text>\n      {skillPercents(enemy.rolls[enemy.stats.distance - 1].map((idx) => enemy.effects[idx]))}\n      <Button disabled={isSelected} onClick={onSelect}>Select</Button>\n    </Card.Body>\n  </Card>\n);\n\nexport default EnemyCard;\n","import React from \"react\";\nimport { Card, Button, Stack } from \"react-bootstrap\";\nimport { Player } from \"../types\";\n\nconst PlayerCard: React.FC<{\n  selectedButtons: Set<string>,\n  player: Player;\n  onClickEffect: (index: number) => void;\n}> = ({ selectedButtons, player, onClickEffect }) => (\n  <Card>\n    <Card.Body>\n      <Card.Title>{player.lore.name}</Card.Title>\n      <Card.Subtitle className=\"mb-2 text-muted\">\n        {player.build.class.display}\n      </Card.Subtitle>\n      <Card.Text>Has {player.stats.hp} HP and {player.stats.stamina} stamina</Card.Text>\n    </Card.Body>\n    <Card.Body>\n      <Stack direction=\"horizontal\" gap={2}>\n        {Object.values(player.build)\n          .flatMap((a) => a.effects)\n          .map((e, idx) => (\n            <Button\n              key={e.display}\n              active={selectedButtons.has(e.display)}\n              disabled={player.stats.stamina < e.stamina}\n              onClick={(_) => onClickEffect(idx)}\n            >\n              [<b>{e.display}</b> <i>{idx + 1}</i>]\n              <br />\n              Sta: {e.stamina} | Prio: {e.priority}\n            </Button>\n          ))}\n      </Stack>\n    </Card.Body>\n  </Card>\n);\n\nexport default PlayerCard;\n","import { actions, chain, Play } from \"../playGame\";\nimport { EffectFunRepo, Enemy, InventoryEffect, Snapshot } from \"../types\";\n\nexport const startState = (play: Play): Snapshot => play.states[0];\nexport const previousState = (play: Play): Snapshot => play.states[play.states.length - 1];\n\nexport const effectRepository: EffectFunRepo = {\n  'Basic:Rest': (_origin, _play, newState) => newState,\n  'Basic:Advance': (_origin, _play, newState) => actions.changeDistance(newState, newState.target, -2),\n  'Basic:Retreat': (_origin, _play, newState) => actions.changeDistance(newState, newState.target, 2),\n  'Axe:Chop': (_, play, currentState) => actions.attackMonster(startState(play), currentState, 3),\n  'Axe:Cut': (_, play, currentState) => actions.attackMonster(startState(play), currentState, 3),\n  'Hook:GetHere': chain(\n    (_, play, currentState) => actions.attackMonster(startState(play), currentState, 3),\n    (_origin, _play, currentState) => actions.changeDistance(currentState, currentState.target, -1),\n  ),\n  'Monster:Swipe': (_, play, currentState) => actions.attackPlayer(startState(play), currentState, 2),\n  'Monster:Roar': (_, play, currentState) => actions.modifyPlayerStamina(startState(play), currentState, -5),\n  'Monster:Jump': (origin, _, currentState) => actions.changeDistance(currentState, origin, -2),\n};\n\nexport const build: Record<\n  string,\n  {\n    display: string;\n    effects: InventoryEffect[];\n    [key: string]: any;\n  }[]\n> = {\n  basic: [\n    {\n      display: \"Basic\",\n      effects: [\n        {\n          display: \"Rest\",\n          effect: \"Basic:Rest\",\n          priority: 4,\n          stamina: 0,\n        },\n        {\n          display: \"Advance\",\n          effect: \"Basic:Advance\",\n          priority: 4,\n          stamina: 1,\n        },\n        {\n          display: \"Retreat\",\n          effect: \"Basic:Retreat\",\n          priority: 4,\n          stamina: 1,\n        }\n      ]\n    }\n  ],\n  class: [\n    {\n      display: \"Warrior\",\n      effects: [],\n    },\n    {\n      display: \"Mage\",\n      effects: [],\n    },\n    {\n      display: \"Rogue\",\n      effects: [],\n    },\n  ],\n  skill: [\n    {\n      display: \"Sturdy\",\n      effects: [],\n    },\n    {\n      display: \"Nimble\",\n      effects: [],\n    },\n  ],\n  weapon: [\n    {\n      display: \"Axe\",\n      effects: [\n        {\n          display: \"Chop\",\n          effect: \"Axe:Chop\",\n          priority: 2,\n          stamina: 2,\n        },\n        {\n          display: \"Cut\",\n          effect: \"Axe:Cut\",\n          priority: 3,\n          stamina: 2,\n        },\n      ],\n    },\n  ],\n  offhand: [\n    {\n      display: \"Hook\",\n      effects: [\n        {\n          display: \"Get over here!\",\n          effect: \"Hook:GetHere\",\n          priority: 4,\n          stamina: 3,\n        },\n      ],\n    },\n  ],\n  consumable: [\n    {\n      display: \"Potion\",\n      effects: [],\n    },\n  ],\n  armor: [\n    {\n      display: \"Heavy\",\n      effects: [],\n    },\n  ],\n  headgear: [\n    {\n      display: \"Helm\",\n      effects: [],\n    },\n  ],\n  footwear: [\n    {\n      display: \"Boots\",\n      effects: [],\n    },\n  ],\n  charm: [\n    {\n      display: \"of Health\",\n      effects: [],\n    },\n  ],\n};\n\nexport const randomName = () => names[Math.floor(Math.random() * names.length)];\n\nexport const enemies: Enemy[] = [\n  {\n    lore: {\n      name: \"Sacapuntas\",\n    },\n    stats: {\n      hp: 25,\n      rage: 0,\n      distance: 5,\n    },\n    rolls: [\n      [0, 1, 2, 1, 0],\n      [0, 1, 0, 0, 0],\n      [0, 0, 0, 0, 0],\n      [0, 0, 0, 0, 0],\n      [0, 1, 2, 1, 0, 0],\n    ],\n    effects: [\n      { display: \"Swipe\", priority: 3, effect: \"Monster:Swipe\" },\n      { display: \"Roar\", priority: 1, effect: \"Monster:Roar\" },\n      { display: \"Jump\", priority: 2, effect: \"Monster:Jump\" },\n    ],\n  },\n  {\n    lore: {\n      name: \"Cacahue\",\n    },\n    stats: {\n      hp: 30,\n      rage: 0,\n      distance: 5,\n    },\n    effects: [\n      { display: \"Swipe\", priority: 3, effect: \"Monster:Swipe\" },\n      { display: \"Roar\", priority: 1, effect: \"Monster:Roar\" },\n      { display: \"Jump\", priority: 2, effect: \"Monster:Jump\" },\n    ],\n    rolls: [\n      [0, 0, 0, 1, 0],\n      [0, 0, 0, 0, 0],\n      [0, 0, 0, 0, 0],\n      [0, 0, 0, 0, 0],\n      [0, 0, 2, 0, 0],\n    ]\n  },\n  {\n    lore: {\n      name: \"Toro\",\n    },\n    stats: {\n      hp: 22,\n      rage: 0,\n      distance: 5,\n    },\n    effects: [\n      { display: \"Swipe\", priority: 3, effect: \"Monster:Swipe\" },\n      { display: \"Roar\", priority: 1, effect: \"Monster:Roar\" },\n      { display: \"Jump\", priority: 2, effect: \"Monster:Jump\" },\n    ],\n    rolls: [\n      [0, 0, 0, 1, 0],\n      [0, 0, 0, 0, 0],\n      [0, 0, 0, 0, 0],\n      [0, 0, 0, 0, 0],\n      [0, 0, 2, 0, 0],\n    ]\n  },\n];\n\nconst names = [\n  \"Lydan\",\n  \"Syrin\",\n  \"Ptorik\",\n  \"Joz\",\n  \"Varog\",\n  \"Gethrod\",\n  \"Hezra\",\n  \"Feron\",\n  \"Ophni\",\n  \"Colborn\",\n  \"Fintis\",\n  \"Gatlin\",\n  \"Jinto\",\n  \"Hagalbar\",\n  \"Krinn\",\n  \"Lenox\",\n  \"Revvyn\",\n  \"Hodus\",\n  \"Dimian\",\n  \"Paskel\",\n  \"Kontas\",\n  \"Weston\",\n  \"Azamarr \",\n  \"Jather \",\n  \"Tekren \",\n  \"Jareth\",\n  \"Adon\",\n  \"Zaden\",\n  \"Eune \",\n  \"Graff\",\n  \"Tez\",\n  \"Jessop\",\n  \"Gunnar\",\n  \"Pike\",\n  \"Domnhar\",\n  \"Baske\",\n  \"Jerrick\",\n  \"Mavrek\",\n  \"Riordan\",\n  \"Wulfe\",\n  \"Straus\",\n  \"Tyvrik \",\n  \"Henndar\",\n  \"Favroe\",\n  \"Whit\",\n  \"Jaris\",\n  \"Renham\",\n  \"Kagran\",\n  \"Lassrin \",\n  \"Vadim\",\n  \"Arlo\",\n  \"Quintis\",\n  \"Vale\",\n  \"Caelan\",\n  \"Yorjan\",\n  \"Khron\",\n  \"Ishmael\",\n  \"Jakrin\",\n  \"Fangar\",\n  \"Roux\",\n  \"Baxar\",\n  \"Hawke\",\n  \"Gatlen\",\n  \"Barak\",\n  \"Nazim\",\n  \"Kadric\",\n  \"Paquin\",\n  \"Kent\",\n  \"Moki\",\n  \"Rankar\",\n  \"Lothe\",\n  \"Ryven\",\n  \"Clawsen\",\n  \"Pakker\",\n  \"Embre\",\n  \"Cassian\",\n  \"Verssek\",\n  \"Dagfinn\",\n  \"Ebraheim\",\n  \"Nesso\",\n  \"Eldermar\",\n  \"Rivik\",\n  \"Rourke\",\n  \"Barton\",\n  \"Hemm\",\n  \"Sarkin\",\n  \"Blaiz \",\n  \"Talon\",\n  \"Agro\",\n  \"Zagaroth\",\n  \"Turrek\",\n  \"Esdel\",\n  \"Lustros\",\n  \"Zenner\",\n  \"Baashar \",\n  \"Dagrod \",\n  \"Gentar\",\n  \"Feston\",\n  \"Syrana\",\n  \"Resha\",\n  \"Varin\",\n  \"Wren\",\n  \"Yuni\",\n  \"Talis\",\n  \"Kessa\",\n  \"Magaltie\",\n  \"Aeris\",\n  \"Desmina\",\n  \"Krynna\",\n  \"Asralyn \",\n  \"Herra\",\n  \"Pret\",\n  \"Kory\",\n  \"Afia\",\n  \"Tessel\",\n  \"Rhiannon\",\n  \"Zara\",\n  \"Jesi\",\n  \"Belen\",\n  \"Rei\",\n  \"Ciscra\",\n  \"Temy\",\n  \"Renalee \",\n  \"Estyn\",\n  \"Maarika\",\n  \"Lynorr\",\n  \"Tiv\",\n  \"Annihya\",\n  \"Semet\",\n  \"Tamrin\",\n  \"Antia\",\n  \"Reslyn\",\n  \"Basak\",\n  \"Vixra\",\n  \"Pekka \",\n  \"Xavia\",\n  \"Beatha \",\n  \"Yarri\",\n  \"Liris\",\n  \"Sonali\",\n  \"Razra \",\n  \"Soko\",\n  \"Maeve\",\n  \"Everen\",\n  \"Yelina\",\n  \"Morwena\",\n  \"Hagar\",\n  \"Palra\",\n  \"Elysa\",\n  \"Sage\",\n  \"Ketra\",\n  \"Lynx\",\n  \"Agama\",\n  \"Thesra \",\n  \"Tezani\",\n  \"Ralia\",\n  \"Esmee\",\n  \"Heron\",\n  \"Naima\",\n  \"Rydna \",\n  \"Sparrow\",\n  \"Baakshi \",\n  \"Ibera\",\n  \"Phlox\",\n  \"Dessa\",\n  \"Braithe\",\n  \"Taewen\",\n  \"Larke\",\n  \"Silene\",\n  \"Phressa\",\n  \"Esther\",\n  \"Anika\",\n  \"Rasy \",\n  \"Harper\",\n  \"Indie\",\n  \"Vita\",\n  \"Drusila\",\n  \"Minha\",\n  \"Surane\",\n  \"Lassona\",\n  \"Merula\",\n  \"Kye\",\n  \"Jonna\",\n  \"Lyla\",\n  \"Zet\",\n  \"Orett\",\n  \"Naphtalia\",\n  \"Turi\",\n  \"Rhays\",\n  \"Shike\",\n  \"Hartie\",\n  \"Beela\",\n  \"Leska\",\n  \"Vemery \",\n  \"Lunex\",\n  \"Fidess\",\n  \"Tisette\",\n  \"Partha\",\n]","import { Enemies, Player, Snapshot, MonsterTarget, Target, EnemyStats, EffectFun, InventoryEffect } from \"./types\";\nimport { Seq } from \"immutable\";\nimport { effectRepository, previousState } from \"./utils/data\";\nimport { Chance } from \"chance\";\n\nexport type PlayHistory = [Snapshot, ...Snapshot[]];\n\nexport type Play = {\n  states: PlayHistory;\n};\n\nexport const chain = (...funs: Array<EffectFun>): EffectFun =>\n  // TODO check direction of the fold\n  funs.reduce((acc, value) => (origin, play, newState) => value(origin, play, acc(origin, play, newState)));\n\nconst clamp = (num: number, min: number, max: number) =>\n  Math.min(Math.max(num, min), max);\n\n/**\n * @returns min inclusive, max exclusive rand\n */\nexport function turnDeterministicRng(turns: number, randPerTurn: number, monsterSeed: string | number): (turn: number) => (min: number, max: number) => number {\n  const monsterChance = new Chance(monsterSeed);\n  const monsterRng =\n    [...Array(turns).keys()]\n      .map(_ => [...Array(randPerTurn).keys()]\n        .map(_ => monsterChance.floating({ min: 0, max: 1, fixed: 2 })));\n  return (turn) => {\n    const turnRng = [...monsterRng[turn]];\n    return (min, max) => Math.floor(((max - min) * turnRng.pop()!!) + min);\n  }\n}\n\nconst updateMonster = (enemies: Enemies, target: Target, override: (stats: EnemyStats) => object): Enemies =>\n  enemies.map((m, idx) =>\n    (idx === target)\n      ? { ...m, stats: { ...m.stats, ...override(m.stats) } }\n      : m) as Enemies;\n\nexport const playerActions = (player: Player): InventoryEffect[] =>\n  Object.values(player.build).flatMap((s) => s.effects);\n\nexport const actions = {\n  attackMonster: (start: Snapshot, curr: Snapshot, amount: number): Snapshot =>\n  ({\n    ...curr,\n    enemies: updateMonster(curr.enemies, curr.target, ({ hp }) => ({ hp: clamp(hp - amount, 0, start.enemies[curr.target]!!/* enforced by UI */.stats.hp) })),\n  }),\n  changeDistance: (curr: Snapshot, origin: Target, amount: number): Snapshot =>\n  ({\n    ...curr,\n    enemies: updateMonster(curr.enemies, origin, ({ distance }) => ({ distance: clamp(distance + amount, 1, 5) })),\n  }),\n\n  attackPlayer: (start: Snapshot, curr: Snapshot, amount: number): Snapshot =>\n  ({\n    ...curr,\n    player: {\n      ...curr.player,\n      stats: { ...curr.player.stats, hp: clamp(curr.player.stats.hp - amount, 0, start.player.stats.hp) },\n    },\n  }),\n  modifyPlayerStamina: (\n    start: Snapshot,\n    curr: Snapshot,\n    amount: number,\n  ): Snapshot =>\n  ({\n    ...curr,\n    player: {\n      ...curr.player,\n      stats: {\n        ...curr.player.stats,\n        stamina: clamp(curr.player.stats.stamina + amount, 0, start.player.stats.stamina),\n      },\n    },\n  }),\n};\n\nexport default function play(player: Player, enemies: Enemies): Play {\n  return {\n    states: [{\n      player,\n      enemies,\n      target: 0,\n      lastAttacks: []\n    }],\n  };\n}\n\nexport const handlePlayerEffect = (play: Play, index: number, select: (turn: number) => (min: number, max: number) => number): Play => {\n  const { enemies, player } = previousState(play);\n  const playerSkills = playerActions(player);\n  const usedSkill = playerSkills[index];\n  const rand = select(play.states.length - 1);\n  const functions = Seq(enemies)\n    .map((e, idx) =>\n      [idx as Target, e.effects[\n        e.rolls[e.stats.distance - 1]\n        [rand(0, e.rolls[e.stats.distance - 1].length)]\n      ]] as const)\n    .concat([['Player' as Target, usedSkill] as const])\n    .sortBy(([_origin, effect]) => effect.priority);\n\n  const latestState: Snapshot =\n    actions.modifyPlayerStamina(play.states[0], previousState(play), player.stats.staminaPerTurn - usedSkill.stamina);\n  latestState.lastAttacks = functions.map(([origin, effect]) => [origin, effect.effect] as const).toArray();\n  const newState =\n    functions.reduce((accState, [origin, effect]) => effectRepository[effect.effect](origin, play, accState), latestState);\n  return {\n    ...play,\n    states: [...play.states, newState],\n  };\n};\n\nexport const setSelected = (play: Play, target: MonsterTarget): Play => {\n  play.states[play.states.length - 1].target = target;\n  return {\n    states: [...play.states],\n  };\n}\n","import { Container, Row, Col } from \"react-bootstrap\";\n\nimport { MonsterTarget } from \"../types\";\n\nimport EnemyCard from \"./Enemy\";\nimport PlayerCard from \"./Player\";\nimport usePressedKeys from \"../hooks/usePressedKeys\";\nimport { Play, playerActions } from \"../playGame\";\nimport { Seq } from \"immutable\";\nimport { previousState } from \"../utils/data\";\n\nconst Game = (props: { game: Play; setSelected: (target: MonsterTarget) => void; handlePlayerEffect: (index: number) => void }): JSX.Element => {\n  const { handlePlayerEffect, setSelected, game } = props;\n  const { player, enemies, target, lastAttacks } = previousState(game);\n\n  const playerSkills = playerActions(player);\n\n  const pressed = usePressedKeys((key) => {\n    const valNum = parseInt(key);\n    if (valNum > 0 && valNum <= playerSkills.length) {\n      handlePlayerEffect(valNum - 1);\n    }\n  });\n\n  const selectedButtons = new Set<string>([...pressed].flatMap((key: string) => {\n    const valNum = parseInt(key);\n    if (valNum > 0 && valNum <= playerSkills.length) {\n      return [playerSkills[valNum - 1].display];\n    } else {\n      return [];\n    }\n  }));\n\n  return (\n    <Container fluid>\n      <Row className=\"justify-content-center align-items-flex-start\">\n        <Col sm={12} md={8}>\n          <Row>\n            <Col>\n              <PlayerCard player={player} onClickEffect={handlePlayerEffect} selectedButtons={selectedButtons} />\n            </Col>\n          </Row>\n          <Row className=\"mt-2 g-2\">\n            {enemies.map((enemy, idx) => (\n              <Col key={idx} xs={6} md={4}>\n                <EnemyCard\n                  key={idx}\n                  enemy={enemy}\n                  latestAttack={Seq(lastAttacks).filter(([target, _]) => target === idx).map(v => v[1]).first()}\n                  isSelected={idx === target}\n                  onSelect={() => setSelected(idx as MonsterTarget)}\n                />\n              </Col>\n            ))}\n          </Row>\n        </Col>\n      </Row>\n    </Container>\n  );\n};\n\nexport default Game;\n","import { useEffect, useCallback, useState } from \"react\";\n\nexport default function usePressedKeys(onUp: (e: string) => void): Set<string> {\n\n  const [pressedKeys, updatePressedKeys] = useState(new Set<string>());\n\n  const downHandler = ({ key }: { key: string }) => {\n    updatePressedKeys((set) => new Set([...set, key]));\n  }\n\n  const upHandler = useCallback(({ key }: { key: string }) => {\n    updatePressedKeys((set) => new Set([...set].filter((k) => k !== key)));\n    onUp(key);\n  }, [onUp]);\n\n  useEffect(() => {\n    window.addEventListener(\"keydown\", downHandler);\n    window.addEventListener(\"keyup\", upHandler);\n\n    return () => {\n      window.removeEventListener(\"keydown\", downHandler);\n      window.removeEventListener(\"keyup\", upHandler);\n    };\n  }, [upHandler]);\n\n  return pressedKeys;\n}","import React from \"react\";\nimport { Container, Row, Form, Button, ButtonGroup, Navbar } from \"react-bootstrap\";\nimport useScroll from \"../hooks/useScroll\";\n\nimport { Player } from \"../types\";\nimport { build, randomName } from \"../utils/data\";\n\nconst randomAge = () => Math.floor((Math.random() * 50) + 16);\n\nconst selects = Object.entries(build).map(([type, options]) => ({\n  type,\n  options: options.map(({ display }, value) => ({\n    display,\n    value,\n  })),\n}));\n\nconst PlayerBuilder = ({ onSave }: { onSave: (player: Player) => void }) => {\n  const [form, setForm] = React.useState<Record<string, number>>(\n    selects.reduce(\n      (acc, { type, options }) => ({\n        ...acc,\n        [type]: options[0].value,\n      }),\n      {},\n    ),\n  );\n  const [lore, setLore] = React.useState({\n    name: randomName(),\n    age: randomAge(),\n  });\n  const setField = (field: string, value: number) => {\n    setForm({\n      ...form,\n      [field]: value,\n    });\n  };\n  const onFormSubmit = (e: any) => {\n    e.preventDefault();\n    onSave({\n      id: \"p-1\",\n      lore,\n      stats: {\n        hp: 10,\n        stamina: 8,\n        staminaPerTurn: 2,\n      },\n      build: Object.entries(form).reduce((acc, [type, value]) => {\n        return {\n          ...acc,\n          [type]: build[type][value]\n        }\n      }, { basic: build.basic[0] }),\n    });\n  };\n  const displayType = (type: string) => <b>{build[type][form[type]].display}</b>;\n  return (\n    <Form onSubmit={onFormSubmit}>\n      <Container fluid style={{ marginBottom: '105px' }}>\n        <Row className=\"g-2\">\n          {selects.map(({ type, options }) =>\n            <ElementPicker\n              setField={(value) => setField(type, value)}\n              section={type}\n              options={options}\n              key={type}\n              isSelected={(value) => form[type] === value} />\n          )}\n        </Row>\n        <Navbar fixed=\"bottom\" bg=\"dark\" variant=\"dark\" style={{ maxHeight: '100px' }}>\n          <Container>\n            <Navbar.Text>You are <i onClick={() => setLore((lore) => ({ ...lore, name: randomName() }))}>{lore.name}</i>, the {displayType('skill')} {displayType('class')} {displayType('charm')}<br />who wields a {displayType('weapon')} and a {displayType('offhand')}<br />and wears {displayType('armor')} with {displayType('headgear')} and {displayType('footwear')}</Navbar.Text>\n            <Button type=\"submit\">Pick your foe!</Button>\n          </Container>\n        </ Navbar>\n      </Container >\n    </Form >\n  );\n};\n\nconst ElementPicker = ({ isSelected, section, options, setField }: {\n  options: {\n    display: string;\n    value: number;\n  }[], isSelected: (value: number) => boolean, setField: (value: number) => void, section: string\n}) => {\n  const [scrollTo, scrollRef] = useScroll({\n    behavior: 'smooth',\n    block: 'start',\n  });\n\n  return (\n    <Row>\n      <Form.Label>{section}</Form.Label>\n      <br />\n      <ButtonGroup size=\"lg\" className=\"mb-2\">\n        {options.map(({ display, value }) => (\n          <Button\n            key={value}\n            name={section}\n            id={`${value}`}\n            variant={isSelected(value) ? 'primary' : 'secondary'}\n            onClick={() => { setField(value); scrollTo(); }}\n          >{display}</Button>\n        ))}\n      </ButtonGroup>\n      <div id={`${section}-scroll`} ref={scrollRef} />\n    </Row>\n  );\n}\n\nexport default PlayerBuilder;\n","import { Ref, useRef } from \"react\";\n\ntype ScrollToFn = () => void;\n\nexport default function useScroll<T extends Element>(scrollParams: ScrollIntoViewOptions): [ScrollToFn, Ref<any>] {\n  const elRef = useRef<T>(null);\n  const executeScroll = () => elRef.current!.scrollIntoView(scrollParams);\n\n  return [executeScroll, elRef];\n};\n","import React from \"react\";\nimport { Container, ButtonGroup, Form, Button, Navbar } from \"react-bootstrap\";\n\nimport { Player, Enemies, Enemy } from \"../types\";\nimport { enemies } from \"../utils/data\";\n\nconst EncounterBuilder = ({ player, onSave }: { player: Player, onSave: (enemies: Enemies) => void }) => {\n  const [encounter, setEncounter] = React.useState<Enemy[]>([]);\n  const onFormSubmit = (e: any) => {\n    e.preventDefault();\n    // Size enforced by UI\n    onSave([...encounter] as Enemies);\n  };\n  const displayType = (type: string) => <b>{player.build[type].display}</b>;\n  return (\n    <Form onSubmit={onFormSubmit}>\n      <Container fluid style={{ marginBottom: encounter.length > 0 ? '205px' : '105px' }}>\n        <ButtonGroup size=\"lg\" className=\"mb-2\">\n          {enemies.map((enemy) =>\n            <Button\n              key={enemy.lore.name}\n              onClick={() => encounter.length < 5 ? setEncounter((e) => [...e, enemy]) : void 0}\n            >{enemy.lore.name}</Button>\n          )}\n        </ButtonGroup>\n      </Container >\n      {encounter.length > 0 &&\n        <Navbar fixed=\"bottom\" bg=\"dark\" variant=\"dark\" style={{ marginBottom: '100px' }}>\n          <Container fluid>\n            <ButtonGroup size=\"sm\" className=\"mb-2\">\n              {encounter.map((enemy, idx) => <Button key={`${enemy.lore.name}-${idx}`} onClick={() => setEncounter((e) => { let found = false; return e.filter((m) => (found || m.lore.name !== enemy.lore.name) || !(found = true)); })}>{enemy.lore.name}</Button>)}\n            </ButtonGroup>\n          </Container>\n        </ Navbar>}\n      <Navbar fixed=\"bottom\" bg=\"dark\" variant=\"dark\" style={{ maxHeight: '100px' }}>\n        <Container>\n          <Navbar.Text>You are <i>{player.lore.name}</i>, the {displayType('skill')} {displayType('class')} {displayType('charm')}<br />who wields a {displayType('weapon')} and a {displayType('offhand')}<br />and wears {displayType('armor')} with {displayType('headgear')} and {displayType('footwear')}</Navbar.Text>\n          <Button type=\"submit\" disabled={encounter.length < 1}>To Battle!</Button>\n        </Container>\n      </ Navbar>\n    </Form >\n  );\n};\n\nexport default EncounterBuilder;\n","import React from \"react\";\nimport \"./App.css\";\n// import { readString } from \"react-papaparse\";\nimport { Enemies, Player } from \"./types\";\n\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport Game from \"./components/Game\";\nimport PlayerBuilder from \"./components/PlayerBuilder\";\nimport EncounterBuilder from \"./components/EncounterBuilder\";\nimport play, { handlePlayerEffect, Play, turnDeterministicRng, setSelected } from \"./playGame\";\n\ntype AppStatus = \"buildPlayer\" | \"buildEncounter\" | \"game\" | \"endGame\";\n\nfunction App() {\n  const [status, setStatus] = React.useState<AppStatus>(\"buildPlayer\");\n  const [player, setPlayerBuild] = React.useState<\n    Player | undefined\n  >();\n  const [encounter, setEncounter] = React.useState<Enemies>();\n  const [game, setGame] = React.useState<Play | undefined>();\n\n  const handleSavePlayer = (player: Player) => {\n    setPlayerBuild(player);\n    setStatus(\"buildEncounter\");\n  };\n  const handleSaveEncounter = (encounter: Enemies) => {\n    setEncounter(encounter);\n    setStatus(\"game\");\n  }\n\n  if (!game && player && encounter) {\n    const game = play(player, encounter);\n    setGame(game);\n  }\n\n  return (\n    <div className=\"App\">\n      {status === \"buildPlayer\" ? (\n        <PlayerBuilder onSave={handleSavePlayer} />\n      ) : null}\n      {status === \"buildEncounter\" && player ? (\n        <EncounterBuilder\n          player={player}\n          onSave={handleSaveEncounter}\n        />\n      ) : null}\n      {status === \"game\" && game ? (\n        <Game\n          game={game}\n          setSelected={(idx) => setGame(setSelected(game, idx))}\n          handlePlayerEffect={(idx) => setGame(handlePlayerEffect(game, idx, turnDeterministicRng(50, 10, 'SEED')))}\n        />\n      ) : null}\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://cra.link/PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://cra.link/PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorkerRegistration from './serviceWorkerRegistration';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://cra.link/PWA\nserviceWorkerRegistration.register();\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}