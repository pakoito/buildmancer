{"version":3,"sources":["components/Enemy.tsx","components/Player.tsx","utils/types.ts","utils/data.ts","utils/effectRepository.ts","utils/playGame.ts","utils/effectFunctions.ts","components/Game.tsx","hooks/usePressedKeys.tsx","components/PlayerBuilder.tsx","hooks/useScroll.tsx","components/EncounterBuilder.tsx","geneticalgorithm/geneticalgorithm.js","tinkerer/tinkerer.ts","App.tsx","serviceWorkerRegistration.ts","reportWebVitals.ts","index.tsx"],"names":["EnemyCard","effects","enemy","enemyStats","isSelected","onSelect","latestAttack","canAct","Card","bg","undefined","Body","Title","lore","name","hp","Text","distance","rolls","map","idx","Seq","countBy","e","display","toArray","v","find","a","range","priority","length","toFixed","join","Button","disabled","onClick","PlayerCard","selectedButtons","player","playerStats","onClickEffect","lastAction","Subtitle","className","build","class","stamina","Stack","direction","gap","Object","values","flatMap","active","has","_","effect","o","parameters","inventoryEffect","startState","play","states","previousState","makeRange","number","Set","allRanges","selfRange","effectDead","statsRepository","enemies","staminaPerTurn","basic","skill","weapon","offhand","consumable","armor","headgear","footwear","eot","charm","passive","randomName","names","Math","floor","random","rage","effectFun","funs","reduce","acc","value","params","origin","oldState","newPlay","newState","EffectFunctionRepository","amount","_origin","currentState","actions","modifyPlayerStamina","target","attackPlayer","attackMonster","lifespan","addEotEffect","addEnemy","changeDistance","s","_m","clamp","num","min","max","updateMonster","override","m","start","curr","addBotEffect","bot","turnDeterministicRng","turns","randPerTurn","monsterSeed","monsterChance","Chance","Array","keys","floating","fixed","playerPassives","i","playerActions","reduceFuns","p","sortBy","oldPlay","lastAttacks","effectRepository","extractFunction","handlePlayerEffect","index","currState","usedSkill","playerBot","preBotPlay","preBotState","postBotPlay","postBotState","postPlayerBotPlay","postPlayerBotState","rand","turn","turnRng","rng","pop","turnFunctions","zip","stats","concat","preEotState","playerEot","playerEotEffects","postPlayerEotPlay","postPlayerEotState","postEotPlay","postEotState","setSelected","Game","game","solveGame","undo","redo","hint","enemiesStats","playerSkills","monsterHealth","isPlayerAlive","areMonstersAlive","endGame","pressed","onUp","useState","pressedKeys","updatePressedKeys","downHandler","key","set","upHandler","useCallback","filter","k","useEffect","window","addEventListener","removeEventListener","usePressedKeys","valNum","parseInt","Container","fluid","Row","Col","sm","md","Player","xs","Enemy","first","selects","entries","type","options","ElementPicker","section","setField","scrollParams","elRef","useRef","current","scrollIntoView","useScroll","behavior","block","scrollTo","scrollRef","Form","Label","ButtonGroup","size","id","variant","ref","PlayerBuilder","onSave","React","form","setForm","age","setLore","displayType","onSubmit","preventDefault","style","marginBottom","field","Navbar","maxHeight","EncounterBuilder","encounter","setEncounter","found","pickone","geneticAlgorithmConstructor","settingWithDefaults","settings","defaults","mutationFunction","crossoverFunction","fitnessFunction","doesABeatBFunction","population","Error","populationSize","phenotype","b","cloneJSON","object","JSON","parse","stringify","mutate","crossover","mate","evolve","push","populate","otherIndex","temp","randomizePopulationOrder","nextGeneration","competitor","compete","this","best","scored","scoredPopulation","score","bestScore","config","clone","defaultTinkererOptions","playerSeed","weights","monster","debug","tinkerer","iter","optionsOverride","latestState","d6","natural","latest","unavailable","exclude","playerHealth","playerStamina","startPlayerHealth","startPlayerStamina","startMonsterHealth","monsterKillingFitness","playerAlivenessFitness","killSpeedFitness","staminaFitness","fitness","console","log","gen","GeneticAlgorithmConstructor","App","status","setStatus","playerBuild","setPlayerBuild","encounterBuild","setGame","setRedo","seed","fun","playerGameStats","enemyGameStats","toIndexableString","encounterStats","newRedo","slice","iterations","maxBy","isLocalhost","Boolean","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","onUpdate","onSuccess","catch","error","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById","URL","process","href","fetch","headers","response","contentType","get","indexOf","ready","unregister","reload","checkValidServiceWorker","serviceWorkerRegistration"],"mappings":"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AAEjC,QAAS,QAASM,SAAU,EAAG2B,OAAQ,gBAAiB5B,MAAOoC,EAAU,EAAG,KACrFR,EAAO,CAAEjC,QAAS,OAAQM,SAAU,EAAG2B,OAAQ,eAAgB5B,MAAOuC,IACtEX,EAAO,CAAEjC,QAAS,cAAeM,SAAU,EAAG2B,OAAQ,iBAAkBE,WAAY,CAAEzD,MAAO,GAAK2B,MAAOoC,EAAU,EAAG,EAAG,MAE3H/C,MAAO,CACL,CAAC,EAAG,EAAG,EAAG,EAAG,GACb,CAAC,EAAG,EAAG,EAAG,EAAG,GACb,CAAC,EAAG,EAAG,EAAG,EAAG,GACb,CAAC,EAAG,EAAG,EAAG,EAAG,GACb,CAAC,EAAG,EAAG,EAAG,EAAG,KAEd,CACDH,GAAI,GACJ2E,KAAM,EACNzE,SAAU,KAIRqE,EAAQ,CACZ,QACA,QACA,SACA,MACA,QACA,UACA,QACA,QACA,QACA,UACA,SACA,SACA,QACA,WACA,QACA,QACA,SACA,QACA,SACA,SACA,SACA,SACA,WACA,UACA,UACA,SACA,OACA,QACA,QACA,QACA,MACA,SACA,SACA,OACA,UACA,QACA,UACA,SACA,UACA,QACA,SACA,UACA,UACA,SACA,OACA,QACA,SACA,SACA,WACA,QACA,OACA,UACA,OACA,SACA,SACA,QACA,UACA,SACA,SACA,OACA,QACA,QACA,SACA,QACA,QACA,SACA,SACA,OACA,OACA,SACA,QACA,QACA,UACA,SACA,QACA,UACA,UACA,UACA,WACA,QACA,WACA,QACA,SACA,SACA,OACA,SACA,SACA,QACA,OACA,WACA,SACA,QACA,UACA,SACA,WACA,UACA,SACA,SACA,SACA,QACA,QACA,OACA,OACA,QACA,QACA,WACA,QACA,UACA,SACA,WACA,QACA,OACA,OACA,OACA,SACA,WACA,OACA,OACA,QACA,MACA,SACA,OACA,WACA,QACA,UACA,SACA,MACA,UACA,QACA,SACA,QACA,SACA,QACA,QACA,SACA,QACA,UACA,QACA,QACA,SACA,SACA,OACA,QACA,SACA,SACA,UACA,QACA,QACA,QACA,OACA,QACA,OA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","file":"static/js/main.ccc48a85.chunk.js","sourcesContent":["import React from \"react\";\nimport { Card, Button } from \"react-bootstrap\";\nimport { Enemy, Effect, EnemyStats } from \"../utils/types\";\nimport { Seq } from \"immutable\";\n\nconst skillPercents = (effects: Effect[]) =>\n  Seq(effects).countBy((e) => e.display).toArray().map(([display, v], idx) => {\n    const { range, priority } = effects.find(a => a.display === display)!!;\n    return <>[{(v / effects.length * 100).toFixed(2)}%] {display} ⏱:{priority} 🏹:{range.length === 5 ? 'Any' : range.map(a => a + 1).join(\",\")}<br key={idx} /></>\n  });\n\nconst EnemyCard: React.FC<{\n  enemy: Enemy;\n  enemyStats: EnemyStats;\n  latestAttack: string | undefined;\n  isSelected?: boolean;\n  onSelect: () => void;\n  canAct: boolean;\n}> = ({ enemy, enemyStats, isSelected, onSelect, latestAttack, canAct }) => (\n  <Card bg={isSelected ? \"info\" : undefined}>\n    <Card.Body>\n      <Card.Title>{enemy.lore.name} {enemyStats.hp > 0 ? \"\" : (<b>💀DEAD💀</b>)}</Card.Title>\n      <Card.Text>❤:{enemyStats.hp} 🏹:{enemyStats.distance}</Card.Text>\n      {latestAttack && (<Card.Text>Latest attack: {latestAttack}</Card.Text>)}\n      <Card.Text>\n        Next attack prediction:\n        <br />\n        {skillPercents(enemy.rolls[enemyStats.distance - 1].map((idx) => enemy.effects[idx]))}\n        <br />\n      </Card.Text>\n      {canAct && (<Button disabled={isSelected} onClick={onSelect}>Select</Button>)}\n    </Card.Body>\n  </Card>\n);\n\nexport default EnemyCard;\n","import React from \"react\";\nimport { Card, Button, Stack } from \"react-bootstrap\";\nimport { Player, PlayerStats } from \"../utils/types\";\n\nconst PlayerCard: React.FC<{\n  selectedButtons: Set<string>,\n  player: Player;\n  playerStats: PlayerStats;\n  canAct: boolean;\n  lastAction: string | undefined;\n  onClickEffect: (index: number) => void;\n}> = ({ selectedButtons, player, playerStats, onClickEffect, canAct, lastAction }) => (\n  <Card>\n    <Card.Body>\n      <Card.Title>{player.lore.name}{playerStats.hp > 0 ? \"\" : (<b> 💀DEAD💀 </b>)}</Card.Title>\n      <Card.Subtitle className=\"mb-2 text-muted\">\n        {player.build.class.display}\n      </Card.Subtitle>\n      <Card.Text>{playerStats.hp} ❤ {playerStats.stamina} 💪</Card.Text>\n      {lastAction && (<Card.Text>Last action: {lastAction}</Card.Text>)}\n    </Card.Body>\n    {canAct && (<Card.Body>\n      <Stack direction=\"horizontal\" gap={2}>\n        {Object.values(player.build)\n          .flatMap((a) => a.effects ?? [])\n          .map((e, idx) => (<div>\n            <Button\n              key={e.display}\n              active={selectedButtons.has(e.display)}\n              disabled={playerStats.stamina < e.stamina}\n              onClick={(_) => onClickEffect(idx)}\n            >\n              [<i>{idx + 1}</i>] <b>{e.display}</b>\n            </Button>\n            <Card.Text>💪:{e.stamina} ⏱:{e.priority}<br />🏹:{e.range.length === 5 ? 'Any' : e.range.map(a => a + 1).join(\",\")}</Card.Text>\n          </div>\n          ))}\n      </Stack>\n    </Card.Body>)}\n  </Card>\n);\n\nexport default PlayerCard;\n","import { Opaque } from \"type-fest\";\nimport { EffectFunParams, EffectFunRepoIndex } from \"./effectFunctions\";\n\nexport type Tuple<T, N extends number> = N extends N ? number extends N ? T[] : _TupleOf<T, N, []> : never;\ntype _TupleOf<T, N extends number, R extends unknown[]> = R['length'] extends N ? R : _TupleOf<T, N, [T, ...R]>;\n\nexport type Nel<T> = [T, ...T[]];\n\ntype Length<T extends any[]> =\n  T extends { length: infer L } ? L : never;\ntype BuildTuple<L extends number, T extends any[] = []> =\n  T extends { length: L } ? T : BuildTuple<L, [...T, any]>;\nexport type Subtract<A extends number, B extends number> =\n  BuildTuple<A> extends [...(infer U), ...BuildTuple<B>]\n  ? Length<U>\n  : never;\ntype EQ<A, B> =\n  A extends B\n  ? (B extends A ? true : false)\n  : false;\ntype AtTerminus<A extends number, B extends number> =\n  A extends 0\n  ? true\n  : (B extends 0 ? true : false);\ntype LT<A extends number, B extends number> =\n  AtTerminus<A, B> extends true\n  ? EQ<A, B> extends true\n  ? false\n  : (A extends 0 ? true : false)\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  : LT<Subtract<A, 1>, Subtract<B, 1>>;\n\nexport type TupleUpTo<T, N extends number> =\n  EQ<N, 1> extends true ? [T] : TupleUpTo<T, Subtract<N, 1>> | Tuple<T, N>;\n\nexport type UpTo<N extends number> =\n  EQ<N, 0> extends true ? 0 : UpTo<Subtract<N, 1>> | N\n\nexport type PlayerStats = Record<string, number>;\nexport type EnemyStats = Record<string, number> & { distance: UpTo<Subtract<Distances, 1>> };\n\nexport type Priorities = 5;\nexport type Distances = 5;\nexport type MonsterCount = 5;\nexport type Staminas = 5;\n\nexport type Snapshot = {\n  player: PlayerStats;\n  enemies: EnemiesStats;\n  target: MonsterTarget;\n  lastAttacks: (readonly [Target, string])[];\n  bot?: Nel<[Target, Effect]>;\n  eot?: Nel<[Target, Effect]>;\n};\n\nexport type RNG = Opaque<number[][], 'RNG'>;\n\nexport type Play = {\n  states: Nel<Snapshot>;\n  player: Player;\n  enemies: Enemies,\n  rng: RNG;\n  turns: number;\n  id: string;\n  seed: string | number;\n};\n\ntype ItemOrMonster = string /* TODO all items */ | 'Monster';\nexport type FunIndex = `${ItemOrMonster}:${string}`;\n\nexport type StatsFunIndex = FunIndex;\nexport type StatsFunRepo = { [key: StatsFunIndex]: StatsFun; }\nexport type StatsFun = (player: PlayerStats, enemies: EnemiesStats) => [PlayerStats, EnemiesStats];\n\nexport type Ranges = UpTo<Subtract<Distances, 1>>[];\n\ntype EffectT = {\n  display: string;\n  effect: string;\n  parameters: any;\n  priority: UpTo<Subtract<Priorities, 1>>;\n  range: Ranges;\n};\nexport type Effect = EffectT;\nexport const effect =\n  <T extends EffectFunRepoIndex>(o: (EffectFunParams<T> extends undefined ? {\n    display: string;\n    effect: T;\n    priority: UpTo<Subtract<Priorities, 1>>;\n    range: Ranges;\n    parameters?: undefined;\n  } : {\n    display: string;\n    effect: T;\n    priority: UpTo<Subtract<Priorities, 1>>;\n    range: Ranges;\n    parameters: EffectFunParams<T>\n  })): Effect => ({\n    display: o.display,\n    effect: o.effect,\n    parameters: o.parameters,\n    priority: o.priority,\n    range: o.range,\n  } as Effect);\n\nexport type InventoryEffect = Opaque<Effect & {\n  stamina: UpTo<Subtract<Staminas, 1>>;\n}>;\nexport const inventoryEffect =\n  <T extends EffectFunRepoIndex>(o: (EffectFunParams<T> extends undefined ? {\n    display: string;\n    effect: T;\n    priority: UpTo<Subtract<Priorities, 1>>;\n    range: Ranges;\n    stamina: number;\n    parameters?: undefined;\n  } : {\n    display: string;\n    effect: T;\n    priority: UpTo<Subtract<Priorities, 1>>;\n    range: Ranges;\n    stamina: number;\n    parameters: EffectFunParams<T>\n  })): InventoryEffect => ({\n    display: o.display,\n    effect: o.effect,\n    parameters: o.parameters,\n    priority: o.priority,\n    range: o.range,\n    stamina: o.stamina,\n  } as InventoryEffect);\n\nexport type MonsterTarget = UpTo<Subtract<MonsterCount, 1>>;\nexport type PlayerTarget = 'Player';\nexport type Target = MonsterTarget | PlayerTarget;\n\nexport type Build = Record<\n  string,\n  Item\n>;\n\nexport type Item = {\n  display: string;\n  passive?: StatsFunIndex;\n  bot?: Nel<[PlayerTarget, Effect]>;\n  eot?: Nel<[PlayerTarget, Effect]>;\n  effects?: Nel<InventoryEffect>;\n  [key: string]: any;\n};\n\nexport type Player = {\n  id: string;\n  lore: Record<string, string | number>;\n  build: Build;\n};\n\nexport type Enemy = {\n  lore: Record<string, string | number>;\n  effects: Effect[];\n  rolls: Tuple<number[], Distances>;\n}\n\nexport type Enemies = TupleUpTo<Enemy, MonsterCount>;\nexport type EnemiesStats = TupleUpTo<EnemyStats, MonsterCount>;\n","import { Chance } from \"chance\";\nimport { Subtract } from \"type-fest/source/internal\";\nimport { Build, Distances, Effect, Enemy, EnemyStats, Item, Player, PlayerStats, Ranges, Snapshot, StatsFunRepo, UpTo, Play, effect, inventoryEffect } from \"./types\";\n\nexport const startState = (play: Play): Snapshot => play.states[0];\nexport const previousState = (play: Play): Snapshot => play.states[play.states.length - 1];\n\nexport const randomEnemy = (): [Enemy, EnemyStats] => new Chance().pickone(enemies);\n\nexport const randomPlayer = (statsOverride?: PlayerStats, buildOverride?: Build): [Player, PlayerStats] => {\n  const rng = new Chance();\n  return [{\n    id: rng.string(),\n    lore: {\n      name: randomName(),\n      age: rng.age(),\n    },\n    build: {\n      basic: rng.pickone(build.basic),\n      class: rng.pickone(build.class),\n      armor: rng.pickone(build.armor),\n      weapon: rng.pickone(build.weapon),\n      offhand: rng.pickone(build.offhand),\n      footwear: rng.pickone(build.footwear),\n      headwear: rng.pickone(build.headwear),\n      charm: rng.pickone(build.charm),\n      ...buildOverride,\n    }\n  }, {\n    hp: 25,\n    stamina: 8,\n    staminaPerTurn: 2,\n    ...statsOverride,\n  }];\n}\n\nexport const makeRange = (...number: UpTo<Subtract<Distances, 1>>[]) => [...new Set(number)] as Ranges;\nexport const allRanges = makeRange(0, 1, 2, 3, 4);\nexport const selfRange = allRanges;\n\nexport const effectDead: Effect =\n  effect({ display: \"DEAD\", priority: 4, effect: \"Monster:Dead\", range: makeRange() });\n\nexport const statsRepository: StatsFunRepo = {\n  'Charm:ofHealth': (player, enemies) => [{ ...player, hp: player.hp + 10 }, enemies],\n  'Charm:ofHaste': (player, enemies) => [{ ...player, staminaPerTurn: player.staminaPerTurn + 1 }, enemies],\n  'Charm:ofResilience': (player, enemies) => [{ ...player, stamina: player.stamina + 10 }, enemies],\n}\n\nexport const build: Record<\n  string,\n  Item[]\n> = {\n  basic: [\n    {\n      display: \"Basic\",\n      effects: [\n        inventoryEffect({\n          display: \"Rest\",\n          effect: \"Basic:Rest\",\n          priority: 4,\n          stamina: 0,\n          range: selfRange,\n        }),\n        inventoryEffect({\n          display: \"Advance\",\n          effect: \"Basic:Advance\",\n          priority: 4,\n          stamina: 1,\n          range: selfRange,\n        }),\n        inventoryEffect({\n          display: \"Retreat\",\n          effect: \"Basic:Retreat\",\n          priority: 4,\n          stamina: 1,\n          range: selfRange,\n        }),\n      ]\n    }\n  ],\n  class: [\n    {\n      display: \"Warrior\",\n    },\n    {\n      display: \"Mage\",\n    },\n    {\n      display: \"Rogue\",\n    },\n  ],\n  skill: [\n    {\n      display: \"Sturdy\",\n    },\n    {\n      display: \"Nimble\",\n    },\n  ],\n  weapon: [\n    {\n      display: \"Axe\",\n      effects: [\n        inventoryEffect({\n          display: \"Chop\",\n          effect: \"Axe:Chop\",\n          priority: 2,\n          stamina: 2,\n          range: makeRange(0, 1),\n        }),\n        inventoryEffect({\n          display: \"Cut\",\n          effect: \"Axe:Cut\",\n          priority: 3,\n          stamina: 2,\n          range: makeRange(0),\n        }),\n      ],\n    },\n  ],\n  offhand: [\n    {\n      display: \"Hook\",\n      effects: [\n        inventoryEffect({\n          display: \"Get over here!\",\n          effect: \"Hook:GetHere\",\n          priority: 4,\n          stamina: 3,\n          range: makeRange(2, 3, 4),\n        }),\n      ],\n    },\n  ],\n  consumable: [\n    {\n      display: \"Potion\",\n    },\n  ],\n  armor: [\n    {\n      display: \"Heavy\",\n    },\n  ],\n  headgear: [\n    {\n      display: \"Helm\",\n    },\n  ],\n  footwear: [\n    {\n      display: \"Boots of Flight\",\n      eot: [['Player', effect({\n        display: \"Flight!\",\n        priority: 0,\n        range: allRanges,\n        effect: 'BootsOfFlight:EOT'\n      })]],\n    },\n  ],\n  charm: [\n    {\n      display: \"of Health\",\n      passive: \"Charm:ofHealth\",\n    },\n    {\n      display: \"of Haste\",\n      passive: \"Charm:ofHaste\",\n    },\n    {\n      display: \"of Resilience\",\n      passive: \"Charm:ofResilience\",\n    },\n  ],\n};\n\nexport const randomName = () => names[Math.floor(Math.random() * names.length)];\n\nexport const enemies: [Enemy, EnemyStats][] = [\n  [{\n    lore: {\n      name: \"Sacapuntas\",\n    },\n    rolls: [\n      [0, 1, 2, 1, 0],\n      [0, 1, 0, 0, 0],\n      [0, 0, 0, 0, 0],\n      [0, 0, 0, 0, 0],\n      [0, 1, 2, 1, 0, 0],\n    ],\n    effects: [\n      effect({ display: \"Swipe\", priority: 3, effect: \"Monster:Swipe\", range: makeRange(0, 1) }),\n      effect({ display: \"Roar\", priority: 1, effect: \"Monster:Roar\", range: allRanges }),\n      effect({ display: \"Jump\", priority: 2, effect: \"Monster:Jump\", range: makeRange(2, 3, 4) }),\n    ],\n  }, {\n    hp: 25,\n    rage: 0,\n    distance: 4,\n  }],\n  [{\n    lore: {\n      name: \"Toro\",\n    },\n    effects: [\n      effect({ display: \"Swipe\", priority: 3, effect: \"Monster:Swipe\", range: allRanges }),\n      effect({ display: \"Jump\", priority: 2, effect: \"Monster:Jump\", range: makeRange(2, 3, 4) }),\n    ],\n    rolls: [\n      [0, 0, 0, 0, 0],\n      [0, 0, 0, 0, 0],\n      [1, 1, 0, 0, 0],\n      [1, 1, 1, 0, 0],\n      [1, 1, 1, 1, 0],\n    ]\n  }, {\n    hp: 22,\n    rage: 0,\n    distance: 4,\n  }],\n  [{\n    lore: {\n      name: \"Summoner\",\n    },\n    effects: [\n      effect({ display: \"Swipe\", priority: 3, effect: \"Monster:Swipe\", range: makeRange(0, 1) }),\n      effect({ display: \"Jump\", priority: 3, effect: \"Monster:Jump\", range: allRanges }),\n      effect({ display: \"Summon Toro\", priority: 4, effect: \"Monster:Summon\", parameters: { enemy: 1 }, range: makeRange(2, 3, 4) }),\n    ],\n    rolls: [\n      [0, 0, 0, 0, 0],\n      [1, 0, 0, 0, 0],\n      [1, 1, 2, 0, 0],\n      [1, 1, 2, 0, 0],\n      [1, 2, 2, 0, 0],\n    ]\n  }, {\n    hp: 30,\n    rage: 0,\n    distance: 4,\n  }]\n];\n\nconst names = [\n  \"Lydan\",\n  \"Syrin\",\n  \"Ptorik\",\n  \"Joz\",\n  \"Varog\",\n  \"Gethrod\",\n  \"Hezra\",\n  \"Feron\",\n  \"Ophni\",\n  \"Colborn\",\n  \"Fintis\",\n  \"Gatlin\",\n  \"Jinto\",\n  \"Hagalbar\",\n  \"Krinn\",\n  \"Lenox\",\n  \"Revvyn\",\n  \"Hodus\",\n  \"Dimian\",\n  \"Paskel\",\n  \"Kontas\",\n  \"Weston\",\n  \"Azamarr \",\n  \"Jather \",\n  \"Tekren \",\n  \"Jareth\",\n  \"Adon\",\n  \"Zaden\",\n  \"Eune \",\n  \"Graff\",\n  \"Tez\",\n  \"Jessop\",\n  \"Gunnar\",\n  \"Pike\",\n  \"Domnhar\",\n  \"Baske\",\n  \"Jerrick\",\n  \"Mavrek\",\n  \"Riordan\",\n  \"Wulfe\",\n  \"Straus\",\n  \"Tyvrik \",\n  \"Henndar\",\n  \"Favroe\",\n  \"Whit\",\n  \"Jaris\",\n  \"Renham\",\n  \"Kagran\",\n  \"Lassrin \",\n  \"Vadim\",\n  \"Arlo\",\n  \"Quintis\",\n  \"Vale\",\n  \"Caelan\",\n  \"Yorjan\",\n  \"Khron\",\n  \"Ishmael\",\n  \"Jakrin\",\n  \"Fangar\",\n  \"Roux\",\n  \"Baxar\",\n  \"Hawke\",\n  \"Gatlen\",\n  \"Barak\",\n  \"Nazim\",\n  \"Kadric\",\n  \"Paquin\",\n  \"Kent\",\n  \"Moki\",\n  \"Rankar\",\n  \"Lothe\",\n  \"Ryven\",\n  \"Clawsen\",\n  \"Pakker\",\n  \"Embre\",\n  \"Cassian\",\n  \"Verssek\",\n  \"Dagfinn\",\n  \"Ebraheim\",\n  \"Nesso\",\n  \"Eldermar\",\n  \"Rivik\",\n  \"Rourke\",\n  \"Barton\",\n  \"Hemm\",\n  \"Sarkin\",\n  \"Blaiz \",\n  \"Talon\",\n  \"Agro\",\n  \"Zagaroth\",\n  \"Turrek\",\n  \"Esdel\",\n  \"Lustros\",\n  \"Zenner\",\n  \"Baashar \",\n  \"Dagrod \",\n  \"Gentar\",\n  \"Feston\",\n  \"Syrana\",\n  \"Resha\",\n  \"Varin\",\n  \"Wren\",\n  \"Yuni\",\n  \"Talis\",\n  \"Kessa\",\n  \"Magaltie\",\n  \"Aeris\",\n  \"Desmina\",\n  \"Krynna\",\n  \"Asralyn \",\n  \"Herra\",\n  \"Pret\",\n  \"Kory\",\n  \"Afia\",\n  \"Tessel\",\n  \"Rhiannon\",\n  \"Zara\",\n  \"Jesi\",\n  \"Belen\",\n  \"Rei\",\n  \"Ciscra\",\n  \"Temy\",\n  \"Renalee \",\n  \"Estyn\",\n  \"Maarika\",\n  \"Lynorr\",\n  \"Tiv\",\n  \"Annihya\",\n  \"Semet\",\n  \"Tamrin\",\n  \"Antia\",\n  \"Reslyn\",\n  \"Basak\",\n  \"Vixra\",\n  \"Pekka \",\n  \"Xavia\",\n  \"Beatha \",\n  \"Yarri\",\n  \"Liris\",\n  \"Sonali\",\n  \"Razra \",\n  \"Soko\",\n  \"Maeve\",\n  \"Everen\",\n  \"Yelina\",\n  \"Morwena\",\n  \"Hagar\",\n  \"Palra\",\n  \"Elysa\",\n  \"Sage\",\n  \"Ketra\",\n  \"Lynx\",\n  \"Agama\",\n  \"Thesra \",\n  \"Tezani\",\n  \"Ralia\",\n  \"Esmee\",\n  \"Heron\",\n  \"Naima\",\n  \"Rydna \",\n  \"Sparrow\",\n  \"Baakshi \",\n  \"Ibera\",\n  \"Phlox\",\n  \"Dessa\",\n  \"Braithe\",\n  \"Taewen\",\n  \"Larke\",\n  \"Silene\",\n  \"Phressa\",\n  \"Esther\",\n  \"Anika\",\n  \"Rasy \",\n  \"Harper\",\n  \"Indie\",\n  \"Vita\",\n  \"Drusila\",\n  \"Minha\",\n  \"Surane\",\n  \"Lassona\",\n  \"Merula\",\n  \"Kye\",\n  \"Jonna\",\n  \"Lyla\",\n  \"Zet\",\n  \"Orett\",\n  \"Naphtalia\",\n  \"Turi\",\n  \"Rhays\",\n  \"Shike\",\n  \"Hartie\",\n  \"Beela\",\n  \"Leska\",\n  \"Vemery \",\n  \"Lunex\",\n  \"Fidess\",\n  \"Tisette\",\n  \"Partha\",\n]","/* eslint-disable no-empty-pattern */\nimport { allRanges, enemies, startState } from \"./data\";\nimport { EffectFun, ParametrizedFun } from \"./effectFunctions\";\nimport { Effect, Enemies, EnemiesStats, Enemy, EnemyStats, MonsterTarget, Nel, Play, Snapshot, Target } from \"./types\";\n\nconst effectFun = <T>(...funs: Nel<ParametrizedFun<T>>): EffectFun<T> =>\n  // TODO check direction of the fold\n  (funs.length > 1\n    ? funs.reduce((acc, value) => (params) => (origin, play, oldState) => {\n      const [newPlay, newState] = acc(params)(origin, play, oldState);\n      return value(params)(origin, newPlay, newState);\n    }) : funs[0]) as EffectFun<T>;\n\nconst EffectFunctionRepository = {\n  'Player:SapStamina': effectFun<{ amount: number }>(\n    ({ amount }) => (_origin, play, currentState) => [play, actions.modifyPlayerStamina(play.states[0], currentState, amount)],\n  ),\n  'Target:Bleed': effectFun<{ target: Target; lifespan: number }>(\n    ({ target }) => (_origin, play, currentState) => [play, target === 'Player' ? actions.attackPlayer(startState(play), currentState, 1) : actions.attackMonster(startState(play), currentState, target, 3)],\n    (params) => (origin, play, currentState) => [play, params.lifespan > 0 ? actions.addEotEffect(currentState, origin, { display: \"Bleed\", range: allRanges, priority: 4, effect: 'Target:Bleed', parameters: { ...params, lifespan: params.lifespan - 1 } }) : currentState],\n  ),\n  'Monster:Summon': effectFun<{ enemy: number }>(\n    ({ enemy }) => (_origin, play, currentState) => actions.addEnemy(play, currentState, enemies[enemy][0], enemies[enemy][1])\n  ),\n  'Monster:Dead': effectFun<undefined>(\n    () => (_origin, play, newState) => [play, newState]\n  ),\n  'Basic:Rest': effectFun<undefined>(\n    () => (_origin, play, newState) => [play, newState]\n  ),\n  'Basic:Advance': effectFun<undefined>(\n    () => (_origin, play, newState) => [play, actions.changeDistance(newState, newState.target, -2)]\n  ),\n  'Basic:Retreat': effectFun<undefined>(\n    () => (_origin, play, newState) => [play, actions.changeDistance(newState, newState.target, 2)]\n  ),\n  'Axe:Chop': effectFun<undefined>(\n    () => (_, play, currentState) => [play, actions.attackMonster(startState(play), currentState, currentState.target, 3)]\n  ),\n  'Axe:Cut': effectFun<undefined>(\n    () => (_, play, currentState) => [play, actions.attackMonster(startState(play), currentState, currentState.target, 3)],\n    () => (origin, play, currentState) => [play, actions.addEotEffect(currentState, origin, { display: \"Bleed\", range: allRanges, priority: 4, effect: 'Target:Bleed', parameters: {} })]\n  ),\n  'Hook:GetHere': effectFun<undefined>(\n    () => (_, play, currentState) => [play, actions.attackMonster(startState(play), currentState, currentState.target, 3)],\n    () => (_origin, play, currentState) => [play, actions.changeDistance(currentState, currentState.target, -1)]\n  ),\n  'Monster:Swipe': effectFun<undefined>(\n    () => (_, play, currentState) => [play, actions.attackPlayer(startState(play), currentState, 2)]\n  ),\n  'Monster:Roar': effectFun<undefined>(\n    () => (_, play, currentState) => [play, actions.modifyPlayerStamina(startState(play), currentState, -5)]\n  ),\n  'Monster:Jump': effectFun<undefined>(\n    () => (origin, play, currentState) => [play, actions.changeDistance(currentState, origin, -2)]\n  ),\n  'BootsOfFlight:EOT': effectFun<undefined>(\n    () => (_, play, currentState) => [play, currentState.enemies.reduce((s, _m, idx) => actions.changeDistance(s, idx as MonsterTarget, -2), currentState)]\n  ),\n};\n\nconst clamp = (num: number, min: number, max: number) =>\n  Math.min(Math.max(num, min), max);\n\nconst updateMonster = (enemies: EnemiesStats, target: Target, override: (stats: EnemyStats) => object): EnemiesStats =>\n  enemies.map((m, idx) =>\n    (idx === target)\n      ? { ...m, ...override(m) }\n      : m) as EnemiesStats;\n\nconst actions = {\n  attackMonster: (start: Snapshot, curr: Snapshot, target: MonsterTarget, amount: number): Snapshot =>\n  ({\n    ...curr,\n    enemies: updateMonster(curr.enemies, target, ({ hp }) => ({ hp: clamp(hp - amount, 0, start.enemies[target]!!/* enforced by UI */.hp) })),\n  }),\n  changeDistance: (curr: Snapshot, origin: Target, amount: number): Snapshot =>\n  ({\n    ...curr,\n    enemies: updateMonster(curr.enemies, origin, ({ distance }) => ({ distance: clamp(distance + amount, 1, 5) })),\n  }),\n\n  attackPlayer: (start: Snapshot, curr: Snapshot, amount: number): Snapshot =>\n  ({\n    ...curr,\n    player: {\n      ...curr.player,\n      hp: clamp(curr.player.hp - amount, 0, start.player.hp)\n    },\n  }),\n  modifyPlayerStamina: (\n    start: Snapshot,\n    curr: Snapshot,\n    amount: number,\n  ): Snapshot =>\n  ({\n    ...curr,\n    player: {\n      ...curr.player,\n      stamina: clamp(curr.player.stamina + amount, 0, start.player.stamina),\n    },\n  }),\n\n  addEotEffect: (\n    curr: Snapshot,\n    origin: Target,\n    effect: Effect,\n  ): Snapshot => ({\n    ...curr,\n    eot: [...(curr.eot ?? []), [origin, effect]],\n  }),\n  addBotEffect: (\n    curr: Snapshot,\n    origin: Target,\n    effect: Effect,\n  ): Snapshot => ({\n    ...curr,\n    bot: [...(curr.eot ?? []), [origin, effect]],\n  }),\n\n  addEnemy: (\n    play: Play,\n    curr: Snapshot,\n    enemy: Enemy,\n    enemyStats: EnemyStats,\n  ): [Play, Snapshot] => {\n    return play.enemies.length < 5\n      ? [{\n        ...play,\n        enemies: [...play.enemies, enemy] as Enemies,\n      }, {\n        ...curr,\n        enemies: [...curr.enemies, enemyStats] as EnemiesStats,\n      }]\n      : [play, curr];\n  }\n};\n\nexport default EffectFunctionRepository;\n","import { Enemies, Player, Snapshot, MonsterTarget, Target, InventoryEffect, EnemiesStats, PlayerStats, Play, RNG, StatsFun, Effect, PlayerTarget } from \"./types\";\nimport { Seq } from \"immutable\";\nimport { allRanges, effectDead, previousState, statsRepository } from \"./data\";\nimport { Chance } from \"chance\";\n// @ts-ignore fails on scripts despite having a d.ts file\nimport { toIndexableString } from 'pouchdb-collate';\nimport { extractFunction } from \"./effectFunctions\";\n\n/**\n * @returns min inclusive, max exclusive rand\n */\nfunction turnDeterministicRng(turns: number, randPerTurn: number, monsterSeed: string | number): RNG {\n  const monsterChance = new Chance(monsterSeed);\n  const monsterRng =\n    [...Array(turns).keys()]\n      .map(_ => [...Array(randPerTurn).keys()]\n        .map(_ => monsterChance.floating({ min: 0, max: 1, fixed: 2 })));\n  return monsterRng as RNG;\n}\n\nexport const turnRng = (play: Play, turn: number) => (min: number, max: number): number => {\n  const turnRng = [...play.rng[turn]];\n  return Math.floor(((max - min) * turnRng.pop()!!) + min);\n}\n\nexport const playerPassives = (player: Player): StatsFun[] =>\n  Object.values(player.build).flatMap((s) => s.passive ?? []).map(i => statsRepository[i]);\n\nexport const playerActions = (player: Player): InventoryEffect[] =>\n  Object.values(player.build).flatMap((s) => s.effects ?? []);\n\nexport const playerBotEffects = (player: Player): [PlayerTarget, Effect][] =>\n  Object.values(player.build).flatMap((s) => s.bot ?? []);\n\nexport const playerEotEffects = (player: Player): [PlayerTarget, Effect][] =>\n  Object.values(player.build).flatMap((s) => s.eot ?? []);\n\nexport default function play(player: Player, playerStats: PlayerStats, enemies: Enemies, enemiesStats: EnemiesStats, turns: number, seed: number | string, randPerTurn: number = 20): Play {\n  const [playerGameStats, enemyGameStats] = playerPassives(player).reduce(([p, e], fun) => fun(p, e), [playerStats, enemiesStats] as const);\n  return {\n    player,\n    enemies,\n    states: [{\n      player: playerGameStats,\n      enemies: enemyGameStats,\n      target: 0,\n      lastAttacks: []\n    }],\n    rng: turnDeterministicRng(turns, randPerTurn, seed),\n    turns,\n    id: toIndexableString([player, enemies, turns, seed]),\n    seed,\n  };\n}\n\nconst reduceFuns = (funs: [Target, Effect][], p: Play, s: Snapshot): [Play, Snapshot, [Target, string][]] =>\n  Seq(funs)\n    .sortBy(([_t, a]) => a.priority)\n    .reduce((acc, value) => {\n      const [origin, effect] = value;\n      const [oldPlay, oldState, lastAttacks] = acc;\n      const target = origin === 'Player' ? oldState.target : origin;\n      const isInRange = new Set([...effect.range]).has(oldState.enemies[target]?.distance!!);\n      if (isInRange) {\n        const [newPlay, newState] = extractFunction(effect)(origin, oldPlay, oldState);\n        return [newPlay, newState, [...lastAttacks, [origin, effect.display] as [Target, string]]]\n      } else {\n        return [oldPlay, oldState, [...lastAttacks, [origin, `${effect.display} ❌❌WHIFF❌❌`] as [Target, string]]]\n      }\n    }, [p, s, [] as [Target, string][]]);\n\nconst applyEffectStamina = (amount: number): Effect =>\n  ({ display: \"Stamina use\", effect: 'Player:SapStamina', parameters: { amount }, range: allRanges, priority: 0 });\n\nexport const handlePlayerEffect = (play: Play, index: number): Play => {\n  const currState = previousState(play);\n  const { enemies, bot, eot } = currState;\n  const playerSkills = playerActions(play.player);\n  const usedSkill = playerSkills[index];\n\n  // BOT\n  const playerBot = playerBotEffects(play.player);\n  const [preBotPlay, preBotState] =\n    reduceFuns([['Player', applyEffectStamina(currState.player.staminaPerTurn - usedSkill.stamina)]], play, currState);\n  const [postBotPlay, postBotState] = reduceFuns(bot ?? [], preBotPlay, preBotState);\n  const [postPlayerBotPlay, postPlayerBotState] = reduceFuns(playerBot, postBotPlay, postBotState);\n\n  // Turn\n  const rand = turnRng(play, play.states.length - 1);\n  const turnFunctions: [Target, Effect][] = Seq(play.enemies).zip(Seq(enemies))\n    .map(([e, stats], idx) =>\n      [idx as Target,\n      stats.hp > 0\n        ? e.effects[e.rolls[stats.distance - 1][rand(0, e.rolls[stats.distance - 1].length)]]\n        : effectDead] as const)\n    .concat([['Player' as Target, usedSkill as Effect] as const])\n    .toArray()\n    // Sure, typescript\n    .map(a => [...a]);\n\n  const [newPlay, newState, lastAttacks] =\n    reduceFuns(turnFunctions, postPlayerBotPlay, postPlayerBotState);\n\n  // EOT\n  const preEotState = { ...newState, lastAttacks };\n  const playerEot = playerEotEffects(newPlay.player);\n  const [postPlayerEotPlay, postPlayerEotState] = reduceFuns(playerEot, newPlay, preEotState);\n  const [postEotPlay, postEotState] = reduceFuns(eot ?? [], postPlayerEotPlay, postPlayerEotState);\n\n  return {\n    ...postEotPlay,\n    states: [...postEotPlay.states, postEotState],\n  };\n};\n\nexport const setSelected = (play: Play, target: MonsterTarget): Play => {\n  play.states[play.states.length - 1].target = target;\n  return {\n    ...play,\n    states: [...play.states],\n  };\n}\n","// import { createIs, is } from 'typescript-is';\nimport { Opaque } from \"type-fest\";\nimport { Effect, FunIndex, Play, Snapshot, Target } from \"./types\";\nimport EffectRepository from './effectRepository';\nimport effectRepository from './effectRepository';\n\nexport type ReduceFun = (origin: Target, play: Play, newState: Snapshot) => [Play, Snapshot];\nexport type ParametrizedFun<T> = (params: T) => ReduceFun;\nexport type EffectFun<T> = Opaque<ParametrizedFun<T>, ParametrizedFun<T>>;\n\nexport type EffectFunRepoIndex = keyof EffectFunRepo & FunIndex;\nexport type EffectFunRepo = typeof EffectRepository;\nexport type EffectFunParams<T extends EffectFunRepoIndex> = Parameters<EffectFunRepo[T]>[0];\n\nexport function extractFunction({ effect, parameters }: Effect): ReduceFun {\n  //if (isAnyEffectFunParams(idx, value)) {\n  // @ts-ignore: where the magic happens\n  return effectRepository[effect](parameters);\n  //}\n  //throw new Error('ValidationException');\n}\n\n// // Uses all the tricks in the book for runtime validation\n// const validators = Object.keys(EffectRepository)\n//   // eslint-disable-next-line array-callback-return\n//   .reduce((obj, idx) => {\n//     if (!is<EffectFunRepoIndex>(idx)) {\n//       return obj;\n//     }\n//     switch (idx) {\n//       case 'Target:Bleed': return assignObject('Target:Bleed', obj, [createIs<typeof idx>(), createIs<EffectFunParams<typeof idx>>()]);\n//       case 'Monster:Summon': return assignObject('Monster:Summon', obj, [createIs<typeof idx>(), createIs<EffectFunParams<typeof idx>>()]);\n//       case 'Monster:Dead': return assignObject('Monster:Dead', obj, [createIs<typeof idx>(), createIs<EffectFunParams<typeof idx>>()]);\n//       case 'Basic:Rest': return assignObject('Basic:Rest', obj, [createIs<typeof idx>(), createIs<EffectFunParams<typeof idx>>()]);\n//       case 'Basic:Advance': return assignObject('Basic:Advance', obj, [createIs<typeof idx>(), createIs<EffectFunParams<typeof idx>>()]);\n//       case 'Basic:Retreat': return assignObject('Basic:Retreat', obj, [createIs<typeof idx>(), createIs<EffectFunParams<typeof idx>>()]);\n//       case 'Axe:Chop': return assignObject('Axe:Chop', obj, [createIs<typeof idx>(), createIs<EffectFunParams<typeof idx>>()]);\n//       case 'Axe:Cut': return assignObject('Axe:Cut', obj, [createIs<typeof idx>(), createIs<EffectFunParams<typeof idx>>()]);\n//       case 'Hook:GetHere': return assignObject('Hook:GetHere', obj, [createIs<typeof idx>(), createIs<EffectFunParams<typeof idx>>()]);\n//       case 'Monster:Swipe': return assignObject('Monster:Swipe', obj, [createIs<typeof idx>(), createIs<EffectFunParams<typeof idx>>()]);\n//       case 'Monster:Roar': return assignObject('Monster:Roar', obj, [createIs<typeof idx>(), createIs<EffectFunParams<typeof idx>>()]);\n//       case 'Monster:Jump': return assignObject('Monster:Jump', obj, [createIs<typeof idx>(), createIs<EffectFunParams<typeof idx>>()]);\n//       case 'BootsOfFlight:EOT': return assignObject('BootsOfFlight:EOT', obj, [createIs<typeof idx>(), createIs<EffectFunParams<typeof idx>>()]);\n//     }\n//   }, {}) as Validators;\n// type Validators = { [k in EffectFunRepoIndex]: readonly [(object: any) => object is k, (object: any) => object is EffectFunParams<k>] };\n\n// export function isAnyEffectFunParams(idx: any, value: any): value is EffectFunParams<EffectFunRepoIndex> {\n//   if (is<EffectFunRepoIndex>(idx)) {\n//     const v = validators[idx];\n//     if (v != null) {\n//       return v[0](idx) && v[1](value);\n//     }\n//   }\n//   return false;\n// }\n\n// export function isEffectFunParams<T extends EffectFunRepoIndex>(expected: T, idx: any, value: any): value is EffectFunParams<T> {\n//   if (expected === idx) {\n//     const v = validators[expected];\n//     return v[0](idx) && v[1](value);\n//   }\n//   return false;\n// }\n\n// const assignObject = <T extends EffectFunRepoIndex>(idx: T, obj: object, value: any): object => {\n//   // @ts-ignore\n//   obj[idx as string] = value;\n//   return { ...obj };\n// }\n\n// const main = () => {\n//   const [idx1, value1] = JSON.parse(JSON.stringify(['Monster:Summon', { enemy: 1 }]));\n//   console.log(isAnyEffectFunParams(idx1, value1));\n//   console.log(isEffectFunParams('Target:Bleed', idx1, value1));\n//   console.log(isAnyEffectFunParams('Target:Bleed', value1));\n\n//   const [idx2, value2] = JSON.parse(JSON.stringify(['Monster:Summon', { patatas: 1 }]));\n//   console.log(isAnyEffectFunParams(idx2, value2));\n\n//   const [idx3, value3] = JSON.parse(JSON.stringify(['Monster:Patatas', {}]));\n//   console.log(isAnyEffectFunParams(idx3, value3));\n// }\n","import { Container, Row, Col, Card } from \"react-bootstrap\";\n\nimport { MonsterTarget, Play } from \"../utils/types\";\n\nimport EnemyCard from \"./Enemy\";\nimport PlayerCard from \"./Player\";\nimport usePressedKeys from \"../hooks/usePressedKeys\";\nimport { playerActions } from \"../utils/playGame\";\nimport { Seq } from \"immutable\";\nimport { previousState } from \"../utils/data\";\nimport { Button } from \"react-bootstrap\";\n\nexport type GameProps = {\n  game: Play;\n  setSelected: (target: MonsterTarget) => void;\n  handlePlayerEffect: (index: number) => void,\n  solveGame: (iterations: number) => void,\n  hint: (iterations: number) => void,\n  undo: () => void\n  redo: (() => void) | undefined;\n};\n\nconst Game = ({ handlePlayerEffect, setSelected, game, solveGame, undo, redo, hint }: GameProps): JSX.Element => {\n  const { player, enemies } = game;\n  const { player: playerStats, enemies: enemiesStats, target, lastAttacks } = previousState(game);\n\n  const playerSkills = playerActions(player);\n  const monsterHealth = enemiesStats.reduce((acc, m) => m.hp + acc, 0);\n  const isPlayerAlive = playerStats.hp > 0;\n  const areMonstersAlive = monsterHealth > 0;\n  const endGame = game.states.length <= game.turns;\n  const canAct = isPlayerAlive && areMonstersAlive && endGame;\n\n  const pressed = usePressedKeys((key) => {\n    if (!canAct) return;\n    const valNum = parseInt(key);\n    if (valNum > 0 && valNum <= playerSkills.length) {\n      const hasStamina = playerSkills[valNum - 1].stamina <= playerStats.stamina;\n      if (!hasStamina) return;\n      handlePlayerEffect(valNum - 1);\n    }\n  });\n\n  const selectedButtons = new Set<string>([...pressed].flatMap((key: string) => {\n    const valNum = parseInt(key);\n    if (valNum > 0 && valNum <= playerSkills.length) {\n      return [playerSkills[valNum - 1].display];\n    } else {\n      return [];\n    }\n  }));\n\n  return (\n    <Container fluid>\n      <Row className=\"justify-content-center align-items-flex-start\">\n        <Col sm={12} md={8}>\n          <Row>\n            <Card.Title>\n              Turn {game.states.length} out of {game.turns} {!isPlayerAlive ? (<b>❌❌DEFEAT❌❌</b>) : !areMonstersAlive ? (<b>🎉🎉VICTORY🎉🎉</b>) : \"\"}\n            </Card.Title>\n          </Row>\n          <Row>\n            <Col>\n              <PlayerCard\n                player={player}\n                playerStats={playerStats}\n                onClickEffect={handlePlayerEffect}\n                selectedButtons={selectedButtons}\n                lastAction={(lastAttacks.find(a => a[0] === 'Player') ?? [undefined, undefined])[1]}\n                canAct={canAct} />\n            </Col>\n          </Row>\n          <Row className=\"mt-2 g-2\">\n            {Seq(enemies).zip(Seq(enemiesStats)).map(([enemy, stats], idx) => (\n              <Col key={idx} xs={6} md={4}>\n                <EnemyCard\n                  key={idx}\n                  enemyStats={stats}\n                  enemy={enemy}\n                  canAct={canAct}\n                  latestAttack={Seq(lastAttacks).filter(([target, _]) => target === idx).map(v => v[1]).first()}\n                  isSelected={idx === target}\n                  onSelect={() => setSelected(idx as MonsterTarget)}\n                />\n              </Col>\n            ))}\n          </Row>\n          <Row>\n            {game.states.length > 1 && (<Button onClick={(_) => undo()}>Undo ↩</Button>)}\n            {redo && (<Button onClick={(_) => redo()}>Redo ↪</Button>)}\n            <Button onClick={(_) => hint(100)}>Hint</Button>\n            <Button onClick={(_) => solveGame(100)}>Solve ⌛</Button>\n            <Button onClick={(_) => solveGame(1000)}>Solve thoroughly ⌛⌛⌛</Button>\n          </Row>\n        </Col>\n      </Row>\n    </Container>\n  );\n};\n\nexport default Game;\n","import { useEffect, useCallback, useState } from \"react\";\n\nexport default function usePressedKeys(onUp: (e: string) => void): Set<string> {\n\n  const [pressedKeys, updatePressedKeys] = useState(new Set<string>());\n\n  const downHandler = ({ key }: { key: string }) => {\n    updatePressedKeys((set) => new Set([...set, key]));\n  }\n\n  const upHandler = useCallback(({ key }: { key: string }) => {\n    updatePressedKeys((set) => new Set([...set].filter((k) => k !== key)));\n    onUp(key);\n  }, [onUp]);\n\n  useEffect(() => {\n    window.addEventListener(\"keydown\", downHandler);\n    window.addEventListener(\"keyup\", upHandler);\n\n    return () => {\n      window.removeEventListener(\"keydown\", downHandler);\n      window.removeEventListener(\"keyup\", upHandler);\n    };\n  }, [upHandler]);\n\n  return pressedKeys;\n}","import React from \"react\";\nimport { Container, Row, Form, Button, ButtonGroup, Navbar } from \"react-bootstrap\";\nimport useScroll from \"../hooks/useScroll\";\n\nimport { Player, PlayerStats } from \"../utils/types\";\nimport { build, randomName } from \"../utils/data\";\nimport Chance from 'chance';\n\nconst selects = Object.entries(build).map(([type, options]) => ({\n  type,\n  options: options.map(({ display }, value) => ({\n    display,\n    value,\n  })),\n}));\n\nconst PlayerBuilder = ({ onSave }: { onSave: (player: Player, playerStats: PlayerStats) => void }) => {\n  const [form, setForm] = React.useState<Record<string, number>>(\n    selects.reduce(\n      (acc, { type, options }) => ({\n        ...acc,\n        [type]: options[0].value,\n      }),\n      {},\n    ),\n  );\n  const [lore, setLore] = React.useState({\n    name: randomName(),\n    age: new Chance().age(),\n  });\n  const setField = (field: string, value: number) => {\n    setForm({\n      ...form,\n      [field]: value,\n    });\n  };\n  const onFormSubmit = (e: any) => {\n    e.preventDefault();\n    onSave({\n      id: \"p-1\",\n      lore,\n      build: Object.entries(form).reduce((acc, [type, value]) => {\n        return {\n          ...acc,\n          [type]: build[type][value]\n        }\n      }, { basic: build.basic[0] }),\n    }, {\n      hp: 25,\n      stamina: 8,\n      staminaPerTurn: 2,\n    });\n  };\n  const displayType = (type: string) => <b>{build[type][form[type]].display}</b>;\n  return (\n    <Form onSubmit={onFormSubmit}>\n      <Container fluid style={{ marginBottom: '105px' }}>\n        <Row className=\"g-2\">\n          {selects.map(({ type, options }) =>\n            <ElementPicker\n              setField={(value) => setField(type, value)}\n              section={type}\n              options={options}\n              key={type}\n              isSelected={(value) => form[type] === value} />\n          )}\n        </Row>\n        <Navbar fixed=\"bottom\" bg=\"dark\" variant=\"dark\" style={{ maxHeight: '100px' }}>\n          <Container>\n            <Navbar.Text>You are <i onClick={() => setLore((lore) => ({ ...lore, name: randomName() }))}>{lore.name}</i>, the {displayType('skill')} {displayType('class')} {displayType('charm')}<br />who wields a {displayType('weapon')} and a {displayType('offhand')}<br />and wears {displayType('armor')} with {displayType('headgear')} and {displayType('footwear')}</Navbar.Text>\n            <Button type=\"submit\">Pick your foe!</Button>\n          </Container>\n        </ Navbar>\n      </Container >\n    </Form >\n  );\n};\n\nconst ElementPicker = ({ isSelected, section, options, setField }: {\n  options: {\n    display: string;\n    value: number;\n  }[], isSelected: (value: number) => boolean, setField: (value: number) => void, section: string\n}) => {\n  const [scrollTo, scrollRef] = useScroll({\n    behavior: 'smooth',\n    block: 'start',\n  });\n\n  return (\n    <Row>\n      <Form.Label>{section}</Form.Label>\n      <br />\n      <ButtonGroup size=\"lg\" className=\"mb-2\">\n        {options.map(({ display, value }) => (\n          <Button\n            key={value}\n            name={section}\n            id={`${value}`}\n            variant={isSelected(value) ? 'primary' : 'secondary'}\n            onClick={() => { setField(value); scrollTo(); }}\n          >{display}</Button>\n        ))}\n      </ButtonGroup>\n      <div id={`${section}-scroll`} ref={scrollRef} />\n    </Row>\n  );\n}\n\nexport default PlayerBuilder;\n","import { Ref, useRef } from \"react\";\n\ntype ScrollToFn = () => void;\n\nexport default function useScroll<T extends Element>(scrollParams: ScrollIntoViewOptions): [ScrollToFn, Ref<any>] {\n  const elRef = useRef<T>(null);\n  const executeScroll = () => elRef.current!.scrollIntoView(scrollParams);\n\n  return [executeScroll, elRef];\n};\n","import React from \"react\";\nimport { Container, ButtonGroup, Form, Button, Navbar } from \"react-bootstrap\";\n\nimport { Player, Enemies, Enemy, EnemiesStats, EnemyStats } from \"../utils/types\";\nimport { enemies, randomEnemy } from \"../utils/data\";\n\nconst EncounterBuilder = ({ player, onSave }: { player: Player, onSave: (enemies: Enemies, enemiesStats: EnemiesStats) => void }) => {\n  const [encounter, setEncounter] = React.useState<[Enemy, EnemyStats][]>([]);\n  const onFormSubmit = (e: any) => {\n    e.preventDefault();\n    const enemies = encounter.map(a => a[0]);\n    const enemiesStats = encounter.map(a => a[1]);\n    // Size enforced by UI\n    onSave(enemies as Enemies, enemiesStats as EnemiesStats);\n  };\n  const displayType = (type: string) => <b>{player.build[type].display}</b>;\n  return (\n    <Form onSubmit={onFormSubmit}>\n      <Container fluid style={{ marginBottom: encounter.length > 0 ? '205px' : '105px' }}>\n        <ButtonGroup size=\"lg\" className=\"mb-2\">\n          {enemies.map((enemy) =>\n            <Button\n              key={enemy[0].lore.name}\n              disabled={encounter.length > 4}\n              onClick={() => setEncounter((e) => [...e, enemy])}\n            >{enemy[0].lore.name}</Button>\n          )}\n        </ButtonGroup>\n      </Container >\n      {\n        encounter.length > 0 &&\n        <Navbar fixed=\"bottom\" bg=\"dark\" variant=\"dark\" style={{ marginBottom: '100px' }}>\n          <Container fluid>\n            <ButtonGroup size=\"sm\" className=\"mb-2\">\n              {encounter.map((enemy, idx) => <Button key={`${enemy[0].lore.name}-${idx}`} onClick={() => setEncounter((e) => { let found = false; return e.filter((m) => (found || m[0].lore.name !== enemy[0].lore.name) || !(found = true)); })}>{enemy[0].lore.name}</Button>)}\n            </ButtonGroup>\n          </Container>\n        </ Navbar>\n      }\n      <Navbar fixed=\"bottom\" bg=\"dark\" variant=\"dark\" style={{ maxHeight: '100px' }}>\n        <Container>\n          <Navbar.Text>You are <i>{player.lore.name}</i>, the {displayType('skill')} {displayType('class')} {displayType('charm')}<br />who wields a {displayType('weapon')} and a {displayType('offhand')}<br />and wears {displayType('armor')} with {displayType('headgear')} and {displayType('footwear')}</Navbar.Text>\n          <ButtonGroup>\n            <Button\n              disabled={encounter.length < 0 || encounter.length > 5}\n              onClick={(_) => setEncounter((e) => [...e, randomEnemy()])}>\n              Add Random\n            </Button>\n            <Button type=\"submit\" disabled={encounter.length < 1 || encounter.length > 5}>To Battle!</Button>\n          </ButtonGroup>\n        </Container>\n      </ Navbar>\n    </Form >\n  );\n};\n\nexport default EncounterBuilder;\n","export default function geneticAlgorithmConstructor(options) {\n\n    function settingDefaults() {\n        return {\n\n            mutationFunction: function (phenotype) { return phenotype },\n\n            crossoverFunction: function (a, b) { return [a, b] },\n\n            fitnessFunction: function (phenotype) { return 0 },\n\n            doesABeatBFunction: undefined,\n\n            population: [],\n            populationSize: 100,\n        }\n    }\n\n    function settingWithDefaults(settings, defaults) {\n        settings = settings || {}\n\n        settings.mutationFunction = settings.mutationFunction || defaults.mutationFunction\n        settings.crossoverFunction = settings.crossoverFunction || defaults.crossoverFunction\n        settings.fitnessFunction = settings.fitnessFunction || defaults.fitnessFunction\n\n        settings.doesABeatBFunction = settings.doesABeatBFunction || defaults.doesABeatBFunction\n\n        settings.population = settings.population || defaults.population\n        if (settings.population.length <= 0) throw Error(\"population must be an array and contain at least 1 phenotypes\")\n\n        settings.populationSize = settings.populationSize || defaults.populationSize\n        if (settings.populationSize <= 0) throw Error(\"populationSize must be greater than 0\")\n\n        return settings\n    }\n\n    var settings = settingWithDefaults(options, settingDefaults())\n\n    function populate() {\n        var size = settings.population.length\n        while (settings.population.length < settings.populationSize) {\n            const rand = Math.floor(Math.random() * size);\n            settings.population.push(\n                mutate(\n                    cloneJSON(settings.population[Math.floor(rand)])\n                )\n            )\n        }\n    }\n\n    function cloneJSON(object) {\n        return JSON.parse(JSON.stringify(object))\n    }\n\n    function mutate(phenotype) {\n        return settings.mutationFunction(cloneJSON(phenotype))\n    }\n\n    function crossover(phenotype) {\n        phenotype = cloneJSON(phenotype)\n        var mate = settings.population[Math.floor(Math.random() * settings.population.length)]\n        mate = cloneJSON(mate)\n        return settings.crossoverFunction(phenotype, mate)[0]\n    }\n\n    function doesABeatB(a, b) {\n        if (settings.doesABeatBFunction) {\n            return settings.doesABeatBFunction(a, b)\n        } else {\n            return settings.fitnessFunction(a) >= settings.fitnessFunction(b)\n        }\n    }\n\n    function compete() {\n        var nextGeneration = []\n\n        for (var p = 0; p < settings.population.length - 1; p += 2) {\n            var phenotype = settings.population[p];\n            var competitor = settings.population[p + 1];\n\n            nextGeneration.push(phenotype)\n            if (doesABeatB(phenotype, competitor)) {\n                if (Math.random() < 0.5) {\n                    nextGeneration.push(mutate(phenotype))\n                } else {\n                    nextGeneration.push(crossover(phenotype))\n                }\n            } else {\n                nextGeneration.push(competitor)\n            }\n        }\n\n        settings.population = nextGeneration;\n    }\n\n\n\n    function randomizePopulationOrder() {\n\n        for (var index = 0; index < settings.population.length; index++) {\n            var otherIndex = Math.floor(Math.random() * settings.population.length)\n            var temp = settings.population[otherIndex]\n            settings.population[otherIndex] = settings.population[index]\n            settings.population[index] = temp\n        }\n    }\n\n    return {\n        evolve: function (options) {\n\n            if (options) {\n                settings = settingWithDefaults(options, settings)\n            }\n\n            populate()\n            randomizePopulationOrder()\n            compete()\n            return this\n        },\n        best: function () {\n            var scored = this.scoredPopulation()\n            var result = scored.reduce(function (a, b) {\n                return a.score >= b.score ? a : b\n            }, scored[0]).phenotype\n            return cloneJSON(result)\n        },\n        bestScore: function () {\n            return settings.fitnessFunction(this.best())\n        },\n        population: function () {\n            return cloneJSON(this.config().population)\n        },\n        scoredPopulation: function () {\n            return this.population().map(function (phenotype) {\n                return {\n                    phenotype: cloneJSON(phenotype),\n                    score: settings.fitnessFunction(phenotype)\n                }\n            })\n        },\n        config: function () {\n            return cloneJSON(settings)\n        },\n        clone: function (options) {\n            return geneticAlgorithmConstructor(\n                settingWithDefaults(options,\n                    settingWithDefaults(this.config(), settings)\n                )\n            )\n        }\n    }\n}\n","import GeneticAlgorithmConstructor, { GeneticAlgorithmConfig, ScoredPhenotype } from '../geneticalgorithm/geneticalgorithm';\nimport { handlePlayerEffect, playerActions, setSelected } from '../utils/playGame';\nimport Chance from 'chance';\nimport { MonsterTarget, Play } from '../utils/types';\nimport { previousState } from '../utils/data';\nimport prettyjson from 'prettyjson';\nimport { Seq } from 'immutable';\n\nexport type TinkererOptions = typeof defaultTinkererOptions & { turns?: number };\n\nexport const defaultTinkererOptions = {\n  playerSeed: \"Miau\",\n  weights: { monster: 0.70, player: 0.125, turn: 0.05, stamina: 0.075 },\n  debug: false,\n};\n\nexport const gameRender = (results: ScoredPhenotype<Play>[]): string => {\n  const best: ScoredPhenotype<Play> = Seq(results).maxBy(a => a.score)!!;\n  const lastState = previousState(best.phenotype);\n  return `BEST BY ${best.score} in ${best.phenotype.states.length - 1} turns\\n` +\n    prettyjson.render([\n      lastState.lastAttacks.flatMap(([target, id]) => [target === 'Player' ? 'Player' : `[${target}] ${best.phenotype.enemies[target]!!.lore.name}`, id]),\n      Seq(best.phenotype.enemies).zip(Seq(lastState.enemies)).flatMap(([enemy, stats], idx) => [`[${idx}] ${enemy.lore.name}`, stats]).toArray(),\n      lastState.player,\n    ]);\n}\n\nexport default function tinkerer(play: Play, iter: number, optionsOverride?: Partial<TinkererOptions>): ScoredPhenotype<Play>[] {\n  const options: TinkererOptions = { ...defaultTinkererOptions, ...optionsOverride };\n  const range = [...Array(iter).keys()];\n  const rand = new Chance(options.playerSeed);\n  const actions = playerActions(play.player);\n  const config: GeneticAlgorithmConfig<Play> = {\n    mutationFunction: (oldPlay) => {\n      const latestState = previousState(oldPlay);\n      const monsterHealth = latestState.enemies.reduce((acc, monster) => acc + monster.hp, 0);\n      const playerHealth = latestState.player.hp;\n      if (playerHealth === 0 || monsterHealth === 0) {\n        return oldPlay;\n      }\n      let newPlay = oldPlay;\n      while (rand.d6() === 6 || (previousState(newPlay).enemies[previousState(newPlay).target]?.hp ?? 0) <= 0) {\n        newPlay = setSelected(newPlay, rand.natural({ min: 0, max: previousState(newPlay).enemies.length - 1 }) as MonsterTarget);\n      }\n      const latest = previousState(newPlay);\n      const unavailable = actions.map((a, idx) => [a, idx] as const).filter(([a, _]) => a.stamina > latest.player.stamina).map(([_, idx]) => idx);\n      newPlay = handlePlayerEffect(\n        newPlay,\n        rand.natural({ min: 0, max: actions.length - 1, exclude: unavailable })\n      );\n      return newPlay;\n    },\n    fitnessFunction: (play) => {\n      const latestState = previousState(play);\n      const monsterHealth = latestState.enemies.reduce((acc, monster) => acc + monster.hp, 0);\n      const playerHealth = latestState.player.hp;\n      const playerStamina = latestState.player.stamina;\n      const startPlayerHealth = play.states[0].player.hp;\n      const startPlayerStamina = play.states[0].player.hp;\n      const startMonsterHealth = play.states[0].enemies.reduce((acc, monster) => acc + monster.hp, 0);\n\n      const monsterKillingFitness = ((startMonsterHealth - monsterHealth) / startMonsterHealth);\n      const playerAlivenessFitness = (playerHealth / startPlayerHealth);\n      const killSpeedFitness = (play.turns - play.states.length) / play.turns;\n      const staminaFitness = (playerStamina / startPlayerStamina);\n\n      const fitness = (monsterKillingFitness * options.weights.monster) + (playerAlivenessFitness * options.weights.player) + (killSpeedFitness * options.weights.turn) + (staminaFitness * options.weights.stamina);\n      if (options.debug) {\n        console.log(`MH: ${monsterHealth} | PH: ${playerHealth} | TR: ${play.states.length}\\nFitness: ${fitness} | MF: ${monsterKillingFitness} | PF: ${playerAlivenessFitness} | SF: ${staminaFitness} | TF: ${killSpeedFitness}\\nWeights: ${JSON.stringify(options.weights)}`);\n      }\n      return fitness;\n    },\n    population: range.map((_) => play),\n    populationSize: iter,\n  }\n\n  const turns = optionsOverride?.turns ? optionsOverride?.turns : play.turns;\n  let gen = new GeneticAlgorithmConstructor<Play>(config);\n  for (let i = 0; i < turns; i++) {\n    gen = gen.evolve();\n  }\n  return gen.scoredPopulation();\n}\n","import React from \"react\";\nimport \"./App.css\";\n// import { readString } from \"react-papaparse\";\nimport { Enemies, EnemiesStats, Player, PlayerStats, Snapshot, Play } from \"./utils/types\";\n\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport Game from \"./components/Game\";\nimport PlayerBuilder from \"./components/PlayerBuilder\";\nimport EncounterBuilder from \"./components/EncounterBuilder\";\nimport play, { handlePlayerEffect, setSelected } from \"./utils/playGame\";\nimport tinkerer from \"./tinkerer/tinkerer\";\nimport { Seq } from \"immutable\";\nimport { previousState } from \"./utils/data\";\n\ntype AppStatus = \"buildPlayer\" | \"buildEncounter\" | \"game\" | \"endGame\";\n\nfunction App() {\n  const [status, setStatus] = React.useState<AppStatus>(\"buildPlayer\");\n  const [playerBuild, setPlayerBuild] = React.useState<\n    [Player, PlayerStats] | undefined\n  >();\n  const [encounterBuild, setEncounter] = React.useState<[Enemies, EnemiesStats]>();\n  const [game, setGame] = React.useState<Play | undefined>();\n  const [redo, setRedo] = React.useState<Snapshot[]>([]);\n\n  const handleSavePlayer = (player: Player, playerStats: PlayerStats) => {\n    setPlayerBuild([player, playerStats]);\n    setStatus(\"buildEncounter\");\n  };\n  const handleSaveEncounter = (encounter: Enemies, encounterStats: EnemiesStats) => {\n    setEncounter([encounter, encounterStats]);\n    setStatus(\"game\");\n  }\n\n  if (!game && playerBuild && encounterBuild) {\n    const [player, playerStats] = playerBuild;\n    const [encounter, encounterStats] = encounterBuild;\n    const game = play(player, playerStats, encounter, encounterStats, 50, 'PACC');\n    setGame(game);\n  }\n\n  return (\n    <div className=\"App\">\n      {status === \"buildPlayer\" ? (\n        <PlayerBuilder onSave={handleSavePlayer} />\n      ) : null}\n      {status === \"buildEncounter\" && playerBuild ? (\n        <EncounterBuilder\n          player={playerBuild[0]}\n          onSave={handleSaveEncounter}\n        />\n      ) : null}\n      {status === \"game\" && game ? (\n        <Game\n          game={game}\n          redo={redo.length > 0 ? (() => {\n            const newRedo = [...redo];\n            const latest = newRedo.pop() as Snapshot;\n            setRedo(newRedo);\n            setGame({ ...game, states: [...game.states, latest] });\n          }) : undefined}\n          undo={() => {\n            setRedo([...redo, previousState(game)]);\n            setGame({ ...game, states: [game.states[0], ...game.states.slice(1, -1)] });\n          }}\n          setSelected={(idx) => { setRedo([]); setGame(setSelected(game, idx)); }}\n          handlePlayerEffect={(idx) => { setRedo([]); setGame(handlePlayerEffect(game, idx)); }}\n          solveGame={(iterations) => setGame(Seq(tinkerer(game, iterations, { turns: game.turns - game.states.length })).maxBy(a => a.score)!!.phenotype)}\n          hint={(iterations) =>\n            setGame({\n              ...game,\n              states: [...game.states, Seq(tinkerer(game, iterations, { turns: game.turns - game.states.length })).maxBy(a => a.score)!!.phenotype.states[game.states.length]]\n            })\n          }\n        />\n      ) : null}\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://cra.link/PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://cra.link/PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorkerRegistration from './serviceWorkerRegistration';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://cra.link/PWA\nserviceWorkerRegistration.register();\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}