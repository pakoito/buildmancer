{"version":3,"sources":["components/PlayerBuilder.tsx","hooks/useScroll.tsx","components/EncounterBuilder.tsx","components/menus/Menu.tsx","geneticalgorithm/geneticalgorithm.js","game/tinkerer.ts","components/Enemy.tsx","components/Player.tsx","components/Game.tsx","hooks/useForceRerender.tsx","hooks/usePressedKeys.tsx","components/menus/SingleGame.tsx","components/menus/LoadScreen.tsx","App.tsx","reportWebVitals.ts","index.tsx","game/effectRepository.ts","game/playGame.ts","game/data/enemies.ts","game/data/weapons.ts","game/data/build.ts","game/data.ts","game/zFunDump.ts","game/modding.ts","game/types.ts","game/data/names.ts","game/makeGame.ts","stateMachines/menuStateMachine.ts","serviceWorkerRegistration.ts"],"names":["systemBuildKeys","Set","ElementPicker","isSelected","section","options","setField","scrollParams","elRef","useRef","current","scrollIntoView","useScroll","behavior","block","scrollTo","scrollRef","Row","Form","Label","ButtonGroup","size","className","map","item","Button","name","id","display","variant","onClick","ref","PlayerBuilder","onSave","randomPlayer","player","playerStats","React","useState","build","form","setForm","lore","setLore","displayType","type","postBuildPlayerStats","buildPlayer","randomEnemy","onSubmit","e","preventDefault","Container","fluid","style","marginBottom","safeEntries","filter","has","values","value","field","Navbar","fixed","bg","maxHeight","Text","randomName","hp","max","stamina","staminaPerTurn","attack","defence","speed","EncounterBuilder","encounter","setEncounter","enemies","a","enemiesStats","length","enemy","disabled","idx","found","m","_","Menu","title","states","Card","Title","state","geneticAlgorithmConstructor","settingWithDefaults","settings","defaults","mutationFunction","crossoverFunction","fitnessFunction","doesABeatBFunction","population","Error","populationSize","phenotype","b","undefined","cloneJSON","object","JSON","parse","stringify","mutate","crossover","mate","Math","floor","random","evolve","rand","push","populate","index","otherIndex","temp","randomizePopulationOrder","nextGeneration","p","competitor","compete","this","best","scored","scoredPopulation","reduce","score","bestScore","config","clone","defaultTinkererOptions","playerSeed","weights","monster","turn","debug","findBestPlay","play","iter","optionsOverride","Chance","oldPlay","latestState","previousState","monsterHealth","acc","newPlay","d6","target","setSelected","natural","min","latest","actions","playerActions","inventory","unavailable","handlePlayerEffect","exclude","startState","initialState","playerHealth","playerStamina","startPlayerHealth","startPlayerStamina","startMonsterHealth","monsterKillingFitness","playerAlivenessFitness","killSpeedFitness","turns","staminaFitness","fitness","console","log","rangeArr","gen","GeneticAlgorithmConstructor","i","Seq","sortBy","toArray","EnemyCard","effects","enemyStats","onSelect","latestAttack","canAct","hotkey","Body","distance","status","bleed","rolls","countBy","v","find","range","priority","tooltip","OverlayTrigger","placement","delay","show","hide","overlay","Popover","Header","as","join","toFixed","toUpperCase","PlayerCard","selectedButtons","inventoryStats","onClickEffect","lastAction","disabledSkills","setDisabledSkills","passives","k","bot","eot","hasPassives","Subtitle","class","ToggleButton","checked","onChange","event","currentTarget","delete","add","Stack","direction","gap","active","clamp","monsterHotkeys","Game","game","solveGame","timeTravel","hint","onMenu","lastAttacks","isLogShown","setShowLog","forceUpdate","setValue","useForceRerender","useEffect","updateGlobals","ingame","handleCloseLog","playerSkills","isPlayerAlive","areMonstersAlive","endGame","pressed","onUp","pressedKeys","updatePressedKeys","downHandler","key","set","upHandler","useCallback","window","addEventListener","removeEventListener","usePressedKeys","valNum","parseInt","save","undo","redo","flatMap","blob","Blob","saveAs","Date","now","Col","sm","md","Player","origin","phase","zip","stats","xs","Enemy","Modal","onHide","scrollable","centered","closeButton","s","Footer","SingleGame","onGameEnd","setGame","setRedo","gameState","playState","timeTravelObj","newRedo","pop","slice","iterations","maxBy","LoadScreen","onLoad","loadError","setLoadError","load","data","playRaw","fileData","files","reader","FileReader","onloadend","ev","result","readAsText","rawData","Alert","Group","Control","accept","muted","rows","placeholder","App","useMachine","gameMenuMachine","devTools","send","matches","Object","keys","main","on","quick","makeGameNew","context","singleContext","seed","single","training","dummyEnemy","arcade","survivalContext","arcadeContext","victories","otherEnemy","firstState","makeGameNextLevel","survival","lastState","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","container","document","getElementById","createRoot","render","StrictMode","serviceWorkerRegistration","effectFun","fun","params","oldState","applyPoison","currentState","pipe","changeStatPlayer","changeStatMonster","newState","addBotEffect","allRanges","dodgeable","effectFunCall","engineFunctions","_origin","changeStatusPlayer","o","armor","amount","dodge","stun","changeStatusMonster","effectFunRepo","changeDistance","attackMonster","modifyPlayerStamina","gameTarget","attackPlayer","addEnemy","_m","updateMonster","override","updatePlayer","curr","damage","afterDefence","afterArmor","armorSpent","afterBleed","f","updateStatus","removeMonster","currPlay","currSnap","modify","updatePlayerStat","addEotEffect","effect","statsRepository","makeStat","turnDeterministicRng","randPerTurn","monsterSeed","monsterChance","floating","used","playerPassives","playerGameStats","enemyGameStats","rng","toIndexableString","version","reduceFuns","funs","priorityBonus","monsterId","targetMonster","isStunnedPlayer","isStunnedMonster","parameters","callEffectFun","extractFunction","effectEotCleanup","effectDead","d","lastTurnState","usedSkill","preBotPlay","preBotState","postBotPlay","postBotState","entitiesBot","eff","postEntitiesBotPlay","postEntitiesBotState","turnRng","turnFunctions","roll","concat","entitiesEot","playerEotEffects","enemiesEotEffects","postPlayerEotPlay","postPlayerEotState","postEotPlay","postEotState","postCleanup","postCleanupState","scoreGame","hpLoss","staminaLoss","selfRange","makeRange","defaultStatus","description","weapons","basic","skill","weapon","offhand","headgear","footwear","charm","consumable","enemyRepository","Array","num","Infinity","t","globalsDefault","trainingEnemy","globals","globalThis","theThis","__buildmancer","isArray","repo","entries","names","number","pickone","randomBuild","buildOverride","playerStatsDefault","statsOverride","string","age","isDebug","process","inspect","server","WebSocket","Server","port","toMenu","MENU","initial","entry","WIN","LOSE","win","lose","PLAYER","ENCOUNTER","cond","internal","victory","defeat","puzzle","SELECTED","COMPLETE","complete","NEXT","SELECT","LOAD","makeArcadeContext","makeSurvivalContext","makeSingleContext","createMachine","tsTypes","QUICK","SINGLE","TRAINING","ARCADE","SURVIVAL","guards","isFinal","bumpVictories","assign","_event","bumpScore","reset","c","interpret","onTransition","start","isLocalhost","Boolean","location","hostname","match","register","navigator","URL","href","swUrl","fetch","headers","response","contentType","get","indexOf","serviceWorker","ready","registration","unregister","reload","registerValidSW","catch","checkValidServiceWorker","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","error"],"mappings":"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A,UACA,UACA,UACA,WACA,QACA,WACA,QACA,SACA,SACA,OACA,SACA,QACA,QACA,OACA,WACA,SACA,QACA,UACA,SACA,UACA,SACA,SACA,SACA,SACA,QACA,QACA,OACA,OACA,QACA,QACA,WACA,QACA,UACA,SACA,UACA,QACA,OACA,OACA,OACA,SACA,WACA,OACA,OACA,QACA,MACA,SACA,OACA,UACA,QACA,UACA,SACA,MACA,UACA,QACA,SACA,QACA,SACA,QACA,QACA,QACA,QACA,SACA,QACA,QACA,SACA,QACA,OACA,QACA,SACA,SACA,UACA,QACA,QACA,QACA,OACA,QACA,OACA,QACA,SACA,SACA,QACA,QACA,QACA,QACA,QACA,UACA,UACA,QACA,QACA,QACA,UACA,SACA,QACA,SACA,UACA,SACA,QACA,OACA,SACA,QACA,OACA,UACA,QACA,SACA,UACA,SACA,MACA,QACA,OACA,MACA,QACA,YACA,OACA,QACA,QACA,SACA,QACA,QACA,SACA,QACA,SACA,UACA,U,QCrLW1B,EAAY,sCAAI2B,EAAJ,yBAAIA,EAAJ,mCACnB,IAAIpgB,IAAIogB,KACDvH,EAAY4F,EAAU,EAAG,EAAG,EAAG,EAAG,GAClCD,EAAY3F,EAEZuC,EAAW,SAAC/B,GAAD,IAAiBjV,EAAjB,uDAA+BiV,EAAS,EAAxC,MAAqD,CAC3E5Y,QAAS4Y,EACTjV,QAEWsa,EAAwB,CACnCpF,MAAO,CAAElK,QAAQ,GACjBgK,MAAO,CAAEC,OAAQ,GACjB7M,MAAO,CAAEtB,MAAO,GAChBqO,KAAM,CAAEnK,QAAQ,IAGLrM,EAAc,kBAAiB,IAAIsG,UAASgX,QAAQxb,MACpD2R,EAAa,kBAAiBoJ,cAAUD,eAExCzb,EAAa,kBAAMic,EAAMhZ,KAAKC,MAAMD,KAAKE,SAAW8Y,EAAMnb,UAE1Dsb,EAAc,SACzBxE,EACAyE,GAFyB,oBAIzBvX,MAAO1G,IAAM0G,MAAM4W,cAAU5W,MAAQ,EAAI,GACzC6V,MAAO/C,EAAIuE,QAAQ/d,IAAMuc,OACzBpQ,MAAOqN,EAAIuE,QAAQ/d,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","file":"static/js/main.c8ed580d.chunk.js","sourcesContent":["import React from 'react';\nimport {\n  Container,\n  Row,\n  Form,\n  Button,\n  ButtonGroup,\n  Navbar,\n} from 'react-bootstrap';\nimport useScroll from '../hooks/useScroll';\nimport { Build, Item, Player, PlayerStats, safeEntries } from '../game/types';\nimport { build } from '../game/data';\nimport { Set } from 'immutable';\nimport { buildPlayer } from '../game/playGame';\nimport { randomPlayer, randomEnemy, randomName } from '../game/makeGame';\n\nconst systemBuildKeys: Set<keyof Build> = Set(['debug', 'basic']);\n\nconst PlayerBuilder = ({\n  onSave,\n}: {\n  onSave: (player: Player, playerStats: PlayerStats) => void;\n}) => {\n  const [player, playerStats] = randomPlayer();\n  const [form, setForm] = React.useState<Build>(player.build);\n  const [lore, setLore] = React.useState(player.lore);\n  const setField = <T extends keyof Build>(field: T, value: Build[T]) => {\n    setForm({\n      ...form,\n      [field]: value,\n    });\n  };\n  const onFormSubmit = (e: any) => {\n    e.preventDefault();\n    onSave(\n      {\n        id: 'p-1',\n        lore,\n        build: form,\n      },\n      playerStats\n    );\n  };\n  const displayType = (type: keyof Build) => <b>{form[type].display}</b>;\n\n  const postBuildPlayerStats = buildPlayer(\n    { ...player, build: form },\n    playerStats,\n    [randomEnemy()[1]]\n  )[0];\n\n  return (\n    <Form onSubmit={onFormSubmit}>\n      <Container fluid style={{ marginBottom: '105px' }}>\n        <Row className=\"g-2\">\n          {safeEntries(build)\n            .filter(([type, _]) => !systemBuildKeys.has(type))\n            .map(([type, values]) => (\n              <ElementPicker\n                setField={(value) => setField(type, value)}\n                section={type}\n                options={values as Item[]}\n                key={type}\n                isSelected={(value) => form[type].display === value.display}\n              />\n            ))}\n        </Row>\n        <Navbar\n          fixed=\"bottom\"\n          bg=\"dark\"\n          variant=\"dark\"\n          style={{ maxHeight: '100px' }}\n        >\n          <Container>\n            <Navbar.Text>\n              You are{' '}\n              <i\n                onClick={() =>\n                  setLore((lore) => ({ ...lore, name: randomName() }))\n                }\n              >\n                {lore.name}\n              </i>\n              , the {displayType('skill')} {displayType('class')}{' '}\n              {displayType('charm')}\n              <br />\n              who wields a {displayType('weapon')} and a{' '}\n              {displayType('offhand')}\n              <br />\n              and wears {displayType('armor')} with {displayType('headgear')}{' '}\n              and {displayType('footwear')}\n            </Navbar.Text>\n            <Navbar.Text>\n              {postBuildPlayerStats.hp.current}/{postBuildPlayerStats.hp.max} ❤\n              <br />\n              {postBuildPlayerStats.stamina.current}/\n              {postBuildPlayerStats.stamina.max} 💪 (\n              {postBuildPlayerStats.staminaPerTurn.current >= 0 && '+'}\n              {postBuildPlayerStats.staminaPerTurn.current})<br />\n              Attack {postBuildPlayerStats.attack.current} | Defence{' '}\n              {postBuildPlayerStats.defence.current} | Speed{' '}\n              {postBuildPlayerStats.speed.current}\n            </Navbar.Text>\n            <Button type=\"submit\">This is me!</Button>\n          </Container>\n        </Navbar>\n      </Container>\n    </Form>\n  );\n};\n\nconst ElementPicker = ({\n  isSelected,\n  section,\n  options,\n  setField,\n}: {\n  options: Item[];\n  isSelected: (value: Item) => boolean;\n  setField: (value: Item) => void;\n  section: string;\n}) => {\n  const [scrollTo, scrollRef] = useScroll({\n    behavior: 'smooth',\n    block: 'start',\n  });\n\n  return (\n    <Row>\n      <Form.Label>{section}</Form.Label>\n      <br />\n      <ButtonGroup size=\"lg\" className=\"mb-2\">\n        {options.map((item) => (\n          <Button\n            key={item.display}\n            name={section}\n            id={`${item.display}`}\n            variant={isSelected(item) ? 'primary' : 'secondary'}\n            onClick={() => {\n              setField(item);\n              scrollTo();\n            }}\n          >\n            {item.display}\n          </Button>\n        ))}\n      </ButtonGroup>\n      <div id={`${section}-scroll`} ref={scrollRef} />\n    </Row>\n  );\n};\n\nexport default PlayerBuilder;\n","import { Ref, useRef } from 'react';\n\ntype ScrollToFn = () => void;\n\nexport default function useScroll<T extends Element>(\n  scrollParams: ScrollIntoViewOptions\n): [ScrollToFn, Ref<any>] {\n  const elRef = useRef<T>(null);\n  const executeScroll = () => elRef.current!.scrollIntoView(scrollParams);\n\n  return [executeScroll, elRef];\n}\n","import React from 'react';\nimport { Container, ButtonGroup, Form, Button, Navbar } from 'react-bootstrap';\n\nimport { Player, Enemies, EnemiesStats, Build, EnemyInfo } from '../game/types';\nimport { enemies } from '../game/data';\nimport { randomEnemy } from '../game/makeGame';\n\nconst EncounterBuilder = ({\n  player,\n  onSave,\n}: {\n  player: Player;\n  onSave: (enemies: Enemies, enemiesStats: EnemiesStats) => void;\n}) => {\n  const [encounter, setEncounter] = React.useState<EnemyInfo[]>([]);\n  const onFormSubmit = (e: any) => {\n    e.preventDefault();\n    const enemies = encounter.map((a) => a[0]);\n    const enemiesStats = encounter.map((a) => a[1]);\n    // Size enforced by UI\n    onSave(enemies as Enemies, enemiesStats as EnemiesStats);\n  };\n  const displayType = (type: keyof Build) => (\n    <b>{player.build[type].display}</b>\n  );\n  return (\n    <Form onSubmit={onFormSubmit}>\n      <Container\n        fluid\n        style={{ marginBottom: encounter.length > 0 ? '205px' : '105px' }}\n      >\n        <ButtonGroup size=\"lg\" className=\"mb-2\">\n          {enemies.map((enemy) => (\n            <Button\n              key={enemy[0].lore.name}\n              disabled={encounter.length > 4}\n              onClick={() => setEncounter((e) => [...e, enemy])}\n            >\n              {enemy[0].lore.name}\n            </Button>\n          ))}\n        </ButtonGroup>\n      </Container>\n      {encounter.length > 0 && (\n        <Navbar\n          fixed=\"bottom\"\n          bg=\"dark\"\n          variant=\"dark\"\n          style={{ marginBottom: '100px' }}\n        >\n          <Container fluid>\n            <ButtonGroup size=\"sm\" className=\"mb-2\">\n              {encounter.map((enemy, idx) => (\n                <Button\n                  key={`${enemy[0].lore.name}-${idx}`}\n                  onClick={() =>\n                    setEncounter((e) => {\n                      let found = false;\n                      return e.filter(\n                        (m) =>\n                          found ||\n                          m[0].lore.name !== enemy[0].lore.name ||\n                          !(found = true)\n                      );\n                    })\n                  }\n                >\n                  {enemy[0].lore.name}\n                </Button>\n              ))}\n            </ButtonGroup>\n          </Container>\n        </Navbar>\n      )}\n      <Navbar\n        fixed=\"bottom\"\n        bg=\"dark\"\n        variant=\"dark\"\n        style={{ maxHeight: '100px' }}\n      >\n        <Container>\n          <Navbar.Text>\n            You are <i>{player.lore.name}</i>, the {displayType('skill')}{' '}\n            {displayType('class')} {displayType('charm')}\n            <br />\n            who wields a {displayType('weapon')} and a {displayType('offhand')}\n            <br />\n            and wears {displayType('armor')} with {displayType('headgear')} and{' '}\n            {displayType('footwear')}\n          </Navbar.Text>\n          <ButtonGroup>\n            <Button\n              disabled={encounter.length < 0 || encounter.length > 4}\n              onClick={(_) => setEncounter((e) => [...e, randomEnemy()])}\n            >\n              Add Random\n            </Button>\n            <Button\n              type=\"submit\"\n              disabled={encounter.length < 1 || encounter.length > 5}\n            >\n              To Battle!\n            </Button>\n          </ButtonGroup>\n        </Container>\n      </Navbar>\n    </Form>\n  );\n};\n\nexport default EncounterBuilder;\n","import React from 'react';\nimport { Container, Card, Row, Button } from 'react-bootstrap';\n\nconst Menu: React.FC<{\n  title: string;\n  states: string[];\n  onClick: (value: string) => void;\n}> = ({ title, states, onClick }) => (\n  <Container fluid style={{ marginBottom: '105px' }}>\n    <Row className=\"g-2\">\n      <Card.Title>{title}</Card.Title>\n    </Row>\n    {states.map((state) => (\n      <Row className=\"g-2\" key={state}>\n        <Button\n          size=\"lg\"\n          className=\"mb-2\"\n          key={state}\n          variant={'primary'}\n          onClick={() => {\n            onClick(state);\n          }}\n        >\n          {state}\n        </Button>\n      </Row>\n    ))}\n  </Container>\n);\n\nexport default Menu;\n","export default function geneticAlgorithmConstructor(options) {\n  function settingDefaults() {\n    return {\n      mutationFunction: function (phenotype) {\n        return phenotype;\n      },\n\n      crossoverFunction: function (a, b) {\n        return [a, b];\n      },\n\n      fitnessFunction: function (phenotype) {\n        return 0;\n      },\n\n      doesABeatBFunction: undefined,\n\n      population: [],\n      populationSize: 100,\n    };\n  }\n\n  function settingWithDefaults(settings, defaults) {\n    settings = settings || {};\n\n    settings.mutationFunction =\n      settings.mutationFunction || defaults.mutationFunction;\n    settings.crossoverFunction =\n      settings.crossoverFunction || defaults.crossoverFunction;\n    settings.fitnessFunction =\n      settings.fitnessFunction || defaults.fitnessFunction;\n\n    settings.doesABeatBFunction =\n      settings.doesABeatBFunction || defaults.doesABeatBFunction;\n\n    settings.population = settings.population || defaults.population;\n    if (settings.population.length <= 0)\n      throw Error(\n        'population must be an array and contain at least 1 phenotypes'\n      );\n\n    settings.populationSize =\n      settings.populationSize || defaults.populationSize;\n    if (settings.populationSize <= 0)\n      throw Error('populationSize must be greater than 0');\n\n    return settings;\n  }\n\n  var settings = settingWithDefaults(options, settingDefaults());\n\n  function populate() {\n    var size = settings.population.length;\n    while (settings.population.length < settings.populationSize) {\n      const rand = Math.floor(Math.random() * size);\n      settings.population.push(\n        mutate(cloneJSON(settings.population[Math.floor(rand)]))\n      );\n    }\n  }\n\n  function cloneJSON(object) {\n    return JSON.parse(JSON.stringify(object));\n  }\n\n  function mutate(phenotype) {\n    return settings.mutationFunction(cloneJSON(phenotype));\n  }\n\n  function crossover(phenotype) {\n    phenotype = cloneJSON(phenotype);\n    var mate =\n      settings.population[\n        Math.floor(Math.random() * settings.population.length)\n      ];\n    mate = cloneJSON(mate);\n    return settings.crossoverFunction(phenotype, mate)[0];\n  }\n\n  function doesABeatB(a, b) {\n    if (settings.doesABeatBFunction) {\n      return settings.doesABeatBFunction(a, b);\n    } else {\n      return settings.fitnessFunction(a) >= settings.fitnessFunction(b);\n    }\n  }\n\n  function compete() {\n    var nextGeneration = [];\n\n    for (var p = 0; p < settings.population.length - 1; p += 2) {\n      var phenotype = settings.population[p];\n      var competitor = settings.population[p + 1];\n\n      nextGeneration.push(phenotype);\n      if (doesABeatB(phenotype, competitor)) {\n        if (Math.random() < 0.5) {\n          nextGeneration.push(mutate(phenotype));\n        } else {\n          nextGeneration.push(crossover(phenotype));\n        }\n      } else {\n        nextGeneration.push(competitor);\n      }\n    }\n\n    settings.population = nextGeneration;\n  }\n\n  function randomizePopulationOrder() {\n    for (var index = 0; index < settings.population.length; index++) {\n      var otherIndex = Math.floor(Math.random() * settings.population.length);\n      var temp = settings.population[otherIndex];\n      settings.population[otherIndex] = settings.population[index];\n      settings.population[index] = temp;\n    }\n  }\n\n  return {\n    evolve: function (options) {\n      if (options) {\n        settings = settingWithDefaults(options, settings);\n      }\n\n      populate();\n      randomizePopulationOrder();\n      compete();\n      return this;\n    },\n    best: function () {\n      var scored = this.scoredPopulation();\n      var result = scored.reduce(function (a, b) {\n        return a.score >= b.score ? a : b;\n      }, scored[0]).phenotype;\n      return cloneJSON(result);\n    },\n    bestScore: function () {\n      return settings.fitnessFunction(this.best());\n    },\n    population: function () {\n      return cloneJSON(this.config().population);\n    },\n    scoredPopulation: function () {\n      return this.population().map(function (phenotype) {\n        return {\n          phenotype: cloneJSON(phenotype),\n          score: settings.fitnessFunction(phenotype),\n        };\n      });\n    },\n    config: function () {\n      return cloneJSON(settings);\n    },\n    clone: function (options) {\n      return geneticAlgorithmConstructor(\n        settingWithDefaults(\n          options,\n          settingWithDefaults(this.config(), settings)\n        )\n      );\n    },\n  };\n}\n","import GeneticAlgorithmConstructor, {\n  GeneticAlgorithmConfig,\n  ScoredPhenotype,\n} from '../geneticalgorithm/geneticalgorithm';\nimport {\n  handlePlayerEffect,\n  initialState,\n  makeGameNew,\n  playerActions,\n  previousState,\n  setSelected,\n} from './playGame';\nimport Chance from 'chance';\nimport {\n  Enemies,\n  EnemiesStats,\n  EnemyInfo,\n  MonsterTarget,\n  Play,\n  Player,\n  Seed,\n} from './types';\nimport { build } from './data';\nimport { Seq } from 'immutable';\nimport { rangeArr } from './zFunDump';\nimport { playerStatsDefault } from './makeGame';\n\nexport type TinkererOptions = typeof defaultTinkererOptions & {\n  turns?: number;\n};\n\nexport const defaultTinkererOptions = {\n  playerSeed: 'Miau',\n  weights: { monster: 0.7, player: 0.125, turn: 0.1, stamina: 0.075 },\n  debug: false,\n};\n\nexport function findBestPlay(\n  play: Play,\n  iter: number,\n  optionsOverride?: Partial<TinkererOptions>\n): ScoredPhenotype<Play>[] {\n  const options: TinkererOptions = {\n    ...defaultTinkererOptions,\n    ...optionsOverride,\n  };\n  const rand = new Chance(options.playerSeed);\n  const config: GeneticAlgorithmConfig<Play> = {\n    mutationFunction: (oldPlay) => {\n      const latestState = previousState(oldPlay);\n      const monsterHealth = latestState.enemies.reduce(\n        (acc, monster) => acc + monster.hp.current,\n        0\n      );\n      const playerHealth = latestState.player.hp.current;\n      if (playerHealth === 0 || monsterHealth === 0) {\n        return oldPlay;\n      }\n      let newPlay = oldPlay;\n      while (\n        rand.d6() === 6 ||\n        (previousState(newPlay).enemies[previousState(newPlay).target]?.hp ??\n          0) <= 0\n      ) {\n        newPlay = setSelected(\n          newPlay,\n          rand.natural({\n            min: 0,\n            max: previousState(newPlay).enemies.length - 1,\n          }) as MonsterTarget\n        );\n      }\n      const latest = previousState(newPlay);\n      const actions = playerActions(play.player, latest.inventory);\n      const unavailable = actions\n        .map((a, idx) => [a, idx] as const)\n        .filter(([a, _]) => a.stamina > latest.player.stamina.current)\n        .map(([_, idx]) => idx);\n      newPlay = handlePlayerEffect(\n        newPlay,\n        rand.natural({ min: 0, max: actions.length - 1, exclude: unavailable })\n      );\n      return newPlay;\n    },\n    fitnessFunction: (play) => {\n      const latestState = previousState(play);\n      const monsterHealth = latestState.enemies.reduce(\n        (acc, monster) => acc + monster.hp.current,\n        0\n      );\n      const startState = initialState(play);\n      const playerHealth = latestState.player.hp.current;\n      const playerStamina = latestState.player.stamina.current;\n      const startPlayerHealth = startState.player.hp.max;\n      const startPlayerStamina = startState.player.stamina.max;\n      const startMonsterHealth = startState.enemies.reduce(\n        (acc, monster) => acc + monster.hp.current,\n        0\n      );\n\n      const monsterKillingFitness =\n        (startMonsterHealth - monsterHealth) / startMonsterHealth;\n      const playerAlivenessFitness = playerHealth / startPlayerHealth;\n      const killSpeedFitness = (play.turns - play.states.length) / play.turns;\n      const staminaFitness = playerStamina / startPlayerStamina;\n\n      const fitness =\n        monsterKillingFitness * options.weights.monster +\n        playerAlivenessFitness * options.weights.player +\n        killSpeedFitness * options.weights.turn +\n        staminaFitness * options.weights.stamina;\n      if (options.debug) {\n        console.log(\n          `MH: ${monsterHealth} | PH: ${playerHealth} | TR: ${\n            play.states.length\n          }\\nFitness: ${fitness} | MF: ${monsterKillingFitness} | PF: ${playerAlivenessFitness} | SF: ${staminaFitness} | TF: ${killSpeedFitness}\\nWeights: ${JSON.stringify(\n            options.weights\n          )}`\n        );\n      }\n      return fitness;\n    },\n    population: rangeArr(iter).map((_) => play),\n    populationSize: iter,\n  };\n\n  const turns = optionsOverride?.turns ?? play.turns;\n  let gen = new GeneticAlgorithmConstructor<Play>(config);\n  for (let i = 0; i < turns; i++) {\n    gen = gen.evolve();\n  }\n  return Seq(gen.scoredPopulation())\n    .sortBy((a) => 1000 / a.score)\n    .toArray();\n}\n\nexport const findBestBuild = (\n  players: Player[],\n  enemies: [Seed, EnemyInfo[]][],\n  iter: number,\n  gameIter: number,\n  populationTotal?: number,\n  optionsOverride?: Partial<TinkererOptions>\n): ScoredPhenotype<Player>[] => {\n  const options: TinkererOptions = {\n    ...defaultTinkererOptions,\n    ...optionsOverride,\n  };\n  const rng = new Chance(options.playerSeed);\n  const config: GeneticAlgorithmConfig<Player> = {\n    mutationFunction: (player: Player) => {\n      const toChange = rng.pickone(\n        Object.keys(player.build)\n      ) as keyof typeof build;\n      return {\n        ...player,\n        build: {\n          ...player.build,\n          [toChange]: rng.pickone(build[toChange]),\n        },\n      };\n    },\n    fitnessFunction: (player: Player) =>\n      Seq(enemies)\n        .flatMap((g) =>\n          Seq(\n            findBestPlay(\n              makeGameNew(\n                player,\n                playerStatsDefault,\n                g[1].map((a) => a[0]) as Enemies,\n                g[1].map((a) => a[1]) as EnemiesStats,\n                optionsOverride?.turns ?? 50,\n                g[0]\n              ),\n              gameIter,\n              optionsOverride\n            )\n          ).take(2)\n        )\n        .reduce((acc, v) => acc + v.score, 0),\n    population: players,\n    populationSize: populationTotal ?? players.length,\n  };\n\n  let gen = new GeneticAlgorithmConstructor<Player>(config);\n  for (let i = 0; i < iter; i++) {\n    gen = gen.evolve();\n  }\n\n  return Seq(gen.scoredPopulation())\n    .sortBy((a) => 1000 / a.score)\n    .toArray();\n};\n","import React from 'react';\nimport { Card, Button, OverlayTrigger, Popover } from 'react-bootstrap';\nimport { Enemy, Effect, EnemyStats } from '../game/types';\nimport { Seq } from 'immutable';\n\nconst skillPercents = (effects: Effect[]) =>\n  Seq(effects)\n    .countBy((e) => e.display)\n    .toArray()\n    .map(([display, v], idx) => {\n      const { range, priority, tooltip } = effects.find(\n        (a) => a.display === display\n      )!!;\n      return (\n        <OverlayTrigger\n          key={idx}\n          placement=\"right\"\n          delay={{ show: 100, hide: 250 }}\n          overlay={\n            <Popover>\n              <Popover.Header as=\"h3\">{display}</Popover.Header>\n              <Popover.Body>\n                {tooltip}\n                <br />\n                ⏱:{priority}\n                <br />\n                🏹:\n                {range.length === 5\n                  ? 'Any'\n                  : range.length === 0\n                  ? 'None'\n                  : range.map((a) => a + 1).join(', ')}\n              </Popover.Body>\n            </Popover>\n          }\n        >\n          <>\n            [{((v / effects.length) * 100).toFixed(2)}%] {display}\n            <br key={idx} />\n          </>\n        </OverlayTrigger>\n      );\n    });\n\nconst EnemyCard: React.FC<{\n  enemy: Enemy;\n  enemyStats: EnemyStats;\n  latestAttack: string | undefined;\n  isSelected?: boolean;\n  onSelect: () => void;\n  canAct: boolean;\n  hotkey: string;\n}> = ({\n  enemy,\n  enemyStats,\n  isSelected,\n  onSelect,\n  latestAttack,\n  canAct,\n  hotkey,\n}) => (\n  <Card bg={isSelected ? 'info' : undefined}>\n    <Card.Body>\n      <Card.Title>\n        {enemy.lore.name} {enemyStats.hp.current > 0 ? '' : <b>💀DEAD💀</b>}\n      </Card.Title>\n      <Card.Text>\n        ❤:{enemyStats.hp.current} 🏹:{enemyStats.distance + 1}\n      </Card.Text>\n      <Card.Text>\n        Attack {enemyStats.attack.current}\n        <br />\n        Defence {enemyStats.defence.current}\n        <br />\n        Speed {enemyStats.speed.current}\n      </Card.Text>\n      {enemyStats.status.bleed.turns > 0 && (\n        <Card.Text>{enemyStats.status.bleed.turns} 🩸</Card.Text>\n      )}\n      {latestAttack && <Card.Text>Latest attack: {latestAttack}</Card.Text>}\n      <Card.Text>\n        Next attack prediction:\n        <br />\n        {skillPercents(\n          enemy.rolls[enemyStats.distance].map((idx) => enemy.effects[idx])\n        )}\n        <br />\n      </Card.Text>\n      {canAct && (\n        <Button disabled={isSelected} onClick={onSelect}>\n          [<i>{hotkey.toUpperCase()}</i>] Select\n        </Button>\n      )}\n    </Card.Body>\n  </Card>\n);\n\nexport default EnemyCard;\n","import React from 'react';\nimport {\n  Card,\n  Button,\n  Stack,\n  ToggleButton,\n  ButtonGroup,\n  Popover,\n  OverlayTrigger,\n} from 'react-bootstrap';\nimport {\n  DisabledSkills,\n  InventoryStats,\n  Player,\n  PlayerStats,\n  safeEntries,\n} from '../game/types';\nimport { Set } from 'immutable';\nimport { clamp } from '../game/zFunDump';\nimport { playerActions } from '../game/playGame';\n\nconst PlayerCard: React.FC<{\n  selectedButtons: Set<string>;\n  player: Player;\n  playerStats: PlayerStats;\n  inventoryStats: InventoryStats;\n  canAct: boolean;\n  lastAction: string | undefined;\n  onClickEffect: (index: number) => void;\n  disabledSkills: DisabledSkills;\n  setDisabledSkills: (skills: DisabledSkills) => void;\n}> = ({\n  selectedButtons,\n  player,\n  playerStats,\n  inventoryStats,\n  onClickEffect,\n  canAct,\n  lastAction,\n  disabledSkills,\n  setDisabledSkills,\n}) => {\n  const passives = safeEntries(player.build).map(\n    ([k, e]) => [k, e, [...(e.bot ?? []), ...(e.eot ?? [])]] as const\n  );\n\n  const hasPassives = passives.reduce(\n    (acc, [k, e, passives]) => passives.length > 0,\n    false\n  );\n  return (\n    <Card>\n      <Card.Body>\n        <Card.Title>\n          {player.lore.name}\n          {playerStats.hp.current > 0 ? '' : <b> 💀DEAD💀 </b>}\n        </Card.Title>\n        <Card.Subtitle className=\"mb-2 text-muted\">\n          {player.build.class.display}\n        </Card.Subtitle>\n        <Card.Text>\n          Attack {playerStats.attack.current} | Defence{' '}\n          {playerStats.defence.current} | Speed {playerStats.speed.current}\n        </Card.Text>\n        <Card.Text>\n          {playerStats.hp.current}/{playerStats.hp.max} ❤\n        </Card.Text>\n        <Card.Text>\n          {playerStats.stamina.current}/{playerStats.stamina.max} 💪 (\n          {playerStats.staminaPerTurn.current >= 0 && '+'}\n          {playerStats.staminaPerTurn.current})\n        </Card.Text>\n        {playerStats.status.bleed.turns > 0 && (\n          <Card.Text>{playerStats.status.bleed.turns} 🩸</Card.Text>\n        )}\n        {lastAction && <Card.Text>Last action: {lastAction}</Card.Text>}\n      </Card.Body>\n      {canAct && hasPassives && (\n        <>\n          <b>Passives</b>\n          <ButtonGroup>\n            {passives.map(\n              ([k, e, passives], idx) =>\n                passives.length > 0 && (\n                  <OverlayTrigger\n                    key={idx}\n                    placement=\"right\"\n                    delay={{ show: 100, hide: 250 }}\n                    overlay={\n                      <Popover>\n                        <Popover.Header as=\"h3\">{e.display}</Popover.Header>\n                        <Popover.Body>{e.tooltip}</Popover.Body>\n                      </Popover>\n                    }\n                  >\n                    <ToggleButton\n                      checked={!Set(disabledSkills).has(k)}\n                      value={k}\n                      id={`passive-skill-${k}`}\n                      type=\"checkbox\"\n                      variant=\"outline-primary\"\n                      onChange={(event) =>\n                        setDisabledSkills(\n                          event.currentTarget.checked\n                            ? Set(disabledSkills).delete(k).toArray()\n                            : Set(disabledSkills).add(k).toArray()\n                        )\n                      }\n                    >\n                      {e.display}\n                    </ToggleButton>\n                  </OverlayTrigger>\n                )\n            )}\n          </ButtonGroup>\n        </>\n      )}\n      {canAct && (\n        <Card.Body>\n          <Stack direction=\"horizontal\" gap={2}>\n            {playerActions(player, inventoryStats).map((e, idx) => (\n              <OverlayTrigger\n                key={e.display}\n                placement=\"top\"\n                delay={{ show: 100, hide: 250 }}\n                overlay={\n                  <Popover>\n                    <Popover.Header as=\"h3\">{e.display}</Popover.Header>\n                    <Popover.Body>{e.tooltip}</Popover.Body>\n                  </Popover>\n                }\n              >\n                <div>\n                  <Button\n                    active={selectedButtons.has(e.display)}\n                    disabled={playerStats.stamina.current < e.stamina}\n                    onClick={(_) => onClickEffect(idx)}\n                  >\n                    [<i>{idx + 1}</i>] <b>{e.display}</b>\n                  </Button>\n                  <br />\n                  <Card.Text>\n                    💪:{e.stamina} ⏱:\n                    {clamp(e.priority - playerStats.speed.current, 0, 4)}\n                    <br />\n                    🏹:\n                    {e.range.length === 5\n                      ? 'Any'\n                      : e.range.map((a) => a + 1).join(', ')}\n                  </Card.Text>\n                </div>\n              </OverlayTrigger>\n            ))}\n          </Stack>\n        </Card.Body>\n      )}\n    </Card>\n  );\n};\n\nexport default PlayerCard;\n","import { Container, Row, Col, Card, Modal, ButtonGroup } from 'react-bootstrap';\n\nimport { DisabledSkills, MonsterTarget, Play } from '../game/types';\n\nimport EnemyCard from './Enemy';\nimport PlayerCard from './Player';\nimport usePressedKeys from '../hooks/usePressedKeys';\nimport { playerActions } from '../game/playGame';\nimport { Seq, Set } from 'immutable';\nimport { previousState } from '../game/playGame';\nimport { Button } from 'react-bootstrap';\nimport saveAs from 'file-saver';\nimport { useCallback, useEffect, useState } from 'react';\nimport { globals, updateGlobals } from '../game/modding';\nimport { useForceRerender } from '../hooks/useForceRerender';\n\nexport type GameProps = {\n  game: Play;\n  setSelected: (target: MonsterTarget) => void;\n  setDisabledSkills: (disabled: DisabledSkills) => void;\n  handlePlayerEffect: (index: number) => void;\n  solveGame: (iterations: number) => void;\n  hint: (iterations: number) => void;\n  timeTravel: { undo: () => void; redo: (() => void) | undefined } | undefined;\n  onMenu: () => void;\n};\n\nconst monsterHotkeys = ['q', 'w', 'e', 'r', 't', 'y'];\n\nconst Game = ({\n  handlePlayerEffect,\n  setSelected,\n  setDisabledSkills,\n  game,\n  solveGame,\n  timeTravel,\n  hint,\n  onMenu,\n}: GameProps): JSX.Element => {\n  const { player, enemies } = game;\n  const {\n    player: playerStats,\n    enemies: enemiesStats,\n    target,\n    lastAttacks,\n    disabledSkills,\n    inventory: inventoryStats,\n  } = previousState(game);\n  const [isLogShown, setShowLog] = useState(false);\n  const forceUpdate = useForceRerender();\n\n  useEffect(() => {\n    updateGlobals({ ingame: { game, forceUpdate } });\n    return () => updateGlobals({ ingame: undefined });\n  }, [game, forceUpdate]);\n\n  const handleCloseLog = () => setShowLog(false);\n  const handleShowLog = () => setShowLog(true);\n\n  const playerSkills = playerActions(player, inventoryStats);\n  const monsterHealth = enemiesStats.reduce((acc, m) => m.hp.current + acc, 0);\n  const isPlayerAlive = playerStats.hp.current > 0;\n  const areMonstersAlive = monsterHealth > 0;\n  const endGame = game.states.length < game.turns;\n  const canAct = isPlayerAlive && areMonstersAlive && endGame;\n\n  const pressed = usePressedKeys((key) => {\n    if (!canAct) return;\n    const valNum = parseInt(key);\n    if (valNum > 0 && valNum <= playerSkills.length) {\n      const hasStamina =\n        playerSkills[valNum - 1].stamina <= playerStats.stamina.current;\n      if (!hasStamina) return;\n      handlePlayerEffect(valNum - 1);\n    }\n\n    if (key === 'Escape') {\n      onMenu();\n    }\n    if (key === 'h') {\n      hint(100);\n    }\n\n    if (key === 'l') {\n      setShowLog(!isLogShown);\n    }\n\n    if (key === 's') {\n      save();\n    }\n\n    if (key === 'a' && game.states.length > 1 && timeTravel) {\n      timeTravel.undo();\n    }\n    if (key === 'd' && timeTravel && timeTravel.redo != null) {\n      timeTravel.redo();\n    }\n\n    if (key === monsterHotkeys[0] && enemies.length > 0) {\n      setSelected(0 as MonsterTarget);\n    }\n    if (key === monsterHotkeys[1] && enemies.length > 1) {\n      setSelected(1 as MonsterTarget);\n    }\n    if (key === monsterHotkeys[2] && enemies.length > 2) {\n      setSelected(2 as MonsterTarget);\n    }\n    if (key === monsterHotkeys[3] && enemies.length > 3) {\n      setSelected(3 as MonsterTarget);\n    }\n    if (key === monsterHotkeys[4] && enemies.length > 4) {\n      setSelected(4 as MonsterTarget);\n    }\n  });\n\n  const selectedButtons = Set<string>(\n    [...pressed].flatMap((key: string) => {\n      const valNum = parseInt(key);\n      if (valNum > 0 && valNum <= playerSkills.length) {\n        return [playerSkills[valNum - 1].display];\n      } else {\n        return [];\n      }\n    })\n  );\n\n  const save = useCallback(() => {\n    const blob = new Blob([JSON.stringify(game)], {\n      type: 'application/json;charset=utf-8',\n    });\n    saveAs(blob, `buildmancer-${Date.now()}.json`);\n  }, [game]);\n\n  return (\n    <>\n      <Container fluid>\n        <Row className=\"justify-content-center align-items-flex-start\">\n          <Col sm={12} md={8}>\n            <Button onClick={onMenu}>\n              [<i>Esc</i>] MAIN MENU\n            </Button>\n            <Card.Title>\n              {!isPlayerAlive ? (\n                <b>❌❌DEFEAT❌❌</b>\n              ) : !areMonstersAlive ? (\n                <b>🎉🎉VICTORY🎉🎉</b>\n              ) : (\n                ''\n              )}{' '}\n              Turn {game.states.length} out of {game.turns}\n            </Card.Title>\n            <PlayerCard\n              player={player}\n              playerStats={playerStats}\n              inventoryStats={inventoryStats}\n              disabledSkills={disabledSkills}\n              setDisabledSkills={setDisabledSkills}\n              onClickEffect={(idx) => handlePlayerEffect(idx)}\n              selectedButtons={selectedButtons}\n              lastAction={\n                lastAttacks\n                  .filter((a) => a.origin === 'Player' && a.phase === 'MAIN')\n                  .map((a) => `${a.display}`)\n                  .join(' -> ') ?? undefined\n              }\n              canAct={canAct}\n            />\n            {timeTravel != null && (\n              <Row>\n                <ButtonGroup>\n                  {game.states.length > 1 && (\n                    <Button onClick={(_) => timeTravel.undo()}>\n                      [<i>A</i>] Undo ↩\n                    </Button>\n                  )}\n                  {timeTravel.redo && (\n                    <Button onClick={(_) => timeTravel.redo!!()}>\n                      [<i>D</i>] Redo ↪\n                    </Button>\n                  )}\n                </ButtonGroup>\n              </Row>\n            )}\n            <Row>\n              <ButtonGroup>\n                <Button onClick={(_) => hint(100)}>\n                  <i>[H]</i> Hint\n                </Button>\n              </ButtonGroup>\n            </Row>\n            <Row>\n              {Seq(enemies)\n                .zip(Seq(enemiesStats))\n                .map(([enemy, stats], idx) => (\n                  <Col key={idx} xs={6} md={4}>\n                    <EnemyCard\n                      key={idx}\n                      enemyStats={stats}\n                      enemy={enemy}\n                      canAct={canAct}\n                      latestAttack={\n                        Seq(lastAttacks)\n                          .filter(\n                            ({ origin, phase }) =>\n                              origin === idx && phase === 'MAIN'\n                          )\n                          .map((a) => `${a.display}`)\n                          .join(' -> ') ?? undefined\n                      }\n                      isSelected={idx === target}\n                      onSelect={() => setSelected(idx as MonsterTarget)}\n                      hotkey={monsterHotkeys[idx]}\n                    />\n                  </Col>\n                ))}\n            </Row>\n            <Card.Title>Debug</Card.Title>\n            <Row>\n              <ButtonGroup>\n                <Button onClick={handleShowLog}>\n                  [<i>L</i>] Log 🗒\n                </Button>\n                <Button onClick={save}>\n                  [<i>S</i>] Dump to file 📂\n                </Button>\n              </ButtonGroup>\n            </Row>\n            <Card.Title>Cheats</Card.Title>\n            <Row>\n              <ButtonGroup>\n                <Button onClick={(_) => solveGame(100)}>Solve ⌛</Button>\n                <Button onClick={(_) => solveGame(1000)}>\n                  Solve thoroughly ⌛⌛⌛\n                </Button>\n              </ButtonGroup>\n            </Row>\n          </Col>\n        </Row>\n      </Container>\n      <Modal\n        show={isLogShown}\n        onHide={handleCloseLog}\n        scrollable={true}\n        centered={true}\n      >\n        <Modal.Header closeButton>\n          <Modal.Title>Game Log</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          {game.states.map((s, idx) => (\n            <div key={idx}>\n              <b>Turn {idx}</b>\n              <br />\n              Player: {JSON.stringify(s.player, null, 2)}\n              <br />\n              Enemies: {JSON.stringify(s.enemies, null, 2)}\n              <br />\n              Inventory?: {JSON.stringify(s.inventory, null, 2)}\n              <br />\n              Target [{s.target}]<br />\n              Bot?: {JSON.stringify(s.bot, null, 2)}\n              <br />\n              Eot?: {JSON.stringify(s.eot, null, 2)}\n              <br />\n              Actions:\n              <br />\n              {s.lastAttacks.map((a, idx) => (\n                <div key={idx}>\n                  {'-->'} {JSON.stringify(a, null, 2)}\n                  <br />\n                </div>\n              ))}\n            </div>\n          ))}\n        </Modal.Body>\n        <Modal.Footer>\n          <Button variant=\"primary\" onClick={handleCloseLog}>\n            Close\n          </Button>\n        </Modal.Footer>\n      </Modal>\n    </>\n  );\n};\n\nexport default Game;\n","import React from 'react';\n\nexport function useForceRerender() {\n  const [value, setValue] = React.useState(false);\n  return () => setValue(!value);\n}\n","import { useEffect, useCallback, useState } from 'react';\n\nexport default function usePressedKeys(onUp: (e: string) => void): Set<string> {\n  const [pressedKeys, updatePressedKeys] = useState(new Set<string>());\n\n  const downHandler = ({ key }: { key: string }) => {\n    updatePressedKeys((set) => new Set([...set, key]));\n  };\n\n  const upHandler = useCallback(\n    ({ key }: { key: string }) => {\n      updatePressedKeys((set) => new Set([...set].filter((k) => k !== key)));\n      onUp(key);\n    },\n    [onUp]\n  );\n\n  useEffect(() => {\n    window.addEventListener('keydown', downHandler);\n    window.addEventListener('keyup', upHandler);\n\n    return () => {\n      window.removeEventListener('keydown', downHandler);\n      window.removeEventListener('keyup', upHandler);\n    };\n  }, [upHandler]);\n\n  return pressedKeys;\n}\n","import { Seq } from 'immutable';\nimport React from 'react';\nimport { findBestPlay } from '../../game/tinkerer';\nimport { initialState, previousState } from '../../game/playGame';\nimport {\n  PlayState,\n  playState,\n  setSelected,\n  setDisabledSkills,\n  handlePlayerEffect,\n} from '../../game/playGame';\nimport { Play, Snapshot } from '../../game/types';\nimport Game from '../Game';\n\nconst SingleGame = ({\n  play,\n  timeTravel,\n  onGameEnd,\n  onMenu,\n}: {\n  play: Play;\n  timeTravel: boolean;\n  onGameEnd: (state: PlayState, play: Play) => void;\n  onMenu: () => void;\n}) => {\n  const [game, setGame] = React.useState<Play>(play);\n  const [redo, setRedo] = React.useState<Snapshot[]>([]);\n\n  React.useEffect(() => {\n    setGame(play);\n  }, [play]);\n\n  React.useEffect(() => {\n    const gameState = playState(game);\n    const hasEnded = gameState !== 'playing';\n    if (hasEnded) {\n      onGameEnd(gameState, game);\n    }\n  }, [game]);\n\n  const timeTravelObj = timeTravel\n    ? {\n        redo:\n          redo.length > 0\n            ? () => {\n                const newRedo = [...redo];\n                const latest = newRedo.pop() as Snapshot;\n                setRedo(newRedo);\n                setGame({ ...game, states: [...game.states, latest] });\n              }\n            : undefined,\n        undo: () => {\n          setRedo([...redo, previousState(game)]);\n          setGame({\n            ...game,\n            states: [initialState(game), ...game.states.slice(1, -1)],\n          });\n        },\n      }\n    : undefined;\n\n  return (\n    <Game\n      game={game}\n      timeTravel={timeTravelObj}\n      onMenu={onMenu}\n      setSelected={(idx) => {\n        setRedo([]);\n        setGame(setSelected(game, idx));\n      }}\n      setDisabledSkills={(disabled) => {\n        setRedo([]);\n        setGame(setDisabledSkills(game, disabled));\n      }}\n      handlePlayerEffect={(idx) => {\n        setRedo([]);\n        setGame(handlePlayerEffect(game, idx));\n      }}\n      solveGame={(iterations) =>\n        setGame(\n          Seq(\n            findBestPlay(game, iterations, {\n              turns: game.turns - game.states.length,\n            })\n          ).maxBy((a) => a.score)!!.phenotype\n        )\n      }\n      hint={(iterations) =>\n        setGame({\n          ...game,\n          states: [\n            ...game.states,\n            Seq(\n              findBestPlay(game, iterations, {\n                turns: game.turns - game.states.length,\n              })\n            ).maxBy((a) => a.score)!!.phenotype.states[game.states.length],\n          ],\n        })\n      }\n    />\n  );\n};\n\nexport default SingleGame;\n","import React from 'react';\nimport { Form, Col, Row, Alert, Button, Container } from 'react-bootstrap';\nimport { Play } from '../../game/types';\nimport { playSchema } from '../../game/typesSchemas';\n\nconst LoadScreen = ({\n  onLoad,\n  onMenu,\n}: {\n  onLoad: (g: Play) => void;\n  onMenu: () => void;\n}) => {\n  const [loadError, setLoadError] = React.useState<string | undefined>();\n  const load = (data: string) => {\n    try {\n      const playRaw = JSON.parse(data);\n      try {\n        // FIXME update schema\n        //playSchema.parse(playRaw);\n        onLoad(playRaw as Play);\n      } catch (e) {\n        setLoadError('Failed to Load - Invalid Data');\n      }\n    } catch (e) {\n      setLoadError('Failed to Load - Bad Data');\n    }\n  };\n  const onFormSubmit = (e: any) => {\n    e.preventDefault();\n    if (e.target?.fileData?.files[0] != null) {\n      const reader = new FileReader();\n      reader.onloadend = (ev: ProgressEvent<FileReader>) => {\n        const result = ev.target?.result as string | undefined;\n        if (result != null) {\n          load(result);\n        } else {\n          setLoadError('Failed to read file');\n        }\n      };\n      reader.readAsText(e.target.fileData.files[0]);\n    } else if (\n      e.target?.rawData?.value != null &&\n      e.target?.rawData?.value != ''\n    ) {\n      load(e.target.rawData.value);\n    }\n  };\n  return (\n    <Form onSubmit={onFormSubmit}>\n      <Container fluid>\n        <Col>\n          <Row>\n            {loadError && (\n              <>\n                <Alert variant={'danger'}>{loadError}</Alert>\n                <br />\n                <br />\n              </>\n            )}\n          </Row>\n          <Row>\n            <Form.Group>\n              <Form.Label>Load File</Form.Label>\n              <Form.Control type=\"file\" name=\"fileData\" accept=\".json\" />\n              <Form.Text muted>Select the file to load</Form.Text>\n            </Form.Group>\n          </Row>\n          <br />\n          <Row>\n            <Form.Group>\n              <Form.Label>Load</Form.Label>\n              <Form.Control\n                name=\"rawData\"\n                as=\"textarea\"\n                rows={3}\n                placeholder=\"Save Data\"\n              />\n              <Form.Text muted>Paste the text of your savegame here</Form.Text>\n            </Form.Group>\n          </Row>\n          <br />\n          <Button variant=\"primary\" type=\"submit\">\n            Load\n          </Button>\n        </Col>\n        <br />\n        <Button onClick={onMenu}>MAIN MENU</Button>\n      </Container>\n    </Form>\n  );\n};\n\nexport default LoadScreen;\n","import './App.css';\n// import { readString } from \"react-papaparse\";\nimport {\n  Snapshot,\n  Play,\n  EnemyStats,\n  Enemy,\n  EnemiesStats,\n  Enemies,\n} from './game/types';\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport PlayerBuilder from './components/PlayerBuilder';\nimport EncounterBuilder from './components/EncounterBuilder';\nimport {\n  initialState,\n  makeGameNew,\n  makeGameNextLevel,\n  PlayState,\n  previousState,\n} from './game/playGame';\nimport { dummyEnemy, randomEnemy, randomPlayer } from './game/makeGame';\nimport { useMachine } from '@xstate/react';\nimport { gameMenuMachine } from './stateMachines/menuStateMachine';\nimport Menu from './components/menus/Menu';\nimport SingleGame from './components/menus/SingleGame';\nimport LoadScreen from './components/menus/LoadScreen';\n\nfunction App() {\n  const [state, send] = useMachine(gameMenuMachine, { devTools: true });\n  const event = state.event;\n  const onMenu = () => {\n    send('MENU');\n  };\n\n  switch (true) {\n    case state.matches('main'):\n      return (\n        <Menu\n          title={'Main Menu'}\n          states={Object.keys(gameMenuMachine.states.main.on)}\n          onClick={send}\n        />\n      );\n    // QUICK\n    case state.matches({ quick: 'play' }): {\n      const player = randomPlayer();\n      const encounter = randomEnemy();\n      return (\n        <SingleGame\n          play={makeGameNew(\n            player[0],\n            player[1],\n            [encounter[0]],\n            [encounter[1]],\n            50,\n            state.context.singleContext.seed\n          )}\n          onMenu={onMenu}\n          timeTravel={true}\n          onGameEnd={(result, game) => {\n            send(result === 'win' ? 'WIN' : 'LOSE', { result, game });\n          }}\n        />\n      );\n    }\n    case state.matches({ quick: 'win' }):\n    case state.matches({ quick: 'lose' }):\n      return (\n        <Menu\n          title={`${event.result} in ${event.game.states.length - 1} turns`}\n          states={['MENU']}\n          onClick={send}\n        />\n      );\n    // SINGLE\n    case state.matches({ single: 'player' }):\n      return (\n        <PlayerBuilder\n          onSave={(player, playerStats) => {\n            send('PLAYER', { player: [player, playerStats] });\n          }}\n        />\n      );\n    case state.matches({ single: 'encounter' }):\n      return (\n        <EncounterBuilder\n          player={event.player[0]}\n          onSave={(enemies, enemiesStats) => {\n            send('ENCOUNTER', {\n              encounter: [enemies, enemiesStats],\n              player: event.player,\n            });\n          }}\n        />\n      );\n    case state.matches({ single: 'play' }): {\n      return (\n        <SingleGame\n          play={makeGameNew(\n            event.player[0],\n            event.player[1],\n            event.encounter[0],\n            event.encounter[1],\n            50,\n            state.context.singleContext.seed\n          )}\n          onMenu={onMenu}\n          timeTravel={true}\n          onGameEnd={(result, game) => {\n            send(result === 'win' ? 'WIN' : 'LOSE', { result, game });\n          }}\n        />\n      );\n    }\n    case state.matches({ single: 'win' }):\n    case state.matches({ single: 'lose' }):\n      return (\n        <Menu\n          title={`${event.result} in ${event.game.states.length - 1} turns`}\n          states={['MENU']}\n          onClick={send}\n        />\n      );\n    // TRAINING\n    case state.matches({ training: 'player' }):\n      return (\n        <PlayerBuilder\n          onSave={(player, playerStats) => {\n            send('PLAYER', { player: [player, playerStats] });\n          }}\n        />\n      );\n    case state.matches({ training: 'play' }): {\n      const player = randomPlayer();\n      const encounter = dummyEnemy();\n      return (\n        <SingleGame\n          play={makeGameNew(\n            player[0],\n            player[1],\n            [encounter[0]],\n            [encounter[1]],\n            50,\n            state.context.singleContext.seed\n          )}\n          onMenu={onMenu}\n          timeTravel={true}\n          onGameEnd={(result, game) => {\n            send(result === 'win' ? 'WIN' : 'LOSE', { result, game });\n          }}\n        />\n      );\n    }\n    case state.matches({ training: 'win' }):\n    case state.matches({ training: 'lose' }):\n      return (\n        <Menu\n          title={`You have dealt a lot of damage! Well done 💯`}\n          states={['MENU']}\n          onClick={send}\n        />\n      );\n    // ARCADE\n    case state.matches({ arcade: 'player' }): {\n      const encounter = randomEnemy();\n      return (\n        <PlayerBuilder\n          onSave={(player, playerStats) => {\n            send('PLAYER', {\n              game: makeGameNew(\n                player,\n                playerStats,\n                [encounter[0]],\n                [encounter[1]],\n                50,\n                state.context.survivalContext.seed\n              ),\n            });\n          }}\n        />\n      );\n    }\n    case state.matches({ arcade: 'play' }): {\n      return (\n        <SingleGame\n          play={event.game}\n          timeTravel={false}\n          onMenu={onMenu}\n          onGameEnd={(result: PlayState, game: Play) => {\n            let encounter = [[], []] as [Enemy[], EnemyStats[]];\n            if (state.context.arcadeContext.victories >= 0) {\n              const otherEnemy = randomEnemy();\n              encounter = [\n                [...encounter[0], otherEnemy[0]],\n                [...encounter[1], otherEnemy[1]],\n              ];\n            }\n            if (state.context.arcadeContext.victories >= 2) {\n              const otherEnemy = randomEnemy();\n              encounter = [\n                [...encounter[0], otherEnemy[0]],\n                [...encounter[1], otherEnemy[1]],\n              ];\n            }\n            if (state.context.arcadeContext.victories >= 5) {\n              const otherEnemy = randomEnemy();\n              encounter = [\n                [...encounter[0], otherEnemy[0]],\n                [...encounter[1], otherEnemy[1]],\n              ];\n            }\n            const firstState: Snapshot = initialState(game);\n            send(result === 'win' ? 'WIN' : 'LOSE', {\n              result,\n              game: makeGameNextLevel(\n                game.player,\n                firstState.player,\n                encounter[0] as Enemies,\n                encounter[1] as EnemiesStats,\n                {},\n                50,\n                state.context.survivalContext.seed\n              ),\n            });\n          }}\n        />\n      );\n    }\n    case state.matches({ arcade: 'victory' }): {\n      return (\n        <Menu\n          title={`🎉🎉VICTORY!🎉🎉 Final score: ${state.context.arcadeContext.score}`}\n          states={['MENU']}\n          onClick={send}\n        />\n      );\n    }\n    case state.matches({ arcade: 'defeat' }): {\n      return (\n        <Menu\n          title={`Failed after ${state.context.arcadeContext.victories} victories`}\n          states={['MENU']}\n          onClick={send}\n        />\n      );\n    }\n    // SURVIVAL\n    case state.matches({ survival: 'player' }): {\n      const encounter = randomEnemy();\n      return (\n        <PlayerBuilder\n          onSave={(player, playerStats) => {\n            send('PLAYER', {\n              game: makeGameNew(\n                player,\n                playerStats,\n                [encounter[0]],\n                [encounter[1]],\n                50,\n                state.context.survivalContext.seed\n              ),\n            });\n          }}\n        />\n      );\n    }\n    case state.matches({ survival: 'play' }): {\n      return (\n        <SingleGame\n          play={event.game}\n          onMenu={onMenu}\n          timeTravel={false}\n          onGameEnd={(result, game) => {\n            const encounter = randomEnemy();\n            const lastState: Snapshot = previousState(game);\n            send(result === 'win' ? 'WIN' : 'LOSE', {\n              result,\n              game: makeGameNextLevel(\n                game.player,\n                lastState.player,\n                [encounter[0]],\n                [encounter[1]],\n                lastState.inventory,\n                50,\n                state.context.survivalContext.seed\n              ),\n            });\n          }}\n        />\n      );\n    }\n    case state.matches({ survival: 'defeat' }): {\n      return (\n        <Menu\n          title={`Completed after ${state.context.survivalContext.victories} victories`}\n          states={['MENU']}\n          onClick={send}\n        />\n      );\n    }\n    // LOAD\n    case state.matches({ load: 'load' }): {\n      return (\n        <LoadScreen onLoad={(game) => send('LOAD', { game })} onMenu={onMenu} />\n      );\n    }\n    case state.matches({ load: 'play' }): {\n      return (\n        <SingleGame\n          play={event.game}\n          onMenu={onMenu}\n          timeTravel={true}\n          onGameEnd={(result, game) => {\n            send(result === 'win' ? 'WIN' : 'LOSE', { result, game });\n          }}\n        />\n      );\n    }\n    case state.matches({ load: 'win' }):\n    case state.matches({ load: 'lose' }):\n      return (\n        <Menu\n          title={`${event.result} in ${event.game.states.length - 1} turns`}\n          states={['MENU']}\n          onClick={send}\n        />\n      );\n    default:\n      return <>{JSON.stringify(state.value)}</>;\n  }\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport { createRoot } from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorkerRegistration from './serviceWorkerRegistration';\nimport reportWebVitals from './reportWebVitals';\n\nconst container = document.getElementById('root');\nconst root = createRoot(container!);\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://cra.link/PWA\nserviceWorkerRegistration.register();\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","import { Opaque } from 'type-fest';\nimport { enemies } from './data';\nimport { allRanges, makeStat } from './makeGame';\nimport { updateGlobals } from './modding';\nimport {\n  callEffectFun,\n  Effect,\n  effectFunCall,\n  EffectTarget,\n  Enemies,\n  EnemiesStats,\n  Enemy,\n  EnemyStats,\n  FunIndex,\n  MonsterStatParameter,\n  MonsterTarget,\n  Play,\n  PlayerStats,\n  Snapshot,\n  StatEffectTarget,\n  Status,\n  Target,\n} from './types';\nimport { clamp, pipe } from './zFunDump';\n\n// #region Effect funs\n\nexport function extractFunction({ effects }: Effect): ReduceFun {\n  return (origin, play, startState) =>\n    effects.reduce(\n      (acc, { index, parameters }) =>\n        callEffectFun(effectFunRepo, index, parameters)(origin, ...acc),\n      [play, startState]\n    );\n}\n\nconst effectFun = <T>(fun: ParametrizedFun<T>): EffectFun<T> =>\n  ((params) => (origin, play, oldState) =>\n    fun(params)(origin, play, oldState)) as EffectFun<T>;\n\nconst applyPoison = (\n  play: Play,\n  currentState: Snapshot,\n  { target, turns }: ReduceFunctionT['Reduce:PoisonBOT']\n) =>\n  pipe(\n    target === 'Player'\n      ? actions.changeStatPlayer(currentState, ({ hp }) => ({\n          hp: { ...hp, current: Math.max(0, hp.current - 1) },\n        }))\n      : actions.changeStatMonster(\n          currentState,\n          currentState.target,\n          ({ hp }) => ({ hp: { ...hp, current: Math.max(0, hp.current - 1) } })\n        ),\n    (newState) =>\n      turns > 0\n        ? actions.addBotEffect(newState, 'Player', {\n            display: `Poison ${\n              target === 'Player'\n                ? 'Player'\n                : play.enemies[target]!!.lore.name + '[' + (target + 1)\n            } + \"]\"`,\n            tooltip: '',\n            range: allRanges,\n            priority: 4,\n            dodgeable: false,\n            effects: [\n              effectFunCall([\n                'Reduce:PoisonBOT',\n                { target: target, turns: turns - 1 },\n              ]),\n            ],\n          })\n        : newState\n  );\n\ntype SystemFunctionT = {\n  'Utility:Cleanup': undefined;\n  'Debug:GGWP': undefined;\n  'Debug:Sudoku': undefined;\n};\ntype BasicFunctionT = {\n  'Basic:Rest': undefined;\n  'Basic:Move': { amount: number };\n  'Basic:Attack': { amount: number };\n  'Basic:Stamina': { amount: number };\n  'Basic:HP': { amount: number };\n};\n\ntype StatusFunctionT = {\n  'Effect:Poison': { target: EffectTarget; turns: number };\n  'Effect:Dodge': undefined;\n  'Effect:Armor': { amount: number };\n  'Effect:Stun': undefined;\n  'Effect:Bleed': { target: EffectTarget; turns: number };\n  'Effect:Stat': StatEffectTarget;\n};\n\ntype MonsterFunctionT = {\n  'Monster:Summon': { enemy: number };\n  'Monster:Dead': undefined;\n  'Monster:Attack': { amount: number };\n  'Monster:Move': { amount: number };\n};\ntype ItemFunctionT = {\n  'Wand:MagicBolt': undefined;\n  'BootsOfFlight:EOT': undefined;\n};\ntype ReduceFunctionT = {\n  'Reduce:PoisonBOT': { target: Target; turns: number };\n};\n\nconst engineFunctions = {\n  'Debug:GGWP': effectFun(() => (_, play, currentState) => [\n    play,\n    {\n      ...currentState,\n      enemies: currentState.enemies.map((m) => ({\n        ...m,\n        hp: { ...m.hp, current: 0 },\n      })) as EnemiesStats,\n    },\n  ]),\n  'Debug:Sudoku': effectFun(() => (_, play, currentState) => [\n    play,\n    {\n      ...currentState,\n      player: {\n        ...currentState.player,\n        hp: { ...currentState.player.hp, current: 0 },\n      },\n    },\n  ]),\n  'Utility:Cleanup': effectFun(() => (_origin, play, currentState) => [\n    play,\n    pipe(\n      actions.changeStatusPlayer(currentState, (o) => ({\n        ...o,\n        armor: { amount: 0 },\n        bleed: { turns: Math.max(o.bleed.turns - 1, 0) },\n        dodge: { active: false },\n        stun: { active: false },\n      })),\n      (newState) =>\n        newState.enemies.reduce(\n          (acc, v, idx) =>\n            actions.changeStatusMonster(acc, idx as MonsterTarget, (o) => ({\n              ...o,\n              armor: { amount: 0 },\n              bleed: { turns: Math.max(o.bleed.turns - 1, 0) },\n              dodge: { active: false },\n              stun: { active: false },\n            })),\n          currentState\n        )\n    ),\n  ]),\n};\n\nconst effectFunRepo: EffectFunctionRepository = {\n  ...engineFunctions,\n  // #region BASIC\n  'Basic:Rest': effectFun(() => (_origin, play, currentState) => [\n    play,\n    currentState,\n  ]),\n  'Basic:Move': effectFun(({ amount }) => (_origin, play, currentState) => [\n    play,\n    actions.changeDistance(currentState, currentState.target, amount),\n  ]),\n  'Basic:Attack': effectFun(({ amount }) => (_origin, play, currentState) => [\n    play,\n    actions.attackMonster(currentState, currentState.target, amount),\n  ]),\n  'Basic:Stamina': effectFun(({ amount }) => (_origin, play, currentState) => [\n    play,\n    actions.modifyPlayerStamina(currentState, amount),\n  ]),\n  'Basic:HP': effectFun(({ amount }) => (_origin, play, currentState) => [\n    play,\n    actions.changeStatPlayer(currentState, ({ hp }) => ({\n      hp: { ...hp, current: clamp(hp.current + amount, 0, hp.max) },\n    })),\n  ]),\n  // #endregion BASIC\n  // #region EFFECTS\n  'Effect:Dodge': effectFun(() => (origin, play, currentState) => [\n    play,\n    origin === 'Player'\n      ? actions.changeStatusPlayer(currentState, (o) => ({\n          ...o,\n          dodge: { active: true },\n        }))\n      : actions.changeStatusMonster(currentState, currentState.target, (o) => ({\n          ...o,\n          dodge: { active: true },\n        })),\n  ]),\n  'Effect:Armor': effectFun(({ amount }) => (origin, play, currentState) => [\n    play,\n    origin === 'Player'\n      ? actions.changeStatusPlayer(currentState, (o) => ({\n          ...o,\n          armor: { amount: o.armor.amount + amount },\n        }))\n      : actions.changeStatusMonster(currentState, currentState.target, (o) => ({\n          ...o,\n          armor: { amount: o.armor.amount + amount },\n        })),\n  ]),\n  'Effect:Stun': effectFun(() => (origin, play, currentState) => [\n    play,\n    origin === 'Player'\n      ? actions.changeStatusMonster(currentState, currentState.target, (o) => ({\n          ...o,\n          stun: { active: true },\n        }))\n      : actions.changeStatusPlayer(currentState, (o) => ({\n          ...o,\n          stun: { active: true },\n        })),\n  ]),\n  'Effect:Bleed': effectFun(({ target, turns }) => (_, play, currentState) => [\n    play,\n    target === 'Player'\n      ? actions.changeStatusPlayer(currentState, (o) => ({\n          ...o,\n          bleed: { turns: o.bleed.turns + turns },\n        }))\n      : actions.changeStatusMonster(currentState, currentState.target, (o) => ({\n          ...o,\n          bleed: { turns: o.bleed.turns + turns },\n        })),\n  ]),\n  'Effect:Poison': effectFun(({ target, turns }) => (_, play, currentState) => [\n    play,\n    pipe(\n      target === 'Player' ? ('Player' as Target) : currentState.target,\n      (gameTarget) =>\n        applyPoison(play, currentState, { target: gameTarget, turns })\n    ),\n  ]),\n  'Reduce:PoisonBOT': effectFun((params) => (_, play, currentState) => [\n    play,\n    applyPoison(play, currentState, params),\n  ]),\n  'Effect:Stat': effectFun((stats) => (origin, play, currentState) => [\n    play,\n    stats.target === 'Player'\n      ? actions.changeStatPlayer(currentState, (s) => ({\n          hp: {\n            ...s.hp,\n            current: clamp(s.hp.current + (stats.hp ?? 0), 0, s.hp.max),\n          },\n          stamina: {\n            ...s.stamina,\n            current: clamp(\n              s.stamina.current + (stats.stamina ?? 0),\n              0,\n              s.stamina.max\n            ),\n          },\n          speed: {\n            ...s.speed,\n            current: Math.min(\n              s.speed.max,\n              s.speed.current + (stats.speed ?? 0)\n            ),\n          },\n          defence: {\n            ...s.defence,\n            current: Math.min(\n              s.defence.max,\n              s.defence.current + (stats.defence ?? 0)\n            ),\n          },\n          attack: {\n            ...s.attack,\n            current: Math.min(\n              s.attack.max,\n              s.attack.current + (stats.attack ?? 0)\n            ),\n          },\n          staminaPerTurn: {\n            ...s.staminaPerTurn,\n            current: Math.min(\n              s.staminaPerTurn.max,\n              s.staminaPerTurn.current + (stats.staminaPerTurn ?? 0)\n            ),\n          },\n        }))\n      : actions.changeStatMonster(\n          currentState,\n          origin === 'Player' ? currentState.target : origin,\n          (s) => ({\n            hp: {\n              ...s.hp,\n              current: clamp(s.hp.current + (stats.hp ?? 0), 0, s.hp.max),\n            },\n            speed: {\n              ...s.speed,\n              current: Math.min(\n                s.speed.current + (stats.speed ?? 0),\n                s.speed.max\n              ),\n            },\n            defence: {\n              ...s.defence,\n              current: Math.min(\n                s.defence.current + (stats.defence ?? 0),\n                s.defence.max\n              ),\n            },\n            attack: {\n              ...s.attack,\n              current: Math.min(\n                s.attack.current + (stats.attack ?? 0),\n                s.attack.max\n              ),\n            },\n          })\n        ),\n  ]),\n  // #endregion EFFECTS\n  // #region MONSTERS\n  'Monster:Attack': effectFun(({ amount }) => (_origin, play, currentState) => [\n    play,\n    actions.attackPlayer(currentState, amount),\n  ]),\n  'Monster:Summon': effectFun(\n    ({ enemy }) =>\n      (_origin, play, currentState) =>\n        actions.addEnemy(\n          play,\n          currentState,\n          enemies[enemy][0],\n          enemies[enemy][1]\n        )\n  ),\n  'Monster:Dead': effectFun(() => (_origin, play, currentState) => [\n    play,\n    currentState,\n  ]),\n  'Monster:Move': effectFun(() => (origin, play, currentState) => [\n    play,\n    actions.changeDistance(currentState, origin, -2),\n  ]),\n  // #endregion MONSTERS\n  // #region ITEMS\n  'BootsOfFlight:EOT': effectFun(() => (_, play, currentState) => [\n    play,\n    currentState.enemies.reduce(\n      (s, _m, idx) => actions.changeDistance(s, idx as MonsterTarget, 2),\n      currentState\n    ),\n  ]),\n  'Wand:MagicBolt': effectFun(() => (_, play, currentState) => {\n    let state = currentState;\n    while (state.player.stamina.current) {\n      state = actions.modifyPlayerStamina(state, -2);\n      state = actions.attackMonster(state, currentState.target, 1);\n    }\n    return [play, state];\n  }),\n  // #endregion ITEMS\n};\n\nexport type EffectFunctionT = SystemFunctionT &\n  BasicFunctionT &\n  StatusFunctionT &\n  ReduceFunctionT &\n  MonsterFunctionT &\n  ItemFunctionT;\n\nexport type ReduceFun = (\n  origin: Target,\n  play: Play,\n  newState: Snapshot\n) => [Play, Snapshot];\nexport type ParametrizedFun<T> = (params: T) => ReduceFun;\nexport type EffectFun<T> = Opaque<ParametrizedFun<T>, ParametrizedFun<T>>;\n\nexport type EffectFunctionRepository = {\n  [k in keyof EffectFunctionT]: (params: EffectFunctionT[k]) => ReduceFun;\n};\nexport type EffectFunRepoIndex = keyof EffectFunctionT & FunIndex;\nexport type EffectFunParams<T extends EffectFunRepoIndex> = Parameters<\n  EffectFunctionRepository[T]\n>[0];\n\n// #endregion\n// #region Modify state\n\nconst updateMonster = (\n  enemies: EnemiesStats,\n  target: Target,\n  override: (stats: EnemyStats) => Partial<EnemyStats>\n): EnemiesStats =>\n  enemies.map((m, idx) =>\n    idx === target ? { ...m, ...override(m) } : m\n  ) as EnemiesStats;\n\nconst updatePlayer = (\n  curr: Snapshot,\n  override: (player: PlayerStats) => Partial<PlayerStats>\n): Snapshot => {\n  return {\n    ...curr,\n    player: { ...curr.player, ...override(curr.player) },\n  };\n};\n\nconst updatePlayerStat = <T extends keyof PlayerStats>(\n  curr: Snapshot,\n  key: T,\n  modify: (player: PlayerStats[T]) => Partial<PlayerStats[T]>\n): Snapshot => {\n  const player = curr.player;\n  player[key] = {\n    ...player[key],\n    ...modify(player[key]),\n  };\n  return {\n    ...curr,\n    player,\n  };\n};\n\nconst actions = {\n  attackPlayer,\n  attackMonster,\n  changeStatPlayer: updatePlayer,\n  changeStatMonster: (\n    curr: Snapshot,\n    target: MonsterTarget,\n    f: (stats: EnemyStats) => Partial<EnemyStats>\n  ): Snapshot => ({\n    ...curr,\n    enemies: updateMonster(curr.enemies, target, f),\n  }),\n  changeStatusPlayer: (\n    curr: Snapshot,\n    updateStatus: (oldStatus: Status) => Status\n  ): Snapshot => ({\n    ...curr,\n    player: { ...curr.player, status: updateStatus(curr.player.status) },\n  }),\n  changeStatusMonster: (\n    curr: Snapshot,\n    target: MonsterTarget,\n    updateStatus: (oldStatus: Status) => Status\n  ): Snapshot => ({\n    ...curr,\n    enemies: updateMonster(curr.enemies, target, ({ status }) => ({\n      status: updateStatus(status),\n    })),\n  }),\n  changeDistance: (\n    curr: Snapshot,\n    origin: Target,\n    amount: number\n  ): Snapshot => ({\n    ...curr,\n    enemies: updateMonster(curr.enemies, origin, ({ distance }) => ({\n      distance: clamp(distance + amount, 0, 4) as MonsterTarget,\n    })),\n  }),\n  removeMonster: (\n    currPlay: Play,\n    currSnap: Snapshot,\n    target: MonsterTarget\n  ): [Play, Snapshot] => [\n    {\n      ...currPlay,\n      enemies: currPlay.enemies.filter((_, idx) => idx === target) as Enemies,\n    },\n    {\n      ...currSnap,\n      target: 0,\n      enemies: currSnap.enemies.filter(\n        (_, idx) => idx === target\n      ) as EnemiesStats,\n    },\n  ],\n  modifyPlayerStamina: (curr: Snapshot, amount: number): Snapshot =>\n    updatePlayerStat(curr, 'stamina', (stamina) => ({\n      current: clamp(stamina.current + amount, 0, stamina.max),\n    })),\n  addEotEffect: (curr: Snapshot, origin: Target, effect: Effect): Snapshot => ({\n    ...curr,\n    eot: [...(curr.eot ?? []), [origin, effect]],\n  }),\n  addBotEffect: (curr: Snapshot, origin: Target, effect: Effect): Snapshot => ({\n    ...curr,\n    bot: [...(curr.eot ?? []), [origin, effect]],\n  }),\n  addEnemy: (\n    play: Play,\n    curr: Snapshot,\n    enemy: Enemy,\n    enemyStats: EnemyStats\n  ): [Play, Snapshot] => {\n    return play.enemies.length < 5\n      ? [\n          {\n            ...play,\n            enemies: [...play.enemies, enemy] as Enemies,\n          },\n          {\n            ...curr,\n            enemies: [...curr.enemies, enemyStats] as EnemiesStats,\n          },\n        ]\n      : [play, curr];\n  },\n};\n\nfunction attackMonster(\n  curr: Snapshot,\n  target: MonsterTarget,\n  amount: number\n): Snapshot {\n  const monster = curr.enemies[target]!!;\n  const armor = monster.status.armor.amount;\n  const damage = amount + curr.player.attack.current;\n  const afterDefence = Math.max(damage - monster.defence.current, 0);\n  const afterArmor = Math.max(afterDefence - armor, 0);\n  const armorSpent = armor - (afterDefence - afterArmor);\n  const afterBleed = afterArmor + (monster.status.bleed.turns > 0 ? 1 : 0);\n  return {\n    ...curr,\n    enemies: updateMonster(curr.enemies, target, ({ status, hp }) => ({\n      hp: { max: hp.max, current: clamp(hp.current - afterBleed, 0, hp.max) },\n      status: { ...status, armor: { amount: armorSpent } },\n    })),\n  };\n}\n\nfunction attackPlayer(curr: Snapshot, amount: number): Snapshot {\n  const armor = curr.player.status.armor.amount;\n  const damage = amount + curr.player.attack.current;\n  const afterDefence = Math.max(damage - curr.player.defence.current, 0);\n  const afterArmor = Math.max(afterDefence - armor, 0);\n  const armorSpent = armor - (afterDefence - afterArmor);\n  const afterBleed = afterArmor + (curr.player.status.bleed.turns > 0 ? 1 : 0);\n  return updatePlayer(curr, ({ hp, status }) => ({\n    hp: { max: hp.max, current: clamp(hp.current - afterBleed, 0, hp.max) },\n    status: { ...status, armor: { amount: status.armor.amount - armorSpent } },\n  }));\n}\n\n// #endregion\n// #region Stat funs\n\nexport type StatsFunIndex = keyof typeof statsRepository;\nexport const statsRepository = {\n  '+Health': (\n    player: PlayerStats,\n    enemies: EnemiesStats\n  ): [PlayerStats, EnemiesStats] => [\n    { ...player, hp: makeStat(player.hp.current + 3) },\n    enemies,\n  ],\n  '+StaPerTurn': (\n    player: PlayerStats,\n    enemies: EnemiesStats\n  ): [PlayerStats, EnemiesStats] => [\n    { ...player, staminaPerTurn: makeStat(player.staminaPerTurn.current + 1) },\n    enemies,\n  ],\n  '+Stamina': (\n    player: PlayerStats,\n    enemies: EnemiesStats\n  ): [PlayerStats, EnemiesStats] => [\n    { ...player, stamina: makeStat(player.stamina.current + 2) },\n    enemies,\n  ],\n  '+Attack': (\n    player: PlayerStats,\n    enemies: EnemiesStats\n  ): [PlayerStats, EnemiesStats] => [\n    { ...player, attack: makeStat(player.attack.current + 1) },\n    enemies,\n  ],\n  '+Speed': (\n    player: PlayerStats,\n    enemies: EnemiesStats\n  ): [PlayerStats, EnemiesStats] => [\n    { ...player, speed: makeStat(player.speed.current + 1) },\n    enemies,\n  ],\n  '+Defence': (\n    player: PlayerStats,\n    enemies: EnemiesStats\n  ): [PlayerStats, EnemiesStats] => [\n    { ...player, defence: makeStat(player.defence.current + 1) },\n    enemies,\n  ],\n\n  '-Health': (\n    player: PlayerStats,\n    enemies: EnemiesStats\n  ): [PlayerStats, EnemiesStats] => [\n    { ...player, hp: makeStat(player.hp.current - 3) },\n    enemies,\n  ],\n  '-StaPerTurn': (\n    player: PlayerStats,\n    enemies: EnemiesStats\n  ): [PlayerStats, EnemiesStats] => [\n    { ...player, staminaPerTurn: makeStat(player.staminaPerTurn.current - 1) },\n    enemies,\n  ],\n  '-Stamina': (\n    player: PlayerStats,\n    enemies: EnemiesStats\n  ): [PlayerStats, EnemiesStats] => [\n    { ...player, stamina: makeStat(player.stamina.current - 2) },\n    enemies,\n  ],\n  '-Attack': (\n    player: PlayerStats,\n    enemies: EnemiesStats\n  ): [PlayerStats, EnemiesStats] => [\n    { ...player, attack: makeStat(player.attack.current - 1) },\n    enemies,\n  ],\n  '-Speed': (\n    player: PlayerStats,\n    enemies: EnemiesStats\n  ): [PlayerStats, EnemiesStats] => [\n    { ...player, speed: makeStat(player.speed.current - 1) },\n    enemies,\n  ],\n  '-Defence': (\n    player: PlayerStats,\n    enemies: EnemiesStats\n  ): [PlayerStats, EnemiesStats] => [\n    { ...player, defence: makeStat(player.defence.current - 1) },\n    enemies,\n  ],\n};\n\n// #endregion\n\nupdateGlobals({ effects: effectFunRepo });\n","import {\n  Enemies,\n  Player,\n  Snapshot,\n  MonsterTarget,\n  Target,\n  InventoryEffect,\n  EnemiesStats,\n  PlayerStats,\n  Play,\n  RNG,\n  StatsFun,\n  Effect,\n  PlayerTarget,\n  effectFunCall,\n  DisabledSkills,\n  safeEntries,\n  EffectPhase,\n  InventoryStats,\n  Seed,\n} from './types';\nimport { Seq, Set } from 'immutable';\nimport { Chance } from 'chance';\n// @ts-ignore fails on scripts despite having a d.ts file\nimport { toIndexableString } from 'pouchdb-collate';\nimport { extractFunction, statsRepository } from './effectRepository';\nimport { clamp, rangeArr } from './zFunDump';\nimport { allRanges } from './makeGame';\n\nexport const initialState = (play: Play): Snapshot => play.states[0];\nexport const previousState = (play: Play): Snapshot =>\n  play.states[play.states.length - 1];\n\n/**\n * @returns min inclusive, max exclusive rand\n */\nfunction turnDeterministicRng(\n  turns: number,\n  randPerTurn: number,\n  monsterSeed: Seed\n): RNG {\n  const monsterChance = new Chance(monsterSeed);\n  const monsterRng = rangeArr(turns).map((_) =>\n    rangeArr(randPerTurn)\n      // If max === 1, the rng function fails\n      .map((_) => monsterChance.floating({ min: 0, max: 0.9999, fixed: 4 }))\n  );\n  return monsterRng as RNG;\n}\n\nexport const turnRng = (\n  play: Play,\n  turn: number\n): ((min: number, max: number) => number) => {\n  const turnRng = [...play.rng[turn]];\n  return (min: number, max: number) =>\n    Math.floor((max - min) * turnRng.pop()!! + min);\n};\n\nexport const playerPassives = (player: Player): StatsFun[] =>\n  safeEntries(player.build)\n    .flatMap(([_k, s]) => s.passives ?? [])\n    .map((i) => statsRepository[i]);\n\nexport const playerActions = (\n  player: Player,\n  inventoryStats: InventoryStats\n): InventoryEffect[] =>\n  safeEntries(player.build)\n    .flatMap(([_k, i]) => i.effects ?? [])\n    .filter((e) => (e.amount ?? 999) > (inventoryStats[e.display]?.used ?? 0));\n\nconst enemiesBotEffects = (enemies: Enemies): [MonsterTarget, Effect][] =>\n  enemies\n    .flatMap((e, idx) =>\n      (e.bot ?? []).map((eff) => [idx as MonsterTarget, eff] as const)\n    )\n    // Sure, typescript\n    .map((a) => [...a]);\n\nconst enemiesEotEffects = (enemies: Enemies): [MonsterTarget, Effect][] =>\n  enemies\n    .flatMap((e, idx) =>\n      (e.eot ?? []).map((eff) => [idx as MonsterTarget, eff] as const)\n    )\n    // Sure, typescript\n    .map((a) => [...a]);\n\nexport const playerBotEffects = (\n  player: Player,\n  d: DisabledSkills\n): [PlayerTarget, Effect][] =>\n  safeEntries(player.build)\n    .flatMap(([k, s]) => (!Set(d).has(k) ? s.bot ?? [] : []))\n    .map((a) => ['Player', a]);\n\nexport const playerEotEffects = (\n  player: Player,\n  d: DisabledSkills\n): [PlayerTarget, Effect][] =>\n  safeEntries(player.build)\n    .flatMap(([k, s]) => (!Set(d).has(k) ? s.eot ?? [] : []))\n    .map((a) => ['Player', a]);\n\nexport const buildPlayer = (\n  player: Player,\n  playerStats: PlayerStats,\n  enemiesStats: EnemiesStats\n): [PlayerStats, EnemiesStats] =>\n  playerPassives(player).reduce(\n    ([p, e], fun) => fun(p, e),\n    [playerStats, enemiesStats]\n  );\n\nexport function makeGameNew(\n  player: Player,\n  playerStats: PlayerStats,\n  enemies: Enemies,\n  enemiesStats: EnemiesStats,\n  turns: number,\n  seed: number | string,\n  randPerTurn: number = 20\n): Play {\n  const [playerGameStats, enemyGameStats] = buildPlayer(\n    player,\n    playerStats,\n    enemiesStats\n  );\n  return makeGameNextLevel(\n    player,\n    playerGameStats,\n    enemies,\n    enemyGameStats,\n    {},\n    turns,\n    seed,\n    randPerTurn\n  );\n}\n\nexport function makeGameNextLevel(\n  player: Player,\n  playerStats: PlayerStats,\n  enemies: Enemies,\n  enemiesStats: EnemiesStats,\n  inventoryStats: InventoryStats,\n  turns: number,\n  seed: number | string,\n  randPerTurn: number = 20\n): Play {\n  return {\n    player,\n    enemies,\n    states: [\n      {\n        player: playerStats,\n        enemies: enemiesStats,\n        inventory: inventoryStats,\n        target: 0,\n        lastAttacks: [],\n        disabledSkills: [],\n      },\n    ],\n    rng: turnDeterministicRng(turns, randPerTurn, seed),\n    turns,\n    id: toIndexableString([player, enemies, turns, seed]),\n    seed,\n    version: '1',\n  };\n}\n\nconst reduceFuns = (\n  funs: [Target, Effect][],\n  p: Play,\n  s: Snapshot,\n  phase: EffectPhase\n): [Play, Snapshot] =>\n  Seq(funs)\n    .sortBy(([origin, a]) => {\n      if (a == null) {\n        throw new Error(\n          `Error in ${phase} by ${\n            origin === 'Player' ? 'Player' : p.enemies[origin]?.lore.name\n          }`\n        );\n      }\n      const priorityBonus =\n        origin === 'Player'\n          ? s.player.speed.current\n          : s.enemies[origin]!!.speed.current;\n      return clamp(a.priority - priorityBonus, 0, 4);\n    })\n    .reduce(\n      (acc, value) => {\n        const [origin, effect] = value;\n        const [oldPlay, oldState] = acc;\n        const monsterId = origin === 'Player' ? oldState.target : origin;\n        const targetMonster = oldState.enemies[monsterId]!!;\n\n        const isDeadAttackingMonster =\n          origin !== 'Player' && targetMonster.hp.current <= 0;\n        if (isDeadAttackingMonster) {\n          const newState: Snapshot = {\n            ...oldState,\n            lastAttacks: [\n              ...oldState.lastAttacks,\n              { origin, display: `💀💀DEAD💀💀 ${effect.display}`, phase },\n            ],\n          };\n          return [oldPlay, newState];\n        }\n\n        const isStunnedPlayer =\n          origin === 'Player' && oldState.player.status.stun.active;\n        const isStunnedMonster =\n          origin !== 'Player' && targetMonster.status.stun.active;\n        const isStunned = isStunnedPlayer || isStunnedMonster;\n        if (isStunned) {\n          const newState: Snapshot = {\n            ...oldState,\n            lastAttacks: [\n              ...oldState.lastAttacks,\n              { origin, display: `💫💫STUNNED💫💫 ${effect.display}`, phase },\n            ],\n          };\n          return [oldPlay, newState];\n        }\n\n        const isInRange = Set([...effect.range]).has(targetMonster.distance);\n        if (!isInRange) {\n          const newState: Snapshot = {\n            ...oldState,\n            lastAttacks: [\n              ...oldState.lastAttacks,\n              { origin, display: `❌❌WHIFFED❌❌ ${effect.display}`, phase },\n            ],\n          };\n          return [oldPlay, newState];\n        }\n\n        const monsterDodged =\n          effect.dodgeable &&\n          origin === 'Player' &&\n          targetMonster.status.dodge.active;\n        if (monsterDodged) {\n          const newState: Snapshot = {\n            ...oldState,\n            enemies: oldState.enemies.map((e, i) =>\n              i === monsterId\n                ? { ...e, status: { ...e.status, dodge: { active: false } } }\n                : e\n            ) as EnemiesStats,\n            lastAttacks: [\n              ...oldState.lastAttacks,\n              { origin, display: `💨💨DODGED💨💨 ${effect.display}`, phase },\n            ],\n          };\n          return [oldPlay, newState];\n        }\n\n        const playerDodged =\n          effect.dodgeable &&\n          origin !== 'Player' &&\n          oldState.player.status.dodge.active;\n        if (playerDodged) {\n          const newState: Snapshot = {\n            ...oldState,\n            player: {\n              ...oldState.player,\n              status: { ...oldState.player.status, dodge: { active: false } },\n            },\n            lastAttacks: [\n              ...oldState.lastAttacks,\n              { origin, display: `💨💨DODGED💨💨 ${effect.display}`, phase },\n            ],\n          };\n          return [oldPlay, newState];\n        }\n\n        const [newPlay, newState] = extractFunction(effect)(\n          origin,\n          oldPlay,\n          oldState\n        );\n        const finalState: Snapshot = {\n          ...newState,\n          lastAttacks: [\n            ...newState.lastAttacks,\n            { origin, display: effect.display, phase },\n          ],\n        };\n        return [newPlay, finalState];\n      },\n      [p, s]\n    );\n\nconst applyEffectStamina = (amount: number): Effect => ({\n  display: `${amount >= 0 ? '+' : ''}${amount} 💪`,\n  tooltip: `Use ${amount} stamina`,\n  effects: [effectFunCall(['Basic:Stamina', { amount }])],\n  range: allRanges,\n  priority: 0,\n  dodgeable: false,\n});\n\nconst effectEotCleanup: Effect = {\n  display: 'Cleanup',\n  tooltip: 'Cleanup',\n  effects: [effectFunCall('Utility:Cleanup')],\n  range: allRanges,\n  priority: 0,\n  dodgeable: false,\n};\n\nconst effectDead: Effect = {\n  display: '⚰',\n  tooltip: '⚰',\n  priority: 4,\n  effects: [effectFunCall('Monster:Dead')],\n  range: allRanges,\n  dodgeable: false,\n};\n\nexport const handlePlayerEffect = (play: Play, index: number): Play => {\n  const lastTurnState = previousState(play);\n  const usedSkill = playerActions(play.player, lastTurnState.inventory)[index];\n  const bot = lastTurnState.bot ?? [];\n  const eot = lastTurnState.eot ?? [];\n\n  const initialState: Snapshot = {\n    ...lastTurnState,\n    lastAttacks: [],\n    bot: undefined,\n    eot: undefined,\n    inventory: {\n      ...lastTurnState.inventory,\n      [usedSkill.display]: {\n        used: 1 + (lastTurnState.inventory[usedSkill.display]?.used ?? 0),\n      },\n    },\n  };\n\n  // Stamina\n  const [preBotPlay, preBotState] = reduceFuns(\n    [\n      [\n        'Player',\n        applyEffectStamina(\n          lastTurnState.player.staminaPerTurn.current - usedSkill.stamina\n        ),\n      ],\n    ],\n    play,\n    initialState,\n    'MAIN'\n  );\n\n  // BOT\n  // Lingering effects\n  const [postBotPlay, postBotState] = reduceFuns(\n    bot,\n    preBotPlay,\n    preBotState,\n    'BOT'\n  );\n  // Player & Monster effects\n  const entitiesBot: [Target, Effect][] = [\n    ...playerBotEffects(postBotPlay.player, postBotState.disabledSkills),\n    ...enemiesBotEffects(postBotPlay.enemies),\n  ];\n  const [postEntitiesBotPlay, postEntitiesBotState] = reduceFuns(\n    entitiesBot,\n    postBotPlay,\n    postBotState,\n    'BOT'\n  );\n\n  // Turn\n  const rand = turnRng(postEntitiesBotPlay, postEntitiesBotPlay.states.length);\n  const turnFunctions: [Target, Effect][] = Seq(postEntitiesBotPlay.enemies)\n    .zip(Seq(postEntitiesBotState.enemies))\n    .map(([e, stats], idx) => {\n      if (stats.hp.current > 0) {\n        const rolls = e.rolls[stats.distance];\n        const roll = rand(0, e.rolls[stats.distance].length);\n        // if (isNaN(roll)) {\n        //   throw new Error('Out of RNG exception');\n        // }\n        const effect = e.effects[rolls[roll]];\n        // if (effect == null) {\n        //   throw new Error(`Rolled outside the table ${JSON.stringify({ roll, rolls, effects: e.effects })}`);\n        // }\n        return [idx as Target, effect] as const;\n      } else {\n        return [idx as Target, effectDead] as const;\n      }\n    })\n    .concat([['Player' as Target, usedSkill] as const])\n    .toArray()\n    // Sure, typescript\n    .map((a) => [...a]);\n\n  const [newPlay, newState] = reduceFuns(\n    turnFunctions,\n    postEntitiesBotPlay,\n    postEntitiesBotState,\n    'MAIN'\n  );\n\n  // EOT\n  // Player & Monster effects\n  const entitiesEot = [\n    ...playerEotEffects(newPlay.player, newState.disabledSkills),\n    ...enemiesEotEffects(newPlay.enemies),\n  ];\n  const [postPlayerEotPlay, postPlayerEotState] = reduceFuns(\n    entitiesEot,\n    newPlay,\n    newState,\n    'EOT'\n  );\n  // Lingering effects\n  const [postEotPlay, postEotState] = reduceFuns(\n    eot,\n    postPlayerEotPlay,\n    postPlayerEotState,\n    'EOT'\n  );\n  // Cleanup\n  const [postCleanup, postCleanupState] = reduceFuns(\n    [['Player' as Target, effectEotCleanup]],\n    postEotPlay,\n    postEotState,\n    'EOT'\n  );\n\n  const endOfTurn: Play = {\n    ...postCleanup,\n    states: [...postCleanup.states, postCleanupState],\n  };\n\n  return endOfTurn;\n};\n\nexport const setSelected = (play: Play, target: MonsterTarget): Play => {\n  play.states[play.states.length - 1].target = target;\n  return {\n    ...play,\n    states: [...play.states],\n  };\n};\n\nexport const setDisabledSkills = (\n  play: Play,\n  disabled: DisabledSkills\n): Play => {\n  play.states[play.states.length - 1].disabledSkills = disabled;\n  return {\n    ...play,\n    states: [...play.states],\n  };\n};\n\nexport type PlayState = 'win' | 'loss' | 'playing';\n\nexport const playState = (play: Play): PlayState => {\n  const state = previousState(play);\n  return state.player.hp.current <= 0\n    ? 'loss'\n    : state.enemies.reduce((acc, monster) => acc + monster.hp.current, 0) <= 0\n    ? 'win'\n    : 'playing';\n};\n\nexport const scoreGame = (play: Play): number => {\n  const firstState = initialState(play);\n  const lastState = previousState(play);\n\n  const turns = play.states.length; // 1-50\n  const hpLoss =\n    Math.max(0, firstState.player.hp.max - lastState.player.hp.current) /\n    firstState.player.hp.max; // 0-1\n  const staminaLoss =\n    Math.max(\n      0,\n      firstState.player.stamina.max - lastState.player.stamina.current\n    ) / firstState.player.hp.max; // 0-1\n  const enemies = lastState.enemies.length; // 1-5\n\n  return Math.floor(\n    enemies * (500 * hpLoss + 150 * staminaLoss + (500 - turns * 10))\n  );\n};\n","import {\n  allRanges,\n  defaultStatus,\n  makeRange,\n  makeStat,\n  selfRange,\n} from '../makeGame';\nimport { effectFunCall, EnemyRepository } from '../types';\n\nconst enemies: EnemyRepository = [\n  [\n    {\n      lore: {\n        name: 'Piripuru',\n      },\n      rolls: [[1], [1, 1, 1, 0], [1, 0], [0], [0]],\n      effects: [\n        {\n          display: 'Bounce',\n          tooltip: 'Floomp Floomp',\n          priority: 1,\n          dodgeable: false,\n          effects: [effectFunCall(['Monster:Move', { amount: -2 }])],\n          range: selfRange,\n        },\n\n        {\n          display: 'Slam',\n          tooltip: 'Throws itself at you',\n          priority: 3,\n          dodgeable: true,\n          effects: [effectFunCall(['Monster:Attack', { amount: 5 }])],\n          range: makeRange(0, 1),\n        },\n      ],\n    },\n    {\n      hp: makeStat(7),\n      distance: 4,\n      speed: makeStat(0),\n      attack: makeStat(0),\n      defence: makeStat(0),\n      status: defaultStatus,\n    },\n  ],\n\n  [\n    {\n      lore: {\n        name: 'Toros',\n        description: 'Big, mean, strong and unclean',\n      },\n      rolls: [\n        [1, 1, 1, 2, 2, 0],\n        [1, 2, 2, 2, 2, 0],\n        [2, 2, 3, 3, 4, 0],\n        [2, 3, 3, 4, 0],\n        [3, 3, 3, 4, 4, 0],\n      ],\n      effects: [\n        {\n          display: 'Rest',\n          tooltip: \"It won't be long until the massacre continues\",\n          priority: 1,\n          dodgeable: false,\n          effects: [\n            effectFunCall(['Effect:Stat', { target: 'Monster', hp: 1 }]),\n          ],\n          range: selfRange,\n        },\n\n        {\n          display: 'Chomp',\n          tooltip: 'Toro attempts to eat you for massive damage!',\n          priority: 4,\n          dodgeable: true,\n          effects: [effectFunCall(['Monster:Attack', { amount: 18 }])],\n          range: makeRange(0),\n        },\n\n        {\n          display: 'Swipe',\n          tooltip: 'High damage attack that staggers',\n          priority: 3,\n          dodgeable: true,\n          effects: [\n            effectFunCall(['Monster:Attack', { amount: 12 }]),\n            effectFunCall(['Monster:Move', { amount: -1 }]),\n            effectFunCall('Effect:Stun'),\n          ],\n          range: makeRange(0, 1, 2),\n        },\n\n        {\n          display: 'Lunge',\n          tooltip: 'Charges forward for a horn attack',\n          priority: 4,\n          dodgeable: true,\n          effects: [\n            effectFunCall(['Monster:Attack', { amount: 10 }]),\n            effectFunCall(['Monster:Move', { amount: -5 }]),\n          ],\n          range: makeRange(3, 4),\n        },\n\n        {\n          display: 'Roar',\n          tooltip: 'A terrifying howl!',\n          priority: 3,\n          dodgeable: false,\n          effects: [effectFunCall(['Basic:Stamina', { amount: -5 }])],\n          range: allRanges,\n        },\n      ],\n    },\n    {\n      hp: makeStat(38),\n      distance: 2,\n      speed: makeStat(0),\n      attack: makeStat(0),\n      defence: makeStat(0),\n      status: defaultStatus,\n    },\n  ],\n\n  [\n    {\n      lore: {\n        name: 'Mama Purupuri',\n        description: 'Mama can always call one of its little ones to help',\n      },\n      rolls: [\n        [1, 1, 1, 1, 0],\n        [1, 1, 1, 1, 2, 0],\n        [1, 1, 1, 1, 2, 0],\n        [2, 2, 0],\n        [2, 2, 0],\n      ],\n      effects: [\n        {\n          display: 'Recover',\n          tooltip: 'Mama needs its rest',\n          priority: 1,\n          dodgeable: false,\n          effects: [\n            effectFunCall(['Effect:Stat', { target: 'Monster', hp: 3 }]),\n          ],\n          range: selfRange,\n        },\n\n        {\n          display: 'Stomp',\n          tooltip: 'Quickly, out of the way!',\n          priority: 3,\n          dodgeable: true,\n          effects: [\n            effectFunCall(['Monster:Attack', { amount: 8 }]),\n            effectFunCall('Effect:Stun'),\n          ],\n          range: makeRange(0, 1),\n        },\n\n        {\n          display: 'Call for Aid',\n          tooltip: 'Calls for the litter to help',\n          priority: 3,\n          dodgeable: false,\n          effects: [\n            effectFunCall(['Monster:Summon', { enemy: 0 }]),\n            effectFunCall(['Effect:Stat', { target: 'Monster', hp: -5 }]),\n            effectFunCall(['Monster:Move', { amount: -2 }]),\n          ],\n          range: allRanges,\n        },\n      ],\n    },\n    {\n      hp: makeStat(50),\n      distance: 3,\n      speed: makeStat(0),\n      attack: makeStat(0),\n      defence: makeStat(0),\n      status: defaultStatus,\n    },\n  ],\n\n  [\n    {\n      lore: {\n        name: 'Ninkujorua',\n        description: 'Just...stay...still...for...a...second',\n      },\n      rolls: [\n        [1, 1, 1, 2, 2, 2, 0],\n        [1, 1, 1, 2, 2, 2, 0],\n        [1, 1, 2, 2, 2, 0],\n        [1, 2, 3, 0],\n        [2, 3, 0],\n      ],\n      effects: [\n        {\n          display: 'Meditate',\n          tooltip: 'And not about good vibes',\n          priority: 1,\n          dodgeable: false,\n          effects: [\n            effectFunCall(['Effect:Stat', { target: 'Monster', attack: 1 }]),\n            effectFunCall(['Monster:Move', { amount: 999 }]),\n            effectFunCall('Effect:Dodge'),\n          ],\n          range: selfRange,\n        },\n\n        {\n          display: 'Rapid Slash - Retreat!',\n          tooltip: 'Deals several strikes then moves away from the player',\n          priority: 2,\n          dodgeable: true,\n          effects: [\n            effectFunCall(['Monster:Move', { amount: -5 }]),\n            effectFunCall(['Monster:Attack', { amount: 2 }]),\n            effectFunCall(['Monster:Attack', { amount: 2 }]),\n            effectFunCall(['Monster:Attack', { amount: 2 }]),\n            effectFunCall('Effect:Dodge'),\n          ],\n          range: allRanges,\n        },\n\n        {\n          display: 'Rapid Slash - Advance!',\n          tooltip: 'Moves close to the player then deals several strikes',\n          priority: 2,\n          dodgeable: true,\n          effects: [\n            effectFunCall(['Monster:Move', { amount: -5 }]),\n            effectFunCall(['Monster:Attack', { amount: 2 }]),\n            effectFunCall(['Monster:Attack', { amount: 2 }]),\n            effectFunCall(['Monster:Attack', { amount: 2 }]),\n          ],\n          range: allRanges,\n        },\n\n        {\n          display: 'Back Spikes',\n          tooltip: 'Jumps and shoots several needles that cause bleed',\n          priority: 4,\n          dodgeable: true,\n          effects: [\n            effectFunCall(['Monster:Attack', { amount: 1 }]),\n            effectFunCall(['Monster:Attack', { amount: 1 }]),\n            effectFunCall(['Effect:Bleed', { target: 'Player', turns: 3 }]),\n          ],\n          range: makeRange(3, 4),\n        },\n      ],\n    },\n    {\n      hp: makeStat(25),\n      distance: 1,\n      speed: makeStat(0),\n      attack: makeStat(0),\n      defence: makeStat(0),\n      status: defaultStatus,\n    },\n  ],\n\n  [\n    {\n      lore: {\n        name: 'Tshopuritazios',\n        description: 'A filth bird whose stench hits a mile away',\n      },\n      rolls: [\n        [1, 1, 1, 2, 2, 2, 0],\n        [1, 1, 1, 2, 2, 2, 0],\n        [1, 1, 2, 2, 2, 0],\n        [1, 2, 3, 0],\n        [2, 3, 0],\n      ],\n      effects: [\n        {\n          display: 'Goad',\n          tooltip: \"Sounds like it's laughing at you\",\n          priority: 1,\n          dodgeable: false,\n          effects: [\n            effectFunCall([\n              'Effect:Stat',\n              { target: 'Player', defence: -1, attack: -1 },\n            ]),\n            effectFunCall(['Monster:Move', { amount: 999 }]),\n          ],\n          range: selfRange,\n        },\n\n        {\n          display: 'Peck',\n          tooltip: 'What is worse, the force or the texture?',\n          priority: 3,\n          dodgeable: true,\n          effects: [\n            effectFunCall(['Monster:Attack', { amount: 10 }]),\n            effectFunCall('Effect:Stun'),\n            effectFunCall(['Monster:Move', { amount: 2 }]),\n          ],\n          range: makeRange(0, 1),\n        },\n\n        {\n          display: 'Fling Mud',\n          tooltip: 'A large chunk coming right at you!',\n          priority: 3,\n          dodgeable: true,\n          effects: [\n            effectFunCall(['Monster:Attack', { amount: 2 }]),\n            effectFunCall(['Monster:Attack', { amount: 2 }]),\n            effectFunCall(['Monster:Attack', { amount: 8 }]),\n            effectFunCall(['Monster:Move', { amount: 1 }]),\n          ],\n          range: makeRange(1, 2, 3),\n        },\n\n        {\n          display: 'Spit Bile',\n          tooltip: 'This disgusting liquid corrodes your armor',\n          priority: 3,\n          dodgeable: true,\n          effects: [\n            effectFunCall(['Monster:Attack', { amount: 1 }]),\n            effectFunCall(['Monster:Attack', { amount: 1 }]),\n            effectFunCall(['Effect:Poison', { target: 'Player', turns: 3 }]),\n            effectFunCall(['Effect:Stat', { target: 'Player', defence: -1 }]),\n          ],\n          range: makeRange(2, 3, 4),\n        },\n      ],\n    },\n    {\n      hp: makeStat(32),\n      distance: 4,\n      speed: makeStat(0),\n      attack: makeStat(0),\n      defence: makeStat(0),\n      status: defaultStatus,\n    },\n  ],\n];\n\nexport default enemies;\n","import { makeRange, allRanges } from '../makeGame';\nimport { Item, effectFunCall } from '../types';\n\nconst weapons: Item[] = [\n  {\n    display: 'Sword',\n    tooltip: 'All-rounder',\n    effects: [\n      {\n        display: 'Slash',\n        tooltip: 'Swings at the enemy',\n        effects: [effectFunCall(['Basic:Attack', { amount: 2 }])],\n        priority: 3,\n        dodgeable: true,\n        stamina: 2,\n        range: makeRange(0, 1),\n      },\n      {\n        display: 'Pommel Hit',\n        tooltip: 'Deals a quick blow',\n        effects: [effectFunCall(['Basic:Attack', { amount: 2 }])],\n        priority: 2,\n        dodgeable: true,\n        stamina: 2,\n        range: makeRange(0),\n      },\n      {\n        display: 'Overhead Slice',\n        tooltip: 'Moves into melee and deals a heavy blow',\n        effects: [\n          effectFunCall(['Basic:Move', { amount: -1 }]),\n          effectFunCall(['Basic:Attack', { amount: 4 }]),\n        ],\n        priority: 4,\n        dodgeable: true,\n        stamina: 3,\n        range: makeRange(1),\n      },\n    ],\n  },\n  {\n    display: 'Greatsword',\n    tooltip: 'Specialized in big damage',\n    effects: [\n      {\n        display: 'Rend',\n        tooltip: 'Swings at the enemy',\n        effects: [effectFunCall(['Basic:Attack', { amount: 3 }])],\n        priority: 4,\n        dodgeable: true,\n        stamina: 4,\n        range: makeRange(0, 1),\n      },\n      {\n        display: 'Feint',\n        tooltip: 'Quick step backwards',\n        effects: [effectFunCall(['Basic:Move', { amount: 1 }])],\n        priority: 1,\n        dodgeable: false,\n        stamina: 1,\n        range: makeRange(0, 1),\n      },\n      {\n        display: 'Earth Flattener',\n        tooltip: 'Charges a monstruous stunning blow',\n        effects: [\n          effectFunCall(['Basic:Move', { amount: 5 }]),\n          effectFunCall('Effect:Stun'),\n        ],\n        priority: 4,\n        dodgeable: true,\n        stamina: 6,\n        range: makeRange(1),\n      },\n    ],\n  },\n  {\n    display: 'Twinblades',\n    tooltip: 'Specialized in mobility',\n    effects: [\n      {\n        display: 'Swoosh',\n        tooltip: 'Deals a strike and moves back',\n        effects: [\n          effectFunCall(['Basic:Attack', { amount: 2 }]),\n          effectFunCall(['Basic:Move', { amount: 1 }]),\n        ],\n        priority: 2,\n        dodgeable: true,\n        stamina: 2,\n        range: makeRange(0, 1),\n      },\n      {\n        display: 'Fiuuum',\n        tooltip: 'Jump attack',\n        effects: [\n          effectFunCall(['Basic:Move', { amount: -2 }]),\n          effectFunCall(['Basic:Attack', { amount: 3 }]),\n        ],\n        priority: 4,\n        dodgeable: true,\n        stamina: 3,\n        range: makeRange(2, 3),\n      },\n      {\n        display: 'SwishSwishSwishSwish',\n        tooltip: 'Deals multiple low damage hits',\n        effects: [\n          effectFunCall(['Basic:Attack', { amount: 1 }]),\n          effectFunCall(['Basic:Attack', { amount: 1 }]),\n          effectFunCall(['Basic:Attack', { amount: 1 }]),\n          effectFunCall(['Basic:Attack', { amount: 1 }]),\n        ],\n        priority: 3,\n        dodgeable: true,\n        stamina: 4,\n        range: makeRange(0),\n      },\n    ],\n  },\n  {\n    display: 'Katana',\n    tooltip: 'Specialized in bleeding',\n    effects: [\n      {\n        display: 'Slice & Dice',\n        tooltip: 'Deals two swift strikes',\n        effects: [\n          effectFunCall(['Basic:Attack', { amount: 1 }]),\n          effectFunCall(['Basic:Attack', { amount: 1 }]),\n        ],\n        priority: 3,\n        dodgeable: true,\n        stamina: 2,\n        range: makeRange(0, 1),\n      },\n      {\n        display: 'Wakizashi',\n        tooltip: 'Short sword with a quick attack causing bleeding',\n        effects: [\n          effectFunCall(['Basic:Attack', { amount: 1 }]),\n          effectFunCall(['Effect:Bleed', { target: 'Monster', turns: 2 }]),\n        ],\n        priority: 2,\n        dodgeable: true,\n        stamina: 4,\n        range: makeRange(0, 1),\n      },\n      {\n        display: 'Unsheathe',\n        tooltip: 'Dodges the next attack and deals damage',\n        effects: [\n          effectFunCall('Effect:Dodge'),\n          effectFunCall(['Basic:Attack', { amount: 3 }]),\n        ],\n        priority: 1,\n        dodgeable: true,\n        stamina: 4,\n        range: makeRange(0),\n      },\n    ],\n  },\n  {\n    display: 'Axe',\n    tooltip: 'Specialized in debuffs',\n    effects: [\n      {\n        display: 'Chop',\n        tooltip: 'A slow but reliable attack',\n        effects: [effectFunCall(['Basic:Attack', { amount: 2 }])],\n        priority: 4,\n        dodgeable: true,\n        stamina: 3,\n        range: makeRange(0, 1),\n      },\n      {\n        display: 'Aim for the head!',\n        tooltip: 'Cripples the monster',\n        effects: [\n          effectFunCall(['Effect:Stat', { target: 'Monster', defence: -1 }]),\n          effectFunCall(['Effect:Bleed', { target: 'Player', turns: 2 }]),\n        ],\n        priority: 4,\n        dodgeable: true,\n        stamina: 5,\n        range: makeRange(1),\n      },\n      {\n        display: 'Target the limbs!',\n        tooltip: 'Weakens the monster',\n        effects: [\n          effectFunCall(['Effect:Stat', { target: 'Monster', attack: -1 }]),\n          effectFunCall(['Effect:Bleed', { target: 'Player', turns: 2 }]),\n        ],\n        priority: 4,\n        dodgeable: true,\n        stamina: 5,\n        range: makeRange(1),\n      },\n    ],\n  },\n  {\n    display: 'Lance',\n    tooltip: 'Specialized in mid-range attacks',\n    effects: [\n      {\n        display: 'Pierce',\n        tooltip: 'Pokes the enemy',\n        effects: [effectFunCall(['Basic:Attack', { amount: 2 }])],\n        priority: 3,\n        dodgeable: true,\n        stamina: 2,\n        range: makeRange(0, 1, 2),\n      },\n      {\n        display: 'Charge!!',\n        tooltip: 'Runs towards the enemy to deal a massive blow',\n        effects: [\n          effectFunCall(['Basic:Move', { amount: -5 }]),\n          effectFunCall(['Basic:Attack', { amount: 4 }]),\n        ],\n        priority: 1,\n        dodgeable: true,\n        stamina: 3,\n        range: makeRange(4),\n      },\n    ],\n  },\n  {\n    display: 'Hammer',\n    tooltip: 'Specialized in stunning',\n    effects: [\n      {\n        display: 'Head Banger',\n        tooltip: 'Hits the enemy in the head',\n        effects: [\n          effectFunCall(['Basic:Attack', { amount: 2 }]),\n          effectFunCall('Effect:Stun'),\n        ],\n        priority: 4,\n        dodgeable: true,\n        stamina: 4,\n        range: makeRange(0),\n      },\n      {\n        display: 'Large swing',\n        tooltip: 'Uses the inertia of the hammer to safely advance',\n        effects: [\n          effectFunCall(['Basic:Move', { amount: -3 }]),\n          effectFunCall('Effect:Stun'),\n        ],\n        priority: 3,\n        dodgeable: true,\n        stamina: 3,\n        range: makeRange(1, 2, 3),\n      },\n      {\n        display: 'Go for the ankles',\n        tooltip: 'Slows down the enemy',\n        effects: [\n          effectFunCall(['Effect:Stat', { target: 'Monster', speed: -1 }]),\n          effectFunCall('Effect:Stun'),\n        ],\n        priority: 4,\n        dodgeable: true,\n        stamina: 6,\n        range: makeRange(1),\n      },\n    ],\n  },\n  {\n    display: 'Finger Claw',\n    tooltip: 'Specialized in poison',\n    effects: [\n      {\n        display: 'Caress',\n        tooltip: 'Applies poison to the monster',\n        effects: [\n          effectFunCall(['Effect:Poison', { target: 'Monster', turns: 2 }]),\n        ],\n        priority: 3,\n        dodgeable: false,\n        stamina: 2,\n        range: makeRange(0),\n      },\n      {\n        display: 'Backflip',\n        tooltip: 'Dodges an attack and moves backward',\n        effects: [\n          effectFunCall('Effect:Dodge'),\n          effectFunCall(['Basic:Move', { amount: 2 }]),\n        ],\n        priority: 1,\n        dodgeable: false,\n        stamina: 4,\n        range: makeRange(0, 1),\n      },\n    ],\n  },\n  {\n    display: 'Bow',\n    tooltip: 'Specialized in ranged attacks',\n    effects: [\n      {\n        display: 'Relaxed Shot',\n        tooltip: 'Shoots an arrow',\n        effects: [effectFunCall(['Basic:Attack', { amount: 2 }])],\n        priority: 3,\n        dodgeable: true,\n        stamina: 2,\n        range: makeRange(3, 4),\n      },\n      {\n        display: 'Power Draw',\n        tooltip: 'Shoots your strongest arrow and makes you weaker',\n        effects: [\n          effectFunCall(['Basic:Attack', { amount: 6 }]),\n          effectFunCall(['Effect:Stat', { target: 'Player', attack: -1 }]),\n        ],\n        priority: 3,\n        dodgeable: true,\n        stamina: 4,\n        range: makeRange(4),\n      },\n    ],\n  },\n  {\n    display: 'Magic Staff',\n    tooltip: 'Specialized in multiple attacks',\n    effects: [\n      {\n        display: 'Bolt',\n        tooltip: 'Shoots a low damage bolt',\n        effects: [effectFunCall(['Basic:Attack', { amount: 1 }])],\n        priority: 3,\n        dodgeable: true,\n        stamina: 3,\n        range: allRanges,\n      },\n      {\n        display: 'Pew Pew Pew',\n        tooltip: 'Shoots a barrage of bolts',\n        effects: [\n          effectFunCall(['Basic:Attack', { amount: 1 }]),\n          effectFunCall(['Basic:Attack', { amount: 1 }]),\n          effectFunCall(['Basic:Attack', { amount: 1 }]),\n          effectFunCall(['Basic:Attack', { amount: 1 }]),\n        ],\n        priority: 4,\n        dodgeable: true,\n        stamina: 8,\n        range: makeRange(2, 3, 4),\n      },\n    ],\n  },\n];\n\nexport default weapons;\n","import { allRanges, selfRange, makeRange } from '../makeGame';\nimport { BuildRepository, effectFunCall } from '../types';\nimport weapons from './weapons';\n\nconst build: BuildRepository = {\n  debug: [\n    {\n      display: 'None',\n    },\n    {\n      display: 'Debug',\n      effects: [\n        {\n          display: 'GGWP',\n          tooltip: 'Wins the game',\n          priority: 1,\n          dodgeable: false,\n          stamina: 0,\n          range: allRanges,\n          effects: [effectFunCall('Debug:GGWP')],\n        },\n        {\n          display: 'SUDOKU',\n          tooltip: 'Loses the game',\n          priority: 1,\n          dodgeable: false,\n          stamina: 0,\n          range: allRanges,\n          effects: [effectFunCall('Debug:Sudoku')],\n        },\n      ],\n    },\n  ],\n  basic: [\n    {\n      display: 'Basic',\n      effects: [\n        {\n          display: 'Rest',\n          tooltip: 'Skip the turn and restore stamina',\n          priority: 4,\n          dodgeable: false,\n          stamina: 0,\n          range: selfRange,\n          effects: [effectFunCall('Basic:Rest')],\n        },\n        {\n          display: 'Advance',\n          tooltip: 'Move closer',\n          priority: 4,\n          dodgeable: false,\n          stamina: 1,\n          range: selfRange,\n          effects: [effectFunCall(['Basic:Move', { amount: -1 }])],\n        },\n        {\n          display: 'Retreat',\n          tooltip: 'Move farther',\n          effects: [effectFunCall(['Basic:Move', { amount: 1 }])],\n          priority: 4,\n          dodgeable: false,\n          stamina: 1,\n          range: selfRange,\n        },\n      ],\n    },\n  ],\n  class: [\n    {\n      display: 'Warrior',\n      passives: ['+Attack', '+Defence', '+Stamina'],\n      effects: [\n        {\n          display: 'Well placed kick',\n          tooltip: 'Last resource attack',\n          effects: [effectFunCall(['Basic:Attack', { amount: 2 }])],\n          priority: 2,\n          dodgeable: true,\n          stamina: 1,\n          range: makeRange(0, 1),\n        },\n      ],\n    },\n    {\n      display: 'Rogue',\n      passives: ['+Speed', '+Speed', '-Attack', '-Stamina'],\n      effects: [\n        {\n          display: 'Strategic Retreat',\n          tooltip: 'Jump backwards',\n          effects: [effectFunCall(['Basic:Move', { amount: 999 }])],\n          priority: 2,\n          dodgeable: false,\n          stamina: 1,\n          range: selfRange,\n        },\n      ],\n    },\n    {\n      display: 'Berserk',\n      passives: [\n        '+Attack',\n        '+Attack',\n        '+Attack',\n        '-Defence',\n        '-Defence',\n        '-Health',\n      ],\n      effects: [\n        {\n          display: 'All or Nothing!',\n          tooltip: 'Deals massive damage and leaves you weakened',\n          priority: 2,\n          dodgeable: true,\n          stamina: 0,\n          range: makeRange(0, 1, 2),\n          amount: 1,\n          effects: [\n            effectFunCall(['Basic:Move', { amount: -5 }]),\n            effectFunCall(['Basic:Attack', { amount: 2 }]),\n            effectFunCall(['Basic:Attack', { amount: 2 }]),\n            effectFunCall(['Basic:Attack', { amount: 2 }]),\n            effectFunCall(['Basic:Attack', { amount: 2 }]),\n            effectFunCall([\n              'Effect:Stat',\n              { target: 'Player', defence: -3, speed: -1 },\n            ]),\n          ],\n        },\n      ],\n    },\n    {\n      display: 'Mage',\n      passives: ['+StaPerTurn', '+Stamina', '-Health', '-Speed'],\n      effects: [\n        {\n          display: 'Just having a thought',\n          tooltip: 'Restores stamina for the next action',\n          priority: 4,\n          dodgeable: false,\n          amount: 2,\n          stamina: 0,\n          range: selfRange,\n          effects: [effectFunCall(['Basic:Stamina', { amount: 999 }])],\n        },\n      ],\n    },\n    {\n      display: 'Cleric',\n      passives: ['+Defence', '+Stamina'],\n      effects: [\n        {\n          display: 'Minor Healing',\n          tooltip: 'Restores some HP',\n          amount: 3,\n          effects: [effectFunCall(['Basic:HP', { amount: 5 }])],\n          priority: 3,\n          dodgeable: false,\n          stamina: 3,\n          range: selfRange,\n        },\n      ],\n    },\n  ],\n  skill: [\n    {\n      display: 'Sturdy',\n      bot: [\n        {\n          display: 'Endure the pain',\n          tooltip: 'Blocks some damage each turn at the cost of stamina',\n          effects: [\n            effectFunCall(['Effect:Armor', { amount: 4 }]),\n            effectFunCall(['Effect:Stat', { target: 'Player', stamina: -2 }]),\n          ],\n          priority: 1,\n          dodgeable: false,\n          range: selfRange,\n        },\n      ],\n    },\n    {\n      display: 'Nimble',\n      effects: [\n        {\n          display: 'Dodge',\n          tooltip: 'Avoid one enemy attack',\n          effects: [effectFunCall('Effect:Dodge')],\n          priority: 2,\n          dodgeable: false,\n          stamina: 4,\n          range: selfRange,\n        },\n      ],\n    },\n    {\n      display: 'Resourceful',\n      effects: [\n        {\n          display: 'Dodge this!',\n          tooltip: 'Throws a stone',\n          effects: [effectFunCall(['Basic:Attack', { amount: 2 }])],\n          priority: 3,\n          dodgeable: true,\n          stamina: 3,\n          range: makeRange(3, 4),\n        },\n      ],\n    },\n  ],\n  weapon: weapons,\n  offhand: [\n    {\n      display: 'Hook',\n      passives: ['-Stamina'],\n      effects: [\n        {\n          display: 'Get over here!',\n          tooltip: 'Moves enemy closer',\n          effects: [\n            effectFunCall(['Basic:Attack', { amount: 3 }]),\n            effectFunCall(['Basic:Move', { amount: -2 }]),\n          ],\n          priority: 4,\n          dodgeable: true,\n          stamina: 3,\n          range: makeRange(2, 3, 4),\n        },\n      ],\n    },\n    {\n      display: 'Parry Dagger',\n      passives: ['-Defence'],\n      effects: [\n        {\n          display: 'Get over here!',\n          tooltip: 'Avoids a melee attack',\n          effects: [effectFunCall('Effect:Dodge')],\n          priority: 2,\n          dodgeable: false,\n          stamina: 2,\n          range: makeRange(1),\n        },\n      ],\n    },\n    {\n      display: 'Shield',\n      passives: ['+Defence', '-Speed'],\n      effects: [\n        {\n          display: 'Not today!',\n          tooltip: 'Blocks a lot of damage',\n          effects: [effectFunCall(['Effect:Armor', { amount: 5 }])],\n          priority: 2,\n          dodgeable: false,\n          stamina: 4,\n          range: selfRange,\n        },\n      ],\n    },\n    {\n      display: 'Focus',\n      passives: ['+Speed', '+StaPerTurn'],\n    },\n    {\n      display: 'Wand',\n      passives: ['-Defence', '-StaPerTurn'],\n      effects: [\n        {\n          display: 'Magic Bolt',\n          tooltip: 'Shoots mana bolts until the caster faints',\n          effects: [effectFunCall('Wand:MagicBolt')],\n          priority: 3,\n          dodgeable: true,\n          stamina: 1,\n          range: makeRange(3, 4),\n        },\n      ],\n    },\n  ],\n  armor: [\n    {\n      display: 'Heavy',\n      passives: [\n        '+Defence',\n        '+Defence',\n        '+Defence',\n        '+Defence',\n        '-Speed',\n        '-Speed',\n        '-StaPerTurn',\n      ],\n    },\n    {\n      display: 'Medium',\n      passives: ['+Defence', '+Defence', '-StaPerTurn'],\n    },\n    {\n      display: 'Light',\n      passives: ['+Defence'],\n    },\n    {\n      display: 'None',\n      passives: ['+Speed'],\n    },\n  ],\n  headgear: [\n    {\n      display: 'Helm',\n      passives: ['+Defence', '+Defence', '-Speed', '-StaPerTurn'],\n      tooltip: 'Big protection for slow combatants',\n    },\n    {\n      display: 'Feather Cap',\n      passives: ['+StaPerTurn', '+Stamina'],\n      tooltip: \"Makes you feel energized, doesn't it?\",\n    },\n    {\n      display: 'Mage Hat',\n      passives: ['-StaPerTurn'],\n      tooltip: 'Small tricks for big plays',\n      effects: [\n        {\n          display: 'Flash!',\n          tooltip: 'Blinks you to a better position',\n          effects: [\n            effectFunCall(['Basic:Attack', { amount: 1 }]),\n            effectFunCall(['Basic:Move', { amount: 2 }]),\n          ],\n          priority: 3,\n          dodgeable: true,\n          stamina: 4,\n          range: makeRange(1, 2),\n        },\n      ],\n    },\n  ],\n  footwear: [\n    {\n      display: 'Slippers of Dooooodge!',\n      tooltip: 'Allows you to dodge attacks',\n      passives: ['-Stamina'],\n      effects: [\n        {\n          display: 'Advanced Dodge',\n          tooltip: 'Avoid 1 attack',\n          effects: [effectFunCall('Effect:Dodge')],\n          priority: 1,\n          dodgeable: false,\n          stamina: 3,\n          range: selfRange,\n        },\n      ],\n    },\n    {\n      display: 'Boots of Flight',\n      tooltip: 'Avoid your enemies',\n      passives: ['-Defence'],\n      eot: [\n        {\n          display: 'Flight!',\n          tooltip: 'Increases distance at the end of the turn',\n          priority: 0,\n          dodgeable: false,\n          range: allRanges,\n          effects: [\n            effectFunCall('BootsOfFlight:EOT'),\n            effectFunCall(['Effect:Stat', { target: 'Player', stamina: -2 }]),\n          ],\n        },\n      ],\n    },\n    {\n      display: 'Greaves of Stability',\n      tooltip: 'Extra resilient',\n      passives: ['+Defence', '-Speed'],\n      effects: [\n        {\n          display: 'Dig your heels',\n          tooltip: 'Resists damage',\n          effects: [effectFunCall(['Effect:Armor', { amount: 3 }])],\n          priority: 1,\n          dodgeable: false,\n          stamina: 4,\n          range: selfRange,\n        },\n      ],\n    },\n  ],\n  charm: [\n    {\n      display: 'of Health',\n      passives: ['+Health', '-Speed'],\n      tooltip: 'Increases your maximum health',\n    },\n    {\n      display: 'of Haste',\n      passives: ['+StaPerTurn', '-Stamina'],\n      tooltip: 'Increases your maximum stamina regeneration',\n    },\n    {\n      display: 'of Resilience',\n      passives: ['+Stamina', '-StaPerTurn'],\n      tooltip: 'Increases your maximum stamina',\n    },\n    {\n      display: 'of Strength',\n      passives: ['+Attack', '-Health', '-StaPerTurn'],\n      tooltip: 'Increases your maximum attack',\n    },\n    {\n      display: 'of Swiftness',\n      passives: ['+Speed', '-Attack'],\n      tooltip: 'Increases your maximum speed',\n    },\n    {\n      display: 'of Defence',\n      passives: ['+Defence', '-Stamina', '-Speed'],\n      tooltip: 'Increases your maximum defence',\n    },\n  ],\n  consumable: [\n    {\n      display: 'Healing Potion',\n      effects: [\n        {\n          display: 'Healing!',\n          tooltip: 'Restores some HP',\n          effects: [effectFunCall(['Basic:HP', { amount: 4 }])],\n          priority: 4,\n          dodgeable: false,\n          stamina: 5,\n          amount: 3,\n          range: selfRange,\n        },\n      ],\n    },\n    {\n      display: 'Pot of Razors',\n      effects: [\n        {\n          display: 'Throw pot',\n          tooltip: 'Causes bleeding',\n          amount: 2,\n          effects: [\n            effectFunCall(['Effect:Bleed', { target: 'Monster', turns: 3 }]),\n          ],\n          priority: 4,\n          dodgeable: true,\n          stamina: 5,\n          range: selfRange,\n        },\n      ],\n    },\n    {\n      display: 'Life Bubble',\n      effects: [\n        {\n          display: 'Activate Bubble',\n          tooltip: 'Protects against a single source of damage this turn',\n          effects: [effectFunCall('Effect:Dodge')],\n          priority: 1,\n          dodgeable: false,\n          stamina: 1,\n          amount: 1,\n          range: selfRange,\n        },\n      ],\n    },\n    {\n      display: 'Pet Rock',\n      effects: [\n        {\n          display: 'Rock, to me!',\n          tooltip: 'Reduces damage',\n          effects: [effectFunCall(['Effect:Armor', { amount: 3 }])],\n          priority: 2,\n          dodgeable: false,\n          stamina: 3,\n          amount: 3,\n          range: selfRange,\n        },\n      ],\n    },\n  ],\n};\n\nexport default build;\n","import { updateGlobals } from './modding';\nimport { Snapshot, Play, BuildRepository, EnemyRepository } from './types';\nimport enemyRepository from './data/enemies';\nimport buildRepository from './data/build';\n\nexport const enemies: EnemyRepository = enemyRepository;\nexport const build: BuildRepository = buildRepository;\n\nupdateGlobals({ build, enemies });\n","export const rangeArr = (max: number, min: number = 0) => {\n  let range = [...Array(max).keys()];\n  if (min >= 0) {\n    range.filter((i) => i < min);\n  }\n  return range;\n};\n\nexport const clamp = (num: number, min: number, max: number = Infinity) =>\n  Math.min(Math.max(num, min), max);\n\nexport const pipe = <T, U>(t: T, f: (t: T) => U): U => f(t);\n\nexport const pipe2 = <T, U, A>(t: T, u: U, f: (t: T, u: U) => A): A => f(t, u);\n\nexport const pipe3 = <T, U, V, A>(\n  t: T,\n  u: U,\n  v: V,\n  f: (t: T, u: U, v: V) => A\n): A => f(t, u, v);\n","import { EffectFunctionRepository } from './effectRepository';\nimport {\n  BuildRepository,\n  effectFunCall,\n  EnemyInfo,\n  EnemyRepository,\n  Play,\n} from './types';\n\nexport type Globals = {\n  debug: boolean;\n  trainingEnemy: EnemyInfo;\n  build?: BuildRepository;\n  effects?: EffectFunctionRepository;\n  enemies?: EnemyRepository;\n  ingame?: {\n    game: Play;\n    forceUpdate: () => void;\n  };\n};\n\nconst globalsDefault: Globals = {\n  debug: false,\n  trainingEnemy: [\n    {\n      lore: {\n        name: '🤖 Dummy 🤖',\n      },\n      effects: [\n        {\n          display: 'Approve of your life choices',\n          tooltip: \"You're doing great!\",\n          priority: 4,\n          effects: [effectFunCall(['Monster:Attack', { amount: 0 }])],\n          dodgeable: true,\n          range: [0, 1, 2, 3, 4],\n        },\n      ],\n      rolls: [[0], [0], [0], [0], [0]],\n    },\n    {\n      hp: { current: 300, max: 300 },\n      distance: 0,\n      speed: { current: 0, max: 0 },\n      attack: { current: 0, max: 0 },\n      defence: { current: 0, max: 0 },\n      status: {\n        dodge: { active: false },\n        armor: { amount: 0 },\n        bleed: { turns: 0 },\n        stun: { active: false },\n      },\n    },\n  ],\n};\n\nexport const globals = (): Globals =>\n  // @ts-ignore\n  globalThis.__buildmancer;\n\nexport const updateGlobals = (p: Partial<Globals>) => {\n  const theThis = globalThis as unknown as { __buildmancer: Globals };\n  theThis.__buildmancer = {\n    ...globalsDefault,\n    ...(theThis.__buildmancer ?? {}),\n    ...p,\n  };\n};\n\nupdateGlobals({});\n","import { Opaque } from 'type-fest';\nimport {\n  EffectFunParams,\n  EffectFunctionRepository,\n  EffectFunRepoIndex,\n  StatsFunIndex,\n} from './effectRepository';\n\nexport type Tuple<T, N extends number> = N extends N\n  ? number extends N\n    ? T[]\n    : _TupleOf<T, N, []>\n  : never;\ntype _TupleOf<T, N extends number, R extends unknown[]> = R['length'] extends N\n  ? R\n  : _TupleOf<T, N, [T, ...R]>;\n\nexport type Nel<T> = [T, ...T[]];\n\ntype Length<T extends any[]> = T extends { length: infer L } ? L : never;\ntype BuildTuple<L extends number, T extends any[] = []> = T extends {\n  length: L;\n}\n  ? T\n  : BuildTuple<L, [...T, any]>;\nexport type Subtract<\n  A extends number,\n  B extends number\n> = BuildTuple<A> extends [...infer U, ...BuildTuple<B>] ? Length<U> : never;\ntype EQ<A, B> = A extends B ? (B extends A ? true : false) : false;\ntype AtTerminus<A extends number, B extends number> = A extends 0\n  ? true\n  : B extends 0\n  ? true\n  : false;\ntype LT<A extends number, B extends number> = AtTerminus<A, B> extends true\n  ? EQ<A, B> extends true\n    ? false\n    : A extends 0\n    ? true\n    : false\n  : LT<Subtract<A, 1>, Subtract<B, 1>>;\n\nexport type TupleUpTo<T, N extends number> = EQ<N, 1> extends true\n  ? [T]\n  : TupleUpTo<T, Subtract<N, 1>> | Tuple<T, N>;\n\nexport type UpTo<N extends number> = EQ<N, 0> extends true\n  ? 0\n  : UpTo<Subtract<N, 1>> | N;\n\nexport interface Stat {\n  max: number;\n  current: UpTo<Stat['max']>;\n}\n\nexport interface Status {\n  dodge: { active: boolean };\n  stun: { active: boolean };\n  armor: { amount: number };\n  bleed: { turns: number };\n}\nexport interface PlayerStats {\n  hp: Stat;\n  stamina: Stat;\n  staminaPerTurn: Stat;\n  speed: Stat;\n  attack: Stat;\n  defence: Stat;\n  status: Status;\n}\nexport interface EnemyStats {\n  hp: Stat;\n  speed: Stat;\n  attack: Stat;\n  defence: Stat;\n  distance: UpTo<Subtract<Distances, 1>>;\n  status: Status;\n}\nexport type InventoryStats = {\n  [k in Item['display']]: { used: number };\n};\n\nexport type Priorities = 5;\nexport type Distances = 5;\nexport type MonsterCount = 5;\nexport type Staminas = 10;\n\nexport type EffectPhase = 'MAIN' | 'EOT' | 'BOT';\nexport interface EffectSummary {\n  origin: Target;\n  display: string;\n  phase: EffectPhase;\n}\n\nexport type DisabledSkills = (keyof BuildRepository)[];\nexport interface Snapshot {\n  player: PlayerStats;\n  enemies: EnemiesStats;\n  inventory: InventoryStats;\n  target: MonsterTarget;\n  lastAttacks: EffectSummary[];\n  bot?: Nel<[Target, Effect]>;\n  eot?: Nel<[Target, Effect]>;\n  disabledSkills: DisabledSkills;\n}\n\nexport type RNG = Opaque<number[][], 'RNG'>;\n\nexport type VersionString = '1';\nexport type Seed = number | string;\nexport interface Play {\n  states: Nel<Snapshot>;\n  player: Player;\n  enemies: Enemies;\n  rng: RNG;\n  turns: number;\n  id: string;\n  seed: Seed;\n  version: VersionString;\n}\n\ntype ItemOrMonster = string /* TODO all items */ | 'Monster';\nexport type FunIndex = `${ItemOrMonster}:${string}`;\n\nexport type StatsFunRepo = { [key in StatsFunIndex]: StatsFun };\nexport type StatsFun = (\n  player: PlayerStats,\n  enemies: EnemiesStats\n) => [PlayerStats, EnemiesStats];\n\nexport type Ranges = UpTo<Subtract<Distances, 1>>[];\n\ninterface EffectFunCallT {\n  index: EffectFunRepoIndex;\n  parameters: EffectFunParams<EffectFunRepoIndex>;\n}\nexport type EffectFunCall = Opaque<EffectFunCallT, EffectFunCallT>;\nexport const effectFunCall = <T extends EffectFunRepoIndex>(\n  t: EffectFunParams<T> extends undefined ? T : [T, EffectFunParams<T>]\n): EffectFunCall =>\n  (Array.isArray(t)\n    ? { index: t[0], parameters: t[1] }\n    : { index: t, parameters: undefined }) as EffectFunCall;\nexport const callEffectFun = <T extends EffectFunRepoIndex>(\n  repo: EffectFunctionRepository,\n  t: T,\n  p: EffectFunParams<T>\n) => {\n  const f = repo[t];\n  // @ts-expect-error: index and parameters are enforced to be compatible at construction and the runtime check above ^^^^\n  return f(p);\n};\n\nexport interface Effect {\n  display: string;\n  tooltip: string;\n  effects: Nel<EffectFunCall>;\n  priority: UpTo<Subtract<Priorities, 1>>;\n  range: Ranges;\n  dodgeable: boolean;\n}\nexport interface InventoryEffect extends Effect {\n  stamina: UpTo<Subtract<Staminas, 1>>;\n  amount?: number;\n}\n\nexport type MonsterTarget = UpTo<Subtract<MonsterCount, 1>>;\nexport type PlayerTarget = 'Player';\nexport type Target = MonsterTarget | PlayerTarget;\n\nexport type EffectTarget = 'Player' | 'Monster';\nexport type PlayerStatParameter = Partial<{\n  [k in keyof Omit<PlayerStats, 'status'>]: number;\n}>;\nexport type MonsterStatParameter = Partial<{\n  [k in keyof Omit<EnemyStats, 'status'>]: number;\n}>;\nexport type StatEffectTarget =\n  | (PlayerStatParameter & { target: 'Player' })\n  | (MonsterStatParameter & { target: 'Monster' });\n\nexport interface BuildRepository {\n  debug: Item[];\n  basic: Item[];\n  class: Item[];\n  skill: Item[];\n  weapon: Item[];\n  offhand: Item[];\n  consumable: Item[];\n  armor: Item[];\n  headgear: Item[];\n  footwear: Item[];\n  charm: Item[];\n}\nexport type Build = {\n  [k in keyof BuildRepository]: Item;\n};\n\nexport type EnemyInfo = [Enemy, EnemyStats];\nexport type EnemyRepository = EnemyInfo[];\n\nexport interface Item {\n  display: string;\n  tooltip?: string;\n  passives?: StatsFunIndex[];\n  bot?: Nel<Effect>;\n  eot?: Nel<Effect>;\n  effects?: Nel<InventoryEffect>;\n  //[key: string]: any;\n}\n\nexport interface Player {\n  id: string;\n  lore: Record<string, string | number>;\n  build: Build;\n}\n\n// Place in the array for now\ntype EffectIdentity = number;\nexport interface Enemy {\n  lore: Record<string, string | number>;\n  effects: Nel<Effect>;\n  rolls: Tuple<EffectIdentity[], Distances>;\n  bot?: Nel<Effect>;\n  eot?: Nel<Effect>;\n}\n\nexport type Enemies = TupleUpTo<Enemy, MonsterCount>;\nexport type EnemiesStats = TupleUpTo<EnemyStats, MonsterCount>;\n\nexport const safeEntries = <T, K extends keyof T>(o: {\n  [s in K]: T[s];\n}): [K, T[K]][] => Object.entries(o).map(([k, v]) => [k as K, v as T[K]]);\n","const names = [\n  'Lydan',\n  'Syrin',\n  'Ptorik',\n  'Joz',\n  'Varog',\n  'Gethrod',\n  'Hezra',\n  'Feron',\n  'Ophni',\n  'Colborn',\n  'Fintis',\n  'Gatlin',\n  'Jinto',\n  'Hagalbar',\n  'Krinn',\n  'Lenox',\n  'Revvyn',\n  'Hodus',\n  'Dimian',\n  'Paskel',\n  'Kontas',\n  'Weston',\n  'Azamarr',\n  'Jather',\n  'Tekren',\n  'Jareth',\n  'Adon',\n  'Zaden',\n  'Eune',\n  'Graff',\n  'Tez',\n  'Jessop',\n  'Gunnar',\n  'Pike',\n  'Domnhar',\n  'Baske',\n  'Jerrick',\n  'Mavrek',\n  'Riordan',\n  'Wulfe',\n  'Straus',\n  'Tyvrik',\n  'Henndar',\n  'Favroe',\n  'Whit',\n  'Jaris',\n  'Renham',\n  'Kagran',\n  'Lassrin',\n  'Vadim',\n  'Arlo',\n  'Quintis',\n  'Vale',\n  'Caelan',\n  'Yorjan',\n  'Khron',\n  'Ishmael',\n  'Jakrin',\n  'Fangar',\n  'Roux',\n  'Baxar',\n  'Hawke',\n  'Gatlen',\n  'Barak',\n  'Nazim',\n  'Kadric',\n  'Paquin',\n  'Kent',\n  'Moki',\n  'Rankar',\n  'Lothe',\n  'Ryven',\n  'Clawsen',\n  'Pakker',\n  'Embre',\n  'Cassian',\n  'Verssek',\n  'Dagfinn',\n  'Ebraheim',\n  'Nesso',\n  'Eldermar',\n  'Rivik',\n  'Rourke',\n  'Barton',\n  'Hemm',\n  'Sarkin',\n  'Blaiz',\n  'Talon',\n  'Agro',\n  'Zagaroth',\n  'Turrek',\n  'Esdel',\n  'Lustros',\n  'Zenner',\n  'Baashar',\n  'Dagrod',\n  'Gentar',\n  'Feston',\n  'Syrana',\n  'Resha',\n  'Varin',\n  'Wren',\n  'Yuni',\n  'Talis',\n  'Kessa',\n  'Magaltie',\n  'Aeris',\n  'Desmina',\n  'Krynna',\n  'Asralyn',\n  'Herra',\n  'Pret',\n  'Kory',\n  'Afia',\n  'Tessel',\n  'Rhiannon',\n  'Zara',\n  'Jesi',\n  'Belen',\n  'Rei',\n  'Ciscra',\n  'Temy',\n  'Renalee',\n  'Estyn',\n  'Maarika',\n  'Lynorr',\n  'Tiv',\n  'Annihya',\n  'Semet',\n  'Tamrin',\n  'Antia',\n  'Reslyn',\n  'Basak',\n  'Vixra',\n  'Pekka',\n  'Xavia',\n  'Beatha',\n  'Yarri',\n  'Liris',\n  'Sonali',\n  'Razra',\n  'Soko',\n  'Maeve',\n  'Everen',\n  'Yelina',\n  'Morwena',\n  'Hagar',\n  'Palra',\n  'Elysa',\n  'Sage',\n  'Ketra',\n  'Lynx',\n  'Agama',\n  'Thesra',\n  'Tezani',\n  'Ralia',\n  'Esmee',\n  'Heron',\n  'Naima',\n  'Rydna',\n  'Sparrow',\n  'Baakshi',\n  'Ibera',\n  'Phlox',\n  'Dessa',\n  'Braithe',\n  'Taewen',\n  'Larke',\n  'Silene',\n  'Phressa',\n  'Esther',\n  'Anika',\n  'Rasy',\n  'Harper',\n  'Indie',\n  'Vita',\n  'Drusila',\n  'Minha',\n  'Surane',\n  'Lassona',\n  'Merula',\n  'Kye',\n  'Jonna',\n  'Lyla',\n  'Zet',\n  'Orett',\n  'Naphtalia',\n  'Turi',\n  'Rhays',\n  'Shike',\n  'Hartie',\n  'Beela',\n  'Leska',\n  'Vemery',\n  'Lunex',\n  'Fidess',\n  'Tisette',\n  'Partha',\n];\n\nexport default names;\n","import { enemies, build } from './data';\nimport { Chance } from 'chance';\nimport names from './data/names';\nimport { globals } from './modding';\nimport {\n  UpTo,\n  Subtract,\n  Distances,\n  Ranges,\n  Stat,\n  Status,\n  EnemyInfo,\n  Build,\n  PlayerStats,\n  Player,\n} from './types';\n\nexport const makeRange = (...number: UpTo<Subtract<Distances, 1>>[]) =>\n  [...new Set(number)] as Ranges;\nexport const allRanges = makeRange(0, 1, 2, 3, 4);\nexport const selfRange = allRanges;\n\nexport const makeStat = (amount: number, max: number = amount + 5): Stat => ({\n  current: amount,\n  max,\n});\nexport const defaultStatus: Status = {\n  dodge: { active: false },\n  armor: { amount: 0 },\n  bleed: { turns: 0 },\n  stun: { active: false },\n};\n\nexport const randomEnemy = (): EnemyInfo => new Chance().pickone(enemies);\nexport const dummyEnemy = (): EnemyInfo => globals().trainingEnemy;\n\nexport const randomName = () => names[Math.floor(Math.random() * names.length)];\n\nexport const randomBuild = (\n  rng: Chance.Chance,\n  buildOverride?: Partial<Build>\n) => ({\n  debug: build.debug[globals().debug ? 1 : 0],\n  basic: rng.pickone(build.basic),\n  class: rng.pickone(build.class),\n  skill: rng.pickone(build.skill),\n  armor: rng.pickone(build.armor),\n  weapon: rng.pickone(build.weapon),\n  offhand: rng.pickone(build.offhand),\n  footwear: rng.pickone(build.footwear),\n  headgear: rng.pickone(build.headgear),\n  charm: rng.pickone(build.charm),\n  consumable: rng.pickone(build.consumable),\n  ...buildOverride,\n});\n\nexport const playerStatsDefault: PlayerStats = {\n  hp: makeStat(10),\n  stamina: makeStat(6),\n  staminaPerTurn: makeStat(2),\n  speed: makeStat(0),\n  attack: makeStat(0),\n  defence: makeStat(0),\n  status: defaultStatus,\n};\n\nexport const randomPlayer = (\n  statsOverride?: PlayerStats,\n  buildOverride?: Partial<Build>\n): [Player, PlayerStats] => {\n  const rng = new Chance();\n  return [\n    {\n      id: rng.string(),\n      lore: {\n        name: randomName(),\n        age: rng.age(),\n      },\n      build: randomBuild(rng, buildOverride),\n    },\n    {\n      ...playerStatsDefault,\n      ...statsOverride,\n    },\n  ];\n};\n","import WebSocket from 'ws';\nimport { assign, createMachine, interpret } from 'xstate';\nimport { inspect } from '@xstate/inspect/lib/server.js';\nimport { scoreGame } from '../game/playGame';\n\nconst isDebug = process && process.env['SMD'] === '1';\n\nif (isDebug) {\n  inspect({\n    server: new WebSocket.Server({\n      port: 8888,\n    }),\n  });\n}\n\nconst toMenu = {\n  on: {\n    MENU: { target: 'main' },\n  },\n};\n\nconst quick = {\n  initial: 'play',\n  states: {\n    play: {\n      entry: ['reset'],\n      on: {\n        WIN: { target: 'win' },\n        LOSE: { target: 'lose' },\n      },\n    },\n    win: { type: 'final' as const },\n    lose: { type: 'final' as const },\n  },\n  ...toMenu,\n};\n\nconst single = {\n  initial: 'player',\n  states: {\n    player: {\n      entry: ['reset'],\n      on: {\n        PLAYER: { target: 'encounter' },\n      },\n    },\n    encounter: {\n      on: {\n        ENCOUNTER: { target: 'play' },\n      },\n    },\n    play: {\n      on: {\n        WIN: { target: 'win' },\n        LOSE: { target: 'lose' },\n      },\n    },\n    win: { type: 'final' as const },\n    lose: { type: 'final' as const },\n  },\n  ...toMenu,\n};\n\nconst arcade = {\n  initial: 'player',\n  states: {\n    player: {\n      entry: ['reset'],\n      on: {\n        PLAYER: { target: 'play' },\n      },\n    },\n    play: {\n      on: {\n        WIN: [\n          { target: 'victory', cond: 'isFinal' },\n          {\n            target: 'play',\n            actions: ['bumpVictories', 'bumpScore'],\n            internal: true,\n          },\n        ],\n        LOSE: { target: 'defeat' },\n      },\n    },\n    victory: {\n      type: 'final' as const,\n    },\n    defeat: {\n      type: 'final' as const,\n    },\n  },\n  ...toMenu,\n};\n\nconst survival = {\n  initial: 'player',\n  states: {\n    player: {\n      entry: ['reset'],\n      on: {\n        PLAYER: { target: 'play' },\n      },\n    },\n    play: {\n      on: {\n        WIN: { target: 'play', actions: ['bumpVictories'] },\n        LOSE: { target: 'defeat' },\n      },\n    },\n    defeat: {\n      type: 'final' as const,\n      on: {\n        // ACK: { target: '#menus.leaderboards' }\n      },\n    },\n  },\n  ...toMenu,\n};\n\nconst puzzle = {\n  initial: 'puzzle',\n  states: {\n    puzzle: {\n      on: {\n        PLAYER: { target: 'player' },\n      },\n    },\n    player: {\n      on: {\n        SELECTED: { target: 'play' },\n      },\n    },\n    play: {\n      on: {\n        COMPLETE: { target: 'complete' },\n      },\n    },\n    complete: {\n      on: {\n        NEXT: { target: 'player' },\n        SELECT: { target: 'puzzle' },\n      },\n    },\n  },\n  ...toMenu,\n};\n\nconst load = {\n  initial: 'load',\n  states: {\n    load: {\n      on: {\n        LOAD: { target: 'play' },\n      },\n    },\n    play: {\n      on: {\n        WIN: { target: 'win' },\n        LOSE: { target: 'lose' },\n      },\n    },\n    win: { type: 'final' as const },\n    lose: { type: 'final' as const },\n  },\n  ...toMenu,\n};\n\nconst training = {\n  initial: 'player',\n  states: {\n    player: {\n      entry: ['reset'],\n      on: {\n        PLAYER: { target: 'play' },\n      },\n    },\n    play: {\n      on: {\n        WIN: { target: 'win' },\n        LOSE: { target: 'lose' },\n      },\n    },\n    win: { type: 'final' as const },\n    lose: { type: 'final' as const },\n  },\n  ...toMenu,\n};\n\nconst makeArcadeContext = () => ({\n  victories: 0,\n  score: 0,\n  seed: Math.random(),\n});\nconst makeSurvivalContext = () => ({\n  victories: 0,\n  seed: Math.random(),\n});\nconst makeSingleContext = () => ({\n  seed: Math.random(),\n});\nconst makeGameContext = () => ({\n  arcadeContext: makeArcadeContext(),\n  survivalContext: makeSurvivalContext(),\n  singleContext: makeSingleContext(),\n});\n\nexport const gameMenuMachine = createMachine(\n  {\n    tsTypes: {} as import('./menuStateMachine.typegen').Typegen0,\n    id: 'menus',\n    initial: 'main',\n    context: makeGameContext(),\n    states: {\n      main: {\n        on: {\n          QUICK: { target: 'quick' },\n          SINGLE: { target: 'single' },\n          TRAINING: { target: 'training' },\n          ARCADE: { target: 'arcade' },\n          SURVIVAL: { target: 'survival' },\n          LOAD: { target: 'load' },\n          // PUZZLE: { target: 'puzzle' },\n          // LEADERBOARDS: { target: 'leaderboards' },\n        },\n      },\n      quick: {\n        ...quick,\n      },\n      single: {\n        ...single,\n      },\n      arcade: {\n        ...arcade,\n      },\n      survival: {\n        ...survival,\n      },\n      load: {\n        ...load,\n      },\n      training: {\n        ...training,\n      },\n      // puzzle: {\n      //   ...puzzle,\n      // },\n      // leaderboards: {\n      //   ...toMenu,\n      // }\n    },\n  },\n  {\n    guards: {\n      isFinal: ({ arcadeContext: { victories } }) => victories + 1 >= 7,\n    },\n    actions: {\n      bumpVictories: assign({\n        arcadeContext: ({ arcadeContext }, _event) => ({\n          ...arcadeContext,\n          victories: arcadeContext.victories + 1,\n          seed: Math.random(),\n        }),\n        survivalContext: ({ survivalContext }, _event) => ({\n          ...survivalContext,\n          victories: survivalContext.victories + 1,\n          seed: Math.random(),\n        }),\n      }),\n      bumpScore: assign({\n        arcadeContext: ({ arcadeContext }, { game }) => ({\n          ...arcadeContext,\n          score: arcadeContext.score + scoreGame(game),\n          seed: Math.random(),\n        }),\n      }),\n      reset: assign({\n        survivalContext: (c, e) => makeSurvivalContext(),\n        arcadeContext: (c, e) => makeArcadeContext(),\n        singleContext: (c, e) => makeSingleContext(),\n      }),\n    },\n  }\n);\n\nif (isDebug) {\n  interpret(gameMenuMachine, { devTools: true })\n    .onTransition((state) => console.log(state))\n    .start();\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (\n    process &&\n    process.env.NODE_ENV === 'production' &&\n    'serviceWorker' in navigator\n  ) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://cra.link/PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://cra.link/PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n"],"sourceRoot":""}