{"version":3,"sources":["components/Enemy.tsx","utils/types.ts","components/Player.tsx","utils/data.ts","utils/effectRepository.ts","utils/playGame.ts","components/Game.tsx","hooks/usePressedKeys.tsx","components/PlayerBuilder.tsx","hooks/useScroll.tsx","components/EncounterBuilder.tsx","geneticalgorithm/geneticalgorithm.js","tinkerer/tinkerer.ts","menuStateMachine.ts","components/menus/Menu.tsx","App.tsx","serviceWorkerRegistration.ts","reportWebVitals.ts","index.tsx"],"names":["EnemyCard","effects","enemy","enemyStats","isSelected","onSelect","latestAttack","canAct","hotkey","Card","bg","undefined","Body","Title","lore","name","hp","current","Text","distance","status","bleed","turns","rolls","map","idx","Seq","countBy","e","display","toArray","v","find","a","range","priority","tooltip","OverlayTrigger","placement","delay","show","hide","overlay","Popover","Header","as","length","join","toFixed","Button","disabled","onClick","toUpperCase","effectFunCall","t","Array","isArray","index","parameters","safeEntries","o","Object","entries","PlayerCard","selectedButtons","player","playerStats","onClickEffect","lastAction","disabledSkills","setDisabledSkills","Subtitle","className","build","class","max","stamina","ButtonGroup","k","bot","eot","ToggleButton","checked","Set","has","value","id","type","variant","onChange","event","currentTarget","delete","add","Stack","direction","gap","values","flatMap","active","_","Math","speed","previousState","play","states","randomEnemy","Chance","pickone","enemies","randomPlayer","statsOverride","buildOverride","rng","string","randomName","age","debug","basic","skill","armor","weapon","offhand","footwear","headgear","charm","consumable","makeStat","staminaPerTurn","attack","defence","defaultStatus","makeRange","number","allRanges","selfRange","amount","dodge","weapons","passives","names","floor","random","effectFun","funs","reduce","acc","params","origin","oldState","newPlay","newState","engineFunctions","currentState","m","_origin","actions","changeStatusPlayer","changeStatusMonster","effectFunRepo","changeDistance","target","attackMonster","modifyPlayerStamina","attackPlayer","lifespan","addEotEffect","addEnemy","s","_m","state","clamp","num","min","Infinity","updateMonster","override","curr","damage","afterDefence","afterArmor","armorSpent","afterBleed","updatePlayer","monster","updateStatus","removeMonster","currPlay","currSnap","filter","key","modify","updatePlayerStat","effect","addBotEffect","statsRepository","turnDeterministicRng","randPerTurn","monsterSeed","monsterChance","keys","floating","fixed","playerPassives","i","playerActions","start","enemiesStats","seed","fun","playerGameStats","enemyGameStats","lastAttacks","toIndexableString","reduceFuns","p","dodgeable","phase","sortBy","priorityBonus","oldPlay","monsterId","targetMonster","startState","repo","f","extractFunction","effectEotCleanup","effectDead","handlePlayerEffect","d","usedSkill","initialState","preBotPlay","preBotState","postBotPlay","postBotState","entitiesBot","eff","postEntitiesBotPlay","postEntitiesBotState","rand","turn","turnRng","pop","turnFunctions","zip","stats","concat","entitiesEot","playerEotEffects","enemiesEotEffects","postPlayerEotPlay","postPlayerEotState","postEotPlay","postEotState","postCleanup","postCleanupState","setSelected","monsterHotkeys","Game","game","solveGame","timeTravel","hint","useState","isLogShown","setShowLog","handleCloseLog","playerSkills","monsterHealth","isPlayerAlive","areMonstersAlive","endGame","pressed","onUp","pressedKeys","updatePressedKeys","downHandler","set","upHandler","useCallback","useEffect","window","addEventListener","removeEventListener","usePressedKeys","valNum","parseInt","save","undo","redo","blob","Blob","JSON","stringify","saveAs","Date","now","Container","fluid","Row","Col","sm","md","Player","xs","Enemy","Modal","onHide","scrollable","centered","closeButton","Footer","ElementPicker","section","options","setField","scrollParams","elRef","useRef","scrollIntoView","useScroll","behavior","block","scrollTo","scrollRef","Form","Label","size","item","ref","PlayerBuilder","onSave","React","form","setForm","setLore","displayType","onSubmit","preventDefault","style","marginBottom","field","Navbar","maxHeight","EncounterBuilder","encounter","setEncounter","found","geneticAlgorithmConstructor","settingWithDefaults","settings","defaults","mutationFunction","crossoverFunction","fitnessFunction","doesABeatBFunction","population","Error","populationSize","phenotype","b","cloneJSON","object","parse","mutate","crossover","mate","evolve","push","populate","otherIndex","temp","randomizePopulationOrder","nextGeneration","competitor","compete","this","best","scored","scoredPopulation","score","bestScore","config","clone","defaultTinkererOptions","playerSeed","weights","tinkerer","iter","optionsOverride","latestState","d6","natural","latest","unavailable","exclude","playerHealth","playerStamina","startPlayerHealth","startPlayerStamina","startMonsterHealth","monsterKillingFitness","playerAlivenessFitness","killSpeedFitness","staminaFitness","fitness","console","log","gen","GeneticAlgorithmConstructor","isDebug","process","inspect","server","WebSocket","Server","port","toMenu","on","MENU","quick","initial","entry","WIN","LOSE","win","lose","single","PLAYER","ENCOUNTER","arcade","cond","internal","victory","defeat","survival","makeArcadeContext","puzzle","SELECTED","COMPLETE","complete","NEXT","SELECT","victories","makeSurvivalContext","makeSingleContext","gameMenuMachine","createMachine","tsTypes","context","arcadeContext","survivalContext","singleContext","main","QUICK","SINGLE","ARCADE","SURVIVAL","guards","isFinal","bumpVictories","assign","_event","reset","c","interpret","devTools","onTransition","Menu","title","SingleGame","onGameEnd","setGame","setRedo","gameState","playState","timeTravelObj","newRedo","slice","iterations","maxBy","App","useMachine","send","matches","result","firstState","lastState","isLocalhost","Boolean","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","catch","error","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById","URL","href","fetch","headers","response","contentType","get","indexOf","ready","unregister","reload","checkValidServiceWorker","serviceWorkerRegistration"],"mappings":"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AAQ+G,IAGV,CAAC,CACCrH,KAAM,CACJC,KAAM,QAERd,QAAS,CACP,CAAE4B,QAAS,QAASO,QAAS,QAASD,SAAU,EAAGlC,QAAS,CAACoD,EAAc,kBAAmBnB,MAAOkG,MAEvG7G,MAAO,CACL,CAAC,GACD,CAAC,GACD,CAAC,GACD,CAAC,GACD,CAAC,KAEF,CACDP,GAAI+G,EAAS,GACb5G,SAAU,EACVmF,MAAOyB,EAAS,GAChBE,OAAQF,EAAS,GACjBG,QAASH,EAAS,GAClB3G,OAAQ+G,KAINS,EAAQ,CACZ,QACA,QACA,SACA,MACA,QACA,UACA,QACA,QACA,QACA,UACA,SACA,SACA,QACA,WACA,QACA,QACA,SACA,QACA,SACA,SACA,SACA,SACA,UACA,SACA,SACA,SACA,OACA,QACA,OACA,QACA,MACA,SACA,SACA,OACA,UACA,QACA,UACA,SACA,UACA,QACA,SACA,SACA,UACA,SACA,OACA,QACA,SACA,SACA,UACA,QACA,OACA,UACA,OACA,SACA,SACA,QACA,UACA,SACA,SACA,OACA,QACA,QACA,SACA,QACA,QACA,SACA,SACA,OACA,OACA,SACA,QACA,QACA,UACA,SACA,QACA,UACA,UACA,UACA,WACA,QACA,WACA,QACA,SACA,SACA,OACA,SACA,QACA,QACA,OACA,WACA,SACA,QACA,UACA,SACA,UACA,SACA,SACA,SACA,SACA,QACA,QACA,OACA,OACA,QACA,QACA,WACA,QACA,UACA,SACA,UACA,QACA,OACA,OACA,OACA,SACA,WACA,OACA,OACA,QACA,MACA,SACA,OACA,UACA,QACA,UACA,SACA,MACA,UACA,QACA,SACA,QACA,SACA,QACA,QACA,QACA,QACA,SACA,QACA,QACA,SACA,QACA,OACA,QACA,SACA,SACA,UACA,QACA,QACA,QACA,OACA,QACA,OACA,QACA,SACA,SACA,QACA,QACA,QACA,QACA,QACA,UACA,UACA,QACA,QACA,QACA,UACA,SACA,QACA,SACA,UACA,SACA,QACA,OACA,SACA,QACA,OACA,UACA,QA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","file":"static/js/main.96b2ed4c.chunk.js","sourcesContent":["import React from \"react\";\nimport { Card, Button, OverlayTrigger, Popover } from \"react-bootstrap\";\nimport { Enemy, Effect, EnemyStats } from \"../utils/types\";\nimport { Seq } from \"immutable\";\n\nconst skillPercents = (effects: Effect[]) =>\n  Seq(effects).countBy((e) => e.display).toArray().map(([display, v], idx) => {\n    const { range, priority, tooltip } = effects.find(a => a.display === display)!!;\n    return <OverlayTrigger\n      key={idx}\n      placement=\"right\"\n      delay={{ show: 100, hide: 250 }}\n      overlay={<Popover>\n        <Popover.Header as=\"h3\">{display}</Popover.Header>\n        <Popover.Body>\n          {tooltip}<br />⏱:{priority}<br />🏹:{range.length === 5 ? 'Any' : range.length === 0 ? 'None' : range.map(a => a + 1).join(\", \")}\n        </Popover.Body>\n      </Popover>}\n    ><>[{(v / effects.length * 100).toFixed(2)}%] {display}<br key={idx} /></>\n    </OverlayTrigger>\n  });\n\nconst EnemyCard: React.FC<{\n  enemy: Enemy;\n  enemyStats: EnemyStats;\n  latestAttack: string | undefined;\n  isSelected?: boolean;\n  onSelect: () => void;\n  canAct: boolean;\n  hotkey: string;\n}> = ({ enemy, enemyStats, isSelected, onSelect, latestAttack, canAct, hotkey }) => (\n  <Card bg={isSelected ? \"info\" : undefined}>\n    <Card.Body>\n      <Card.Title>{enemy.lore.name} {enemyStats.hp.current > 0 ? \"\" : (<b>💀DEAD💀</b>)}</Card.Title>\n      <Card.Text>❤:{enemyStats.hp.current} 🏹:{enemyStats.distance + 1}</Card.Text>\n      {enemyStats.status.bleed.turns > 0 && ` ${enemyStats.status.bleed.turns} 🩸`}\n      {latestAttack && (<Card.Text>Latest attack: {latestAttack}</Card.Text>)}\n      <Card.Text>\n        Next attack prediction:\n        <br />\n        {skillPercents(enemy.rolls[enemyStats.distance].map((idx) => enemy.effects[idx]))}\n        <br />\n      </Card.Text>\n      {canAct && (<Button disabled={isSelected} onClick={onSelect}>[<i>{hotkey.toUpperCase()}</i>] Select</Button>)}\n    </Card.Body>\n  </Card>\n);\n\nexport default EnemyCard;\n","import { Opaque } from \"type-fest\";\nimport { EffectFunParams, EffectFunRepo, EffectFunRepoIndex, StatsFunIndex } from \"./effectRepository\";\n\nexport type Tuple<T, N extends number> = N extends N ? number extends N ? T[] : _TupleOf<T, N, []> : never;\ntype _TupleOf<T, N extends number, R extends unknown[]> = R['length'] extends N ? R : _TupleOf<T, N, [T, ...R]>;\n\nexport type Nel<T> = [T, ...T[]];\n\ntype Length<T extends any[]> =\n  T extends { length: infer L } ? L : never;\ntype BuildTuple<L extends number, T extends any[] = []> =\n  T extends { length: L } ? T : BuildTuple<L, [...T, any]>;\nexport type Subtract<A extends number, B extends number> =\n  BuildTuple<A> extends [...(infer U), ...BuildTuple<B>]\n  ? Length<U>\n  : never;\ntype EQ<A, B> =\n  A extends B\n  ? (B extends A ? true : false)\n  : false;\ntype AtTerminus<A extends number, B extends number> =\n  A extends 0\n  ? true\n  : (B extends 0 ? true : false);\ntype LT<A extends number, B extends number> =\n  AtTerminus<A, B> extends true\n  ? EQ<A, B> extends true\n  ? false\n  : (A extends 0 ? true : false)\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  : LT<Subtract<A, 1>, Subtract<B, 1>>;\n\nexport type TupleUpTo<T, N extends number> =\n  EQ<N, 1> extends true ? [T] : TupleUpTo<T, Subtract<N, 1>> | Tuple<T, N>;\n\nexport type UpTo<N extends number> =\n  EQ<N, 0> extends true ? 0 : UpTo<Subtract<N, 1>> | N;\n\nexport interface Stat {\n  max: number,\n  current: UpTo<Stat['max']>,\n}\n\nexport type Status = { dodge: { active: boolean }, armor: { amount: number }, bleed: { turns: number } };\nexport interface PlayerStats { hp: Stat, stamina: Stat, staminaPerTurn: Stat, speed: Stat, attack: Stat, defence: Stat, status: Status };\nexport interface EnemyStats { hp: Stat, speed: Stat, attack: Stat, defence: Stat, distance: UpTo<Subtract<Distances, 1>>, status: Status };\n\nexport type Priorities = 5;\nexport type Distances = 5;\nexport type MonsterCount = 5;\nexport type Staminas = 10;\n\nexport interface EffectSummary {\n  origin: Target;\n  display: string;\n  phase: string;\n}\n\nexport type DisabledSkills = (keyof BuildRepository)[];\nexport interface Snapshot {\n  player: PlayerStats;\n  enemies: EnemiesStats;\n  target: MonsterTarget;\n  lastAttacks: EffectSummary[];\n  bot?: Nel<[Target, Effect]>;\n  eot?: Nel<[Target, Effect]>;\n  disabledSkills: DisabledSkills;\n};\n\nexport type RNG = Opaque<number[][], 'RNG'>;\n\nexport interface Play {\n  states: Nel<Snapshot>;\n  player: Player;\n  enemies: Enemies,\n  rng: RNG;\n  turns: number;\n  id: string;\n  seed: string | number;\n};\n\ntype ItemOrMonster = string /* TODO all items */ | 'Monster';\nexport type FunIndex = `${ItemOrMonster}:${string}`;\n\nexport type StatsFunRepo = { [key in StatsFunIndex]: StatsFun; }\nexport type StatsFun = (player: PlayerStats, enemies: EnemiesStats) => [PlayerStats, EnemiesStats];\n\nexport type Ranges = UpTo<Subtract<Distances, 1>>[];\n\ninterface EffectFunCallT {\n  index: EffectFunRepoIndex;\n  parameters: EffectFunParams<EffectFunRepoIndex>;\n};\nexport type EffectFunCall = Opaque<EffectFunCallT, EffectFunCallT>;\nexport const effectFunCall = <T extends EffectFunRepoIndex>(t: EffectFunParams<T> extends undefined ? T : [T, EffectFunParams<T>]): EffectFunCall =>\n  (Array.isArray(t) ? { index: t[0], parameters: t[1] } : { index: t, parameters: undefined }) as EffectFunCall;\nexport const callEffectFun = <T extends EffectFunRepoIndex>(repo: EffectFunRepo, t: T, p: EffectFunParams<T>) => {\n  const f = repo[t];\n  // @ts-expect-error: index and parameters are enforced to be compatible at construction and the runtime check above ^^^^\n  return f(p);\n}\n\nexport interface Effect {\n  display: string;\n  tooltip: string;\n  effects: Nel<EffectFunCall>;\n  priority: UpTo<Subtract<Priorities, 1>>;\n  range: Ranges;\n};\nexport interface InventoryEffect extends Effect {\n  stamina: UpTo<Subtract<Staminas, 1>>;\n};\n\nexport type MonsterTarget = UpTo<Subtract<MonsterCount, 1>>;\nexport type PlayerTarget = 'Player';\nexport type Target = MonsterTarget | PlayerTarget;\n\nexport interface BuildRepository {\n  debug: Item[];\n  basic: Item[];\n  class: Item[];\n  skill: Item[];\n  weapon: Item[];\n  offhand: Item[];\n  consumable: Item[];\n  armor: Item[];\n  headgear: Item[];\n  footwear: Item[];\n  charm: Item[];\n}\nexport type Build = {\n  [k in keyof BuildRepository]: Item\n};\n\nexport interface Item {\n  display: string;\n  tooltip?: string;\n  passives?: StatsFunIndex[];\n  bot?: Nel<Effect>;\n  eot?: Nel<Effect>;\n  effects?: Nel<InventoryEffect>;\n  //[key: string]: any;\n};\n\nexport interface Player {\n  id: string;\n  lore: Record<string, string | number>;\n  build: Build;\n};\n\n// Place in the array for now\ntype EffectIdentity = number;\nexport interface Enemy {\n  lore: Record<string, string | number>;\n  effects: Nel<Effect>;\n  rolls: Tuple<EffectIdentity[], Distances>;\n  bot?: Nel<Effect>;\n  eot?: Nel<Effect>;\n}\n\nexport type Enemies = TupleUpTo<Enemy, MonsterCount>;\nexport type EnemiesStats = TupleUpTo<EnemyStats, MonsterCount>;\n\nexport function safeEntries<T, K extends keyof T>(o: {\n  [s in K]: T[s];\n}): [K, T[K]][] {\n  return Object.entries(o).map(([k, v]) => [k as K, v as T[K]]);\n}\n","import React from \"react\";\nimport { Card, Button, Stack, ToggleButton, ButtonGroup, Popover, OverlayTrigger } from \"react-bootstrap\";\nimport { DisabledSkills, Player, PlayerStats, safeEntries } from \"../utils/types\";\nimport { Set } from 'immutable';\n\nconst PlayerCard: React.FC<{\n  selectedButtons: Set<string>,\n  player: Player;\n  playerStats: PlayerStats;\n  canAct: boolean;\n  lastAction: string | undefined;\n  onClickEffect: (index: number) => void;\n  disabledSkills: DisabledSkills;\n  setDisabledSkills: (skills: DisabledSkills) => void;\n}> = ({ selectedButtons, player, playerStats, onClickEffect, canAct, lastAction, disabledSkills, setDisabledSkills }) => (\n  <Card>\n    <Card.Body>\n      <Card.Title>{player.lore.name}{playerStats.hp.current > 0 ? \"\" : (<b> 💀DEAD💀 </b>)}</Card.Title>\n      <Card.Subtitle className=\"mb-2 text-muted\">\n        {player.build.class.display}\n      </Card.Subtitle>\n      <Card.Text>{playerStats.hp.current}/{playerStats.hp.max} ❤ {playerStats.stamina.current}/{playerStats.stamina.max} 💪</Card.Text>\n      {playerStats.status.bleed.turns > 0 && <Card.Text>` ${playerStats.status.bleed.turns} 🩸`</Card.Text>}\n      {lastAction && (<Card.Text>Last action: {lastAction}</Card.Text>)}\n    </Card.Body>\n    {canAct && (<>\n      <b>Passives</b>\n      <ButtonGroup>\n        {safeEntries(player.build)\n          .map(([k, e]) => [k, e, [...(e.bot ?? []), ...(e.eot ?? [])]] as const)\n          .map(([k, e, passives], idx) => passives.length > 0 && (<OverlayTrigger\n            key={idx}\n            placement=\"right\"\n            delay={{ show: 100, hide: 250 }}\n            overlay={<Popover>\n              <Popover.Header as=\"h3\">{e.display}</Popover.Header>\n              <Popover.Body>\n                {e.tooltip}\n              </Popover.Body>\n            </Popover>}\n          >\n            <ToggleButton\n              checked={!Set(disabledSkills).has(k)}\n              value={k}\n              id={`passive-skill-${k}`}\n              type=\"checkbox\"\n              variant=\"outline-primary\"\n              onChange={(event) => setDisabledSkills(\n                event.currentTarget.checked\n                  ? Set(disabledSkills).delete(k).toArray()\n                  : Set(disabledSkills).add(k).toArray())}>\n              {e.display}\n            </ToggleButton>\n          </OverlayTrigger>\n          ))}\n      </ButtonGroup>\n    </>)}\n    {canAct && (<Card.Body>\n      <Stack direction=\"horizontal\" gap={2}>\n        {Object.values(player.build)\n          .flatMap((a) => a.effects ?? [])\n          .map((e, idx) => (<OverlayTrigger\n            key={e.display}\n            placement=\"top\"\n            delay={{ show: 100, hide: 250 }}\n            overlay={<Popover>\n              <Popover.Header as=\"h3\">{e.display}</Popover.Header>\n              <Popover.Body>\n                {e.tooltip}\n              </Popover.Body>\n            </Popover>}\n          >\n            <div>\n              <Button\n                active={selectedButtons.has(e.display)}\n                disabled={playerStats.stamina.current < e.stamina}\n                onClick={(_) => onClickEffect(idx)}\n              >\n                [<i>{idx + 1}</i>] <b>{e.display}</b>\n              </Button>\n              <br />\n              <Card.Text>💪:{e.stamina} ⏱:{Math.max(e.priority + playerStats.speed.current)}<br />🏹:{e.range.length === 5 ? 'Any' : e.range.map(a => a + 1).join(\", \")}</Card.Text>\n            </div>\n          </OverlayTrigger>\n          ))}\n      </Stack>\n    </Card.Body>)}\n  </Card>\n);\n\nexport default PlayerCard;\n","import { Chance } from \"chance\";\nimport { Subtract } from \"type-fest/source/internal\";\nimport { Build, Distances, Enemy, EnemyStats, Item, Player, PlayerStats, Ranges, Snapshot, UpTo, Play, effectFunCall, Stat, Status, BuildRepository } from \"./types\";\n\nexport const startState = (play: Play): Snapshot => play.states[0];\nexport const previousState = (play: Play): Snapshot => play.states[play.states.length - 1];\n\nexport const randomEnemy = (): [Enemy, EnemyStats] => new Chance().pickone(enemies);\n\nexport const randomPlayer = (statsOverride?: PlayerStats, buildOverride?: Partial<Build>): [Player, PlayerStats] => {\n  const rng = new Chance();\n  return [{\n    id: rng.string(),\n    lore: {\n      name: randomName(),\n      age: rng.age(),\n    },\n    build: {\n      debug: build.debug[0],\n      basic: rng.pickone(build.basic),\n      class: rng.pickone(build.class),\n      skill: rng.pickone(build.skill),\n      armor: rng.pickone(build.armor),\n      weapon: rng.pickone(build.weapon),\n      offhand: rng.pickone(build.offhand),\n      footwear: rng.pickone(build.footwear),\n      headgear: rng.pickone(build.headgear),\n      charm: rng.pickone(build.charm),\n      consumable: rng.pickone(build.consumable),\n      ...buildOverride,\n    }\n  }, {\n    hp: makeStat(25),\n    stamina: makeStat(8),\n    staminaPerTurn: makeStat(2),\n    speed: makeStat(0),\n    attack: makeStat(0),\n    defence: makeStat(0),\n    status: defaultStatus,\n    ...statsOverride,\n  }];\n}\n\nexport const makeRange = (...number: UpTo<Subtract<Distances, 1>>[]) => [...new Set(number)] as Ranges;\nexport const allRanges = makeRange(0, 1, 2, 3, 4);\nexport const selfRange = allRanges;\n\nexport const makeStat = (amount: number): Stat => ({ current: amount, max: amount });\nexport const defaultStatus: Status = {\n  dodge: { active: false },\n  armor: { amount: 0 },\n  bleed: { turns: 0 }\n}\n\n\n// TODO\nconst weapons: Item[] = [\n  {\n    display: \"Axe\",\n    effects: [\n      {\n        display: \"Chop\",\n        tooltip: \"Chop\",\n        effects: [effectFunCall(\"Axe:Chop\")],\n        priority: 2,\n        stamina: 2,\n        range: makeRange(0, 1),\n      },\n      {\n        display: \"Cut\",\n        tooltip: \"Cut\",\n        effects: [effectFunCall(\"Axe:Cut\")],\n        priority: 3,\n        stamina: 2,\n        range: makeRange(0),\n      },\n      {\n        display: \"Bleed\",\n        tooltip: \"Makes the enemy bleed\",\n        effects: [effectFunCall(\"Axe:Bleed\")],\n        priority: 3,\n        stamina: 2,\n        range: allRanges,\n      },\n    ],\n  },\n];\n\nexport const build: BuildRepository = {\n  debug: [\n    {\n      display: \"None\",\n    },\n    {\n      display: \"Debug\",\n      effects: [\n        {\n          display: \"GGWP\",\n          tooltip: \"Wins the game\",\n          priority: 1,\n          stamina: 0,\n          range: allRanges,\n          effects: [effectFunCall('Debug:GGWP')]\n        },\n        {\n          display: \"SUDOKU\",\n          tooltip: \"Loses the game\",\n          priority: 1,\n          stamina: 0,\n          range: allRanges,\n          effects: [effectFunCall('Debug:Sudoku')]\n        },\n      ]\n    }\n  ],\n  basic: [\n    {\n      display: \"Basic\",\n      effects: [\n        {\n          display: \"Rest\",\n          tooltip: \"Skip the turn and restore stamina\",\n          priority: 4,\n          stamina: 0,\n          range: selfRange,\n          effects: [effectFunCall('Basic:Rest')]\n        },\n        {\n          display: \"Advance\",\n          tooltip: \"Move closer\",\n          priority: 4,\n          stamina: 1,\n          range: selfRange,\n          effects: [effectFunCall(['Basic:Advance', { amount: 1 }])]\n        },\n        {\n          display: \"Retreat\",\n          tooltip: \"Move farther\",\n          effects: [effectFunCall([\"Basic:Retreat\", { amount: 1 }])],\n          priority: 4,\n          stamina: 1,\n          range: selfRange,\n        }\n      ]\n    }\n  ],\n  class: [\n    {\n      display: \"Warrior\",\n      passives: [\"+Attack\", \"+Defence\", \"+Stamina\"],\n      effects: [\n        {\n          display: \"Strategic Kick\",\n          tooltip: \"Last resource attack\",\n          effects: [effectFunCall([\"Basic:Attack\", { amount: 2 }])],\n          priority: 2,\n          stamina: 1,\n          range: makeRange(1),\n        }\n      ]\n\n    },\n    {\n      display: \"Mage\",\n      passives: [\"+StaPerTurn\", \"+Stamina\", \"-Health\"],\n      effects: [\n        {\n          display: \"Just having a thought\",\n          tooltip: \"Restores stamina for the next action\",\n          priority: 4,\n          stamina: 0,\n          range: selfRange,\n          effects: [effectFunCall(['Basic:Stamina', { amount: 999 }])]\n        },\n      ]\n    },\n    {\n      display: \"Rogue\",\n      passives: [\"+Speed\", \"+Speed\", \"-Attack\", \"-Stamina\"],\n      effects: [\n        {\n          display: \"Strategic retreat\",\n          tooltip: \"Jump backwards\",\n          effects: [effectFunCall([\"Basic:Retreat\", { amount: 4 }])],\n          priority: 4,\n          stamina: 1,\n          range: selfRange,\n        }\n      ]\n    },\n    {\n      display: \"Berserk\",\n      passives: [\"+Attack\", \"+Attack\", \"+Attack\", \"+Attack\", \"-Defence\", \"-Defence\", \"-Health\"],\n    },\n  ],\n  skill: [\n    {\n      display: \"Sturdy\",\n      effects: [\n        {\n          display: \"Endure the pain\",\n          tooltip: \"Blocks some damage\",\n          effects: [effectFunCall([\"Effect:Armor\", { amount: 2 }])],\n          priority: 1,\n          stamina: 2,\n          range: selfRange,\n        },\n      ]\n    },\n    {\n      display: \"Nimble\",\n      effects: [\n        {\n          display: \"Dodge\",\n          tooltip: \"Avoid 1 enemy attack\",\n          effects: [effectFunCall(\"Effect:Dodge\")],\n          priority: 2,\n          stamina: 4,\n          range: selfRange,\n        }\n      ]\n    },\n    {\n      display: \"Resourceful\",\n      effects: [\n        {\n          display: \"Dodge this!\",\n          tooltip: \"Throws a stone\",\n          effects: [effectFunCall([\"Basic:Attack\", { amount: 2 }])],\n          priority: 4,\n          stamina: 3,\n          range: makeRange(3, 4),\n        }\n      ]\n    },\n  ],\n  weapon: weapons,\n  offhand: [\n    {\n      display: \"Hook\",\n      passives: [\"-Stamina\"],\n      effects: [\n        {\n          display: \"Get over here!\",\n          tooltip: \"Moves enemy closer\",\n          effects: [effectFunCall(\"Hook:GetHere\")],\n          priority: 4,\n          stamina: 3,\n          range: makeRange(2, 3, 4),\n        },\n      ],\n    },\n    {\n      display: \"Parry Dagger\",\n      passives: [\"-Defence\"],\n      effects: [\n        {\n          display: \"Get over here!\",\n          tooltip: \"Avoids a melee attack\",\n          effects: [effectFunCall(\"Effect:Dodge\")],\n          priority: 2,\n          stamina: 2,\n          range: makeRange(1),\n        },\n      ],\n    },\n    {\n      display: \"Shield\",\n      passives: [\"+Defence\", \"-Speed\"],\n      effects: [\n        {\n          display: \"Not today!\",\n          tooltip: \"Blocks a lot of damage\",\n          effects: [effectFunCall([\"Effect:Armor\", { amount: 5 }])],\n          priority: 2,\n          stamina: 4,\n          range: selfRange,\n        },\n      ],\n    },\n    {\n      display: \"Focus\",\n      passives: [\"+Speed\", \"+StaPerTurn\"]\n    },\n    {\n      display: \"Wand\",\n      passives: [\"-Defence\", \"-StaPerTurn\"],\n      effects: [\n        {\n          display: \"Magic Bolt\",\n          tooltip: \"Shoots mana bolts until the caster faints\",\n          effects: [effectFunCall(\"Wand:MagicBolt\")],\n          priority: 3,\n          stamina: 1,\n          range: makeRange(3, 4),\n        }\n      ]\n    },\n  ],\n  armor: [\n    {\n      display: \"Heavy\",\n      passives: [\"+Defence\", \"+Defence\", \"+Defence\", \"+Defence\", \"-Speed\", \"-Speed\", \"-StaPerTurn\"],\n    },\n    {\n      display: \"Medium\",\n      passives: [\"+Defence\", \"+Defence\", \"-StaPerTurn\"],\n    },\n    {\n      display: \"Light\",\n      passives: [\"+Defence\"],\n    },\n    {\n      display: \"None\",\n      passives: [],\n    },\n  ],\n  // TODO\n  headgear: [\n    {\n      display: \"Helm\",\n      passives: [\"+Defence\", \"+Defence\", \"-Speed\", \"-StaPerTurn\"],\n      tooltip: \"Big protection for slow combatants\",\n    },\n    {\n      display: \"Feather Cap\",\n      passives: [\"+StaPerTurn\", \"+Stamina\"],\n      tooltip: \"Makes you feel energized, doesn't it?\",\n    },\n    {\n      display: \"Mage Hat\",\n      passives: [\"-StaPerTurn\"],\n      tooltip: \"Small tricks for big plays\",\n      effects: [\n        {\n          display: \"Flash!\",\n          tooltip: \"Blinks you to a better position\",\n          effects: [\n            effectFunCall([\"Basic:Attack\", { amount: 1 }]),\n            effectFunCall([\"Basic:Retreat\", { amount: 2 }])\n          ],\n          priority: 3,\n          stamina: 4,\n          range: makeRange(1, 2),\n        }\n      ]\n    },\n  ],\n  footwear: [\n    {\n      display: \"Slippers of Dooooodge!\",\n      tooltip: \"Allows you to dodge attacks\",\n      passives: [\"-Stamina\"],\n      effects: [\n        {\n          display: \"Advanced Dodge\",\n          tooltip: \"Avoid 1 attack\",\n          effects: [effectFunCall(\"Effect:Dodge\")],\n          priority: 1,\n          stamina: 3,\n          range: selfRange,\n        },\n      ],\n    },\n    {\n      display: \"Boots of Flight\",\n      tooltip: \"Avoid your enemies\",\n      passives: [\"-StaPerTurn\", \"-Defence\"],\n      eot: [{\n        display: \"Flight!\",\n        tooltip: \"Increases distance every turn\",\n        priority: 0,\n        range: allRanges,\n        effects: [effectFunCall('BootsOfFlight:EOT')],\n      }],\n    },\n    {\n      display: \"Greaves of Stability\",\n      tooltip: \"Extra resilient\",\n      passives: [\"+Defence\", \"-Speed\"],\n      effects: [\n        {\n          display: \"Dig your heels\",\n          tooltip: \"Resists damage\",\n          effects: [effectFunCall([\"Effect:Armor\", { amount: 3 }])],\n          priority: 1,\n          stamina: 4,\n          range: selfRange,\n        },\n      ],\n    },\n  ],\n  charm: [\n    {\n      display: \"of Health\",\n      passives: [\"+Health\", \"-Speed\"],\n      tooltip: \"Increases your maximum health\",\n    },\n    {\n      display: \"of Haste\",\n      passives: [\"+StaPerTurn\", \"-Stamina\"],\n      tooltip: \"Increases your maximum stamina regeneration\",\n    },\n    {\n      display: \"of Resilience\",\n      passives: [\"+Stamina\", \"-StaPerTurn\"],\n      tooltip: \"Increases your maximum stamina\",\n    },\n    {\n      display: \"of Strength\",\n      passives: [\"+Attack\", \"-Health\", \"-StaPerTurn\"],\n      tooltip: \"Increases your maximum attack\",\n    },\n    {\n      display: \"of Swiftness\",\n      passives: [\"+Speed\", \"-Attack\"],\n      tooltip: \"Increases your maximum speed\",\n    },\n    {\n      display: \"of Defence\",\n      passives: [\"+Defence\", \"-Stamina\", \"-Speed\"],\n      tooltip: \"Increases your maximum defence\",\n    },\n  ],\n  // TODO\n  consumable: [\n    {\n      display: \"Potion\",\n    },\n  ],\n};\n\nexport const randomName = () => names[Math.floor(Math.random() * names.length)];\n\nexport const enemies: [Enemy, EnemyStats][] = [\n  [{\n    lore: {\n      name: \"Sacapuntas\",\n    },\n    rolls: [\n      [0, 1, 2, 1, 0],\n      [0, 1, 0, 0, 0],\n      [0, 0, 0, 0, 0],\n      [0, 0, 0, 0, 0],\n      [0, 1, 2, 1, 0, 0],\n    ],\n    effects: [\n      { display: \"Swipe\", tooltip: \"Swipe\", priority: 3, effects: [effectFunCall(\"Monster:Swipe\")], range: makeRange(0, 1) },\n      { display: \"Roar\", tooltip: \"Swipe\", priority: 1, effects: [effectFunCall(\"Monster:Roar\")], range: allRanges },\n      { display: \"Jump\", tooltip: \"Swipe\", priority: 2, effects: [effectFunCall(\"Monster:Jump\")], range: makeRange(2, 3, 4) },\n    ],\n  }, {\n    hp: makeStat(25),\n    distance: 4,\n    speed: makeStat(0),\n    attack: makeStat(0),\n    defence: makeStat(0),\n    status: defaultStatus,\n  }],\n  [{\n    lore: {\n      name: \"Toro\",\n    },\n    effects: [\n      { display: \"Swipe\", tooltip: \"Swipe\", priority: 3, effects: [effectFunCall(\"Monster:Swipe\")], range: allRanges },\n      { display: \"Jump\", tooltip: \"Jump\", priority: 2, effects: [effectFunCall(\"Monster:Jump\")], range: makeRange(2, 3, 4) },\n    ],\n    rolls: [\n      [0, 0, 0, 0, 0],\n      [0, 0, 0, 0, 0],\n      [1, 1, 0, 0, 0],\n      [1, 1, 1, 0, 0],\n      [1, 1, 1, 1, 0],\n    ]\n  }, {\n    hp: makeStat(22),\n    distance: 4,\n    speed: makeStat(0),\n    attack: makeStat(0),\n    defence: makeStat(0),\n    status: defaultStatus,\n  }],\n  [{\n    lore: {\n      name: \"Summoner\",\n    },\n    effects: [\n      { display: \"Swipe\", tooltip: \"Swipe\", priority: 3, effects: [effectFunCall(\"Monster:Swipe\")], range: makeRange(0, 1) },\n      { display: \"Jump\", tooltip: \"Jump\", priority: 3, effects: [effectFunCall(\"Monster:Jump\")], range: allRanges },\n      { display: \"Summon Toro\", tooltip: \"Summon Toro\", priority: 4, effects: [effectFunCall([\"Monster:Summon\", { enemy: 1 }])], range: makeRange(2, 3, 4) },\n    ],\n    rolls: [\n      [0, 0, 0, 0, 0],\n      [1, 0, 0, 0, 0],\n      [1, 1, 2, 0, 0],\n      [1, 1, 2, 0, 0],\n      [1, 2, 2, 0, 0],\n    ]\n  }, {\n    hp: makeStat(30),\n    distance: 4,\n    speed: makeStat(0),\n    attack: makeStat(0),\n    defence: makeStat(0),\n    status: defaultStatus,\n  }],\n  [{\n    lore: {\n      name: \"Body\",\n    },\n    effects: [\n      { display: \"Swipe\", tooltip: \"Swipe\", priority: 3, effects: [effectFunCall(\"Monster:Swipe\")], range: makeRange() },\n    ],\n    rolls: [\n      [0],\n      [0],\n      [0],\n      [0],\n      [0],\n    ]\n  }, {\n    hp: makeStat(300),\n    distance: 0,\n    speed: makeStat(0),\n    attack: makeStat(0),\n    defence: makeStat(0),\n    status: defaultStatus,\n  }],\n\n  [{\n    lore: {\n      name: \"Smol\",\n    },\n    effects: [\n      { display: \"Swipe\", tooltip: \"Swipe\", priority: 3, effects: [effectFunCall(\"Monster:Swipe\")], range: makeRange() },\n    ],\n    rolls: [\n      [0],\n      [0],\n      [0],\n      [0],\n      [0],\n    ]\n  }, {\n    hp: makeStat(5),\n    distance: 0,\n    speed: makeStat(0),\n    attack: makeStat(0),\n    defence: makeStat(0),\n    status: defaultStatus,\n  }],\n];\n\nconst names = [\n  \"Lydan\",\n  \"Syrin\",\n  \"Ptorik\",\n  \"Joz\",\n  \"Varog\",\n  \"Gethrod\",\n  \"Hezra\",\n  \"Feron\",\n  \"Ophni\",\n  \"Colborn\",\n  \"Fintis\",\n  \"Gatlin\",\n  \"Jinto\",\n  \"Hagalbar\",\n  \"Krinn\",\n  \"Lenox\",\n  \"Revvyn\",\n  \"Hodus\",\n  \"Dimian\",\n  \"Paskel\",\n  \"Kontas\",\n  \"Weston\",\n  \"Azamarr\",\n  \"Jather\",\n  \"Tekren\",\n  \"Jareth\",\n  \"Adon\",\n  \"Zaden\",\n  \"Eune\",\n  \"Graff\",\n  \"Tez\",\n  \"Jessop\",\n  \"Gunnar\",\n  \"Pike\",\n  \"Domnhar\",\n  \"Baske\",\n  \"Jerrick\",\n  \"Mavrek\",\n  \"Riordan\",\n  \"Wulfe\",\n  \"Straus\",\n  \"Tyvrik\",\n  \"Henndar\",\n  \"Favroe\",\n  \"Whit\",\n  \"Jaris\",\n  \"Renham\",\n  \"Kagran\",\n  \"Lassrin\",\n  \"Vadim\",\n  \"Arlo\",\n  \"Quintis\",\n  \"Vale\",\n  \"Caelan\",\n  \"Yorjan\",\n  \"Khron\",\n  \"Ishmael\",\n  \"Jakrin\",\n  \"Fangar\",\n  \"Roux\",\n  \"Baxar\",\n  \"Hawke\",\n  \"Gatlen\",\n  \"Barak\",\n  \"Nazim\",\n  \"Kadric\",\n  \"Paquin\",\n  \"Kent\",\n  \"Moki\",\n  \"Rankar\",\n  \"Lothe\",\n  \"Ryven\",\n  \"Clawsen\",\n  \"Pakker\",\n  \"Embre\",\n  \"Cassian\",\n  \"Verssek\",\n  \"Dagfinn\",\n  \"Ebraheim\",\n  \"Nesso\",\n  \"Eldermar\",\n  \"Rivik\",\n  \"Rourke\",\n  \"Barton\",\n  \"Hemm\",\n  \"Sarkin\",\n  \"Blaiz\",\n  \"Talon\",\n  \"Agro\",\n  \"Zagaroth\",\n  \"Turrek\",\n  \"Esdel\",\n  \"Lustros\",\n  \"Zenner\",\n  \"Baashar\",\n  \"Dagrod\",\n  \"Gentar\",\n  \"Feston\",\n  \"Syrana\",\n  \"Resha\",\n  \"Varin\",\n  \"Wren\",\n  \"Yuni\",\n  \"Talis\",\n  \"Kessa\",\n  \"Magaltie\",\n  \"Aeris\",\n  \"Desmina\",\n  \"Krynna\",\n  \"Asralyn\",\n  \"Herra\",\n  \"Pret\",\n  \"Kory\",\n  \"Afia\",\n  \"Tessel\",\n  \"Rhiannon\",\n  \"Zara\",\n  \"Jesi\",\n  \"Belen\",\n  \"Rei\",\n  \"Ciscra\",\n  \"Temy\",\n  \"Renalee\",\n  \"Estyn\",\n  \"Maarika\",\n  \"Lynorr\",\n  \"Tiv\",\n  \"Annihya\",\n  \"Semet\",\n  \"Tamrin\",\n  \"Antia\",\n  \"Reslyn\",\n  \"Basak\",\n  \"Vixra\",\n  \"Pekka\",\n  \"Xavia\",\n  \"Beatha\",\n  \"Yarri\",\n  \"Liris\",\n  \"Sonali\",\n  \"Razra\",\n  \"Soko\",\n  \"Maeve\",\n  \"Everen\",\n  \"Yelina\",\n  \"Morwena\",\n  \"Hagar\",\n  \"Palra\",\n  \"Elysa\",\n  \"Sage\",\n  \"Ketra\",\n  \"Lynx\",\n  \"Agama\",\n  \"Thesra\",\n  \"Tezani\",\n  \"Ralia\",\n  \"Esmee\",\n  \"Heron\",\n  \"Naima\",\n  \"Rydna\",\n  \"Sparrow\",\n  \"Baakshi\",\n  \"Ibera\",\n  \"Phlox\",\n  \"Dessa\",\n  \"Braithe\",\n  \"Taewen\",\n  \"Larke\",\n  \"Silene\",\n  \"Phressa\",\n  \"Esther\",\n  \"Anika\",\n  \"Rasy\",\n  \"Harper\",\n  \"Indie\",\n  \"Vita\",\n  \"Drusila\",\n  \"Minha\",\n  \"Surane\",\n  \"Lassona\",\n  \"Merula\",\n  \"Kye\",\n  \"Jonna\",\n  \"Lyla\",\n  \"Zet\",\n  \"Orett\",\n  \"Naphtalia\",\n  \"Turi\",\n  \"Rhays\",\n  \"Shike\",\n  \"Hartie\",\n  \"Beela\",\n  \"Leska\",\n  \"Vemery\",\n  \"Lunex\",\n  \"Fidess\",\n  \"Tisette\",\n  \"Partha\",\n]","import { Opaque } from \"type-fest\";\nimport { allRanges, enemies, makeStat } from \"./data\";\nimport { callEffectFun, Effect, effectFunCall, Enemies, EnemiesStats, Enemy, EnemyStats, FunIndex, MonsterTarget, Nel, Play, PlayerStats, Snapshot, Status, Target } from \"./types\";\n\n// #region Effect funs\n\nexport function extractFunction({ effects }: Effect): ReduceFun {\n  return (origin, play, startState) => effects.reduce((acc, { index, parameters }) =>\n    callEffectFun(effectFunRepo, index, parameters)(origin, ...acc), [play, startState]);\n}\n\nconst effectFun = <T>(...funs: Nel<ParametrizedFun<T>>): EffectFun<T> =>\n  // TODO check direction of the fold\n  (funs.length > 1\n    ? funs.reduce((acc, value) => (params) => (origin, play, oldState) => {\n      const [newPlay, newState] = acc(params)(origin, play, oldState);\n      return value(params)(origin, newPlay, newState);\n    }) : funs[0]) as EffectFun<T>;\n\nexport type ReduceFun = (origin: Target, play: Play, newState: Snapshot) => [Play, Snapshot];\nexport type ParametrizedFun<T> = (params: T) => ReduceFun;\nexport type EffectFun<T> = Opaque<ParametrizedFun<T>, ParametrizedFun<T>>;\n\nexport type EffectFunRepo = EffectFunctionRepository;\nexport type EffectFunRepoIndex = keyof EffectFunctionT & FunIndex;\nexport type EffectFunParams<T extends EffectFunRepoIndex> = Parameters<EffectFunRepo[T]>[0];\n\nexport type EffectFunctionRepository = { [k in keyof EffectFunctionT]: (params: EffectFunctionT[k]) => ReduceFun };\nexport type EffectFunctionT = {\n  'Monster:Summon': { enemy: number };\n  'Monster:Dead': undefined;\n  'Monster:Attack': { amount: number };\n  'Basic:Rest': undefined;\n  'Basic:Advance': { amount: number };\n  'Basic:Retreat': { amount: number };\n  'Basic:Attack': { amount: number };\n  'Basic:Stamina': { amount: number };\n  'Effect:Poison': { target: Target; lifespan: number };\n  'Effect:Dodge': undefined;\n  'Effect:Armor': { amount: number };\n  'Wand:MagicBolt': undefined;\n  'Axe:Chop': undefined;\n  'Axe:Cut': undefined;\n  'Axe:Bleed': undefined;\n  'Hook:GetHere': undefined;\n  'Monster:Swipe': undefined;\n  'Monster:Roar': undefined;\n  'Monster:Jump': undefined;\n  'BootsOfFlight:EOT': undefined;\n  'Utility:Cleanup': undefined;\n  'Debug:GGWP': undefined;\n  'Debug:Sudoku': undefined;\n}\n\nconst engineFunctions = {\n  'Debug:GGWP': effectFun(\n    () => (_, play, currentState) => [play, { ...currentState, enemies: currentState.enemies.map(m => ({ ...m, hp: { ...m.hp, current: 0 } })) as EnemiesStats }]\n  ),\n  'Debug:Sudoku': effectFun(\n    () => (_, play, currentState) => [play, { ...currentState, player: { ...currentState.player, hp: { ...currentState.player.hp, current: 0 } } }]\n  ),\n  'Utility:Cleanup': effectFun(\n    () => (_origin, play, currentState) => [play, actions.changeStatusPlayer(currentState, (o) => ({ ...o, armor: { amount: 0 }, bleed: { turns: Math.max(o.bleed.turns - 1, 0) }, dodge: { active: false } }))],\n    () => (_origin, play, currentState) => [play, currentState.enemies.reduce((acc, v, idx) => actions.changeStatusMonster(acc, idx as MonsterTarget, (o) => ({ ...o, armor: { amount: 0 }, bleed: { turns: Math.max(o.bleed.turns - 1, 0) }, dodge: { active: false } })), currentState)],\n  ),\n}\n\nconst effectFunRepo: EffectFunctionRepository = {\n  ...engineFunctions,\n  // #region BASIC\n  'Basic:Rest': effectFun(\n    () => (_origin, play, currentState) => [play, currentState]\n  ),\n  'Basic:Advance': effectFun(\n    ({ amount }) => (_origin, play, currentState) => [play, actions.changeDistance(currentState, currentState.target, -amount)]\n  ),\n  'Basic:Retreat': effectFun(\n    ({ amount }) => (_origin, play, currentState) => [play, actions.changeDistance(currentState, currentState.target, amount)]\n  ),\n  'Basic:Attack': effectFun(\n    ({ amount }) => (_origin, play, currentState) => [play, actions.attackMonster(currentState, currentState.target, amount)]\n  ),\n  'Basic:Stamina': effectFun(\n    ({ amount }) => (_origin, play, currentState) => [play, actions.modifyPlayerStamina(currentState, amount)]\n  ),\n  // #endregion BASIC\n  // #region EFFECTS\n  'Effect:Dodge': effectFun(\n    () => (_origin, play, currentState) => [play, actions.changeStatusPlayer(currentState, (o) => ({ ...o, dodge: { active: true } }))]\n  ),\n  'Effect:Armor': effectFun(\n    () => (_, play, currentState) => [play, actions.changeStatusPlayer(currentState, (o) => ({ ...o, armor: { amount: 3 } }))]\n  ),\n  'Effect:Poison': effectFun(\n    ({ target }) => (origin, play, currentState) => [play, target === 'Player' ? actions.attackPlayer(currentState, 1) : actions.attackMonster(currentState, target, 1)],\n    (params) => (origin, play, currentState) => [play,\n      (params.target !== 'Player' && currentState.enemies[params.target]!!.hp.current > 0)\n        && (params.lifespan > 0)\n        ? actions.addEotEffect(currentState, origin, { display: `Poison ${play.enemies[params.target]!!.lore.name} [${params.target + 1}]`, tooltip: '', range: allRanges, priority: 4, effects: [effectFunCall(['Effect:Poison', { ...params, lifespan: params.lifespan - 1 }])] })\n        : currentState],\n  ),\n  // #endregion EFFECTS\n  // #region MONSTERS\n  'Monster:Attack': effectFun(\n    ({ amount }) => (_origin, play, currentState) => [play, actions.attackPlayer(currentState, amount)]\n  ),\n  'Monster:Summon': effectFun(\n    ({ enemy }) => (_origin, play, currentState) => actions.addEnemy(play, currentState, enemies[enemy][0], enemies[enemy][1])\n  ),\n  'Monster:Dead': effectFun(\n    () => (_origin, play, currentState) => [play, currentState]\n  ),\n  'Monster:Swipe': effectFun(\n    () => (_, play, currentState) => [play, actions.attackPlayer(currentState, 2)]\n  ),\n  'Monster:Roar': effectFun(\n    () => (_, play, currentState) => [play, actions.modifyPlayerStamina(currentState, -5)]\n  ),\n  'Monster:Jump': effectFun(\n    () => (origin, play, currentState) => [play, actions.changeDistance(currentState, origin, -2)]\n  ),\n  // #endregion MONSTERS\n  // #region ITEMS\n  'Axe:Chop': effectFun(\n    () => (_, play, currentState) => [play, actions.attackMonster(currentState, currentState.target, 3)]\n  ),\n  'Axe:Cut': effectFun(\n    () => (_, play, currentState) => [play, actions.attackMonster(currentState, currentState.target, 3)],\n    () => (origin, play, currentState) => [play,\n      actions.addEotEffect(currentState, origin, { display: `Poison ${play.enemies[currentState.target]!!.lore.name} [${currentState.target + 1}]`, tooltip: '', range: allRanges, priority: 4, effects: [effectFunCall(['Effect:Poison', { target: currentState.target, lifespan: 2 }])] })]\n  ),\n  'Axe:Bleed': effectFun(\n    () => (_, play, currentState) => [play, actions.attackMonster(currentState, currentState.target, 2)],\n    () => (_, play, currentState) => [play, actions.changeStatusMonster(currentState, currentState.target, (o) => ({ ...o, bleed: { turns: o.bleed.turns + 5 } }))]\n  ),\n  'Hook:GetHere': effectFun(\n    () => (_, play, currentState) => [play, actions.attackMonster(currentState, currentState.target, 3)],\n    () => (_origin, play, currentState) => [play, actions.changeDistance(currentState, currentState.target, -1)]\n  ),\n  'BootsOfFlight:EOT': effectFun(\n    () => (_, play, currentState) => [play, currentState.enemies.reduce((s, _m, idx) => actions.changeDistance(s, idx as MonsterTarget, -2), currentState)]\n  ),\n  'Wand:MagicBolt': effectFun(\n    () => (_, play, currentState) => {\n      let state = currentState;\n      while (state.player.stamina.current) {\n        state = actions.modifyPlayerStamina(state, -2);\n        state = actions.attackMonster(state, currentState.target, 1)\n      }\n      return [play, state];\n    }\n  ),\n  // #endregion ITEMS\n};\n\n// #endregion\n// #region Modify state\n\nconst clamp = (num: number, min: number, max: number = Infinity) =>\n  Math.min(Math.max(num, min), max);\n\nconst updateMonster = (enemies: EnemiesStats, target: Target, override: (stats: EnemyStats) => Partial<EnemyStats>): EnemiesStats =>\n  enemies.map((m, idx) =>\n    (idx === target)\n      ? { ...m, ...override(m) }\n      : m) as EnemiesStats;\n\nconst updatePlayer = (curr: Snapshot, override: (player: PlayerStats) => Partial<PlayerStats>): Snapshot => {\n  return {\n    ...curr,\n    player: { ...curr.player, ...override(curr.player) }\n  };\n}\n\nconst updatePlayerStat = <T extends keyof PlayerStats>(curr: Snapshot, key: T, modify: (player: PlayerStats[T]) => Partial<PlayerStats[T]>): Snapshot => {\n  const player = curr.player;\n  player[key] = {\n    ...player[key],\n    ...modify(player[key])\n  }\n  return {\n    ...curr,\n    player\n  };\n}\n\nconst actions = {\n  attackPlayer,\n  attackMonster,\n  changeStatusPlayer: (curr: Snapshot, updateStatus: (oldStatus: Status) => Status): Snapshot => ({\n    ...curr,\n    player: { ...curr.player, status: updateStatus(curr.player.status) }\n  }),\n  changeStatusMonster: (curr: Snapshot, target: MonsterTarget, updateStatus: (oldStatus: Status) => Status): Snapshot => ({\n    ...curr,\n    enemies: updateMonster(curr.enemies, target, ({ status }) => ({ status: updateStatus(status) })),\n  }),\n  changeDistance: (curr: Snapshot, origin: Target, amount: number): Snapshot =>\n  ({\n    ...curr,\n    enemies: updateMonster(curr.enemies, origin, ({ distance }) => ({ distance: clamp(distance + amount, 0, 4) as MonsterTarget })),\n  }),\n  removeMonster: (currPlay: Play, currSnap: Snapshot, target: MonsterTarget): [Play, Snapshot] =>\n    [\n      { ...currPlay, enemies: currPlay.enemies.filter((_, idx) => idx === target) as Enemies },\n      { ...currSnap, target: 0, enemies: currSnap.enemies.filter((_, idx) => idx === target) as EnemiesStats }\n    ],\n  modifyPlayerStamina: (\n    curr: Snapshot,\n    amount: number,\n  ): Snapshot =>\n    updatePlayerStat(curr, 'stamina', stamina => ({\n      current: clamp(stamina.current + amount, 0, stamina.max)\n    })),\n  addEotEffect: (\n    curr: Snapshot,\n    origin: Target,\n    effect: Effect,\n  ): Snapshot => ({\n    ...curr,\n    eot: [...(curr.eot ?? []), [origin, effect]],\n  }),\n  addBotEffect: (\n    curr: Snapshot,\n    origin: Target,\n    effect: Effect,\n  ): Snapshot => ({\n    ...curr,\n    bot: [...(curr.eot ?? []), [origin, effect]],\n  }),\n  addEnemy: (\n    play: Play,\n    curr: Snapshot,\n    enemy: Enemy,\n    enemyStats: EnemyStats,\n  ): [Play, Snapshot] => {\n    return play.enemies.length < 5\n      ? [{\n        ...play,\n        enemies: [...play.enemies, enemy] as Enemies,\n      }, {\n        ...curr,\n        enemies: [...curr.enemies, enemyStats] as EnemiesStats,\n      }]\n      : [play, curr];\n  }\n};\n\nfunction attackMonster(curr: Snapshot, target: MonsterTarget, amount: number): Snapshot {\n  const monster = curr.enemies[target]!!;\n  const armor = monster.status.armor.amount;\n  const damage = amount + curr.player.attack.current;\n  const afterDefence = Math.max(damage - monster.defence.current, 0);\n  const afterArmor = Math.max(afterDefence - armor, 0);\n  const armorSpent = armor - (afterDefence - afterArmor);\n  const afterBleed = afterArmor + (monster.status.bleed.turns > 0 ? 1 : 0);\n  return ({\n    ...curr,\n    enemies: updateMonster(curr.enemies, target, ({ status, hp }) => ({\n      hp: { max: hp.max, current: clamp(hp.current - afterBleed, 0, hp.max) },\n      status:\n        { ...status, armor: { amount: armorSpent } }\n    })),\n  });\n}\n\nfunction attackPlayer(curr: Snapshot, amount: number): Snapshot {\n  const armor = curr.player.status.armor.amount;\n  const damage = amount + curr.player.attack.current;\n  const afterDefence = Math.max(damage - curr.player.defence.current, 0);\n  const afterArmor = Math.max(afterDefence - armor, 0);\n  const armorSpent = armor - (afterDefence - afterArmor);\n  const afterBleed = afterArmor + (curr.player.status.bleed.turns > 0 ? 1 : 0);\n  return updatePlayer(curr, ({ hp, status }) => ({\n    hp: { max: hp.max, current: clamp(hp.current - afterBleed, 0, hp.max) },\n    status: { ...status, armor: { amount: status.armor.amount - armorSpent } }\n  }));\n}\n\n// #endregion\n// #region Stat funs\n\nexport type StatsFunIndex = keyof typeof statsRepository;\nexport const statsRepository = {\n  '+Health': (player: PlayerStats, enemies: EnemiesStats): [PlayerStats, EnemiesStats] => [{ ...player, hp: makeStat(player.hp.current + 10) }, enemies],\n  '+StaPerTurn': (player: PlayerStats, enemies: EnemiesStats): [PlayerStats, EnemiesStats] => [{ ...player, staminaPerTurn: makeStat(player.staminaPerTurn.current + 1) }, enemies],\n  '+Stamina': (player: PlayerStats, enemies: EnemiesStats): [PlayerStats, EnemiesStats] => [{ ...player, stamina: makeStat(player.stamina.current + 3) }, enemies],\n  '+Attack': (player: PlayerStats, enemies: EnemiesStats): [PlayerStats, EnemiesStats] => [{ ...player, attack: makeStat(player.attack.current + 1) }, enemies],\n  '+Speed': (player: PlayerStats, enemies: EnemiesStats): [PlayerStats, EnemiesStats] => [{ ...player, speed: makeStat(player.speed.current + 1) }, enemies],\n  '+Defence': (player: PlayerStats, enemies: EnemiesStats): [PlayerStats, EnemiesStats] => [{ ...player, defence: makeStat(player.defence.current + 1) }, enemies],\n\n  '-Health': (player: PlayerStats, enemies: EnemiesStats): [PlayerStats, EnemiesStats] => [{ ...player, hp: makeStat(player.hp.current - 10) }, enemies],\n  '-StaPerTurn': (player: PlayerStats, enemies: EnemiesStats): [PlayerStats, EnemiesStats] => [{ ...player, staminaPerTurn: makeStat(player.staminaPerTurn.current - 1) }, enemies],\n  '-Stamina': (player: PlayerStats, enemies: EnemiesStats): [PlayerStats, EnemiesStats] => [{ ...player, stamina: makeStat(player.stamina.current - 3) }, enemies],\n  '-Attack': (player: PlayerStats, enemies: EnemiesStats): [PlayerStats, EnemiesStats] => [{ ...player, attack: makeStat(player.attack.current - 1) }, enemies],\n  '-Speed': (player: PlayerStats, enemies: EnemiesStats): [PlayerStats, EnemiesStats] => [{ ...player, speed: makeStat(player.speed.current - 1) }, enemies],\n  '-Defence': (player: PlayerStats, enemies: EnemiesStats): [PlayerStats, EnemiesStats] => [{ ...player, defence: makeStat(player.defence.current - 1) }, enemies],\n}\n\n// #endregion","import { Enemies, Player, Snapshot, MonsterTarget, Target, InventoryEffect, EnemiesStats, PlayerStats, Play, RNG, StatsFun, Effect, PlayerTarget, effectFunCall, DisabledSkills, safeEntries } from \"./types\";\nimport { Seq, Set } from \"immutable\";\nimport { allRanges, previousState } from \"./data\";\nimport { Chance } from \"chance\";\n// @ts-ignore fails on scripts despite having a d.ts file\nimport { toIndexableString } from 'pouchdb-collate';\nimport { extractFunction, statsRepository } from \"./effectRepository\";\n\n/**\n * @returns min inclusive, max exclusive rand\n */\nfunction turnDeterministicRng(turns: number, randPerTurn: number, monsterSeed: string | number): RNG {\n  const monsterChance = new Chance(monsterSeed);\n  const monsterRng =\n    [...Array(turns).keys()]\n      .map(_ => [...Array(randPerTurn).keys()]\n        .map(_ => monsterChance.floating({ min: 0, max: 1, fixed: 2 })));\n  return monsterRng as RNG;\n}\n\nexport const turnRng = (play: Play, turn: number): ((min: number, max: number) => number) => {\n  const turnRng = [...play.rng[turn]];\n  return (min: number, max: number) => Math.floor(((max - min) * turnRng.pop()!!) + min);\n}\n\nexport const playerPassives = (player: Player): StatsFun[] =>\n  Object.values(player.build).flatMap((s) => s.passives ?? []).map(i => statsRepository[i]);\n\nexport const playerActions = (player: Player): InventoryEffect[] =>\n  Object.values(player.build).flatMap((s) => s.effects ?? []);\n\nconst enemiesBotEffects = (enemies: Enemies): [MonsterTarget, Effect][] =>\n  enemies.flatMap((e, idx) => (e.bot ?? []).map(eff => [idx as MonsterTarget, eff] as const))\n    // Sure, typescript\n    .map(a => [...a]);\n\nconst enemiesEotEffects = (enemies: Enemies): [MonsterTarget, Effect][] =>\n  enemies.flatMap((e, idx) => (e.eot ?? []).map(eff => [idx as MonsterTarget, eff] as const))\n    // Sure, typescript\n    .map(a => [...a]);\n\nexport const playerBotEffects = (player: Player, d: DisabledSkills): [PlayerTarget, Effect][] =>\n  safeEntries(player.build).flatMap(([k, s]) => !Set(d).has(k) ? s.bot ?? [] : []).map(a => ['Player', a]);\n\nexport const playerEotEffects = (player: Player, d: DisabledSkills): [PlayerTarget, Effect][] =>\n  safeEntries(player.build).flatMap(([k, s]) => !Set(d).has(k) ? s.eot ?? [] : []).map(a => ['Player', a]);\n\nexport default function start(player: Player, playerStats: PlayerStats, enemies: Enemies, enemiesStats: EnemiesStats, turns: number, seed: number | string, randPerTurn: number = 20): Play {\n  const [playerGameStats, enemyGameStats] = playerPassives(player).reduce(([p, e], fun) => fun(p, e), [playerStats, enemiesStats] as const);\n  return {\n    player,\n    enemies,\n    states: [{\n      player: playerGameStats,\n      enemies: enemyGameStats,\n      target: 0,\n      lastAttacks: [],\n      disabledSkills: []\n    }],\n    rng: turnDeterministicRng(turns, randPerTurn, seed),\n    turns,\n    id: toIndexableString([player, enemies, turns, seed]),\n    seed,\n  };\n}\n\nconst clamp = (num: number, min: number, max: number = Infinity) =>\n  Math.min(Math.max(num, min), max);\n\nconst reduceFuns = (funs: [Target, Effect][], p: Play, s: Snapshot, dodgeable: boolean, phase: string): [Play, Snapshot] =>\n  Seq(funs)\n    .sortBy(([origin, a]) => {\n      const priorityBonus = origin === 'Player' ? s.player.speed.current : s.enemies[origin]!!.speed.current;\n      return clamp(a.priority - priorityBonus, 0, 4);\n    })\n    .reduce((acc, value) => {\n      const [origin, effect] = value;\n      const [oldPlay, oldState] = acc;\n      const monsterId = origin === 'Player' ? oldState.target : origin;\n      const targetMonster = oldState.enemies[monsterId]!!;\n      const isInRange = Set([...effect.range]).has(targetMonster.distance);\n\n      if (!isInRange) {\n        const newState: Snapshot = {\n          ...oldState,\n          lastAttacks: [...oldState.lastAttacks, { origin, display: `❌❌WHIFFED❌❌ ${effect.display}`, phase }]\n        };\n        return [oldPlay, newState];\n      }\n\n      const monsterDodged = dodgeable && origin === 'Player' && targetMonster.status.dodge.active;\n      if (monsterDodged) {\n        const newState: Snapshot = {\n          ...oldState,\n          enemies: oldState.enemies.map((e, i) => i === monsterId ? { ...e, status: { ...e.status, dodge: { active: false } } } : e) as EnemiesStats,\n          lastAttacks: [...oldState.lastAttacks, { origin, display: `💨💨DODGED💨💨 ${effect.display}`, phase }]\n        };\n        return [oldPlay, newState];\n      }\n\n      const playerDodged = dodgeable && origin !== 'Player' && oldState.player.status.dodge.active;\n      if (playerDodged) {\n        const newState: Snapshot = {\n          ...oldState,\n          player: { ...oldState.player, status: { ...oldState.player.status, dodge: { active: false } } },\n          lastAttacks: [...oldState.lastAttacks, { origin, display: `💨💨DODGED💨💨 ${effect.display}`, phase }]\n        };\n        return [oldPlay, newState];\n      }\n\n      const [newPlay, newState] = extractFunction(effect)(origin, oldPlay, oldState);\n      const finalState: Snapshot = { ...newState, lastAttacks: [...newState.lastAttacks, { origin, display: effect.display, phase }] };\n      return [newPlay, finalState];\n    }, [p, s]);\n\nconst applyEffectStamina = (amount: number): Effect =>\n  ({ display: `${amount >= 0 ? '+' : ''}${amount} 💪`, tooltip: `Use ${amount} stamina`, effects: [effectFunCall(['Basic:Stamina', { amount: -amount }])], range: allRanges, priority: 0 });\n\nconst effectEotCleanup: Effect =\n  ({ display: 'Cleanup', tooltip: 'Cleanup', effects: [effectFunCall('Utility:Cleanup')], range: allRanges, priority: 0 });\n\nconst effectDead: Effect =\n  { display: \"⚰\", tooltip: \"⚰\", priority: 4, effects: [effectFunCall(\"Monster:Dead\")], range: allRanges };\n\nexport const handlePlayerEffect = (play: Play, index: number): Play => {\n\n  const usedSkill = playerActions(play.player)[index];\n  const bot = previousState(play).bot ?? [];\n  const eot = previousState(play).eot ?? [];\n\n  const initialState: Snapshot = {\n    ...previousState(play),\n    lastAttacks: [],\n    bot: undefined,\n    eot: undefined,\n  };\n\n  // Stamina\n  const [preBotPlay, preBotState] =\n    reduceFuns([['Player', applyEffectStamina(previousState(play).player.staminaPerTurn.current - usedSkill.stamina)]], play, initialState, false, 'STAMINA');\n\n  // BOT\n  // Lingering effects\n  const [postBotPlay, postBotState] = reduceFuns(bot, preBotPlay, preBotState, false, 'BOT');\n  // Player & Monster effects\n  const entitiesBot: [Target, Effect][] = [...playerBotEffects(postBotPlay.player, postBotState.disabledSkills), ...enemiesBotEffects(postBotPlay.enemies)];\n  const [postEntitiesBotPlay, postEntitiesBotState] = reduceFuns(entitiesBot, postBotPlay, postBotState, false, 'BOT');\n\n  // Turn\n  const rand = turnRng(postEntitiesBotPlay, postEntitiesBotPlay.states.length);\n  const turnFunctions: [Target, Effect][] = Seq(postEntitiesBotPlay.enemies).zip(Seq(postEntitiesBotState.enemies))\n    .map(([e, stats], idx) =>\n      [idx as Target,\n      stats.hp.current > 0\n        ? e.effects[e.rolls[stats.distance][rand(0, e.rolls[stats.distance].length)]]\n        : effectDead] as const)\n    .concat([['Player' as Target, usedSkill] as const])\n    .toArray()\n    // Sure, typescript\n    .map(a => [...a]);\n\n  const [newPlay, newState] =\n    reduceFuns(turnFunctions, postEntitiesBotPlay, postEntitiesBotState, true, 'MAIN');\n\n  // EOT\n  // Player & Monster effects\n  const entitiesEot = [...playerEotEffects(newPlay.player, newState.disabledSkills), ...enemiesEotEffects(newPlay.enemies)];\n  const [postPlayerEotPlay, postPlayerEotState] = reduceFuns(entitiesEot, newPlay, newState, false, 'EOT');\n  // Lingering effects\n  const [postEotPlay, postEotState] = reduceFuns(eot, postPlayerEotPlay, postPlayerEotState, false, 'EOT');\n  // Cleanup\n  const [postCleanup, postCleanupState] = reduceFuns([['Player' as Target, effectEotCleanup]], postEotPlay, postEotState, false, 'EOT');\n\n  return {\n    ...postCleanup,\n    states: [...postCleanup.states, postCleanupState],\n  };\n};\n\nexport const setSelected = (play: Play, target: MonsterTarget): Play => {\n  play.states[play.states.length - 1].target = target;\n  return {\n    ...play,\n    states: [...play.states],\n  };\n}\n\nexport const setDisabledSkills = (play: Play, disabled: DisabledSkills): Play => {\n  play.states[play.states.length - 1].disabledSkills = disabled;\n  return {\n    ...play,\n    states: [...play.states],\n  };\n}\n\nexport type PlayState = 'win' | 'loss' | 'playing'\n\nexport const playState = (play: Play): PlayState => {\n  const state = play.states[play.states.length - 1];\n  return state.player.hp.current <= 0\n    ? 'loss'\n    : state.enemies.reduce((acc, monster) => acc + monster.hp.current, 0) <= 0\n      ? 'win'\n      : 'playing';\n}\n","import { Container, Row, Col, Card, Modal, ButtonGroup } from \"react-bootstrap\";\n\nimport { DisabledSkills, MonsterTarget, Play } from \"../utils/types\";\n\nimport EnemyCard from \"./Enemy\";\nimport PlayerCard from \"./Player\";\nimport usePressedKeys from \"../hooks/usePressedKeys\";\nimport { playerActions } from \"../utils/playGame\";\nimport { Seq, Set } from \"immutable\";\nimport { previousState } from \"../utils/data\";\nimport { Button } from \"react-bootstrap\";\nimport saveAs from 'file-saver';\nimport { useCallback, useState } from \"react\";\n\nexport type GameProps = {\n  game: Play;\n  setSelected: (target: MonsterTarget) => void;\n  setDisabledSkills: (disabled: DisabledSkills) => void;\n  handlePlayerEffect: (index: number) => void,\n  solveGame: (iterations: number) => void,\n  hint: (iterations: number) => void,\n  timeTravel: { undo: () => void; redo: (() => void) | undefined } | undefined,\n};\n\nconst monsterHotkeys = [\"q\", \"w\", \"e\", \"r\", \"t\", \"y\"];\n\nconst Game = ({ handlePlayerEffect, setSelected, setDisabledSkills, game, solveGame, timeTravel, hint }: GameProps): JSX.Element => {\n  const { player, enemies } = game;\n  const { player: playerStats, enemies: enemiesStats, target, lastAttacks, disabledSkills } = previousState(game);\n  const [isLogShown, setShowLog] = useState(false);\n\n  const handleCloseLog = () => setShowLog(false);\n  const handleShowLog = () => setShowLog(true);\n\n  const playerSkills = playerActions(player);\n  const monsterHealth = enemiesStats.reduce((acc, m) => m.hp.current + acc, 0);\n  const isPlayerAlive = playerStats.hp.current > 0;\n  const areMonstersAlive = monsterHealth > 0;\n  const endGame = game.states.length <= game.turns;\n  const canAct = isPlayerAlive && areMonstersAlive && endGame;\n\n  const pressed = usePressedKeys((key) => {\n    if (!canAct) return;\n    const valNum = parseInt(key);\n    if (valNum > 0 && valNum <= playerSkills.length) {\n      const hasStamina = playerSkills[valNum - 1].stamina <= playerStats.stamina.current;\n      if (!hasStamina) return;\n      handlePlayerEffect(valNum - 1);\n    }\n    if (key === \"h\") {\n      hint(100);\n    }\n\n    if (key === \"l\") {\n      setShowLog(!isLogShown);\n    }\n\n    if (key === \"s\") {\n      save();\n    }\n\n    if (key === \"a\" && game.states.length > 1 && timeTravel) {\n      timeTravel.undo();\n    }\n    if (key === \"d\" && timeTravel && timeTravel.redo != null) {\n      timeTravel.redo();\n    }\n\n    if (key === monsterHotkeys[0] && enemies.length > 0) {\n      setSelected(0 as MonsterTarget);\n    }\n    if (key === monsterHotkeys[1] && enemies.length > 1) {\n      setSelected(1 as MonsterTarget);\n    }\n    if (key === monsterHotkeys[2] && enemies.length > 2) {\n      setSelected(2 as MonsterTarget);\n    }\n    if (key === monsterHotkeys[3] && enemies.length > 3) {\n      setSelected(3 as MonsterTarget);\n    }\n    if (key === monsterHotkeys[4] && enemies.length > 4) {\n      setSelected(4 as MonsterTarget);\n    }\n  });\n\n  const selectedButtons = Set<string>([...pressed].flatMap((key: string) => {\n    const valNum = parseInt(key);\n    if (valNum > 0 && valNum <= playerSkills.length) {\n      return [playerSkills[valNum - 1].display];\n    } else {\n      return [];\n    }\n  }));\n\n  const save = useCallback(() => {\n    const blob = new Blob([JSON.stringify(game)], { type: \"application/json;charset=utf-8\" });\n    saveAs(blob, `buildmancer-${Date.now()}.json`);\n  }, [game]);\n\n  return (\n    <>\n      <Container fluid>\n        <Row className=\"justify-content-center align-items-flex-start\">\n          <Col sm={12} md={8}>\n            <Card.Title>\n              Turn {game.states.length} out of {game.turns} {!isPlayerAlive ? (<b>❌❌DEFEAT❌❌</b>) : !areMonstersAlive ? (<b>🎉🎉VICTORY🎉🎉</b>) : \"\"}\n            </Card.Title>\n            <PlayerCard\n              player={player}\n              playerStats={playerStats}\n              disabledSkills={disabledSkills}\n              setDisabledSkills={setDisabledSkills}\n              onClickEffect={(idx) => handlePlayerEffect(idx)}\n              selectedButtons={selectedButtons}\n              lastAction={lastAttacks.filter(a => a.origin === 'Player').map(a => `[${a.phase}] ${a.display}`).join(\" -> \") ?? undefined}\n              canAct={canAct} />\n            <Row>\n              {timeTravel != null && (\n                <ButtonGroup>\n                  {game.states.length > 1 && (<Button onClick={(_) => timeTravel.undo()}>[<i>A</i>] Undo ↩</Button>)}\n                  {timeTravel?.redo && (<Button onClick={(_) => timeTravel!!.redo!!()}>[<i>D</i>] Redo ↪</Button>)}\n                </ButtonGroup>\n              )}\n            </Row>\n            <Row>\n              <ButtonGroup>\n                <Button onClick={(_) => hint(100)}><i>[H]</i> Hint</Button>\n              </ButtonGroup>\n            </Row>\n            <Row>\n              {Seq(enemies).zip(Seq(enemiesStats)).map(([enemy, stats], idx) => (\n                <Col key={idx} xs={6} md={4}>\n                  <EnemyCard\n                    key={idx}\n                    enemyStats={stats}\n                    enemy={enemy}\n                    canAct={canAct}\n                    latestAttack={Seq(lastAttacks).filter(({ origin }) => origin === idx).map(a => `[${a.phase}] ${a.display}`).join(\" -> \") ?? undefined}\n                    isSelected={idx === target}\n                    onSelect={() => setSelected(idx as MonsterTarget)}\n                    hotkey={monsterHotkeys[idx]}\n                  />\n                </Col>\n              ))}\n            </Row>\n            <Card.Title>\n              Debug\n            </Card.Title>\n            <Row>\n              <ButtonGroup>\n                <Button onClick={handleShowLog}>[<i>L</i>] Log 🗒</Button>\n                <Button onClick={save}>[<i>S</i>] Dump to file 📂</Button>\n              </ButtonGroup>\n            </Row>\n            <Card.Title>\n              Cheats\n            </Card.Title>\n            <Row>\n              <ButtonGroup>\n                <Button onClick={(_) => solveGame(100)}>Solve ⌛</Button>\n                <Button onClick={(_) => solveGame(1000)}>Solve thoroughly ⌛⌛⌛</Button>\n              </ButtonGroup>\n            </Row>\n          </Col>\n        </Row>\n      </Container>\n      <Modal show={isLogShown} onHide={handleCloseLog} scrollable={true} centered={true}>\n        <Modal.Header closeButton>\n          <Modal.Title>Game Log</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          {game.states.map((s, idx) => (\n            // FIXME add key\n            <>\n              <b>Turn {idx}</b><br />\n              Player: {JSON.stringify(s.player, null, 2)}<br />\n              Enemies: {JSON.stringify(s.enemies, null, 2)}<br />\n              Target [{s.target}]<br />\n              Eot? Bot?: {JSON.stringify({ bot: s.bot, eot: s.eot }, null, 2)}<br />\n              Actions:<br />\n              {s.lastAttacks.map(a => (<>  {JSON.stringify(a, null, 2)}<br /></>))}\n            </>\n          ))}\n        </Modal.Body>\n        <Modal.Footer>\n          <Button variant=\"primary\" onClick={handleCloseLog}>\n            Close\n          </Button>\n        </Modal.Footer>\n      </Modal >\n    </>\n  );\n};\n\nexport default Game;\n","import { useEffect, useCallback, useState } from \"react\";\n\nexport default function usePressedKeys(onUp: (e: string) => void): Set<string> {\n\n  const [pressedKeys, updatePressedKeys] = useState(new Set<string>());\n\n  const downHandler = ({ key }: { key: string }) => {\n    updatePressedKeys((set) => new Set([...set, key]));\n  }\n\n  const upHandler = useCallback(({ key }: { key: string }) => {\n    updatePressedKeys((set) => new Set([...set].filter((k) => k !== key)));\n    onUp(key);\n  }, [onUp]);\n\n  useEffect(() => {\n    window.addEventListener(\"keydown\", downHandler);\n    window.addEventListener(\"keyup\", upHandler);\n\n    return () => {\n      window.removeEventListener(\"keydown\", downHandler);\n      window.removeEventListener(\"keyup\", upHandler);\n    };\n  }, [upHandler]);\n\n  return pressedKeys;\n}","import React from \"react\";\nimport { Container, Row, Form, Button, ButtonGroup, Navbar } from \"react-bootstrap\";\nimport useScroll from \"../hooks/useScroll\";\n\nimport { Build, Item, Player, PlayerStats, safeEntries } from \"../utils/types\";\nimport { build, randomName, randomPlayer } from \"../utils/data\";\n\nconst PlayerBuilder = ({ onSave }: { onSave: (player: Player, playerStats: PlayerStats) => void }) => {\n  const [player, playerStats] = randomPlayer();\n  const [form, setForm] = React.useState<Build>(player.build);\n  const [lore, setLore] = React.useState(player.lore);\n  const setField = <T extends keyof Build>(field: T, value: Build[T]) => {\n    setForm({\n      ...form,\n      [field]: value,\n    });\n  };\n  const onFormSubmit = (e: any) => {\n    e.preventDefault();\n    onSave({\n      id: \"p-1\",\n      lore,\n      build: form,\n    }, playerStats);\n  };\n  const displayType = (type: keyof Build) => <b>{form[type].display}</b>;\n  return (\n    <Form onSubmit={onFormSubmit}>\n      <Container fluid style={{ marginBottom: '105px' }}>\n        <Row className=\"g-2\">\n          {safeEntries(build).map(([type, values]) =>\n            <ElementPicker\n              setField={(value) => setField(type, value)}\n              section={type}\n              options={(values as Item[])}\n              key={type}\n              isSelected={(value) => form[type].display === value.display} />)\n          }\n        </Row>\n        <Navbar fixed=\"bottom\" bg=\"dark\" variant=\"dark\" style={{ maxHeight: '100px' }}>\n          <Container>\n            <Navbar.Text>You are <i onClick={() => setLore((lore) => ({ ...lore, name: randomName() }))}>{lore.name}</i>, the {displayType('skill')} {displayType('class')} {displayType('charm')}<br />who wields a {displayType('weapon')} and a {displayType('offhand')}<br />and wears {displayType('armor')} with {displayType('headgear')} and {displayType('footwear')}</Navbar.Text>\n            <Button type=\"submit\">This is me!</Button>\n          </Container>\n        </ Navbar>\n      </Container >\n    </Form >\n  );\n};\n\nconst ElementPicker = ({ isSelected, section, options, setField }: {\n  options: Item[], isSelected: (value: Item) => boolean, setField: (value: Item) => void, section: string\n}) => {\n  const [scrollTo, scrollRef] = useScroll({\n    behavior: 'smooth',\n    block: 'start',\n  });\n\n  return (\n    <Row>\n      <Form.Label>{section}</Form.Label>\n      <br />\n      <ButtonGroup size=\"lg\" className=\"mb-2\">\n        {options.map((item) => (\n          <Button\n            key={item.display}\n            name={section}\n            id={`${item.display}`}\n            variant={isSelected(item) ? 'primary' : 'secondary'}\n            onClick={() => { setField(item); scrollTo(); }}\n          >{item.display}</Button>\n        ))}\n      </ButtonGroup>\n      <div id={`${section}-scroll`} ref={scrollRef} />\n    </Row>\n  );\n}\n\nexport default PlayerBuilder;\n","import { Ref, useRef } from \"react\";\n\ntype ScrollToFn = () => void;\n\nexport default function useScroll<T extends Element>(scrollParams: ScrollIntoViewOptions): [ScrollToFn, Ref<any>] {\n  const elRef = useRef<T>(null);\n  const executeScroll = () => elRef.current!.scrollIntoView(scrollParams);\n\n  return [executeScroll, elRef];\n};\n","import React from \"react\";\nimport { Container, ButtonGroup, Form, Button, Navbar } from \"react-bootstrap\";\n\nimport { Player, Enemies, Enemy, EnemiesStats, EnemyStats, Build } from \"../utils/types\";\nimport { enemies, randomEnemy } from \"../utils/data\";\n\nconst EncounterBuilder = ({ player, onSave }: { player: Player, onSave: (enemies: Enemies, enemiesStats: EnemiesStats) => void }) => {\n  const [encounter, setEncounter] = React.useState<[Enemy, EnemyStats][]>([]);\n  const onFormSubmit = (e: any) => {\n    e.preventDefault();\n    const enemies = encounter.map(a => a[0]);\n    const enemiesStats = encounter.map(a => a[1]);\n    // Size enforced by UI\n    onSave(enemies as Enemies, enemiesStats as EnemiesStats);\n  };\n  const displayType = (type: keyof Build) => <b>{player.build[type].display}</b>;\n  return (\n    <Form onSubmit={onFormSubmit}>\n      <Container fluid style={{ marginBottom: encounter.length > 0 ? '205px' : '105px' }}>\n        <ButtonGroup size=\"lg\" className=\"mb-2\">\n          {enemies.map((enemy) =>\n            <Button\n              key={enemy[0].lore.name}\n              disabled={encounter.length > 4}\n              onClick={() => setEncounter((e) => [...e, enemy])}\n            >{enemy[0].lore.name}</Button>\n          )}\n        </ButtonGroup>\n      </Container >\n      {\n        encounter.length > 0 &&\n        <Navbar fixed=\"bottom\" bg=\"dark\" variant=\"dark\" style={{ marginBottom: '100px' }}>\n          <Container fluid>\n            <ButtonGroup size=\"sm\" className=\"mb-2\">\n              {encounter.map((enemy, idx) => <Button key={`${enemy[0].lore.name}-${idx}`} onClick={() => setEncounter((e) => { let found = false; return e.filter((m) => (found || m[0].lore.name !== enemy[0].lore.name) || !(found = true)); })}>{enemy[0].lore.name}</Button>)}\n            </ButtonGroup>\n          </Container>\n        </ Navbar>\n      }\n      <Navbar fixed=\"bottom\" bg=\"dark\" variant=\"dark\" style={{ maxHeight: '100px' }}>\n        <Container>\n          <Navbar.Text>You are <i>{player.lore.name}</i>, the {displayType('skill')} {displayType('class')} {displayType('charm')}<br />who wields a {displayType('weapon')} and a {displayType('offhand')}<br />and wears {displayType('armor')} with {displayType('headgear')} and {displayType('footwear')}</Navbar.Text>\n          <ButtonGroup>\n            <Button\n              disabled={encounter.length < 0 || encounter.length > 5}\n              onClick={(_) => setEncounter((e) => [...e, randomEnemy()])}>\n              Add Random\n            </Button>\n            <Button type=\"submit\" disabled={encounter.length < 1 || encounter.length > 5}>To Battle!</Button>\n          </ButtonGroup>\n        </Container>\n      </ Navbar>\n    </Form >\n  );\n};\n\nexport default EncounterBuilder;\n","export default function geneticAlgorithmConstructor(options) {\n\n    function settingDefaults() {\n        return {\n\n            mutationFunction: function (phenotype) { return phenotype },\n\n            crossoverFunction: function (a, b) { return [a, b] },\n\n            fitnessFunction: function (phenotype) { return 0 },\n\n            doesABeatBFunction: undefined,\n\n            population: [],\n            populationSize: 100,\n        }\n    }\n\n    function settingWithDefaults(settings, defaults) {\n        settings = settings || {}\n\n        settings.mutationFunction = settings.mutationFunction || defaults.mutationFunction\n        settings.crossoverFunction = settings.crossoverFunction || defaults.crossoverFunction\n        settings.fitnessFunction = settings.fitnessFunction || defaults.fitnessFunction\n\n        settings.doesABeatBFunction = settings.doesABeatBFunction || defaults.doesABeatBFunction\n\n        settings.population = settings.population || defaults.population\n        if (settings.population.length <= 0) throw Error(\"population must be an array and contain at least 1 phenotypes\")\n\n        settings.populationSize = settings.populationSize || defaults.populationSize\n        if (settings.populationSize <= 0) throw Error(\"populationSize must be greater than 0\")\n\n        return settings\n    }\n\n    var settings = settingWithDefaults(options, settingDefaults())\n\n    function populate() {\n        var size = settings.population.length\n        while (settings.population.length < settings.populationSize) {\n            const rand = Math.floor(Math.random() * size);\n            settings.population.push(\n                mutate(\n                    cloneJSON(settings.population[Math.floor(rand)])\n                )\n            )\n        }\n    }\n\n    function cloneJSON(object) {\n        return JSON.parse(JSON.stringify(object))\n    }\n\n    function mutate(phenotype) {\n        return settings.mutationFunction(cloneJSON(phenotype))\n    }\n\n    function crossover(phenotype) {\n        phenotype = cloneJSON(phenotype)\n        var mate = settings.population[Math.floor(Math.random() * settings.population.length)]\n        mate = cloneJSON(mate)\n        return settings.crossoverFunction(phenotype, mate)[0]\n    }\n\n    function doesABeatB(a, b) {\n        if (settings.doesABeatBFunction) {\n            return settings.doesABeatBFunction(a, b)\n        } else {\n            return settings.fitnessFunction(a) >= settings.fitnessFunction(b)\n        }\n    }\n\n    function compete() {\n        var nextGeneration = []\n\n        for (var p = 0; p < settings.population.length - 1; p += 2) {\n            var phenotype = settings.population[p];\n            var competitor = settings.population[p + 1];\n\n            nextGeneration.push(phenotype)\n            if (doesABeatB(phenotype, competitor)) {\n                if (Math.random() < 0.5) {\n                    nextGeneration.push(mutate(phenotype))\n                } else {\n                    nextGeneration.push(crossover(phenotype))\n                }\n            } else {\n                nextGeneration.push(competitor)\n            }\n        }\n\n        settings.population = nextGeneration;\n    }\n\n\n\n    function randomizePopulationOrder() {\n\n        for (var index = 0; index < settings.population.length; index++) {\n            var otherIndex = Math.floor(Math.random() * settings.population.length)\n            var temp = settings.population[otherIndex]\n            settings.population[otherIndex] = settings.population[index]\n            settings.population[index] = temp\n        }\n    }\n\n    return {\n        evolve: function (options) {\n\n            if (options) {\n                settings = settingWithDefaults(options, settings)\n            }\n\n            populate()\n            randomizePopulationOrder()\n            compete()\n            return this\n        },\n        best: function () {\n            var scored = this.scoredPopulation()\n            var result = scored.reduce(function (a, b) {\n                return a.score >= b.score ? a : b\n            }, scored[0]).phenotype\n            return cloneJSON(result)\n        },\n        bestScore: function () {\n            return settings.fitnessFunction(this.best())\n        },\n        population: function () {\n            return cloneJSON(this.config().population)\n        },\n        scoredPopulation: function () {\n            return this.population().map(function (phenotype) {\n                return {\n                    phenotype: cloneJSON(phenotype),\n                    score: settings.fitnessFunction(phenotype)\n                }\n            })\n        },\n        config: function () {\n            return cloneJSON(settings)\n        },\n        clone: function (options) {\n            return geneticAlgorithmConstructor(\n                settingWithDefaults(options,\n                    settingWithDefaults(this.config(), settings)\n                )\n            )\n        }\n    }\n}\n","import GeneticAlgorithmConstructor, { GeneticAlgorithmConfig, ScoredPhenotype } from '../geneticalgorithm/geneticalgorithm';\nimport { handlePlayerEffect, playerActions, setSelected } from '../utils/playGame';\nimport Chance from 'chance';\nimport { MonsterTarget, Play } from '../utils/types';\nimport { previousState } from '../utils/data';\nimport prettyjson from 'prettyjson';\nimport { Seq } from 'immutable';\n\nexport type TinkererOptions = typeof defaultTinkererOptions & { turns?: number };\n\nexport const defaultTinkererOptions = {\n  playerSeed: \"Miau\",\n  weights: { monster: 0.70, player: 0.125, turn: 0.1, stamina: 0.075 },\n  debug: false,\n};\n\nexport const gameRender = (results: ScoredPhenotype<Play>[]): string => {\n  const best: ScoredPhenotype<Play> = Seq(results).maxBy(a => a.score)!!;\n  const lastState = previousState(best.phenotype);\n  return `BEST BY ${best.score} in ${best.phenotype.states.length - 1} turns\\n` +\n    prettyjson.render([\n      lastState.lastAttacks.map(({ origin, display, phase }) => [origin === 'Player' ? 'Player' : `${best.phenotype.enemies[origin]!!.lore.name} [${origin}]`, display, phase]),\n      Seq(best.phenotype.enemies).zip(Seq(lastState.enemies)).flatMap(([enemy, stats], idx) => [`[${idx}] ${enemy.lore.name}`, stats]).toArray(),\n      lastState.player,\n    ]);\n}\n\nexport default function tinkerer(play: Play, iter: number, optionsOverride?: Partial<TinkererOptions>): ScoredPhenotype<Play>[] {\n  const options: TinkererOptions = { ...defaultTinkererOptions, ...optionsOverride };\n  const range = [...Array(iter).keys()];\n  const rand = new Chance(options.playerSeed);\n  const actions = playerActions(play.player);\n  const config: GeneticAlgorithmConfig<Play> = {\n    mutationFunction: (oldPlay) => {\n      const latestState = previousState(oldPlay);\n      const monsterHealth = latestState.enemies.reduce((acc, monster) => acc + monster.hp.current, 0);\n      const playerHealth = latestState.player.hp.current;\n      if (playerHealth === 0 || monsterHealth === 0) {\n        return oldPlay;\n      }\n      let newPlay = oldPlay;\n      while (rand.d6() === 6 || (previousState(newPlay).enemies[previousState(newPlay).target]?.hp ?? 0) <= 0) {\n        newPlay = setSelected(newPlay, rand.natural({ min: 0, max: previousState(newPlay).enemies.length - 1 }) as MonsterTarget);\n      }\n      const latest = previousState(newPlay);\n      const unavailable = actions.map((a, idx) => [a, idx] as const).filter(([a, _]) => a.stamina > latest.player.stamina.current).map(([_, idx]) => idx);\n      newPlay = handlePlayerEffect(\n        newPlay,\n        rand.natural({ min: 0, max: actions.length - 1, exclude: unavailable })\n      );\n      return newPlay;\n    },\n    fitnessFunction: (play) => {\n      const latestState = previousState(play);\n      const monsterHealth = latestState.enemies.reduce((acc, monster) => acc + monster.hp.current, 0);\n      const playerHealth = latestState.player.hp.current;\n      const playerStamina = latestState.player.stamina.current;\n      const startPlayerHealth = play.states[0].player.hp.max;\n      const startPlayerStamina = play.states[0].player.stamina.max;\n      const startMonsterHealth = play.states[0].enemies.reduce((acc, monster) => acc + monster.hp.current, 0);\n\n      const monsterKillingFitness = ((startMonsterHealth - monsterHealth) / startMonsterHealth);\n      const playerAlivenessFitness = (playerHealth / startPlayerHealth);\n      const killSpeedFitness = (play.turns - play.states.length) / play.turns;\n      const staminaFitness = (playerStamina / startPlayerStamina);\n\n      const fitness = (monsterKillingFitness * options.weights.monster) + (playerAlivenessFitness * options.weights.player) + (killSpeedFitness * options.weights.turn) + (staminaFitness * options.weights.stamina);\n      if (options.debug) {\n        console.log(`MH: ${monsterHealth} | PH: ${playerHealth} | TR: ${play.states.length}\\nFitness: ${fitness} | MF: ${monsterKillingFitness} | PF: ${playerAlivenessFitness} | SF: ${staminaFitness} | TF: ${killSpeedFitness}\\nWeights: ${JSON.stringify(options.weights)}`);\n      }\n      return fitness;\n    },\n    population: range.map((_) => play),\n    populationSize: iter,\n  }\n\n  const turns = optionsOverride?.turns ? optionsOverride?.turns : play.turns;\n  let gen = new GeneticAlgorithmConstructor<Play>(config);\n  for (let i = 0; i < turns; i++) {\n    gen = gen.evolve();\n  }\n  return gen.scoredPopulation();\n}\n","import WebSocket from 'ws';\nimport { assign, createMachine, interpret } from 'xstate';\nimport { inspect } from '@xstate/inspect/lib/server.js';\n\nconst isDebug = process.env['SMD'] === '1';\n\nif (isDebug) {\n  inspect({\n    server: new WebSocket.Server({\n      port: 8888\n    })\n  });\n}\n\nconst toMenu = {\n  on: {\n    MENU: { target: 'main' },\n  }\n}\n\nconst quick = {\n  initial: 'play',\n  states: {\n    play: {\n      entry: ['reset'],\n      on: {\n        WIN: { target: 'win' },\n        LOSE: { target: 'lose' }\n      }\n    },\n    win: { type: 'final' as const },\n    lose: { type: 'final' as const },\n  },\n  ...toMenu,\n};\n\nconst single = {\n  initial: 'player',\n  states: {\n    player: {\n      entry: ['reset'],\n      on: {\n        PLAYER: { target: 'encounter' }\n      }\n    },\n    encounter: {\n      on: {\n        ENCOUNTER: { target: 'play' }\n      }\n    },\n    play: {\n      on: {\n        WIN: { target: 'win' },\n        LOSE: { target: 'lose' }\n      }\n    },\n    win: { type: 'final' as const },\n    lose: { type: 'final' as const },\n  },\n  ...toMenu,\n};\n\nconst arcade = {\n  initial: 'player',\n  states: {\n    player: {\n      entry: ['reset'],\n      on: {\n        PLAYER: { target: 'play' }\n      }\n    },\n    play: {\n      on: {\n        WIN: [\n          { target: 'victory', cond: 'isFinal' },\n          { target: 'play', actions: ['bumpVictories'], internal: true },\n        ],\n        LOSE: { target: 'defeat' }\n      }\n    },\n    victory: {\n      type: 'final' as const,\n    },\n    defeat: {\n      type: 'final' as const,\n    },\n  },\n  ...toMenu,\n};\n\nconst survival = {\n  initial: 'player',\n  states: {\n    player: {\n      entry: ['reset'],\n      on: {\n        PLAYER: { target: 'play' }\n      }\n    },\n    play: {\n      on: {\n        WIN: { target: 'play', actions: ['bumpVictories'] },\n        LOSE: { target: 'defeat' }\n      }\n    },\n    defeat: {\n      type: 'final' as const,\n      on: {\n        // ACK: { target: '#menus.leaderboards' }\n      }\n    },\n  },\n  ...toMenu,\n};\n\nconst puzzle = {\n  initial: 'puzzle',\n  states: {\n    puzzle: {\n      on: {\n        PLAYER: { target: 'player' }\n      }\n    },\n    player: {\n      on: {\n        SELECTED: { target: 'play' }\n      }\n    },\n    play: {\n      on: {\n        COMPLETE: { target: 'complete' },\n      }\n    },\n    complete: {\n      on: {\n        NEXT: { target: 'player' },\n        SELECT: { target: 'puzzle' },\n      }\n    },\n  },\n  ...toMenu,\n};\n\nconst makeArcadeContext = () => ({\n  victories: 0,\n  score: 0,\n  seed: Math.random(),\n});\nconst makeSurvivalContext = () => ({\n  victories: 0,\n  seed: Math.random(),\n});\nconst makeSingleContext = () => ({\n  seed: Math.random(),\n});\nconst makeGameContext = () => ({\n  arcadeContext: makeArcadeContext(),\n  survivalContext: makeSurvivalContext(),\n  singleContext: makeSingleContext(),\n});\n\nexport const gameMenuMachine = createMachine({\n  tsTypes: {} as import(\"./menuStateMachine.typegen\").Typegen0,\n  id: 'menus',\n  initial: 'main',\n  context: makeGameContext(),\n  states: {\n    main: {\n      on: {\n        QUICK: { target: 'quick' },\n        SINGLE: { target: 'single' },\n        ARCADE: { target: 'arcade' },\n        SURVIVAL: { target: 'survival' },\n        // PUZZLE: { target: 'puzzle' },\n        // LEADERBOARDS: { target: 'leaderboards' },\n      }\n    },\n    quick: {\n      ...quick,\n    },\n    single: {\n      ...single,\n    },\n    arcade: {\n      ...arcade,\n    },\n    survival: {\n      ...survival,\n    },\n    // puzzle: {\n    //   ...puzzle,\n    // },\n    // leaderboards: {\n    //   ...toMenu,\n    // }\n  },\n}, {\n  guards: {\n    isFinal: ({ arcadeContext: { victories } }) => victories + 1 >= 7,\n  },\n  actions: {\n    bumpVictories: assign({\n      arcadeContext: ({ arcadeContext }, _event) => ({ ...arcadeContext, victories: arcadeContext.victories + 1, seed: Math.random() }),\n      survivalContext: ({ survivalContext }, _event) => ({ ...survivalContext, victories: survivalContext.victories + 1, seed: Math.random() }),\n    }),\n    reset: assign({\n      survivalContext: (c, e) => makeSurvivalContext(),\n      arcadeContext: (c, e) => makeArcadeContext(),\n      singleContext: (c, e) => makeSingleContext(),\n    }),\n  }\n});\n\nif (isDebug) {\n  interpret(gameMenuMachine, { devTools: true })\n    .onTransition((state) => console.log(state))\n    .start();\n}\n","import React from \"react\";\nimport { Container, Card, Row, Button } from \"react-bootstrap\";\n\nconst Menu: React.FC<{\n  title: string;\n  states: string[];\n  onClick: (value: string) => void\n}> = ({ title, states, onClick }) =>\n    <Container fluid style={{ marginBottom: '105px' }}>\n      <Row className=\"g-2\">\n        <Card.Title>\n          {title}\n        </Card.Title>\n      </Row>\n      {states.map(state =>\n        <Row className=\"g-2\" key={state}>\n          <Button size=\"lg\" className=\"mb-2\"\n            key={state}\n            variant={'primary'}\n            onClick={() => { onClick(state); }}\n          >{state}</Button>\n        </Row>\n      )}</Container >;\n\nexport default Menu;\n","import React from \"react\";\nimport \"./App.css\";\n// import { readString } from \"react-papaparse\";\nimport { Snapshot, Play } from \"./utils/types\";\n\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport Game from \"./components/Game\";\nimport PlayerBuilder from \"./components/PlayerBuilder\";\nimport EncounterBuilder from \"./components/EncounterBuilder\";\nimport play, { handlePlayerEffect, PlayState, playState, setDisabledSkills, setSelected } from \"./utils/playGame\";\nimport tinkerer from \"./tinkerer/tinkerer\";\nimport { Seq } from \"immutable\";\nimport { previousState, randomEnemy, randomPlayer } from \"./utils/data\";\nimport { useMachine } from '@xstate/react';\nimport { gameMenuMachine } from \"./menuStateMachine\";\nimport Menu from \"./components/menus/Menu\";\n\nfunction App() {\n  const player = randomPlayer();\n  const [state, send] = useMachine(gameMenuMachine, { devTools: true });\n  const event = state.event;\n\n  switch (true) {\n    case state.matches('main'):\n      return <Menu\n        title={\"Main Menu\"}\n        states={Object.keys(gameMenuMachine.states.main.on)}\n        onClick={send}\n      />;\n    // QUICK\n    case state.matches({ quick: 'play' }): {\n      const player = randomPlayer();\n      const encounter = randomEnemy();\n      return <SingleGame\n        play={play(player[0], player[1], [encounter[0]], [encounter[1]], 50, state.context.singleContext.seed)}\n        timeTravel={true}\n        onGameEnd={(result, game) => { send(result === 'win' ? 'WIN' : 'LOSE', { result, game }) }}\n      />;\n    }\n    case state.matches({ quick: 'win' }):\n    case state.matches({ quick: 'lose' }):\n      return <Menu\n        title={`${event.result} in ${event.game.states.length - 1} turns`}\n        states={[\"MENU\"]}\n        onClick={send}\n      />;\n    // SINGLE\n    case state.matches({ single: 'player' }):\n      return <PlayerBuilder onSave={(player, playerStats) => { send('PLAYER', { player: [player, playerStats] }); }} />;\n    case state.matches({ single: 'encounter' }):\n      return <EncounterBuilder\n        player={player[0]}\n        onSave={(enemies, enemiesStats) => { send('ENCOUNTER', { encounter: [enemies, enemiesStats], player: event.player }) }}\n      />;\n    case state.matches({ single: 'play' }): {\n      return <SingleGame\n        play={play(event.player[0], event.player[1], event.encounter[0], event.encounter[1], 50, state.context.singleContext.seed)}\n        timeTravel={true}\n        onGameEnd={(result, game) => { send(result === 'win' ? 'WIN' : 'LOSE', { result, game }) }}\n      />;\n    }\n    case state.matches({ single: 'win' }):\n    case state.matches({ single: 'lose' }):\n      return <Menu\n        title={`${event.result} in ${event.game.states.length - 1} turns`}\n        states={[\"MENU\"]}\n        onClick={send}\n      />;\n    // ARCADE\n    case state.matches({ arcade: 'player' }): {\n      const encounter = randomEnemy();\n      return <PlayerBuilder onSave={(player, playerStats) => { send('PLAYER', { game: play(player, playerStats, [encounter[0]], [encounter[1]], 50, state.context.survivalContext.seed) }); }} />;\n    }\n    case state.matches({ arcade: 'play' }): {\n      return <SingleGame\n        play={event.game}\n        timeTravel={false}\n        onGameEnd={(result: PlayState, game: Play) => {\n          const encounter = randomEnemy();\n          const firstState: Snapshot = game.states[0];\n          send(result === 'win' ? 'WIN' : 'LOSE', { result, game: play(game.player, firstState.player, [encounter[0]], [encounter[1]], 50, state.context.survivalContext.seed) });\n        }}\n      />;\n    }\n    case state.matches({ arcade: 'victory' }): {\n      return <Menu\n        title={`VICTORY!`}\n        states={[\"MENU\"]}\n        onClick={send}\n      />;\n    }\n    case state.matches({ arcade: 'defeat' }): {\n      return <Menu\n        title={`Failed after ${state.context.arcadeContext.victories} victories`}\n        states={[\"MENU\"]}\n        onClick={send}\n      />;\n    }\n    // SURVIVAL\n    case state.matches({ survival: 'player' }): {\n      const encounter = randomEnemy();\n      return <PlayerBuilder onSave={(player, playerStats) => { send('PLAYER', { game: play(player, playerStats, [encounter[0]], [encounter[1]], 50, state.context.survivalContext.seed) }); }} />;\n    }\n    case state.matches({ survival: 'play' }): {\n      return <SingleGame\n        play={event.game}\n        timeTravel={false}\n        onGameEnd={(result, game) => {\n          const encounter = randomEnemy();\n          const lastState: Snapshot = game.states[event.game.states.length - 1];\n          send(result === 'win' ? 'WIN' : 'LOSE', { result, game: play(game.player, lastState.player, [encounter[0]], [encounter[1]], 50, state.context.survivalContext.seed) });\n        }}\n      />;\n    }\n    case state.matches({ survival: 'defeat' }): {\n      return <Menu\n        title={`Completed after ${state.context.survivalContext.victories} victories`}\n        states={[\"MENU\"]}\n        onClick={send}\n      />;\n    }\n    default:\n      return <>{JSON.stringify(state.value)}</>;\n  }\n}\n\nconst SingleGame = ({ play, timeTravel, onGameEnd }: { play: Play; timeTravel: boolean, onGameEnd: (state: PlayState, play: Play) => void }) => {\n  const [game, setGame] = React.useState<Play>(play);\n  const [redo, setRedo] = React.useState<Snapshot[]>([]);\n\n  React.useEffect(() => {\n    setGame(play);\n  }, [play]);\n\n  React.useEffect(() => {\n    const gameState = playState(game);\n    const hasEnded = gameState !== 'playing';\n    if (hasEnded) {\n      onGameEnd(gameState, game);\n    }\n  }, [game]);\n\n  const timeTravelObj = timeTravel ? {\n    redo: redo.length > 0 ? (() => {\n      const newRedo = [...redo];\n      const latest = newRedo.pop() as Snapshot;\n      setRedo(newRedo);\n      setGame({ ...game, states: [...game.states, latest] });\n    }) : undefined,\n    undo: () => {\n      setRedo([...redo, previousState(game)]);\n      setGame({ ...game, states: [game.states[0], ...game.states.slice(1, -1)] });\n    }\n  } : undefined;\n\n  return (<Game\n    game={game}\n    timeTravel={timeTravelObj}\n    setSelected={(idx) => { setRedo([]); setGame(setSelected(game, idx)); }}\n    setDisabledSkills={(disabled) => { setRedo([]); setGame(setDisabledSkills(game, disabled)) }}\n    handlePlayerEffect={(idx) => { setRedo([]); setGame(handlePlayerEffect(game, idx)); }}\n    solveGame={(iterations) => setGame(Seq(tinkerer(game, iterations, { turns: game.turns - game.states.length })).maxBy(a => a.score)!!.phenotype)}\n    hint={(iterations) =>\n      setGame({\n        ...game,\n        states: [...game.states, Seq(tinkerer(game, iterations, { turns: game.turns - game.states.length })).maxBy(a => a.score)!!.phenotype.states[game.states.length]]\n      })\n    }\n  />\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://cra.link/PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://cra.link/PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorkerRegistration from './serviceWorkerRegistration';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://cra.link/PWA\nserviceWorkerRegistration.register();\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}