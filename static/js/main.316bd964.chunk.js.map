{"version":3,"sources":["components/Enemy.tsx","components/Player.tsx","components/Game.tsx","hooks/usePressedKeys.tsx","playGame.tsx","utils/index.ts","components/PlayerBuilder.tsx","hooks/useScroll.tsx","components/EncounterBuilder.tsx","App.tsx","serviceWorkerRegistration.ts","reportWebVitals.ts","index.tsx"],"names":["EnemyCard","effects","enemy","isSelected","onSelect","Card","bg","undefined","Body","Title","lore","name","Text","stats","hp","distance","rolls","map","idx","Seq","countBy","e","display","toArray","k","v","length","toFixed","Button","disabled","onClick","PlayerCard","selectedButtons","player","onClickEffect","Subtitle","className","build","class","Stack","direction","gap","Object","values","flatMap","a","active","has","_","Game","props","states","game","handlePlayerEffect","setSelected","enemies","target","playerSkills","s","pressed","onUp","useState","Set","pressedKeys","updatePressedKeys","downHandler","key","set","upHandler","useCallback","filter","useEffect","window","addEventListener","removeEventListener","usePressedKeys","valNum","parseInt","Container","fluid","Row","Col","sm","md","Player","xs","Enemy","snap","clamp","num","min","max","Math","updateMonster","override","m","actions","start","curr","amount","origin","stamina","startState","play","skill","weapon","effect","currentState","priority","offhand","funs","reduce","acc","value","newState","chain","_origin","_play","consumable","armor","headgear","footwear","charm","randomName","names","floor","random","rage","selects","entries","type","options","ElementPicker","section","setField","scrollParams","elRef","useRef","current","scrollIntoView","useScroll","behavior","block","scrollTo","scrollRef","Form","Label","ButtonGroup","size","id","variant","ref","PlayerBuilder","onSave","React","form","setForm","age","setLore","displayType","onSubmit","preventDefault","style","marginBottom","field","Navbar","fixed","maxHeight","EncounterBuilder","encounter","setEncounter","found","chance","Chance","App","status","setStatus","setPlayerBuild","setGame","index","select","history","functions","natural","concat","sortBy","latestState","accState","isLocalhost","Boolean","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","onUpdate","onSuccess","catch","error","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById","URL","process","href","fetch","headers","response","contentType","get","indexOf","ready","unregister","reload","checkValidServiceWorker","serviceWorkerRegistration"],"mappings":"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AAG,EAAG,EAAG,GACb,CAAC,EAAG,EAAG,EAAG,EAAG,GACb,CAAC,EAAG,EAAG,EAAG,EAAG,KAGjB,CACEN,KAAM,CACJC,KAAM,QAERE,MAAO,CACLC,GAAI,GACJiH,KAAM,EACNhH,SAAU,GAEZd,QAAS,CACP,CAAEqB,QAAS,QAASsF,SAAU,EAAGF,OAAQ,SAAC1D,EAAGuD,EAAMI,GAAV,OAA2BX,EAAqBM,EAAWC,GAAOI,EAAc,KACzH,CAAErF,QAAS,OAAQsF,SAAU,EAAGF,OAAQ,SAAC1D,EAAGuD,EAAMI,GAAV,OAA2BX,EAA4BM,EAAWC,GAAOI,EAAc,KAC/H,CAAErF,QAAS,OAAQsF,SAAU,EAAGF,OAAQ,SAACN,EAAQpD,EAAG2D,GAAZ,OAA6BX,EAAuBW,EAAcP,GAAS,MAErHpF,MAAO,CACL,CAAC,EAAG,EAAG,EAAG,EAAG,GACb,CAAC,EAAG,EAAG,EAAG,EAAG,GACb,CAAC,EAAG,EAAG,EAAG,EAAG,GACb,CAAC,EAAG,EAAG,EAAG,EAAG,GACb,CAAC,EAAG,EAAG,EAAG,EAAG,MAKb4G,EAAQ,CACZ,QACA,QACA,SACA,MACA,QACA,UACA,QACA,QACA,QACA,UACA,SACA,SACA,QACA,WACA,QACA,QACA,SACA,QACA,SACA,SACA,SACA,SACA,WACA,UACA,UACA,SACA,OACA,QACA,QACA,QACA,MACA,SACA,SACA,OACA,UACA,QACA,UACA,SACA,UACA,QACA,SACA,UACA,UACA,SACA,OACA,QACA,SACA,SACA,WACA,QACA,OACA,UACA,OACA,SACA,SACA,QACA,UACA,SACA,SACA,OACA,QACA,QACA,SACA,QACA,QACA,SACA,SACA,OACA,OACA,SACA,QACA,QACA,UACA,SACA,QACA,UACA,UACA,UACA,WACA,QACA,WACA,QACA,SACA,SACA,OACA,SACA,SACA,QACA,OACA,WACA,SACA,QACA,UACA,SACA,WACA,UACA,SACA,SACA,SACA,QACA,QACA,OACA,OACA,QACA,QACA,WACA,QACA,UACA,SACA,WACA,QACA,OACA,OACA,OACA,SACA,WACA,OACA,OACA,QACA,MACA,SACA,OACA,WACA,QACA,UACA,SACA,MACA,UACA,QACA,SACA,QACA,SACA,QACA,QACA,SACA,QACA,UACA,QACA,QACA,SACA,SACA,OACA,QACA,SACA,SACA,UACA,QACA,QACA,QACA,OACA,QACA,OACA,QACA,UACA,SACA,QACA,QACA,QACA,QACA,SACA,UACA,WACA,QACA,QACA,QACA,UACA,SACA,QACA,SACA,UACA,SACA,QACA,QACA,SACA,QACA,OACA,UACA,QACA,SACA,UACA,SACA,MACA,QACA,OACA,MACA,QACA,YACA,OACA,QACA,QACA,SACA,QACA,QACA,UACA,QACA,SACA,UACA,UC5WII,EAAUtF,OAAOuF,QAAQ5F,GAAOpB,KAAI,yCAAsB,CAC9DiH,KADwC,KAExCC,QAFwC,KAEvBlH,KAAI,WAAcgG,GAAd,MAAyB,CAC5C3F,QADmB,EAAGA,QAEtB2F,gBAkEEmB,EAAgB,SAAC,GAKhB,IALkBjI,EAKnB,EALmBA,WAAYkI,EAK/B,EAL+BA,QAASF,EAKxC,EALwCA,QAASG,EAKjD,EALiDA,SAKjD,EChFS,SAAsCC,GACnD,IAAMC,EAAQC,iBAAU,MAGxB,MAAO,CAFe,kBAAMD,EAAME,QAASC,eAAeJ,IAEnCC,GD6EOI,CAAU,CACtCC,SAAU,SACVC,MAAO,UAHL,mBACGC,EADH,KACaC,EADb,KAMJ,OACE,eAAChE,EAAA,EAAD,WACE,cAACiE,EAAA,EAAKC,MAAN,UAAab,IACb,uBACA,cAACc,EAAA,EAAD,CAAaC,KAAK,KAAKhH,UAAU,OAAjC,SACG+F,EAAQlH,KAAI,gBAAGK,EAAH,EAAGA,QAAS2F,EAAZ,EAAYA,MAAZ,OACX,cAACrF,EAAA,EAAD,CAEEjB,KAAM0H,EACNgB,GAAE,UAAKpC,GACPqC,QAASnJ,EAAW8G,GAAS,UAAY,YACzCnF,QAAS,WAAQwG,EAASrB,GAAQ8B,KALpC,SAMEzH,GALK2F,QAQX,qBAAKoC,GAAE,UAAKhB,EAAL,WAAuBkB,IAAKP,QAK1BQ,EA7FO,SAAC,GAAsD,IAApDC,EAAmD,EA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","file":"static/js/main.316bd964.chunk.js","sourcesContent":["import React from \"react\";\nimport { Card, Button } from \"react-bootstrap\";\nimport { Enemy, Effect } from \"../types\";\nimport { Seq } from \"immutable\";\n\nconst skillPercents = (effects: Effect[]) =>\n  Seq(effects).countBy((e) => e.display).toArray().map(([k, v], idx) => <Card.Text key={idx}>[{(v / effects.length * 100).toFixed(2)}%] {k}</Card.Text>);\n\nconst EnemyCard: React.FC<{\n  enemy: Enemy;\n  isSelected?: boolean;\n  onSelect: () => void;\n}> = ({ enemy, isSelected, onSelect }) => (\n  <Card bg={isSelected ? \"info\" : undefined}>\n    <Card.Body>\n      <Card.Title>{enemy.lore.name}</Card.Title>\n      <Card.Text>\n        {enemy.lore.name}. Has {enemy.stats.hp} HP and is at distance{\" \"}\n        {enemy.stats.distance}\n      </Card.Text>\n      <Card.Text>Next attack prediction:</Card.Text>\n      {skillPercents(enemy.rolls[enemy.stats.distance - 1].map((idx) => enemy.effects[idx]))}\n      <Button disabled={isSelected} onClick={onSelect}>Select</Button>\n    </Card.Body>\n  </Card>\n);\n\nexport default EnemyCard;\n","import React from \"react\";\nimport { Card, Button, Stack } from \"react-bootstrap\";\nimport { Player } from \"../types\";\n\nconst PlayerCard: React.FC<{\n  selectedButtons: Set<string>,\n  player: Player;\n  onClickEffect: (index: number) => void;\n}> = ({ selectedButtons, player, onClickEffect }) => (\n  <Card>\n    <Card.Body>\n      <Card.Title>{player.lore.name}</Card.Title>\n      <Card.Subtitle className=\"mb-2 text-muted\">\n        {player.build.class.display}\n      </Card.Subtitle>\n      <Card.Text>Has {player.stats.hp} HP</Card.Text>\n    </Card.Body>\n    <Card.Body>\n      <Stack direction=\"horizontal\" gap={2}>\n        {Object.values(player.build)\n          .flatMap((a) => a.effects)\n          .map((e, idx) => (\n            <Button\n              key={e.display}\n              active={selectedButtons.has(e.display)}\n              onClick={(_) => onClickEffect(idx)}\n            >\n              [{idx + 1}] {e.display}\n            </Button>\n          ))}\n      </Stack>\n    </Card.Body>\n  </Card>\n);\n\nexport default PlayerCard;\n","import { Container, Row, Col } from \"react-bootstrap\";\n\nimport { MonsterTarget } from \"../types\";\n\nimport EnemyCard from \"./Enemy\";\nimport PlayerCard from \"./Player\";\nimport usePressedKeys from \"../hooks/usePressedKeys\";\nimport { Play } from \"../playGame\";\n\nconst Game = (props: { game: Play; setSelected: (target: MonsterTarget) => void; handlePlayerEffect: (index: number) => void }): JSX.Element => {\n  const { states } = props.game;\n  const { handlePlayerEffect, setSelected } = props;\n  const { player, enemies, target } = states[states.length - 1];\n\n  const playerSkills = Object.values(player.build).flatMap((s) => s.effects);\n\n  const pressed = usePressedKeys((key) => {\n    const valNum = parseInt(key);\n    if (valNum > 0 && valNum <= playerSkills.length) {\n      handlePlayerEffect(valNum - 1);\n    }\n  });\n\n  const selectedButtons = new Set<string>([...pressed].flatMap((key: string) => {\n    const valNum = parseInt(key);\n    if (valNum > 0 && valNum <= playerSkills.length) {\n      return [playerSkills[valNum - 1].display];\n    } else {\n      return [];\n    }\n  }));\n\n  return (\n    <Container fluid>\n      <Row className=\"justify-content-center align-items-flex-start\">\n        <Col sm={12} md={8}>\n          <Row>\n            <Col>\n              <PlayerCard player={player} onClickEffect={handlePlayerEffect} selectedButtons={selectedButtons} />\n            </Col>\n          </Row>\n          <Row className=\"mt-2 g-2\">\n            {enemies.map((enemy, idx) => (\n              <Col xs={6} md={4}>\n                <EnemyCard\n                  key={idx}\n                  enemy={enemy}\n                  isSelected={idx === target}\n                  onSelect={() => setSelected(idx as MonsterTarget)}\n                />\n              </Col>\n            ))}\n          </Row>\n        </Col>\n      </Row>\n    </Container>\n  );\n};\n\nexport default Game;\n","import { useEffect, useCallback, useState } from \"react\";\n\nexport default function usePressedKeys(onUp: (e: string) => void): Set<string> {\n\n  const [pressedKeys, updatePressedKeys] = useState(new Set<string>());\n\n  const downHandler = ({ key }: { key: string }) => {\n    updatePressedKeys((set) => new Set([...set, key]));\n  }\n\n  const upHandler = useCallback(({ key }: { key: string }) => {\n    updatePressedKeys((set) => new Set([...set].filter((k) => k !== key)));\n    onUp(key);\n  }, [onUp]);\n\n  useEffect(() => {\n    window.addEventListener(\"keydown\", downHandler);\n    window.addEventListener(\"keyup\", upHandler);\n\n    return () => {\n      window.removeEventListener(\"keydown\", downHandler);\n      window.removeEventListener(\"keyup\", upHandler);\n    };\n  }, [upHandler]);\n\n  return pressedKeys;\n}","import { Enemies, Player, Snapshot, MonsterTarget, Target, EnemyStats, EffectFun } from \"./types\";\nimport { Seq } from \"immutable\";\n\nexport type PlayHistory = [Snapshot, ...Snapshot[]];\n\nexport type Play = {\n  states: PlayHistory;\n};\n\nconst snap = (player: Player, enemies: Enemies, target: MonsterTarget): Snapshot => ({\n  player,\n  enemies,\n  target,\n});\n\nexport const chain = (...funs: Array<EffectFun>): EffectFun =>\n  // TODO check direction of the fold\n  funs.reduce((acc, value) => (origin, play, newState) => value(origin, play, acc(origin, play, newState)));\n\nconst clamp = (num: number, min: number, max: number) =>\n  Math.min(Math.max(num, min), max);\n\nconst updateMonster = (enemies: Enemies, target: Target, override: (stats: EnemyStats) => object): Enemies =>\n  enemies.map((m, idx) =>\n    (idx === target)\n      ? { ...m, stats: { ...m.stats, ...override(m.stats) } }\n      : m) as Enemies;\n\nexport const actions = {\n  attackMonster: (start: Snapshot, curr: Snapshot, amount: number): Snapshot =>\n    snap(\n      curr.player,\n      updateMonster(curr.enemies, curr.target, ({ hp }) => ({ hp: clamp(hp - amount, 0, start.enemies[curr.target]!!/* enforced by UI */.stats.hp) })),\n      curr.target\n    ),\n  changeDistance: (curr: Snapshot, origin: Target, amount: number): Snapshot =>\n    snap(\n      curr.player,\n      updateMonster(curr.enemies, origin, ({ distance }) => ({ distance: clamp(distance + amount, 1, 5) })),\n      curr.target,\n    ),\n\n  attackPlayer: (start: Snapshot, curr: Snapshot, amount: number): Snapshot =>\n    snap(\n      {\n        ...curr.player,\n        stats: { ...curr.player.stats, hp: clamp(curr.player.stats.hp - amount, 0, start.player.stats.hp) },\n      },\n      curr.enemies,\n      curr.target,\n    ),\n  reducePlayerStamina: (\n    start: Snapshot,\n    curr: Snapshot,\n    amount: number,\n  ): Snapshot =>\n    snap(\n      {\n        ...curr.player,\n        stats: {\n          ...curr.player.stats,\n          stamina: clamp(curr.player.stats.stamina - amount, 0, start.player.stats.stamina),\n        },\n      },\n      curr.enemies,\n      curr.target,\n    ),\n};\n\nexport default function play(player: Player, enemies: Enemies): Play {\n  return {\n    states: [{\n      player,\n      enemies,\n      target: 0,\n    }],\n  };\n}\n\nexport const handlePlayerEffect = (play: Play, index: number, select: Chance.Chance): Play => {\n  const history = play.states;\n  const { enemies, player } = history[history.length - 1];\n  const playerSkills = Object.values(player.build).flatMap((s) => s.effects);\n  const functions = Seq(enemies)\n    .map((e, idx) => [idx as MonsterTarget, e.effects[e.rolls[e.stats.distance - 1][select.natural({ min: 0, max: e.rolls[e.stats.distance - 1].length - 1 })]]] as const)\n    .concat([['Player', playerSkills[index]] as const])\n    .sortBy(([_origin, effect]) => effect.priority);\n\n  const latestState: Snapshot = play.states[play.states.length - 1];\n  const newState =\n    functions.reduce((accState, [origin, effect]) => effect.effect(origin, play, accState), latestState);\n  return {\n    ...play,\n    states: [...play.states, newState],\n  };\n};\n\nexport const setSelected = (play: Play, target: MonsterTarget): Play => {\n  play.states[play.states.length - 1].target = target;\n  return {\n    states: [...play.states],\n  };\n}\n","import { actions, chain, Play } from \"../playGame\";\nimport { Effect, Enemy, Snapshot } from \"../types\";\n\nconst startState = (play: Play): Snapshot => play.states[0];\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nconst previousState = (play: Play): Snapshot => play.states[play.states.length - 1];\n\nexport const build: Record<\n  string,\n  {\n    display: string;\n    effects: Effect[];\n    [key: string]: any;\n  }[]\n> = {\n  class: [\n    {\n      display: \"Warrior\",\n      effects: [],\n    },\n    {\n      display: \"Mage\",\n      effects: [],\n    },\n    {\n      display: \"Rogue\",\n      effects: [],\n    },\n  ],\n  skill: [\n    {\n      display: \"Sturdy\",\n      effects: [],\n    },\n    {\n      display: \"Nimble\",\n      effects: [],\n    },\n  ],\n  weapon: [\n    {\n      display: \"Axe\",\n      effects: [\n        {\n          display: \"Chop\",\n          effect: (_, play, currentState) => actions.attackMonster(startState(play), currentState, 3),\n          priority: 2,\n        },\n        {\n          display: \"Cut\",\n          effect: (_, play, currentState) => actions.attackMonster(startState(play), currentState, 3),\n          priority: 3,\n        },\n      ],\n    },\n  ],\n  offhand: [\n    {\n      display: \"Hook\",\n      effects: [\n        {\n          display: \"Get over here!\",\n          effect: chain(\n            (_, play, currentState) => actions.attackMonster(startState(play), currentState, 3),\n            (_, play, currentState) => actions.reducePlayerStamina(startState(play), currentState, 2),\n            (_origin, _play, currentState) => actions.changeDistance(currentState, currentState.target, -1),\n          ),\n          priority: 4,\n        },\n      ],\n    },\n  ],\n  consumable: [\n    {\n      display: \"Potion\",\n      effects: [],\n    },\n  ],\n  armor: [\n    {\n      display: \"Heavy\",\n      effects: [],\n    },\n  ],\n  headgear: [\n    {\n      display: \"Helm\",\n      effects: [],\n    },\n  ],\n  footwear: [\n    {\n      display: \"Boots\",\n      effects: [],\n    },\n  ],\n  charm: [\n    {\n      display: \"of Health\",\n      effects: [],\n    },\n  ],\n};\n\nexport const randomName = () => names[Math.floor(Math.random() * names.length)];\n\nexport const enemies: Enemy[] = [\n  {\n    lore: {\n      name: \"Sacapuntas\",\n    },\n    stats: {\n      hp: 25,\n      rage: 0,\n      distance: 5,\n    },\n    rolls: [\n      [0, 1, 2, 1, 0],\n      [0, 1, 0, 0, 0],\n      [0, 0, 0, 0, 0],\n      [0, 0, 0, 0, 0],\n      [0, 1, 2, 1, 0, 0],\n    ],\n    effects: [\n      { display: \"Swipe\", priority: 3, effect: (_, play, currentState) => actions.attackPlayer(startState(play), currentState, 2) },\n      { display: \"Roar\", priority: 1, effect: (_, play, currentState) => actions.reducePlayerStamina(startState(play), currentState, 5) },\n      { display: \"Jump\", priority: 2, effect: (origin, _, currentState) => actions.changeDistance(currentState, origin, -2) },\n    ],\n  },\n  {\n    lore: {\n      name: \"Cacahue\",\n    },\n    stats: {\n      hp: 30,\n      rage: 0,\n      distance: 5,\n    },\n    effects: [\n      { display: \"Swipe\", priority: 3, effect: (_, play, currentState) => actions.attackPlayer(startState(play), currentState, 2) },\n      { display: \"Roar\", priority: 1, effect: (_, play, currentState) => actions.reducePlayerStamina(startState(play), currentState, 5) },\n      { display: \"Jump\", priority: 2, effect: (origin, _, currentState) => actions.changeDistance(currentState, origin, -2) },\n    ],\n    rolls: [\n      [0, 0, 0, 1, 0],\n      [0, 0, 0, 0, 0],\n      [0, 0, 0, 0, 0],\n      [0, 0, 0, 0, 0],\n      [0, 0, 2, 0, 0],\n    ]\n  },\n  {\n    lore: {\n      name: \"Toro\",\n    },\n    stats: {\n      hp: 22,\n      rage: 0,\n      distance: 5,\n    },\n    effects: [\n      { display: \"Swipe\", priority: 3, effect: (_, play, currentState) => actions.attackPlayer(startState(play), currentState, 2) },\n      { display: \"Roar\", priority: 1, effect: (_, play, currentState) => actions.reducePlayerStamina(startState(play), currentState, 5) },\n      { display: \"Jump\", priority: 2, effect: (origin, _, currentState) => actions.changeDistance(currentState, origin, -2) },\n    ],\n    rolls: [\n      [0, 0, 0, 1, 0],\n      [0, 0, 0, 0, 0],\n      [0, 0, 0, 0, 0],\n      [0, 0, 0, 0, 0],\n      [0, 0, 2, 0, 0],\n    ]\n  },\n];\n\nconst names = [\n  \"Lydan\",\n  \"Syrin\",\n  \"Ptorik\",\n  \"Joz\",\n  \"Varog\",\n  \"Gethrod\",\n  \"Hezra\",\n  \"Feron\",\n  \"Ophni\",\n  \"Colborn\",\n  \"Fintis\",\n  \"Gatlin\",\n  \"Jinto\",\n  \"Hagalbar\",\n  \"Krinn\",\n  \"Lenox\",\n  \"Revvyn\",\n  \"Hodus\",\n  \"Dimian\",\n  \"Paskel\",\n  \"Kontas\",\n  \"Weston\",\n  \"Azamarr \",\n  \"Jather \",\n  \"Tekren \",\n  \"Jareth\",\n  \"Adon\",\n  \"Zaden\",\n  \"Eune \",\n  \"Graff\",\n  \"Tez\",\n  \"Jessop\",\n  \"Gunnar\",\n  \"Pike\",\n  \"Domnhar\",\n  \"Baske\",\n  \"Jerrick\",\n  \"Mavrek\",\n  \"Riordan\",\n  \"Wulfe\",\n  \"Straus\",\n  \"Tyvrik \",\n  \"Henndar\",\n  \"Favroe\",\n  \"Whit\",\n  \"Jaris\",\n  \"Renham\",\n  \"Kagran\",\n  \"Lassrin \",\n  \"Vadim\",\n  \"Arlo\",\n  \"Quintis\",\n  \"Vale\",\n  \"Caelan\",\n  \"Yorjan\",\n  \"Khron\",\n  \"Ishmael\",\n  \"Jakrin\",\n  \"Fangar\",\n  \"Roux\",\n  \"Baxar\",\n  \"Hawke\",\n  \"Gatlen\",\n  \"Barak\",\n  \"Nazim\",\n  \"Kadric\",\n  \"Paquin\",\n  \"Kent\",\n  \"Moki\",\n  \"Rankar\",\n  \"Lothe\",\n  \"Ryven\",\n  \"Clawsen\",\n  \"Pakker\",\n  \"Embre\",\n  \"Cassian\",\n  \"Verssek\",\n  \"Dagfinn\",\n  \"Ebraheim\",\n  \"Nesso\",\n  \"Eldermar\",\n  \"Rivik\",\n  \"Rourke\",\n  \"Barton\",\n  \"Hemm\",\n  \"Sarkin\",\n  \"Blaiz \",\n  \"Talon\",\n  \"Agro\",\n  \"Zagaroth\",\n  \"Turrek\",\n  \"Esdel\",\n  \"Lustros\",\n  \"Zenner\",\n  \"Baashar \",\n  \"Dagrod \",\n  \"Gentar\",\n  \"Feston\",\n  \"Syrana\",\n  \"Resha\",\n  \"Varin\",\n  \"Wren\",\n  \"Yuni\",\n  \"Talis\",\n  \"Kessa\",\n  \"Magaltie\",\n  \"Aeris\",\n  \"Desmina\",\n  \"Krynna\",\n  \"Asralyn \",\n  \"Herra\",\n  \"Pret\",\n  \"Kory\",\n  \"Afia\",\n  \"Tessel\",\n  \"Rhiannon\",\n  \"Zara\",\n  \"Jesi\",\n  \"Belen\",\n  \"Rei\",\n  \"Ciscra\",\n  \"Temy\",\n  \"Renalee \",\n  \"Estyn\",\n  \"Maarika\",\n  \"Lynorr\",\n  \"Tiv\",\n  \"Annihya\",\n  \"Semet\",\n  \"Tamrin\",\n  \"Antia\",\n  \"Reslyn\",\n  \"Basak\",\n  \"Vixra\",\n  \"Pekka \",\n  \"Xavia\",\n  \"Beatha \",\n  \"Yarri\",\n  \"Liris\",\n  \"Sonali\",\n  \"Razra \",\n  \"Soko\",\n  \"Maeve\",\n  \"Everen\",\n  \"Yelina\",\n  \"Morwena\",\n  \"Hagar\",\n  \"Palra\",\n  \"Elysa\",\n  \"Sage\",\n  \"Ketra\",\n  \"Lynx\",\n  \"Agama\",\n  \"Thesra \",\n  \"Tezani\",\n  \"Ralia\",\n  \"Esmee\",\n  \"Heron\",\n  \"Naima\",\n  \"Rydna \",\n  \"Sparrow\",\n  \"Baakshi \",\n  \"Ibera\",\n  \"Phlox\",\n  \"Dessa\",\n  \"Braithe\",\n  \"Taewen\",\n  \"Larke\",\n  \"Silene\",\n  \"Phressa\",\n  \"Esther\",\n  \"Anika\",\n  \"Rasy \",\n  \"Harper\",\n  \"Indie\",\n  \"Vita\",\n  \"Drusila\",\n  \"Minha\",\n  \"Surane\",\n  \"Lassona\",\n  \"Merula\",\n  \"Kye\",\n  \"Jonna\",\n  \"Lyla\",\n  \"Zet\",\n  \"Orett\",\n  \"Naphtalia\",\n  \"Turi\",\n  \"Rhays\",\n  \"Shike\",\n  \"Hartie\",\n  \"Beela\",\n  \"Leska\",\n  \"Vemery \",\n  \"Lunex\",\n  \"Fidess\",\n  \"Tisette\",\n  \"Partha\",\n]","import React from \"react\";\nimport { Container, Row, Form, Button, ButtonGroup, Navbar } from \"react-bootstrap\";\nimport useScroll from \"../hooks/useScroll\";\n\nimport { Player } from \"../types\";\nimport { build, randomName } from \"../utils\";\n\nconst randomAge = () => Math.floor((Math.random() * 50) + 16);\n\nconst selects = Object.entries(build).map(([type, options]) => ({\n  type,\n  options: options.map(({ display }, value) => ({\n    display,\n    value,\n  })),\n}));\n\nconst PlayerBuilder = ({ onSave }: { onSave: (player: Player) => void }) => {\n  const [form, setForm] = React.useState<Record<string, number>>(\n    selects.reduce(\n      (acc, { type, options }) => ({\n        ...acc,\n        [type]: options[0].value,\n      }),\n      {},\n    ),\n  );\n  const [lore, setLore] = React.useState({\n    name: randomName(),\n    age: randomAge(),\n  });\n  const setField = (field: string, value: number) => {\n    setForm({\n      ...form,\n      [field]: value,\n    });\n  };\n  const onFormSubmit = (e: any) => {\n    e.preventDefault();\n    onSave({\n      id: \"p-1\",\n      lore,\n      stats: {\n        hp: 10,\n        stamina: 8,\n      },\n      build: Object.entries(form).reduce((acc, [type, value]) => {\n        return {\n          ...acc,\n          [type]: build[type][value]\n        }\n      }, {}),\n    });\n  };\n  const displayType = (type: string) => <b>{build[type][form[type]].display}</b>;\n  return (\n    <Form onSubmit={onFormSubmit}>\n      <Container fluid style={{ marginBottom: '105px' }}>\n        <Row className=\"g-2\">\n          {selects.map(({ type, options }) =>\n            <ElementPicker\n              setField={(value) => setField(type, value)}\n              section={type}\n              options={options}\n              key={type}\n              isSelected={(value) => form[type] === value} />\n          )}\n        </Row>\n        <Navbar fixed=\"bottom\" bg=\"dark\" variant=\"dark\" style={{ maxHeight: '100px' }}>\n          <Container>\n            <Navbar.Text>You are <i onClick={() => setLore((lore) => ({ ...lore, name: randomName() }))}>{lore.name}</i>, the {displayType('skill')} {displayType('class')} {displayType('charm')}<br />who wields a {displayType('weapon')} and a {displayType('offhand')}<br />and wears {displayType('armor')} with {displayType('headgear')} and {displayType('footwear')}</Navbar.Text>\n            <Button type=\"submit\">Pick your foe!</Button>\n          </Container>\n        </ Navbar>\n      </Container >\n    </Form >\n  );\n};\n\nconst ElementPicker = ({ isSelected, section, options, setField }: {\n  options: {\n    display: string;\n    value: number;\n  }[], isSelected: (value: number) => boolean, setField: (value: number) => void, section: string\n}) => {\n  const [scrollTo, scrollRef] = useScroll({\n    behavior: 'smooth',\n    block: 'start',\n  });\n\n  return (\n    <Row>\n      <Form.Label>{section}</Form.Label>\n      <br />\n      <ButtonGroup size=\"lg\" className=\"mb-2\">\n        {options.map(({ display, value }) => (\n          <Button\n            key={value}\n            name={section}\n            id={`${value}`}\n            variant={isSelected(value) ? 'primary' : 'secondary'}\n            onClick={() => { setField(value); scrollTo(); }}\n          >{display}</Button>\n        ))}\n      </ButtonGroup>\n      <div id={`${section}-scroll`} ref={scrollRef} />\n    </Row>\n  );\n}\n\nexport default PlayerBuilder;\n","import { Ref, useRef } from \"react\";\n\ntype ScrollToFn = () => void;\n\nexport default function useScroll<T extends Element>(scrollParams: ScrollIntoViewOptions): [ScrollToFn, Ref<any>] {\n  const elRef = useRef<T>(null);\n  const executeScroll = () => elRef.current!.scrollIntoView(scrollParams);\n\n  return [executeScroll, elRef];\n};\n","import React from \"react\";\nimport { Container, ButtonGroup, Form, Button, Navbar } from \"react-bootstrap\";\n\nimport { Player, Enemies, Enemy } from \"../types\";\nimport { enemies } from \"../utils\";\n\nconst EncounterBuilder = ({ player, onSave }: { player: Player, onSave: (enemies: Enemies) => void }) => {\n  const [encounter, setEncounter] = React.useState<Enemy[]>([]);\n  const onFormSubmit = (e: any) => {\n    e.preventDefault();\n    // Size enforced by UI\n    onSave([...encounter] as Enemies);\n  };\n  const displayType = (type: string) => <b>{player.build[type].display}</b>;\n  return (\n    <Form onSubmit={onFormSubmit}>\n      <Container fluid style={{ marginBottom: encounter.length > 0 ? '205px' : '105px' }}>\n        <ButtonGroup size=\"lg\" className=\"mb-2\">\n          {enemies.map((enemy) =>\n            <Button\n              key={enemy.lore.name}\n              onClick={() => encounter.length < 5 ? setEncounter((e) => [...e, enemy]) : void 0}\n            >{enemy.lore.name}</Button>\n          )}\n        </ButtonGroup>\n      </Container >\n      {encounter.length > 0 &&\n        <Navbar fixed=\"bottom\" bg=\"dark\" variant=\"dark\" style={{ marginBottom: '100px' }}>\n          <Container fluid>\n            <ButtonGroup size=\"sm\" className=\"mb-2\">\n              {encounter.map((enemy, idx) => <Button key={`${enemy.lore.name}-${idx}`} onClick={() => setEncounter((e) => { let found = false; return e.filter((m) => (found || m.lore.name !== enemy.lore.name) || !(found = true)); })}>{enemy.lore.name}</Button>)}\n            </ButtonGroup>\n          </Container>\n        </ Navbar>}\n      <Navbar fixed=\"bottom\" bg=\"dark\" variant=\"dark\" style={{ maxHeight: '100px' }}>\n        <Container>\n          <Navbar.Text>You are <i>{player.lore.name}</i>, the {displayType('skill')} {displayType('class')} {displayType('charm')}<br />who wields a {displayType('weapon')} and a {displayType('offhand')}<br />and wears {displayType('armor')} with {displayType('headgear')} and {displayType('footwear')}</Navbar.Text>\n          <Button type=\"submit\" disabled={encounter.length < 1}>To Battle!</Button>\n        </Container>\n      </ Navbar>\n    </Form >\n  );\n};\n\nexport default EncounterBuilder;\n","import React from \"react\";\nimport \"./App.css\";\n// import { readString } from \"react-papaparse\";\nimport { Enemies, Player } from \"./types\";\n\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport Game from \"./components/Game\";\nimport PlayerBuilder from \"./components/PlayerBuilder\";\nimport EncounterBuilder from \"./components/EncounterBuilder\";\nimport play, { handlePlayerEffect, Play, setSelected } from \"./playGame\";\nimport { Chance } from \"chance\";\n\n\ntype AppStatus = \"buildPlayer\" | \"buildEncounter\" | \"game\" | \"endGame\";\n\nconst chance = new Chance();\n\nfunction App() {\n  const [status, setStatus] = React.useState<AppStatus>(\"buildPlayer\");\n  const [player, setPlayerBuild] = React.useState<\n    Player | undefined\n  >();\n  const [encounter, setEncounter] = React.useState<Enemies>();\n  const [game, setGame] = React.useState<Play | undefined>();\n\n  const handleSavePlayer = (player: Player) => {\n    setPlayerBuild(player);\n    setStatus(\"buildEncounter\");\n  };\n  const handleSaveEncounter = (encounter: Enemies) => {\n    setEncounter(encounter);\n    setStatus(\"game\");\n  }\n\n  if (!game && player && encounter) {\n    const game = play(player, encounter);\n    setGame(game);\n  }\n\n  return (\n    <div className=\"App\">\n      {status === \"buildPlayer\" ? (\n        <PlayerBuilder onSave={handleSavePlayer} />\n      ) : null}\n      {status === \"buildEncounter\" && player ? (\n        <EncounterBuilder\n          player={player}\n          onSave={handleSaveEncounter}\n        />\n      ) : null}\n      {status === \"game\" && game ? (\n        <Game game={game} setSelected={(idx) => setGame(setSelected(game, idx))} handlePlayerEffect={(idx) => setGame(handlePlayerEffect(game, idx, chance))} />\n      ) : null}\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://cra.link/PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://cra.link/PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorkerRegistration from './serviceWorkerRegistration';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://cra.link/PWA\nserviceWorkerRegistration.register();\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}