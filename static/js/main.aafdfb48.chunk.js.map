{"version":3,"sources":["serviceWorkerRegistration.ts","utils/data.ts","components/PlayerBuilder.tsx","hooks/useScroll.tsx","components/EncounterBuilder.tsx","components/menus/Menu.tsx","geneticalgorithm/geneticalgorithm.js","tinkerer/tinkerer.ts","components/Enemy.tsx","components/Player.tsx","components/Game.tsx","hooks/usePressedKeys.tsx","components/menus/SingleGame.tsx","utils/typesSchemas.ts","components/menus/LoadScreen.tsx","App.tsx","reportWebVitals.ts","index.tsx","utils/effectRepository.ts","utils/playGame.ts","utils/zFunDump.ts","utils/types.ts","stateMachines/menuStateMachine.ts"],"names":["isLocalhost","Boolean","window","location","hostname","match","register","config","process","navigator","URL","href","origin","addEventListener","swUrl","fetch","headers","then","response","contentType","get","status","indexOf","serviceWorker","ready","registration","unregister","reload","registerValidSW","catch","console","log","checkValidServiceWorker","onupdatefound","installingWorker","installing","onstatechange","state","controller","onUpdate","onSuccess","error","previousState","play","states","length","randomEnemy","Chance","pickone","enemies","randomBuild","rng","buildOverride","debug","build","basic","class","skill","armor","weapon","offhand","footwear","headgear","charm","consumable","randomPlayer","statsOverride","id","string","lore","name","randomName","age","hp","makeStat","stamina","staminaPerTurn","speed","attack","defence","defaultStatus","makeRange","number","Set","allRanges","selfRange","amount","current","max","dodge","active","bleed","turns","stun","weapons","display","tooltip","effects","effectFunCall","priority","range","target","passives","eot","names","Math","floor","random","rolls","distance","enemy","systemBuildKeys","ElementPicker","isSelected","section","options","setField","scrollParams","elRef","useRef","scrollIntoView","useScroll","behavior","block","scrollTo","scrollRef","Row","Form","Label","ButtonGroup","size","className","map","item","Button","variant","onClick","ref","PlayerBuilder","onSave","player","playerStats","React","useState","form","setForm","setLore","displayType","type","postBuildPlayerStats","buildPlayer","onSubmit","e","preventDefault","Container","fluid","style","marginBottom","safeEntries","filter","has","values","value","field","Navbar","fixed","bg","maxHeight","Text","EncounterBuilder","encounter","setEncounter","a","enemiesStats","disabled","idx","found","m","_","Menu","title","Card","Title","geneticAlgorithmConstructor","settingWithDefaults","settings","defaults","mutationFunction","crossoverFunction","fitnessFunction","doesABeatBFunction","population","Error","populationSize","phenotype","b","undefined","cloneJSON","object","JSON","parse","stringify","mutate","crossover","mate","evolve","rand","push","populate","index","otherIndex","temp","randomizePopulationOrder","nextGeneration","p","competitor","compete","this","best","scored","scoredPopulation","reduce","score","bestScore","clone","defaultTinkererOptions","playerSeed","weights","monster","turn","tinkerer","iter","optionsOverride","rangeArr","actions","playerActions","oldPlay","latestState","monsterHealth","acc","newPlay","d6","setSelected","natural","min","latest","unavailable","handlePlayerEffect","exclude","playerHealth","playerStamina","startPlayerHealth","startPlayerStamina","startMonsterHealth","monsterKillingFitness","playerAlivenessFitness","killSpeedFitness","staminaFitness","fitness","gen","GeneticAlgorithmConstructor","i","EnemyCard","enemyStats","onSelect","latestAttack","canAct","hotkey","Body","Seq","countBy","toArray","v","find","OverlayTrigger","placement","delay","show","hide","overlay","Popover","Header","as","join","toFixed","toUpperCase","PlayerCard","selectedButtons","onClickEffect","lastAction","disabledSkills","setDisabledSkills","k","bot","hasPassives","Subtitle","ToggleButton","checked","onChange","event","currentTarget","delete","add","Stack","direction","gap","Object","flatMap","clamp","monsterHotkeys","Game","game","solveGame","timeTravel","hint","onMenu","lastAttacks","isLogShown","setShowLog","handleCloseLog","playerSkills","isPlayerAlive","areMonstersAlive","endGame","pressed","onUp","pressedKeys","updatePressedKeys","downHandler","key","set","upHandler","useCallback","useEffect","removeEventListener","usePressedKeys","valNum","parseInt","save","undo","redo","blob","Blob","saveAs","Date","now","Col","sm","md","Player","phase","zip","stats","xs","Enemy","Modal","onHide","scrollable","centered","closeButton","s","Footer","SingleGame","onGameEnd","setGame","setRedo","gameState","playState","timeTravelObj","newRedo","pop","slice","iterations","maxBy","playSchema","z","array","any","boolean","unknown","seed","LoadScreen","onLoad","loadError","setLoadError","load","data","playRaw","fileData","files","reader","FileReader","onloadend","ev","result","readAsText","rawData","Alert","Group","Control","accept","muted","rows","placeholder","App","useMachine","gameMenuMachine","devTools","send","matches","keys","main","on","quick","makeGameNew","context","singleContext","single","arcade","survivalContext","arcadeContext","victories","otherEnemy","firstState","makeGameNextLevel","survival","lastState","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","container","document","getElementById","createRoot","render","StrictMode","serviceWorkerRegistration","effectFun","fun","params","oldState","applyPoison","currentState","pipe","changeStatPlayer","changeStatMonster","newState","addBotEffect","engineFunctions","_origin","changeStatusPlayer","o","changeStatusMonster","effectFunRepo","changeDistance","attackMonster","modifyPlayerStamina","gameTarget","attackPlayer","addEnemy","_m","updateMonster","override","updatePlayer","curr","damage","afterDefence","afterArmor","armorSpent","afterBleed","f","updateStatus","removeMonster","currPlay","currSnap","modify","updatePlayerStat","addEotEffect","effect","statsRepository","turnDeterministicRng","randPerTurn","monsterSeed","monsterChance","floating","playerPassives","playerGameStats","enemyGameStats","toIndexableString","reduceFuns","funs","dodgeable","sortBy","priorityBonus","monsterId","targetMonster","isStunnedPlayer","isStunnedMonster","startState","parameters","callEffectFun","extractFunction","effectEotCleanup","effectDead","d","lastTurnState","usedSkill","initialState","preBotPlay","preBotState","postBotPlay","postBotState","entitiesBot","eff","postEntitiesBotPlay","postEntitiesBotState","turnRng","turnFunctions","concat","entitiesEot","playerEotEffects","enemiesEotEffects","postPlayerEotPlay","postPlayerEotState","postEotPlay","postEotState","postCleanup","postCleanupState","scoreGame","hpLoss","staminaLoss","Array","num","Infinity","t","isArray","repo","entries","isDebug","inspect","server","WebSocket","Server","port","toMenu","MENU","initial","entry","WIN","LOSE","win","lose","PLAYER","ENCOUNTER","cond","internal","victory","defeat","puzzle","SELECTED","COMPLETE","complete","NEXT","SELECT","LOAD","makeArcadeContext","makeSurvivalContext","makeSingleContext","createMachine","tsTypes","QUICK","SINGLE","ARCADE","SURVIVAL","guards","isFinal","bumpVictories","assign","_event","bumpScore","reset","c","interpret","onTransition","start"],"mappings":"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CDnC,GAAIC,EAAS,KACbmC,SAAU,EACVhC,MAAOH,EAAS,GAChBI,OAAQJ,EAAS,GACjBK,QAASL,EAAS,GAClBrD,OAAQ2D,IAGV,CAAC,CACCX,KAAM,CACJC,KAAM,QAER2B,QAAS,CACP,CAAEF,QAAS,QAASC,QAAS,QAASG,SAAU,EAAGF,QAAS,CAACC,YAAc,CAAC,iBAAkB,CAAEZ,OAAQ,MAAQc,MAAOnB,MAEzH2B,MAAO,CACL,CAAC,GACD,CAAC,GACD,CAAC,GACD,CAAC,GACD,CAAC,KAEF,CACDnC,GAAIC,EAAS,GACbmC,SAAU,EACVhC,MAAOH,EAAS,GAChBI,OAAQJ,EAAS,GACjBK,QAASL,EAAS,GAClBrD,OAAQ2D,KAINwB,EAAQ,CACZ,QACA,QACA,SACA,MACA,QACA,UACA,QACA,QACA,QACA,UACA,SACA,SACA,QACA,WACA,QACA,QACA,SACA,QACA,SACA,SACA,SACA,SACA,UACA,SACA,SACA,SACA,OACA,QACA,OACA,QACA,MACA,SACA,SACA,OACA,UACA,QACA,UACA,SACA,UACA,QACA,SACA,SACA,UACA,SACA,OACA,QACA,SACA,SACA,UACA,QACA,OACA,UACA,OACA,SACA,SACA,QACA,UACA,SACA,SACA,OACA,QACA,QACA,SACA,QACA,QACA,SACA,SACA,OACA,OACA,SACA,QACA,QACA,UACA,SACA,QACA,UACA,UACA,UACA,WACA,QACA,WACA,QACA,SACA,SACA,OACA,SACA,QACA,QACA,OACA,WACA,SACA,QACA,UACA,SACA,UACA,SACA,SACA,SACA,SACA,QACA,QACA,OACA,OACA,QACA,QACA,WACA,QACA,UACA,SACA,UACA,QACA,OACA,OACA,OACA,SACA,WACA,OACA,OACA,QACA,MACA,SACA,OACA,UACA,QACA,UACA,SACA,MACA,UACA,QACA,SACA,QACA,SACA,QACA,QACA,QACA,QACA,SACA,QACA,QACA,SACA,QACA,OACA,QACA,SACA,SACA,UACA,QACA,QACA,QACA,OACA,QACA,OACA,QACA,SACA,SACA,QACA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","file":"static/js/main.aafdfb48.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n  // [::1] is the IPv6 localhost address.\n  window.location.hostname === '[::1]' ||\n  // 127.0.0.0/8 are considered localhost for IPv4.\n  window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process && process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n            'worker. To learn more, visit https://cra.link/PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                'tabs for this page are closed. See https://cra.link/PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import { Chance } from \"chance\";\nimport { Subtract } from \"type-fest/source/internal\";\nimport { Build, Distances, Enemy, EnemyStats, Item, Player, PlayerStats, Ranges, Snapshot, UpTo, Play, effectFunCall, Stat, Status, BuildRepository } from \"./types\";\n\nexport const DEBUG = true;\n\nexport const startState = (play: Play): Snapshot => play.states[0];\nexport const previousState = (play: Play): Snapshot => play.states[play.states.length - 1];\n\nexport const randomEnemy = (): [Enemy, EnemyStats] => new Chance().pickone(enemies);\n\nexport const randomBuild = (rng: Chance.Chance, buildOverride?: Partial<Build>) => ({\n  debug: build.debug[DEBUG ? 1 : 0],\n  basic: rng.pickone(build.basic),\n  class: rng.pickone(build.class),\n  skill: rng.pickone(build.skill),\n  armor: rng.pickone(build.armor),\n  weapon: rng.pickone(build.weapon),\n  offhand: rng.pickone(build.offhand),\n  footwear: rng.pickone(build.footwear),\n  headgear: rng.pickone(build.headgear),\n  charm: rng.pickone(build.charm),\n  consumable: rng.pickone(build.consumable),\n  ...buildOverride,\n});\n\nexport const randomPlayer = (statsOverride?: PlayerStats, buildOverride?: Partial<Build>): [Player, PlayerStats] => {\n  const rng = new Chance();\n  return [{\n    id: rng.string(),\n    lore: {\n      name: randomName(),\n      age: rng.age(),\n    },\n    build: randomBuild(rng, buildOverride)\n  }, {\n    hp: makeStat(10),\n    stamina: makeStat(6),\n    staminaPerTurn: makeStat(2),\n    speed: makeStat(0),\n    attack: makeStat(0),\n    defence: makeStat(0),\n    status: defaultStatus,\n    ...statsOverride,\n  }];\n}\n\nexport const makeRange = (...number: UpTo<Subtract<Distances, 1>>[]) => [...new Set(number)] as Ranges;\nexport const allRanges = makeRange(0, 1, 2, 3, 4);\nexport const selfRange = allRanges;\n\nexport const makeStat = (amount: number): Stat => ({ current: amount, max: amount });\nexport const defaultStatus: Status = {\n  dodge: { active: false },\n  armor: { amount: 0 },\n  bleed: { turns: 0 },\n  stun: { active: false },\n}\n\n\nconst weapons: Item[] = [\n  {\n    display: \"Sword\",\n    tooltip: \"All-rounder\",\n    effects: [\n      {\n        display: \"Slash\",\n        tooltip: \"Swings at the enemy\",\n        effects: [\n          effectFunCall([\"Basic:Attack\", { amount: 2 }])\n        ],\n        priority: 3,\n        stamina: 2,\n        range: makeRange(0, 1),\n      },\n      {\n        display: \"Pommel Hit\",\n        tooltip: \"Deals a quick blow\",\n        effects: [\n          effectFunCall([\"Basic:Attack\", { amount: 2 }])\n        ],\n        priority: 2,\n        stamina: 2,\n        range: makeRange(0),\n      },\n      {\n        display: \"Overhead Slice\",\n        tooltip: \"Moves into melee and deals a heavy blow\",\n        effects: [\n          effectFunCall([\"Basic:Move\", { amount: -1 }]), effectFunCall([\"Basic:Attack\", { amount: 4 }])\n        ],\n        priority: 4,\n        stamina: 3,\n        range: makeRange(1),\n      },\n    ],\n  },\n  {\n    display: \"Greatsword\",\n    tooltip: \"Specialized in big damage\",\n    effects: [\n      {\n        display: \"Rend\",\n        tooltip: \"Swings at the enemy\",\n        effects: [\n          effectFunCall([\"Basic:Attack\", { amount: 3 }])\n        ],\n        priority: 4,\n        stamina: 4,\n        range: makeRange(0, 1),\n      },\n      {\n        display: \"Feint\",\n        tooltip: \"Quick step backwards\",\n        effects: [\n          effectFunCall([\"Basic:Move\", { amount: 1 }])\n        ],\n        priority: 1,\n        stamina: 1,\n        range: makeRange(0, 1),\n      },\n      {\n        display: \"Earth Flattener\",\n        tooltip: \"Charges a monstruous stunning blow\",\n        effects: [\n          effectFunCall([\"Basic:Move\", { amount: 5 }]), effectFunCall(\"Effect:Stun\")\n        ],\n        priority: 4,\n        stamina: 6,\n        range: makeRange(1),\n      },\n    ],\n  },\n  {\n    display: \"Twinblades\",\n    tooltip: \"Specialized in mobility\",\n    effects: [\n      {\n        display: \"Swoosh\",\n        tooltip: \"Deals a strike and moves back\",\n        effects: [\n          effectFunCall([\"Basic:Attack\", { amount: 2 }]),\n          effectFunCall([\"Basic:Move\", { amount: 1 }])\n        ],\n        priority: 2,\n        stamina: 2,\n        range: makeRange(0, 1),\n      },\n      {\n        display: \"Fiuuum\",\n        tooltip: \"Jump attack\",\n        effects: [\n          effectFunCall([\"Basic:Move\", { amount: -2 }]),\n          effectFunCall([\"Basic:Attack\", { amount: 3 }])\n        ],\n        priority: 4,\n        stamina: 3,\n        range: makeRange(2, 3),\n      },\n      {\n        display: \"SwishSwishSwishSwish\",\n        tooltip: \"Deals multiple low damage hits\",\n        effects: [\n          effectFunCall([\"Basic:Attack\", { amount: 1 }]),\n          effectFunCall([\"Basic:Attack\", { amount: 1 }]),\n          effectFunCall([\"Basic:Attack\", { amount: 1 }]),\n          effectFunCall([\"Basic:Attack\", { amount: 1 }])\n        ],\n        priority: 3,\n        stamina: 4,\n        range: makeRange(0),\n      },\n    ],\n  },\n  {\n    display: \"Katana\",\n    tooltip: \"Specialized in bleeding\",\n    effects: [\n      {\n        display: \"Slice & Dice\",\n        tooltip: \"Deals two swift strikes\",\n        effects: [\n          effectFunCall([\"Basic:Attack\", { amount: 1 }]),\n          effectFunCall([\"Basic:Attack\", { amount: 1 }])],\n        priority: 3,\n        stamina: 2,\n        range: makeRange(0, 1),\n      },\n      {\n        display: \"Wakizashi\",\n        tooltip: \"Short sword with a quick attack causing bleeding\",\n        effects: [\n          effectFunCall([\"Basic:Attack\", { amount: 1 }]),\n          effectFunCall([\"Effect:Bleed\", { target: 'Monster', turns: 2 }])\n        ],\n        priority: 2,\n        stamina: 4,\n        range: makeRange(0, 1),\n      },\n      {\n        display: \"Unsheathe\",\n        tooltip: \"Dodges the next attack and deals damage\",\n        effects: [\n          effectFunCall('Effect:Dodge'),\n          effectFunCall([\"Basic:Attack\", { amount: 3 }])\n        ],\n        priority: 1,\n        stamina: 4,\n        range: makeRange(0),\n      },\n    ],\n  },\n  {\n    display: \"Axe\",\n    tooltip: \"Specialized in debuffs\",\n    effects: [\n      {\n        display: \"Chop\",\n        tooltip: \"A slow but reliable attack\",\n        effects: [\n          effectFunCall([\"Basic:Attack\", { amount: 2 }])\n        ],\n        priority: 4,\n        stamina: 3,\n        range: makeRange(0, 1),\n      },\n      {\n        display: \"Aim for the head!\",\n        tooltip: \"Cripples the monster\",\n        effects: [\n          effectFunCall([\"Effect:Defence\", { target: 'Monster', amount: -1 }]),\n          effectFunCall([\"Effect:Bleed\", { target: 'Player', turns: 3 }])\n        ],\n        priority: 4,\n        stamina: 5,\n        range: makeRange(1),\n      },\n      {\n        display: \"Target the limbs!\",\n        tooltip: \"Weakens the monster\",\n        effects: [\n          effectFunCall([\"Effect:Attack\", { target: 'Monster', amount: -1 }]),\n          effectFunCall([\"Effect:Bleed\", { target: 'Player', turns: 3 }])\n        ],\n        priority: 4,\n        stamina: 5,\n        range: makeRange(1),\n      },\n    ],\n  },\n  {\n    display: \"Lance\",\n    tooltip: \"Specialized in mid-range attacks\",\n    effects: [\n      {\n        display: \"Pierce\",\n        tooltip: \"Pokes the enemy\",\n        effects: [\n          effectFunCall([\"Basic:Attack\", { amount: 2 }])\n        ],\n        priority: 3,\n        stamina: 2,\n        range: makeRange(0, 1, 2),\n      },\n      {\n        display: \"Charge!!\",\n        tooltip: \"Runs towards the enemy to deal a massive blow\",\n        effects: [\n          effectFunCall([\"Basic:Move\", { amount: -5 }]), effectFunCall([\"Basic:Attack\", { amount: 4 }])\n        ],\n        priority: 1,\n        stamina: 3,\n        range: makeRange(4),\n      },\n    ],\n  },\n  {\n    display: \"Hammer\",\n    tooltip: \"Specialized in stunning\",\n    effects: [\n      {\n        display: \"Head Banger\",\n        tooltip: \"Hits the enemy in the head\",\n        effects: [\n          effectFunCall([\"Basic:Attack\", { amount: 2 }]),\n          effectFunCall(\"Effect:Stun\")\n        ],\n        priority: 4,\n        stamina: 4,\n        range: makeRange(0),\n      },\n      {\n        display: \"Large swing\",\n        tooltip: \"Uses the inertia of the hammer to safely advance\",\n        effects: [\n          effectFunCall([\"Basic:Move\", { amount: -3 }]),\n          effectFunCall(\"Effect:Stun\")\n        ],\n        priority: 3,\n        stamina: 3,\n        range: makeRange(1, 2, 3),\n      },\n      {\n        display: \"Go for the ankles\",\n        tooltip: \"Slows down the enemy\",\n        effects: [\n          effectFunCall([\"Effect:Speed\", { target: 'Monster', amount: -1 }]),\n          effectFunCall(\"Effect:Stun\"),\n        ],\n        priority: 4,\n        stamina: 6,\n        range: makeRange(1),\n      },\n    ],\n  },\n  {\n    display: \"Finger Claw\",\n    tooltip: \"Specialized in poison\",\n    effects: [\n      {\n        display: \"Caress\",\n        tooltip: \"Applies poison to the monster\",\n        effects: [\n          effectFunCall([\"Effect:Poison\", { target: 'Monster', turns: 2 }])\n        ],\n        priority: 3,\n        stamina: 2,\n        range: makeRange(0),\n      },\n      {\n        display: \"Backflip\",\n        tooltip: \"Dodges an attack and moves backward\",\n        effects: [\n          effectFunCall(\"Effect:Dodge\"),\n          effectFunCall([\"Basic:Move\", { amount: 2 }]),\n        ],\n        priority: 1,\n        stamina: 4,\n        range: makeRange(0, 1),\n      },\n    ],\n  },\n  {\n    display: \"Bow\",\n    tooltip: \"Specialized in ranged attacks\",\n    effects: [\n      {\n        display: \"Relaxed Shot\",\n        tooltip: \"Shoots an arrow\",\n        effects: [\n          effectFunCall([\"Basic:Attack\", { amount: 2 }])\n        ],\n        priority: 3,\n        stamina: 2,\n        range: makeRange(3, 4),\n      },\n      {\n        display: \"Power Draw\",\n        tooltip: \"Shoots your strongest arrow and makes you weaker\",\n        effects: [\n          effectFunCall([\"Basic:Attack\", { amount: 6 }]),\n          effectFunCall([\"Effect:Attack\", { target: 'Player', amount: -1 }]),\n        ],\n        priority: 3,\n        stamina: 4,\n        range: makeRange(4),\n      },\n    ],\n  },\n  {\n    display: \"Magic Staff\",\n    tooltip: \"Specialized in multiple attacks\",\n    effects: [\n      {\n        display: \"Bolt\",\n        tooltip: \"Shoots a low damage bolt\",\n        effects: [\n          effectFunCall([\"Basic:Attack\", { amount: 1 }])\n        ],\n        priority: 3,\n        stamina: 3,\n        range: allRanges,\n      },\n      {\n        display: \"Pew Pew Pew\",\n        tooltip: \"Shoots a barrage of bolts\",\n        effects: [\n          effectFunCall([\"Basic:Attack\", { amount: 1 }]),\n          effectFunCall([\"Basic:Attack\", { amount: 1 }]),\n          effectFunCall([\"Basic:Attack\", { amount: 1 }]),\n          effectFunCall([\"Basic:Attack\", { amount: 1 }])],\n        priority: 4,\n        stamina: 8,\n        range: makeRange(2, 3, 4),\n      },\n    ],\n  },\n];\n\nexport const build: BuildRepository = {\n  debug: [\n    {\n      display: \"None\",\n    },\n    {\n      display: \"Debug\",\n      effects: [\n        {\n          display: \"GGWP\",\n          tooltip: \"Wins the game\",\n          priority: 1,\n          stamina: 0,\n          range: allRanges,\n          effects: [effectFunCall('Debug:GGWP')]\n        },\n        {\n          display: \"SUDOKU\",\n          tooltip: \"Loses the game\",\n          priority: 1,\n          stamina: 0,\n          range: allRanges,\n          effects: [effectFunCall('Debug:Sudoku')]\n        },\n      ]\n    }\n  ],\n  basic: [\n    {\n      display: \"Basic\",\n      effects: [\n        {\n          display: \"Rest\",\n          tooltip: \"Skip the turn and restore stamina\",\n          priority: 4,\n          stamina: 0,\n          range: selfRange,\n          effects: [effectFunCall('Basic:Rest')]\n        },\n        {\n          display: \"Advance\",\n          tooltip: \"Move closer\",\n          priority: 4,\n          stamina: 1,\n          range: selfRange,\n          effects: [effectFunCall(['Basic:Move', { amount: -1 }])]\n        },\n        {\n          display: \"Retreat\",\n          tooltip: \"Move farther\",\n          effects: [effectFunCall([\"Basic:Move\", { amount: 1 }])],\n          priority: 4,\n          stamina: 1,\n          range: selfRange,\n        }\n      ]\n    }\n  ],\n  class: [\n    {\n      display: \"Warrior\",\n      passives: [\"+Attack\", \"+Defence\", \"+Stamina\"],\n      effects: [\n        {\n          display: \"Strategic Kick\",\n          tooltip: \"Last resource attack\",\n          effects: [effectFunCall([\"Basic:Attack\", { amount: 2 }])],\n          priority: 2,\n          stamina: 1,\n          range: makeRange(1),\n        }\n      ]\n\n    },\n    {\n      display: \"Mage\",\n      passives: [\"+StaPerTurn\", \"+Stamina\", \"-Health\"],\n      effects: [\n        {\n          display: \"Just having a thought\",\n          tooltip: \"Restores stamina for the next action\",\n          priority: 4,\n          stamina: 0,\n          range: selfRange,\n          effects: [effectFunCall(['Basic:Stamina', { amount: 999 }])]\n        },\n      ]\n    },\n    {\n      display: \"Rogue\",\n      passives: [\"+Speed\", \"+Speed\", \"-Attack\", \"-Stamina\"],\n      effects: [\n        {\n          display: \"Strategic retreat\",\n          tooltip: \"Jump backwards\",\n          effects: [effectFunCall([\"Basic:Move\", { amount: 4 }])],\n          priority: 4,\n          stamina: 1,\n          range: selfRange,\n        }\n      ]\n    },\n    {\n      display: \"Berserk\",\n      passives: [\"+Attack\", \"+Attack\", \"+Attack\", \"-Defence\", \"-Defence\", \"-Health\"],\n    },\n  ],\n  skill: [\n    {\n      display: \"Sturdy\",\n      effects: [\n        {\n          display: \"Endure the pain\",\n          tooltip: \"Blocks some damage\",\n          effects: [effectFunCall([\"Effect:Armor\", { amount: 2 }])],\n          priority: 1,\n          stamina: 2,\n          range: selfRange,\n        },\n      ]\n    },\n    {\n      display: \"Nimble\",\n      effects: [\n        {\n          display: \"Dodge\",\n          tooltip: \"Avoid 1 enemy attack\",\n          effects: [effectFunCall(\"Effect:Dodge\")],\n          priority: 2,\n          stamina: 4,\n          range: selfRange,\n        }\n      ]\n    },\n    {\n      display: \"Resourceful\",\n      effects: [\n        {\n          display: \"Dodge this!\",\n          tooltip: \"Throws a stone\",\n          effects: [effectFunCall([\"Basic:Attack\", { amount: 2 }])],\n          priority: 4,\n          stamina: 3,\n          range: makeRange(3, 4),\n        }\n      ]\n    },\n  ],\n  weapon: weapons,\n  offhand: [\n    {\n      display: \"Hook\",\n      passives: [\"-Stamina\"],\n      effects: [\n        {\n          display: \"Get over here!\",\n          tooltip: \"Moves enemy closer\",\n          effects: [effectFunCall([\"Basic:Attack\", { amount: 3 }]), effectFunCall([\"Basic:Move\", { amount: -2 }])],\n          priority: 4,\n          stamina: 3,\n          range: makeRange(2, 3, 4),\n        },\n      ],\n    },\n    {\n      display: \"Parry Dagger\",\n      passives: [\"-Defence\"],\n      effects: [\n        {\n          display: \"Get over here!\",\n          tooltip: \"Avoids a melee attack\",\n          effects: [effectFunCall(\"Effect:Dodge\")],\n          priority: 2,\n          stamina: 2,\n          range: makeRange(1),\n        },\n      ],\n    },\n    {\n      display: \"Shield\",\n      passives: [\"+Defence\", \"-Speed\"],\n      effects: [\n        {\n          display: \"Not today!\",\n          tooltip: \"Blocks a lot of damage\",\n          effects: [effectFunCall([\"Effect:Armor\", { amount: 5 }])],\n          priority: 2,\n          stamina: 4,\n          range: selfRange,\n        },\n      ],\n    },\n    {\n      display: \"Focus\",\n      passives: [\"+Speed\", \"+StaPerTurn\"]\n    },\n    {\n      display: \"Wand\",\n      passives: [\"-Defence\", \"-StaPerTurn\"],\n      effects: [\n        {\n          display: \"Magic Bolt\",\n          tooltip: \"Shoots mana bolts until the caster faints\",\n          effects: [effectFunCall(\"Wand:MagicBolt\")],\n          priority: 3,\n          stamina: 1,\n          range: makeRange(3, 4),\n        }\n      ]\n    },\n  ],\n  armor: [\n    {\n      display: \"Heavy\",\n      passives: [\"+Defence\", \"+Defence\", \"+Defence\", \"+Defence\", \"-Speed\", \"-Speed\", \"-StaPerTurn\"],\n    },\n    {\n      display: \"Medium\",\n      passives: [\"+Defence\", \"+Defence\", \"-StaPerTurn\"],\n    },\n    {\n      display: \"Light\",\n      passives: [\"+Defence\"],\n    },\n    {\n      display: \"None\",\n      passives: [\"+Speed\"],\n    },\n  ],\n  // TODO\n  headgear: [\n    {\n      display: \"Helm\",\n      passives: [\"+Defence\", \"+Defence\", \"-Speed\", \"-StaPerTurn\"],\n      tooltip: \"Big protection for slow combatants\",\n    },\n    {\n      display: \"Feather Cap\",\n      passives: [\"+StaPerTurn\", \"+Stamina\"],\n      tooltip: \"Makes you feel energized, doesn't it?\",\n    },\n    {\n      display: \"Mage Hat\",\n      passives: [\"-StaPerTurn\"],\n      tooltip: \"Small tricks for big plays\",\n      effects: [\n        {\n          display: \"Flash!\",\n          tooltip: \"Blinks you to a better position\",\n          effects: [\n            effectFunCall([\"Basic:Attack\", { amount: 1 }]),\n            effectFunCall([\"Basic:Move\", { amount: 2 }])\n          ],\n          priority: 3,\n          stamina: 4,\n          range: makeRange(1, 2),\n        }\n      ]\n    },\n  ],\n  footwear: [\n    {\n      display: \"Slippers of Dooooodge!\",\n      tooltip: \"Allows you to dodge attacks\",\n      passives: [\"-Stamina\"],\n      effects: [\n        {\n          display: \"Advanced Dodge\",\n          tooltip: \"Avoid 1 attack\",\n          effects: [effectFunCall(\"Effect:Dodge\")],\n          priority: 1,\n          stamina: 3,\n          range: selfRange,\n        },\n      ],\n    },\n    {\n      display: \"Boots of Flight\",\n      tooltip: \"Avoid your enemies\",\n      passives: [\"-StaPerTurn\", \"-Defence\"],\n      eot: [{\n        display: \"Flight!\",\n        tooltip: \"Increases distance every turn\",\n        priority: 0,\n        range: allRanges,\n        effects: [effectFunCall('BootsOfFlight:EOT')],\n      }],\n    },\n    {\n      display: \"Greaves of Stability\",\n      tooltip: \"Extra resilient\",\n      passives: [\"+Defence\", \"-Speed\"],\n      effects: [\n        {\n          display: \"Dig your heels\",\n          tooltip: \"Resists damage\",\n          effects: [effectFunCall([\"Effect:Armor\", { amount: 3 }])],\n          priority: 1,\n          stamina: 4,\n          range: selfRange,\n        },\n      ],\n    },\n  ],\n  charm: [\n    {\n      display: \"of Health\",\n      passives: [\"+Health\", \"-Speed\"],\n      tooltip: \"Increases your maximum health\",\n    },\n    {\n      display: \"of Haste\",\n      passives: [\"+StaPerTurn\", \"-Stamina\"],\n      tooltip: \"Increases your maximum stamina regeneration\",\n    },\n    {\n      display: \"of Resilience\",\n      passives: [\"+Stamina\", \"-StaPerTurn\"],\n      tooltip: \"Increases your maximum stamina\",\n    },\n    {\n      display: \"of Strength\",\n      passives: [\"+Attack\", \"-Health\", \"-StaPerTurn\"],\n      tooltip: \"Increases your maximum attack\",\n    },\n    {\n      display: \"of Swiftness\",\n      passives: [\"+Speed\", \"-Attack\"],\n      tooltip: \"Increases your maximum speed\",\n    },\n    {\n      display: \"of Defence\",\n      passives: [\"+Defence\", \"-Stamina\", \"-Speed\"],\n      tooltip: \"Increases your maximum defence\",\n    },\n  ],\n  // TODO\n  consumable: [\n    {\n      display: \"Potion\",\n    },\n  ],\n};\n\nexport const randomName = () => names[Math.floor(Math.random() * names.length)];\n\nexport const enemies: [Enemy, EnemyStats][] = [\n  [{\n    lore: {\n      name: \"Sacapuntas\",\n    },\n    rolls: [\n      [0, 1, 2, 1, 0],\n      [0, 1, 0, 0, 0],\n      [0, 0, 0, 0, 0],\n      [0, 0, 0, 0, 0],\n      [0, 1, 2, 1, 0, 0],\n    ],\n    effects: [\n      { display: \"Swipe\", tooltip: \"Swipe\", priority: 3, effects: [effectFunCall([\"Monster:Attack\", { amount: 3 }])], range: makeRange(0, 1) },\n      { display: \"Roar\", tooltip: \"Swipe\", priority: 1, effects: [effectFunCall([\"Basic:Stamina\", { amount: -5 }])], range: allRanges },\n      { display: \"Jump\", tooltip: \"Swipe\", priority: 2, effects: [effectFunCall([\"Monster:Move\", { amount: -4 }])], range: makeRange(2, 3, 4) },\n    ],\n  }, {\n    hp: makeStat(25),\n    distance: 4,\n    speed: makeStat(0),\n    attack: makeStat(0),\n    defence: makeStat(0),\n    status: defaultStatus,\n  }],\n  [{\n    lore: {\n      name: \"Toro\",\n    },\n    effects: [\n      { display: \"Swipe\", tooltip: \"Swipe\", priority: 3, effects: [effectFunCall([\"Monster:Attack\", { amount: 3 }])], range: allRanges },\n      { display: \"Jump\", tooltip: \"Jump\", priority: 2, effects: [effectFunCall([\"Monster:Move\", { amount: -4 }])], range: makeRange(2, 3, 4) },\n    ],\n    rolls: [\n      [0, 0, 0, 0, 0],\n      [0, 0, 0, 0, 0],\n      [1, 1, 0, 0, 0],\n      [1, 1, 1, 0, 0],\n      [1, 1, 1, 1, 0],\n    ]\n  }, {\n    hp: makeStat(22),\n    distance: 4,\n    speed: makeStat(0),\n    attack: makeStat(0),\n    defence: makeStat(0),\n    status: defaultStatus,\n  }],\n  [{\n    lore: {\n      name: \"Summoner\",\n    },\n    effects: [\n      { display: \"Swipe\", tooltip: \"Swipe\", priority: 3, effects: [effectFunCall([\"Monster:Attack\", { amount: 3 }])], range: makeRange(0, 1) },\n      { display: \"Retreat\", tooltip: \"Jump\", priority: 3, effects: [effectFunCall([\"Monster:Move\", { amount: 5 }])], range: allRanges },\n      { display: \"Summon Smol\", tooltip: \"Summon Smol\", priority: 4, effects: [effectFunCall([\"Monster:Summon\", { enemy: 4 }])], range: makeRange(2, 3, 4) },\n      { display: \"Spit\", tooltip: \"Summon Smol\", priority: 4, effects: [effectFunCall([\"Monster:Attack\", { amount: 2 }])], range: makeRange(2, 3, 4) },\n    ],\n    rolls: [\n      [1, 1, 1, 0, 0],\n      [1, 1, 1, 0, 0],\n      [1, 1, 3, 3, 0],\n      [2, 3, 3, 3, 0],\n      [2, 2, 3, 3, 0],\n    ]\n  }, {\n    hp: makeStat(30),\n    distance: 4,\n    speed: makeStat(0),\n    attack: makeStat(0),\n    defence: makeStat(0),\n    status: defaultStatus,\n  }],\n  [{\n    lore: {\n      name: \"Body\",\n    },\n    effects: [\n      { display: \"Swipe\", tooltip: \"Swipe\", priority: 3, effects: [effectFunCall([\"Monster:Attack\", { amount: 3 }])], range: makeRange() },\n    ],\n    rolls: [\n      [0],\n      [0],\n      [0],\n      [0],\n      [0],\n    ]\n  }, {\n    hp: makeStat(300),\n    distance: 0,\n    speed: makeStat(0),\n    attack: makeStat(0),\n    defence: makeStat(0),\n    status: defaultStatus,\n  }],\n\n  [{\n    lore: {\n      name: \"Smol\",\n    },\n    effects: [\n      { display: \"Swipe\", tooltip: \"Swipe\", priority: 3, effects: [effectFunCall([\"Monster:Attack\", { amount: 3 }])], range: makeRange() },\n    ],\n    rolls: [\n      [0],\n      [0],\n      [0],\n      [0],\n      [0],\n    ]\n  }, {\n    hp: makeStat(5),\n    distance: 0,\n    speed: makeStat(0),\n    attack: makeStat(0),\n    defence: makeStat(0),\n    status: defaultStatus,\n  }],\n];\n\nconst names = [\n  \"Lydan\",\n  \"Syrin\",\n  \"Ptorik\",\n  \"Joz\",\n  \"Varog\",\n  \"Gethrod\",\n  \"Hezra\",\n  \"Feron\",\n  \"Ophni\",\n  \"Colborn\",\n  \"Fintis\",\n  \"Gatlin\",\n  \"Jinto\",\n  \"Hagalbar\",\n  \"Krinn\",\n  \"Lenox\",\n  \"Revvyn\",\n  \"Hodus\",\n  \"Dimian\",\n  \"Paskel\",\n  \"Kontas\",\n  \"Weston\",\n  \"Azamarr\",\n  \"Jather\",\n  \"Tekren\",\n  \"Jareth\",\n  \"Adon\",\n  \"Zaden\",\n  \"Eune\",\n  \"Graff\",\n  \"Tez\",\n  \"Jessop\",\n  \"Gunnar\",\n  \"Pike\",\n  \"Domnhar\",\n  \"Baske\",\n  \"Jerrick\",\n  \"Mavrek\",\n  \"Riordan\",\n  \"Wulfe\",\n  \"Straus\",\n  \"Tyvrik\",\n  \"Henndar\",\n  \"Favroe\",\n  \"Whit\",\n  \"Jaris\",\n  \"Renham\",\n  \"Kagran\",\n  \"Lassrin\",\n  \"Vadim\",\n  \"Arlo\",\n  \"Quintis\",\n  \"Vale\",\n  \"Caelan\",\n  \"Yorjan\",\n  \"Khron\",\n  \"Ishmael\",\n  \"Jakrin\",\n  \"Fangar\",\n  \"Roux\",\n  \"Baxar\",\n  \"Hawke\",\n  \"Gatlen\",\n  \"Barak\",\n  \"Nazim\",\n  \"Kadric\",\n  \"Paquin\",\n  \"Kent\",\n  \"Moki\",\n  \"Rankar\",\n  \"Lothe\",\n  \"Ryven\",\n  \"Clawsen\",\n  \"Pakker\",\n  \"Embre\",\n  \"Cassian\",\n  \"Verssek\",\n  \"Dagfinn\",\n  \"Ebraheim\",\n  \"Nesso\",\n  \"Eldermar\",\n  \"Rivik\",\n  \"Rourke\",\n  \"Barton\",\n  \"Hemm\",\n  \"Sarkin\",\n  \"Blaiz\",\n  \"Talon\",\n  \"Agro\",\n  \"Zagaroth\",\n  \"Turrek\",\n  \"Esdel\",\n  \"Lustros\",\n  \"Zenner\",\n  \"Baashar\",\n  \"Dagrod\",\n  \"Gentar\",\n  \"Feston\",\n  \"Syrana\",\n  \"Resha\",\n  \"Varin\",\n  \"Wren\",\n  \"Yuni\",\n  \"Talis\",\n  \"Kessa\",\n  \"Magaltie\",\n  \"Aeris\",\n  \"Desmina\",\n  \"Krynna\",\n  \"Asralyn\",\n  \"Herra\",\n  \"Pret\",\n  \"Kory\",\n  \"Afia\",\n  \"Tessel\",\n  \"Rhiannon\",\n  \"Zara\",\n  \"Jesi\",\n  \"Belen\",\n  \"Rei\",\n  \"Ciscra\",\n  \"Temy\",\n  \"Renalee\",\n  \"Estyn\",\n  \"Maarika\",\n  \"Lynorr\",\n  \"Tiv\",\n  \"Annihya\",\n  \"Semet\",\n  \"Tamrin\",\n  \"Antia\",\n  \"Reslyn\",\n  \"Basak\",\n  \"Vixra\",\n  \"Pekka\",\n  \"Xavia\",\n  \"Beatha\",\n  \"Yarri\",\n  \"Liris\",\n  \"Sonali\",\n  \"Razra\",\n  \"Soko\",\n  \"Maeve\",\n  \"Everen\",\n  \"Yelina\",\n  \"Morwena\",\n  \"Hagar\",\n  \"Palra\",\n  \"Elysa\",\n  \"Sage\",\n  \"Ketra\",\n  \"Lynx\",\n  \"Agama\",\n  \"Thesra\",\n  \"Tezani\",\n  \"Ralia\",\n  \"Esmee\",\n  \"Heron\",\n  \"Naima\",\n  \"Rydna\",\n  \"Sparrow\",\n  \"Baakshi\",\n  \"Ibera\",\n  \"Phlox\",\n  \"Dessa\",\n  \"Braithe\",\n  \"Taewen\",\n  \"Larke\",\n  \"Silene\",\n  \"Phressa\",\n  \"Esther\",\n  \"Anika\",\n  \"Rasy\",\n  \"Harper\",\n  \"Indie\",\n  \"Vita\",\n  \"Drusila\",\n  \"Minha\",\n  \"Surane\",\n  \"Lassona\",\n  \"Merula\",\n  \"Kye\",\n  \"Jonna\",\n  \"Lyla\",\n  \"Zet\",\n  \"Orett\",\n  \"Naphtalia\",\n  \"Turi\",\n  \"Rhays\",\n  \"Shike\",\n  \"Hartie\",\n  \"Beela\",\n  \"Leska\",\n  \"Vemery\",\n  \"Lunex\",\n  \"Fidess\",\n  \"Tisette\",\n  \"Partha\",\n]","import React from \"react\";\nimport { Container, Row, Form, Button, ButtonGroup, Navbar } from \"react-bootstrap\";\nimport useScroll from \"../hooks/useScroll\";\n\nimport { Build, Item, Player, PlayerStats, safeEntries } from \"../utils/types\";\nimport { build, randomEnemy, randomName, randomPlayer } from \"../utils/data\";\nimport { Set } from 'immutable';\nimport { buildPlayer } from \"../utils/playGame\";\n\nconst systemBuildKeys: Set<keyof Build> = Set(['debug', 'basic']);\n\nconst PlayerBuilder = ({ onSave }: { onSave: (player: Player, playerStats: PlayerStats) => void }) => {\n  const [player, playerStats] = randomPlayer();\n  const [form, setForm] = React.useState<Build>(player.build);\n  const [lore, setLore] = React.useState(player.lore);\n  const setField = <T extends keyof Build>(field: T, value: Build[T]) => {\n    setForm({\n      ...form,\n      [field]: value,\n    });\n  };\n  const onFormSubmit = (e: any) => {\n    e.preventDefault();\n    onSave({\n      id: \"p-1\",\n      lore,\n      build: form,\n    }, playerStats);\n  };\n  const displayType = (type: keyof Build) => <b>{form[type].display}</b>;\n\n  const postBuildPlayerStats = buildPlayer({ ...player, build: form }, playerStats, [randomEnemy()[1]])[0];\n\n  return (\n    <Form onSubmit={onFormSubmit}>\n      <Container fluid style={{ marginBottom: '105px' }}>\n        <Row className=\"g-2\">\n          {safeEntries(build)\n            .filter(([type, _]) => !systemBuildKeys.has(type))\n            .map(([type, values]) =>\n              <ElementPicker\n                setField={(value) => setField(type, value)}\n                section={type}\n                options={(values as Item[])}\n                key={type}\n                isSelected={(value) => form[type].display === value.display} />)\n          }\n        </Row>\n        <Navbar fixed=\"bottom\" bg=\"dark\" variant=\"dark\" style={{ maxHeight: '100px' }}>\n          <Container>\n            <Navbar.Text>You are <i onClick={() => setLore((lore) => ({ ...lore, name: randomName() }))}>{lore.name}</i>, the {displayType('skill')} {displayType('class')} {displayType('charm')}<br />who wields a {displayType('weapon')} and a {displayType('offhand')}<br />and wears {displayType('armor')} with {displayType('headgear')} and {displayType('footwear')}</Navbar.Text>\n            <Navbar.Text>\n              {postBuildPlayerStats.hp.current}/{postBuildPlayerStats.hp.max} ❤<br />\n              {postBuildPlayerStats.stamina.current}/{postBuildPlayerStats.stamina.max} 💪 ({postBuildPlayerStats.staminaPerTurn.current >= 0 && \"+\"}{postBuildPlayerStats.staminaPerTurn.current})<br />\n              Attack {postBuildPlayerStats.attack.current} | Defence {postBuildPlayerStats.defence.current} | Speed {postBuildPlayerStats.speed.current}\n            </Navbar.Text>\n            <Button type=\"submit\">This is me!</Button>\n          </Container>\n        </ Navbar>\n      </Container >\n    </Form >\n  );\n};\n\nconst ElementPicker = ({ isSelected, section, options, setField }: {\n  options: Item[], isSelected: (value: Item) => boolean, setField: (value: Item) => void, section: string\n}) => {\n  const [scrollTo, scrollRef] = useScroll({\n    behavior: 'smooth',\n    block: 'start',\n  });\n\n  return (\n    <Row>\n      <Form.Label>{section}</Form.Label>\n      <br />\n      <ButtonGroup size=\"lg\" className=\"mb-2\">\n        {options.map((item) => (\n          <Button\n            key={item.display}\n            name={section}\n            id={`${item.display}`}\n            variant={isSelected(item) ? 'primary' : 'secondary'}\n            onClick={() => { setField(item); scrollTo(); }}\n          >{item.display}</Button>\n        ))}\n      </ButtonGroup>\n      <div id={`${section}-scroll`} ref={scrollRef} />\n    </Row>\n  );\n}\n\nexport default PlayerBuilder;\n","import { Ref, useRef } from \"react\";\n\ntype ScrollToFn = () => void;\n\nexport default function useScroll<T extends Element>(scrollParams: ScrollIntoViewOptions): [ScrollToFn, Ref<any>] {\n  const elRef = useRef<T>(null);\n  const executeScroll = () => elRef.current!.scrollIntoView(scrollParams);\n\n  return [executeScroll, elRef];\n};\n","import React from \"react\";\nimport { Container, ButtonGroup, Form, Button, Navbar } from \"react-bootstrap\";\n\nimport { Player, Enemies, Enemy, EnemiesStats, EnemyStats, Build } from \"../utils/types\";\nimport { enemies, randomEnemy } from \"../utils/data\";\n\nconst EncounterBuilder = ({ player, onSave }: { player: Player, onSave: (enemies: Enemies, enemiesStats: EnemiesStats) => void }) => {\n  const [encounter, setEncounter] = React.useState<[Enemy, EnemyStats][]>([]);\n  const onFormSubmit = (e: any) => {\n    e.preventDefault();\n    const enemies = encounter.map(a => a[0]);\n    const enemiesStats = encounter.map(a => a[1]);\n    // Size enforced by UI\n    onSave(enemies as Enemies, enemiesStats as EnemiesStats);\n  };\n  const displayType = (type: keyof Build) => <b>{player.build[type].display}</b>;\n  return (\n    <Form onSubmit={onFormSubmit}>\n      <Container fluid style={{ marginBottom: encounter.length > 0 ? '205px' : '105px' }}>\n        <ButtonGroup size=\"lg\" className=\"mb-2\">\n          {enemies.map((enemy) =>\n            <Button\n              key={enemy[0].lore.name}\n              disabled={encounter.length > 4}\n              onClick={() => setEncounter((e) => [...e, enemy])}\n            >{enemy[0].lore.name}</Button>\n          )}\n        </ButtonGroup>\n      </Container >\n      {\n        encounter.length > 0 &&\n        <Navbar fixed=\"bottom\" bg=\"dark\" variant=\"dark\" style={{ marginBottom: '100px' }}>\n          <Container fluid>\n            <ButtonGroup size=\"sm\" className=\"mb-2\">\n              {encounter.map((enemy, idx) => <Button key={`${enemy[0].lore.name}-${idx}`} onClick={() => setEncounter((e) => { let found = false; return e.filter((m) => (found || m[0].lore.name !== enemy[0].lore.name) || !(found = true)); })}>{enemy[0].lore.name}</Button>)}\n            </ButtonGroup>\n          </Container>\n        </ Navbar>\n      }\n      <Navbar fixed=\"bottom\" bg=\"dark\" variant=\"dark\" style={{ maxHeight: '100px' }}>\n        <Container>\n          <Navbar.Text>You are <i>{player.lore.name}</i>, the {displayType('skill')} {displayType('class')} {displayType('charm')}<br />who wields a {displayType('weapon')} and a {displayType('offhand')}<br />and wears {displayType('armor')} with {displayType('headgear')} and {displayType('footwear')}</Navbar.Text>\n          <ButtonGroup>\n            <Button\n              disabled={encounter.length < 0 || encounter.length > 4}\n              onClick={(_) => setEncounter((e) => [...e, randomEnemy()])}>\n              Add Random\n            </Button>\n            <Button type=\"submit\" disabled={encounter.length < 1 || encounter.length > 5}>To Battle!</Button>\n          </ButtonGroup>\n        </Container>\n      </ Navbar>\n    </Form >\n  );\n};\n\nexport default EncounterBuilder;\n","import React from \"react\";\nimport { Container, Card, Row, Button } from \"react-bootstrap\";\n\nconst Menu: React.FC<{\n  title: string;\n  states: string[];\n  onClick: (value: string) => void\n}> = ({ title, states, onClick }) =>\n    <Container fluid style={{ marginBottom: '105px' }}>\n      <Row className=\"g-2\">\n        <Card.Title>\n          {title}\n        </Card.Title>\n      </Row>\n      {states.map(state =>\n        <Row className=\"g-2\" key={state}>\n          <Button size=\"lg\" className=\"mb-2\"\n            key={state}\n            variant={'primary'}\n            onClick={() => { onClick(state); }}\n          >{state}</Button>\n        </Row>\n      )}</Container >;\n\nexport default Menu;\n","export default function geneticAlgorithmConstructor(options) {\n\n    function settingDefaults() {\n        return {\n\n            mutationFunction: function (phenotype) { return phenotype },\n\n            crossoverFunction: function (a, b) { return [a, b] },\n\n            fitnessFunction: function (phenotype) { return 0 },\n\n            doesABeatBFunction: undefined,\n\n            population: [],\n            populationSize: 100,\n        }\n    }\n\n    function settingWithDefaults(settings, defaults) {\n        settings = settings || {}\n\n        settings.mutationFunction = settings.mutationFunction || defaults.mutationFunction\n        settings.crossoverFunction = settings.crossoverFunction || defaults.crossoverFunction\n        settings.fitnessFunction = settings.fitnessFunction || defaults.fitnessFunction\n\n        settings.doesABeatBFunction = settings.doesABeatBFunction || defaults.doesABeatBFunction\n\n        settings.population = settings.population || defaults.population\n        if (settings.population.length <= 0) throw Error(\"population must be an array and contain at least 1 phenotypes\")\n\n        settings.populationSize = settings.populationSize || defaults.populationSize\n        if (settings.populationSize <= 0) throw Error(\"populationSize must be greater than 0\")\n\n        return settings\n    }\n\n    var settings = settingWithDefaults(options, settingDefaults())\n\n    function populate() {\n        var size = settings.population.length\n        while (settings.population.length < settings.populationSize) {\n            const rand = Math.floor(Math.random() * size);\n            settings.population.push(\n                mutate(\n                    cloneJSON(settings.population[Math.floor(rand)])\n                )\n            )\n        }\n    }\n\n    function cloneJSON(object) {\n        return JSON.parse(JSON.stringify(object))\n    }\n\n    function mutate(phenotype) {\n        return settings.mutationFunction(cloneJSON(phenotype))\n    }\n\n    function crossover(phenotype) {\n        phenotype = cloneJSON(phenotype)\n        var mate = settings.population[Math.floor(Math.random() * settings.population.length)]\n        mate = cloneJSON(mate)\n        return settings.crossoverFunction(phenotype, mate)[0]\n    }\n\n    function doesABeatB(a, b) {\n        if (settings.doesABeatBFunction) {\n            return settings.doesABeatBFunction(a, b)\n        } else {\n            return settings.fitnessFunction(a) >= settings.fitnessFunction(b)\n        }\n    }\n\n    function compete() {\n        var nextGeneration = []\n\n        for (var p = 0; p < settings.population.length - 1; p += 2) {\n            var phenotype = settings.population[p];\n            var competitor = settings.population[p + 1];\n\n            nextGeneration.push(phenotype)\n            if (doesABeatB(phenotype, competitor)) {\n                if (Math.random() < 0.5) {\n                    nextGeneration.push(mutate(phenotype))\n                } else {\n                    nextGeneration.push(crossover(phenotype))\n                }\n            } else {\n                nextGeneration.push(competitor)\n            }\n        }\n\n        settings.population = nextGeneration;\n    }\n\n\n\n    function randomizePopulationOrder() {\n\n        for (var index = 0; index < settings.population.length; index++) {\n            var otherIndex = Math.floor(Math.random() * settings.population.length)\n            var temp = settings.population[otherIndex]\n            settings.population[otherIndex] = settings.population[index]\n            settings.population[index] = temp\n        }\n    }\n\n    return {\n        evolve: function (options) {\n\n            if (options) {\n                settings = settingWithDefaults(options, settings)\n            }\n\n            populate()\n            randomizePopulationOrder()\n            compete()\n            return this\n        },\n        best: function () {\n            var scored = this.scoredPopulation()\n            var result = scored.reduce(function (a, b) {\n                return a.score >= b.score ? a : b\n            }, scored[0]).phenotype\n            return cloneJSON(result)\n        },\n        bestScore: function () {\n            return settings.fitnessFunction(this.best())\n        },\n        population: function () {\n            return cloneJSON(this.config().population)\n        },\n        scoredPopulation: function () {\n            return this.population().map(function (phenotype) {\n                return {\n                    phenotype: cloneJSON(phenotype),\n                    score: settings.fitnessFunction(phenotype)\n                }\n            })\n        },\n        config: function () {\n            return cloneJSON(settings)\n        },\n        clone: function (options) {\n            return geneticAlgorithmConstructor(\n                settingWithDefaults(options,\n                    settingWithDefaults(this.config(), settings)\n                )\n            )\n        }\n    }\n}\n","import GeneticAlgorithmConstructor, { GeneticAlgorithmConfig, ScoredPhenotype } from '../geneticalgorithm/geneticalgorithm';\nimport { handlePlayerEffect, playerActions, setSelected } from '../utils/playGame';\nimport Chance from 'chance';\nimport { MonsterTarget, Play } from '../utils/types';\nimport { previousState } from '../utils/data';\nimport prettyjson from 'prettyjson';\nimport { Seq } from 'immutable';\nimport { rangeArr } from '../utils/zFunDump';\n\nexport type TinkererOptions = typeof defaultTinkererOptions & { turns?: number };\n\nexport const defaultTinkererOptions = {\n  playerSeed: \"Miau\",\n  weights: { monster: 0.70, player: 0.125, turn: 0.1, stamina: 0.075 },\n  debug: false,\n};\n\nexport const gameRender = (results: ScoredPhenotype<Play>[]): string => {\n  const best: ScoredPhenotype<Play> = Seq(results).maxBy(a => a.score)!!;\n  const lastState = previousState(best.phenotype);\n  return `BEST BY ${best.score} in ${best.phenotype.states.length - 1} turns\\n` +\n    prettyjson.render([\n      lastState.lastAttacks.map(({ origin, display, phase }) => [origin === 'Player' ? 'Player' : `${best.phenotype.enemies[origin]!!.lore.name} [${origin}]`, display, phase]),\n      Seq(best.phenotype.enemies).zip(Seq(lastState.enemies)).flatMap(([enemy, stats], idx) => [`[${idx}] ${enemy.lore.name}`, stats]).toArray(),\n      lastState.player,\n    ]);\n}\n\nexport default function tinkerer(play: Play, iter: number, optionsOverride?: Partial<TinkererOptions>): ScoredPhenotype<Play>[] {\n  const options: TinkererOptions = { ...defaultTinkererOptions, ...optionsOverride };\n  const range = rangeArr(iter);\n  const rand = new Chance(options.playerSeed);\n  const actions = playerActions(play.player);\n  const config: GeneticAlgorithmConfig<Play> = {\n    mutationFunction: (oldPlay) => {\n      const latestState = previousState(oldPlay);\n      const monsterHealth = latestState.enemies.reduce((acc, monster) => acc + monster.hp.current, 0);\n      const playerHealth = latestState.player.hp.current;\n      if (playerHealth === 0 || monsterHealth === 0) {\n        return oldPlay;\n      }\n      let newPlay = oldPlay;\n      while (rand.d6() === 6 || (previousState(newPlay).enemies[previousState(newPlay).target]?.hp ?? 0) <= 0) {\n        newPlay = setSelected(newPlay, rand.natural({ min: 0, max: previousState(newPlay).enemies.length - 1 }) as MonsterTarget);\n      }\n      const latest = previousState(newPlay);\n      const unavailable = actions.map((a, idx) => [a, idx] as const).filter(([a, _]) => a.stamina > latest.player.stamina.current).map(([_, idx]) => idx);\n      newPlay = handlePlayerEffect(\n        newPlay,\n        rand.natural({ min: 0, max: actions.length - 1, exclude: unavailable })\n      );\n      return newPlay;\n    },\n    fitnessFunction: (play) => {\n      const latestState = previousState(play);\n      const monsterHealth = latestState.enemies.reduce((acc, monster) => acc + monster.hp.current, 0);\n      const playerHealth = latestState.player.hp.current;\n      const playerStamina = latestState.player.stamina.current;\n      const startPlayerHealth = play.states[0].player.hp.max;\n      const startPlayerStamina = play.states[0].player.stamina.max;\n      const startMonsterHealth = play.states[0].enemies.reduce((acc, monster) => acc + monster.hp.current, 0);\n\n      const monsterKillingFitness = ((startMonsterHealth - monsterHealth) / startMonsterHealth);\n      const playerAlivenessFitness = (playerHealth / startPlayerHealth);\n      const killSpeedFitness = (play.turns - play.states.length) / play.turns;\n      const staminaFitness = (playerStamina / startPlayerStamina);\n\n      const fitness = (monsterKillingFitness * options.weights.monster) + (playerAlivenessFitness * options.weights.player) + (killSpeedFitness * options.weights.turn) + (staminaFitness * options.weights.stamina);\n      if (options.debug) {\n        console.log(`MH: ${monsterHealth} | PH: ${playerHealth} | TR: ${play.states.length}\\nFitness: ${fitness} | MF: ${monsterKillingFitness} | PF: ${playerAlivenessFitness} | SF: ${staminaFitness} | TF: ${killSpeedFitness}\\nWeights: ${JSON.stringify(options.weights)}`);\n      }\n      return fitness;\n    },\n    population: range.map((_) => play),\n    populationSize: iter,\n  }\n\n  const turns = optionsOverride?.turns ? optionsOverride?.turns : play.turns;\n  let gen = new GeneticAlgorithmConstructor<Play>(config);\n  for (let i = 0; i < turns; i++) {\n    gen = gen.evolve();\n  }\n  return gen.scoredPopulation();\n}\n","import React from \"react\";\nimport { Card, Button, OverlayTrigger, Popover } from \"react-bootstrap\";\nimport { Enemy, Effect, EnemyStats } from \"../utils/types\";\nimport { Seq } from \"immutable\";\n\nconst skillPercents = (effects: Effect[]) =>\n  Seq(effects).countBy((e) => e.display).toArray().map(([display, v], idx) => {\n    const { range, priority, tooltip } = effects.find(a => a.display === display)!!;\n    return <OverlayTrigger\n      key={idx}\n      placement=\"right\"\n      delay={{ show: 100, hide: 250 }}\n      overlay={<Popover>\n        <Popover.Header as=\"h3\">{display}</Popover.Header>\n        <Popover.Body>\n          {tooltip}<br />⏱:{priority}<br />🏹:{range.length === 5 ? 'Any' : range.length === 0 ? 'None' : range.map(a => a + 1).join(\", \")}\n        </Popover.Body>\n      </Popover>}\n    ><>[{(v / effects.length * 100).toFixed(2)}%] {display}<br key={idx} /></>\n    </OverlayTrigger>\n  });\n\nconst EnemyCard: React.FC<{\n  enemy: Enemy;\n  enemyStats: EnemyStats;\n  latestAttack: string | undefined;\n  isSelected?: boolean;\n  onSelect: () => void;\n  canAct: boolean;\n  hotkey: string;\n}> = ({ enemy, enemyStats, isSelected, onSelect, latestAttack, canAct, hotkey }) => (\n  <Card bg={isSelected ? \"info\" : undefined}>\n    <Card.Body>\n      <Card.Title>{enemy.lore.name} {enemyStats.hp.current > 0 ? \"\" : (<b>💀DEAD💀</b>)}</Card.Title>\n      <Card.Text>❤:{enemyStats.hp.current} 🏹:{enemyStats.distance + 1}</Card.Text>\n      <Card.Text>Attack {enemyStats.attack.current}<br />Defence {enemyStats.defence.current}<br />Speed {enemyStats.speed.current}</Card.Text>\n      {enemyStats.status.bleed.turns > 0 && ` ${enemyStats.status.bleed.turns} 🩸`}\n      {latestAttack && (<Card.Text>Latest attack: {latestAttack}</Card.Text>)}\n      <Card.Text>\n        Next attack prediction:\n        <br />\n        {skillPercents(enemy.rolls[enemyStats.distance].map((idx) => enemy.effects[idx]))}\n        <br />\n      </Card.Text>\n      {canAct && (<Button disabled={isSelected} onClick={onSelect}>[<i>{hotkey.toUpperCase()}</i>] Select</Button>)}\n    </Card.Body>\n  </Card>\n);\n\nexport default EnemyCard;\n","import React from \"react\";\nimport { Card, Button, Stack, ToggleButton, ButtonGroup, Popover, OverlayTrigger } from \"react-bootstrap\";\nimport { DisabledSkills, Player, PlayerStats, safeEntries } from \"../utils/types\";\nimport { Set } from 'immutable';\nimport { clamp } from \"../utils/zFunDump\";\n\nconst PlayerCard: React.FC<{\n  selectedButtons: Set<string>,\n  player: Player;\n  playerStats: PlayerStats;\n  canAct: boolean;\n  lastAction: string | undefined;\n  onClickEffect: (index: number) => void;\n  disabledSkills: DisabledSkills;\n  setDisabledSkills: (skills: DisabledSkills) => void;\n}> = ({ selectedButtons, player, playerStats, onClickEffect, canAct, lastAction, disabledSkills, setDisabledSkills }) => {\n  const passives = safeEntries(player.build)\n    .map(([k, e]) => [k, e, [...(e.bot ?? []), ...(e.eot ?? [])]] as const);\n\n  const hasPassives = passives.reduce((acc, [k, e, passives]) => passives.length > 0, false);\n  return <Card>\n    <Card.Body>\n      <Card.Title>{player.lore.name}{playerStats.hp.current > 0 ? \"\" : (<b> 💀DEAD💀 </b>)}</Card.Title>\n      <Card.Subtitle className=\"mb-2 text-muted\">\n        {player.build.class.display}\n      </Card.Subtitle>\n      <Card.Text>Attack {playerStats.attack.current} | Defence {playerStats.defence.current} | Speed {playerStats.speed.current}</Card.Text>\n      <Card.Text>{playerStats.hp.current}/{playerStats.hp.max} ❤</Card.Text>\n      <Card.Text>{playerStats.stamina.current}/{playerStats.stamina.max} 💪 ({playerStats.staminaPerTurn.current >= 0 && \"+\"}{playerStats.staminaPerTurn.current})</Card.Text>\n      {playerStats.status.bleed.turns > 0 && <Card.Text>` ${playerStats.status.bleed.turns} 🩸`</Card.Text>}\n      {lastAction && (<Card.Text>Last action: {lastAction}</Card.Text>)}\n    </Card.Body>\n    {canAct && hasPassives && (<>\n      <b>Passives</b>\n      <ButtonGroup>\n        {passives\n          .map(([k, e, passives], idx) => passives.length > 0 && (<OverlayTrigger\n            key={idx}\n            placement=\"right\"\n            delay={{ show: 100, hide: 250 }}\n            overlay={<Popover>\n              <Popover.Header as=\"h3\">{e.display}</Popover.Header>\n              <Popover.Body>\n                {e.tooltip}\n              </Popover.Body>\n            </Popover>}\n          >\n            <ToggleButton\n              checked={!Set(disabledSkills).has(k)}\n              value={k}\n              id={`passive-skill-${k}`}\n              type=\"checkbox\"\n              variant=\"outline-primary\"\n              onChange={(event) => setDisabledSkills(\n                event.currentTarget.checked\n                  ? Set(disabledSkills).delete(k).toArray()\n                  : Set(disabledSkills).add(k).toArray())}>\n              {e.display}\n            </ToggleButton>\n          </OverlayTrigger>\n          ))}\n      </ButtonGroup>\n    </>)}\n    {canAct && (<Card.Body>\n      <Stack direction=\"horizontal\" gap={2}>\n        {Object.values(player.build)\n          .flatMap((a) => a.effects ?? [])\n          .map((e, idx) => (<OverlayTrigger\n            key={e.display}\n            placement=\"top\"\n            delay={{ show: 100, hide: 250 }}\n            overlay={<Popover>\n              <Popover.Header as=\"h3\">{e.display}</Popover.Header>\n              <Popover.Body>\n                {e.tooltip}\n              </Popover.Body>\n            </Popover>}\n          >\n            <div>\n              <Button\n                active={selectedButtons.has(e.display)}\n                disabled={playerStats.stamina.current < e.stamina}\n                onClick={(_) => onClickEffect(idx)}\n              >\n                [<i>{idx + 1}</i>] <b>{e.display}</b>\n              </Button>\n              <br />\n              <Card.Text>💪:{e.stamina} ⏱:{clamp(e.priority - playerStats.speed.current, 0, 4)}<br />🏹:{e.range.length === 5 ? 'Any' : e.range.map(a => a + 1).join(\", \")}</Card.Text>\n            </div>\n          </OverlayTrigger>\n          ))}\n      </Stack>\n    </Card.Body>)}\n  </Card>\n}\n\nexport default PlayerCard;\n","import { Container, Row, Col, Card, Modal, ButtonGroup } from \"react-bootstrap\";\n\nimport { DisabledSkills, MonsterTarget, Play } from \"../utils/types\";\n\nimport EnemyCard from \"./Enemy\";\nimport PlayerCard from \"./Player\";\nimport usePressedKeys from \"../hooks/usePressedKeys\";\nimport { playerActions } from \"../utils/playGame\";\nimport { Seq, Set } from \"immutable\";\nimport { previousState } from \"../utils/data\";\nimport { Button } from \"react-bootstrap\";\nimport saveAs from 'file-saver';\nimport { useCallback, useState } from \"react\";\n\nexport type GameProps = {\n  game: Play;\n  setSelected: (target: MonsterTarget) => void;\n  setDisabledSkills: (disabled: DisabledSkills) => void;\n  handlePlayerEffect: (index: number) => void,\n  solveGame: (iterations: number) => void,\n  hint: (iterations: number) => void,\n  timeTravel: { undo: () => void; redo: (() => void) | undefined } | undefined,\n  onMenu: () => void,\n};\n\nconst monsterHotkeys = [\"q\", \"w\", \"e\", \"r\", \"t\", \"y\"];\n\nconst Game = ({ handlePlayerEffect, setSelected, setDisabledSkills, game, solveGame, timeTravel, hint, onMenu }: GameProps): JSX.Element => {\n  const { player, enemies } = game;\n  const { player: playerStats, enemies: enemiesStats, target, lastAttacks, disabledSkills } = previousState(game);\n  const [isLogShown, setShowLog] = useState(false);\n\n  const handleCloseLog = () => setShowLog(false);\n  const handleShowLog = () => setShowLog(true);\n\n  const playerSkills = playerActions(player);\n  const monsterHealth = enemiesStats.reduce((acc, m) => m.hp.current + acc, 0);\n  const isPlayerAlive = playerStats.hp.current > 0;\n  const areMonstersAlive = monsterHealth > 0;\n  const endGame = game.states.length < game.turns;\n  const canAct = isPlayerAlive && areMonstersAlive && endGame;\n\n  const pressed = usePressedKeys((key) => {\n    if (!canAct) return;\n    const valNum = parseInt(key);\n    if (valNum > 0 && valNum <= playerSkills.length) {\n      const hasStamina = playerSkills[valNum - 1].stamina <= playerStats.stamina.current;\n      if (!hasStamina) return;\n      handlePlayerEffect(valNum - 1);\n    }\n\n    if (key === \"Escape\") {\n      onMenu();\n    }\n    if (key === \"h\") {\n      hint(100);\n    }\n\n    if (key === \"l\") {\n      setShowLog(!isLogShown);\n    }\n\n    if (key === \"s\") {\n      save();\n    }\n\n    if (key === \"a\" && game.states.length > 1 && timeTravel) {\n      timeTravel.undo();\n    }\n    if (key === \"d\" && timeTravel && timeTravel.redo != null) {\n      timeTravel.redo();\n    }\n\n    if (key === monsterHotkeys[0] && enemies.length > 0) {\n      setSelected(0 as MonsterTarget);\n    }\n    if (key === monsterHotkeys[1] && enemies.length > 1) {\n      setSelected(1 as MonsterTarget);\n    }\n    if (key === monsterHotkeys[2] && enemies.length > 2) {\n      setSelected(2 as MonsterTarget);\n    }\n    if (key === monsterHotkeys[3] && enemies.length > 3) {\n      setSelected(3 as MonsterTarget);\n    }\n    if (key === monsterHotkeys[4] && enemies.length > 4) {\n      setSelected(4 as MonsterTarget);\n    }\n  });\n\n  const selectedButtons = Set<string>([...pressed].flatMap((key: string) => {\n    const valNum = parseInt(key);\n    if (valNum > 0 && valNum <= playerSkills.length) {\n      return [playerSkills[valNum - 1].display];\n    } else {\n      return [];\n    }\n  }));\n\n  const save = useCallback(() => {\n    const blob = new Blob([JSON.stringify(game)], { type: \"application/json;charset=utf-8\" });\n    saveAs(blob, `buildmancer-${Date.now()}.json`);\n  }, [game]);\n\n  return (\n    <>\n      <Container fluid>\n        <Row className=\"justify-content-center align-items-flex-start\">\n          <Col sm={12} md={8}>\n            <Button onClick={onMenu}>[<i>Esc</i>] MAIN MENU</Button>\n            <Card.Title>\n              {!isPlayerAlive ? (<b>❌❌DEFEAT❌❌</b>) : !areMonstersAlive ? (<b>🎉🎉VICTORY🎉🎉</b>) : \"\"} Turn {game.states.length} out of {game.turns}\n            </Card.Title>\n            <PlayerCard\n              player={player}\n              playerStats={playerStats}\n              disabledSkills={disabledSkills}\n              setDisabledSkills={setDisabledSkills}\n              onClickEffect={(idx) => handlePlayerEffect(idx)}\n              selectedButtons={selectedButtons}\n              lastAction={lastAttacks.filter(a => a.origin === 'Player' && a.phase === 'MAIN').map(a => `${a.display}`).join(\" -> \") ?? undefined}\n              canAct={canAct} />\n            {timeTravel != null && (<Row>\n              <ButtonGroup>\n                {game.states.length > 1 && (<Button onClick={(_) => timeTravel.undo()}>[<i>A</i>] Undo ↩</Button>)}\n                {timeTravel.redo && (<Button onClick={(_) => timeTravel.redo!!()}>[<i>D</i>] Redo ↪</Button>)}\n              </ButtonGroup>\n            </Row>)}\n            <Row>\n              <ButtonGroup>\n                <Button onClick={(_) => hint(100)}><i>[H]</i> Hint</Button>\n              </ButtonGroup>\n            </Row>\n            <Row>\n              {Seq(enemies).zip(Seq(enemiesStats)).map(([enemy, stats], idx) => (\n                <Col key={idx} xs={6} md={4}>\n                  <EnemyCard\n                    key={idx}\n                    enemyStats={stats}\n                    enemy={enemy}\n                    canAct={canAct}\n                    latestAttack={Seq(lastAttacks).filter(({ origin, phase }) => origin === idx && phase === 'MAIN').map(a => `${a.display}`).join(\" -> \") ?? undefined}\n                    isSelected={idx === target}\n                    onSelect={() => setSelected(idx as MonsterTarget)}\n                    hotkey={monsterHotkeys[idx]}\n                  />\n                </Col>\n              ))}\n            </Row>\n            <Card.Title>\n              Debug\n            </Card.Title>\n            <Row>\n              <ButtonGroup>\n                <Button onClick={handleShowLog}>[<i>L</i>] Log 🗒</Button>\n                <Button onClick={save}>[<i>S</i>] Dump to file 📂</Button>\n              </ButtonGroup>\n            </Row>\n            <Card.Title>\n              Cheats\n            </Card.Title>\n            <Row>\n              <ButtonGroup>\n                <Button onClick={(_) => solveGame(100)}>Solve ⌛</Button>\n                <Button onClick={(_) => solveGame(1000)}>Solve thoroughly ⌛⌛⌛</Button>\n              </ButtonGroup>\n            </Row>\n          </Col>\n        </Row>\n      </Container>\n      <Modal show={isLogShown} onHide={handleCloseLog} scrollable={true} centered={true}>\n        <Modal.Header closeButton>\n          <Modal.Title>Game Log</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          {game.states.map((s, idx) => (\n            <div key={idx}>\n              <b>Turn {idx}</b><br />\n              Player: {JSON.stringify(s.player, null, 2)}<br />\n              Enemies: {JSON.stringify(s.enemies, null, 2)}<br />\n              Target [{s.target}]<br />\n              Bot?: {JSON.stringify(s.bot, null, 2)}<br />\n              Eot?: {JSON.stringify(s.eot, null, 2)}<br />\n              Actions:<br />\n              {s.lastAttacks.map((a, idx) => (<div key={idx}>{\"-->\"} {JSON.stringify(a, null, 2)}<br /></div>))}\n            </div>\n          ))}\n        </Modal.Body>\n        <Modal.Footer>\n          <Button variant=\"primary\" onClick={handleCloseLog}>\n            Close\n          </Button>\n        </Modal.Footer>\n      </Modal >\n    </>\n  );\n};\n\nexport default Game;\n","import { useEffect, useCallback, useState } from \"react\";\n\nexport default function usePressedKeys(onUp: (e: string) => void): Set<string> {\n\n  const [pressedKeys, updatePressedKeys] = useState(new Set<string>());\n\n  const downHandler = ({ key }: { key: string }) => {\n    updatePressedKeys((set) => new Set([...set, key]));\n  }\n\n  const upHandler = useCallback(({ key }: { key: string }) => {\n    updatePressedKeys((set) => new Set([...set].filter((k) => k !== key)));\n    onUp(key);\n  }, [onUp]);\n\n  useEffect(() => {\n    window.addEventListener(\"keydown\", downHandler);\n    window.addEventListener(\"keyup\", upHandler);\n\n    return () => {\n      window.removeEventListener(\"keydown\", downHandler);\n      window.removeEventListener(\"keyup\", upHandler);\n    };\n  }, [upHandler]);\n\n  return pressedKeys;\n}","import { Seq } from \"immutable\";\nimport React from \"react\";\nimport tinkerer from \"../../tinkerer/tinkerer\";\nimport { previousState } from \"../../utils/data\";\nimport { PlayState, playState, setSelected, setDisabledSkills, handlePlayerEffect } from \"../../utils/playGame\";\nimport { Play, Snapshot } from \"../../utils/types\";\nimport Game from \"../Game\";\n\nconst SingleGame = ({ play, timeTravel, onGameEnd, onMenu }: { play: Play; timeTravel: boolean, onGameEnd: (state: PlayState, play: Play) => void, onMenu: () => void }) => {\n  const [game, setGame] = React.useState<Play>(play);\n  const [redo, setRedo] = React.useState<Snapshot[]>([]);\n\n  React.useEffect(() => {\n    setGame(play);\n  }, [play]);\n\n  React.useEffect(() => {\n    const gameState = playState(game);\n    const hasEnded = gameState !== 'playing';\n    if (hasEnded) {\n      onGameEnd(gameState, game);\n    }\n  }, [game]);\n\n  const timeTravelObj = timeTravel ? {\n    redo: redo.length > 0 ? (() => {\n      const newRedo = [...redo];\n      const latest = newRedo.pop() as Snapshot;\n      setRedo(newRedo);\n      setGame({ ...game, states: [...game.states, latest] });\n    }) : undefined,\n    undo: () => {\n      setRedo([...redo, previousState(game)]);\n      setGame({ ...game, states: [game.states[0], ...game.states.slice(1, -1)] });\n    }\n  } : undefined;\n\n  return (<Game\n    game={game}\n    timeTravel={timeTravelObj}\n    onMenu={onMenu}\n    setSelected={(idx) => { setRedo([]); setGame(setSelected(game, idx)); }}\n    setDisabledSkills={(disabled) => { setRedo([]); setGame(setDisabledSkills(game, disabled)) }}\n    handlePlayerEffect={(idx) => { setRedo([]); setGame(handlePlayerEffect(game, idx)); }}\n    solveGame={(iterations) => setGame(Seq(tinkerer(game, iterations, { turns: game.turns - game.states.length })).maxBy(a => a.score)!!.phenotype)}\n    hint={(iterations) =>\n      setGame({\n        ...game,\n        states: [...game.states, Seq(tinkerer(game, iterations, { turns: game.turns - game.states.length })).maxBy(a => a.score)!!.phenotype.states[game.states.length]]\n      })\n    }\n  />\n  );\n}\n\nexport default SingleGame;\n","import { z } from 'zod';\n\nexport const playSchema = z.object({\n  player: z.object({\n    id: z.string(),\n    lore: z.object({ name: z.string(), age: z.number() }),\n    build: z.object({\n      debug: z.object({\n        display: z.string(),\n        effects: z.array(z.any()),\n      }),\n      basic: z.object({\n        display: z.string(),\n        effects: z.array(z.any()),\n      }),\n      class: z.object({\n        display: z.string(),\n        passives: z.array(z.string()),\n        effects: z.array(z.any()),\n      }),\n      skill: z.object({\n        display: z.string(),\n        effects: z.array(z.any()),\n      }),\n      armor: z.object({ display: z.string(), passives: z.array(z.string()) }),\n      weapon: z.object({\n        display: z.string(),\n        effects: z.array(z.any()),\n      }),\n      offhand: z.object({\n        display: z.string(),\n        passives: z.array(z.string()),\n        effects: z.array(z.any()),\n      }),\n      footwear: z.object({\n        display: z.string(),\n        tooltip: z.string(),\n        passives: z.array(z.string()),\n        eot: z.array(z.any()),\n      }),\n      headgear: z.object({\n        display: z.string(),\n        passives: z.array(z.string()),\n        tooltip: z.string(),\n        effects: z.array(z.any()),\n      }),\n      charm: z.object({\n        display: z.string(),\n        passives: z.array(z.string()),\n        tooltip: z.string(),\n      }),\n      consumable: z.object({ display: z.string() }),\n    }),\n  }),\n  enemies: z.array(\n    z.object({\n      lore: z.object({ name: z.string() }),\n      effects: z.array(z.any()),\n      rolls: z.array(z.array(z.number())),\n    })\n  ),\n  states: z.array(z.object({\n    player: z.object({\n      hp: z.object({ current: z.number(), max: z.number() }),\n      stamina: z.object({ current: z.number(), max: z.number() }),\n      staminaPerTurn: z.object({ current: z.number(), max: z.number() }),\n      speed: z.object({ current: z.number(), max: z.number() }),\n      attack: z.object({ current: z.number(), max: z.number() }),\n      defence: z.object({ current: z.number(), max: z.number() }),\n      status: z.object({\n        dodge: z.object({ active: z.boolean() }),\n        armor: z.object({ amount: z.number() }),\n        bleed: z.object({ turns: z.number() }),\n        stun: z.object({ active: z.boolean() }),\n      }),\n    }),\n    enemies: z.array(\n      z.object({\n        hp: z.object({ current: z.number(), max: z.number() }),\n        distance: z.number(),\n        speed: z.object({ current: z.number(), max: z.number() }),\n        attack: z.object({ current: z.number(), max: z.number() }),\n        defence: z.object({ current: z.number(), max: z.number() }),\n        status: z.object({\n          dodge: z.object({ active: z.boolean() }),\n          armor: z.object({ amount: z.number() }),\n          bleed: z.object({ turns: z.number() }),\n          stun: z.object({ active: z.boolean() }),\n        }),\n      })\n    ),\n    target: z.number(),\n    lastAttacks: z.array(z.unknown()),\n    disabledSkills: z.array(z.unknown()),\n  })),\n  rng: z.array(z.array(z.number())),\n  turns: z.number(),\n  id: z.string(),\n  seed: z.number(),\n});\n","import React from \"react\";\nimport { Form, Col, Row, Alert, Button, Container } from \"react-bootstrap\";\nimport { Play } from \"../../utils/types\";\nimport { playSchema } from \"../../utils/typesSchemas\";\n\nconst LoadScreen = ({ onLoad, onMenu }: { onLoad: (g: Play) => void; onMenu: () => void }) => {\n  const [loadError, setLoadError] = React.useState<string | undefined>();\n  const load = (data: string) => {\n    try {\n      const playRaw = JSON.parse(data);\n      try {\n        playSchema.parse(playRaw);\n        onLoad(playRaw as Play);\n      } catch (e) {\n        setLoadError(\"Failed to Load - Invalid Data\");\n      }\n    } catch (e) {\n      setLoadError(\"Failed to Load - Bad Data\");\n    }\n  }\n  const onFormSubmit = (e: any) => {\n    e.preventDefault();\n    if (e.target?.fileData?.files[0] != null) {\n      const reader = new FileReader();\n      reader.onloadend = (ev: ProgressEvent<FileReader>) => {\n        const result = ev.target?.result as string | undefined;\n        if (result != null) {\n          load(result);\n        } else {\n          setLoadError(\"Failed to read file\");\n        }\n      };\n      reader.readAsText(e.target.fileData.files[0])\n    } else if (e.target?.rawData?.value != null && e.target?.rawData?.value != \"\") {\n      load(e.target.rawData.value);\n    }\n  };\n  return <Form onSubmit={onFormSubmit}>\n    <Container fluid>\n      <Col>\n        <Row>\n          {loadError && (<><Alert variant={'danger'}>{loadError}</Alert><br /><br /></>)}\n        </Row>\n        <Row>\n          <Form.Group>\n            <Form.Label>Load File</Form.Label>\n            <Form.Control type=\"file\" name=\"fileData\" accept=\".json\" />\n            <Form.Text muted>Select the file to load</Form.Text>\n          </Form.Group>\n        </Row>\n        <br />\n        <Row>\n          <Form.Group>\n            <Form.Label>Load</Form.Label>\n            <Form.Control name=\"rawData\" as=\"textarea\" rows={3} placeholder=\"Save Data\" />\n            <Form.Text muted>Paste the text of your savegame here</Form.Text>\n          </Form.Group>\n        </Row>\n        <br />\n        <Button variant=\"primary\" type=\"submit\">Load</Button>\n      </Col>\n      <br />\n      <Button onClick={onMenu}>MAIN MENU</Button>\n    </Container>\n  </Form>;\n}\n\nexport default LoadScreen;","import \"./App.css\";\n// import { readString } from \"react-papaparse\";\nimport { Snapshot, Play, EnemyStats, Enemy, EnemiesStats, Enemies } from \"./utils/types\";\n\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport PlayerBuilder from \"./components/PlayerBuilder\";\nimport EncounterBuilder from \"./components/EncounterBuilder\";\nimport { makeGameNew, makeGameNextLevel, PlayState } from \"./utils/playGame\";\nimport { randomEnemy, randomPlayer } from \"./utils/data\";\nimport { useMachine } from '@xstate/react';\nimport { gameMenuMachine } from \"./stateMachines/menuStateMachine\";\nimport Menu from \"./components/menus/Menu\";\nimport SingleGame from \"./components/menus/SingleGame\";\nimport LoadScreen from \"./components/menus/LoadScreen\";\n\nfunction App() {\n  const [state, send] = useMachine(gameMenuMachine, { devTools: true });\n  const event = state.event;\n  const onMenu = () => {\n    send('MENU');\n  }\n\n  switch (true) {\n    case state.matches('main'):\n      return <Menu\n        title={\"Main Menu\"}\n        states={Object.keys(gameMenuMachine.states.main.on)}\n        onClick={send}\n      />;\n    // QUICK\n    case state.matches({ quick: 'play' }): {\n      const player = randomPlayer();\n      const encounter = randomEnemy();\n      return <SingleGame\n        play={makeGameNew(player[0], player[1], [encounter[0]], [encounter[1]], 50, state.context.singleContext.seed)}\n        onMenu={onMenu}\n        timeTravel={true}\n        onGameEnd={(result, game) => { send(result === 'win' ? 'WIN' : 'LOSE', { result, game }) }}\n      />;\n    }\n    case state.matches({ quick: 'win' }):\n    case state.matches({ quick: 'lose' }):\n      return <Menu\n        title={`${event.result} in ${event.game.states.length - 1} turns`}\n        states={[\"MENU\"]}\n        onClick={send}\n      />;\n    // SINGLE\n    case state.matches({ single: 'player' }):\n      return <PlayerBuilder onSave={(player, playerStats) => { send('PLAYER', { player: [player, playerStats] }); }} />;\n    case state.matches({ single: 'encounter' }):\n      return <EncounterBuilder\n        player={event.player[0]}\n        onSave={(enemies, enemiesStats) => { send('ENCOUNTER', { encounter: [enemies, enemiesStats], player: event.player }) }}\n      />;\n    case state.matches({ single: 'play' }): {\n      return <SingleGame\n        play={makeGameNew(event.player[0], event.player[1], event.encounter[0], event.encounter[1], 50, state.context.singleContext.seed)}\n        onMenu={onMenu}\n        timeTravel={true}\n        onGameEnd={(result, game) => { send(result === 'win' ? 'WIN' : 'LOSE', { result, game }) }}\n      />;\n    }\n    case state.matches({ single: 'win' }):\n    case state.matches({ single: 'lose' }):\n      return <Menu\n        title={`${event.result} in ${event.game.states.length - 1} turns`}\n        states={[\"MENU\"]}\n        onClick={send}\n      />;\n    // ARCADE\n    case state.matches({ arcade: 'player' }): {\n      const encounter = randomEnemy();\n      return <PlayerBuilder onSave={(player, playerStats) => { send('PLAYER', { game: makeGameNew(player, playerStats, [encounter[0]], [encounter[1]], 50, state.context.survivalContext.seed) }); }} />;\n    }\n    case state.matches({ arcade: 'play' }): {\n      return <SingleGame\n        play={event.game}\n        timeTravel={false}\n        onMenu={onMenu}\n        onGameEnd={(result: PlayState, game: Play) => {\n          let encounter = [[], []] as [Enemy[], EnemyStats[]];\n          if (state.context.arcadeContext.victories >= 0) {\n            const otherEnemy = randomEnemy();\n            encounter = [[...encounter[0], otherEnemy[0]], [...encounter[1], otherEnemy[1]]];\n          }\n          if (state.context.arcadeContext.victories >= 2) {\n            const otherEnemy = randomEnemy();\n            encounter = [[...encounter[0], otherEnemy[0]], [...encounter[1], otherEnemy[1]]];\n          }\n          if (state.context.arcadeContext.victories >= 5) {\n            const otherEnemy = randomEnemy();\n            encounter = [[...encounter[0], otherEnemy[0]], [...encounter[1], otherEnemy[1]]];\n          }\n          const firstState: Snapshot = game.states[0];\n          send(result === 'win' ? 'WIN' : 'LOSE', { result, game: makeGameNextLevel(game.player, firstState.player, encounter[0] as Enemies, encounter[1] as EnemiesStats, 50, state.context.survivalContext.seed) });\n        }}\n      />;\n    }\n    case state.matches({ arcade: 'victory' }): {\n      return <Menu\n        title={`🎉🎉VICTORY!🎉🎉 Final score: ${state.context.arcadeContext.score}`}\n        states={[\"MENU\"]}\n        onClick={send}\n      />;\n    }\n    case state.matches({ arcade: 'defeat' }): {\n      return <Menu\n        title={`Failed after ${state.context.arcadeContext.victories} victories`}\n        states={[\"MENU\"]}\n        onClick={send}\n      />;\n    }\n    // SURVIVAL\n    case state.matches({ survival: 'player' }): {\n      const encounter = randomEnemy();\n      return <PlayerBuilder onSave={(player, playerStats) => { send('PLAYER', { game: makeGameNew(player, playerStats, [encounter[0]], [encounter[1]], 50, state.context.survivalContext.seed) }); }} />;\n    }\n    case state.matches({ survival: 'play' }): {\n      return <SingleGame\n        play={event.game}\n        onMenu={onMenu}\n        timeTravel={false}\n        onGameEnd={(result, game) => {\n          const encounter = randomEnemy();\n          const lastState: Snapshot = game.states[event.game.states.length - 1];\n          send(result === 'win' ? 'WIN' : 'LOSE', { result, game: makeGameNextLevel(game.player, lastState.player, [encounter[0]], [encounter[1]], 50, state.context.survivalContext.seed) });\n        }}\n      />;\n    }\n    case state.matches({ survival: 'defeat' }): {\n      return <Menu\n        title={`Completed after ${state.context.survivalContext.victories} victories`}\n        states={[\"MENU\"]}\n        onClick={send}\n      />;\n    }\n    // LOAD\n    case state.matches({ load: 'load' }): {\n      return <LoadScreen\n        onLoad={(game) => send('LOAD', { game })}\n        onMenu={onMenu}\n      />;\n    }\n    case state.matches({ load: 'play' }): {\n      return <SingleGame\n        play={event.game}\n        onMenu={onMenu}\n        timeTravel={true}\n        onGameEnd={(result, game) => { send(result === 'win' ? 'WIN' : 'LOSE', { result, game }) }}\n      />;\n    }\n    case state.matches({ load: 'win' }):\n    case state.matches({ load: 'lose' }):\n      return <Menu\n        title={`${event.result} in ${event.game.states.length - 1} turns`}\n        states={[\"MENU\"]}\n        onClick={send}\n      />;\n    default:\n      return <>{JSON.stringify(state.value)}</>;\n  }\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport { createRoot } from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorkerRegistration from './serviceWorkerRegistration';\nimport reportWebVitals from './reportWebVitals';\n\nconst container = document.getElementById('root');\nconst root = createRoot(container!);\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://cra.link/PWA\nserviceWorkerRegistration.register();\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","import { Opaque } from \"type-fest\";\nimport { allRanges, enemies, makeStat } from \"./data\";\nimport { callEffectFun, Effect, effectFunCall, Enemies, EnemiesStats, Enemy, EnemyStats, FunIndex, MonsterTarget, Play, PlayerStats, Snapshot, Status, Target } from \"./types\";\nimport { clamp, pipe } from \"./zFunDump\";\n\n// #region Effect funs\n\nexport function extractFunction({ effects }: Effect): ReduceFun {\n  return (origin, play, startState) => effects.reduce((acc, { index, parameters }) =>\n    callEffectFun(effectFunRepo, index, parameters)(origin, ...acc), [play, startState]);\n}\n\nconst effectFun = <T>(fun: ParametrizedFun<T>): EffectFun<T> =>\n  ((params) => (origin, play, oldState) => fun(params)(origin, play, oldState)) as EffectFun<T>;\n\nconst applyPoison = (play: Play, currentState: Snapshot, { target, turns }: ReduceFunctionT['Reduce:PoisonBOT']) =>\n  pipe(\n    target === 'Player'\n      ? actions.changeStatPlayer(currentState, ({ hp }) => ({ hp: { ...hp, current: Math.max(0, hp.current - 1) } }))\n      : actions.changeStatMonster(currentState, currentState.target, ({ hp }) => ({ hp: { ...hp, current: Math.max(0, hp.current - 1) } })),\n    (newState) =>\n      turns > 0\n        ? actions.addBotEffect(newState, 'Player', { display: `Poison ${target === 'Player' ? 'Player' : play.enemies[target]!!.lore.name + \"[\" + (target + 1)} + \"]\"`, tooltip: '', range: allRanges, priority: 4, effects: [effectFunCall(['Reduce:PoisonBOT', { target: target, turns: turns - 1 }])] })\n        : newState\n  )\n\ntype SystemFunctionT = {\n  'Utility:Cleanup': undefined;\n  'Debug:GGWP': undefined;\n  'Debug:Sudoku': undefined;\n}\ntype BasicFunctionT = {\n  'Basic:Rest': undefined;\n  'Basic:Move': { amount: number };\n  'Basic:Attack': { amount: number };\n  'Basic:Stamina': { amount: number };\n}\nexport type EffectTarget = 'Player' | 'Monster';\ntype StatusFunctionT = {\n  'Effect:Poison': { target: EffectTarget; turns: number };\n  'Effect:Dodge': undefined;\n  'Effect:Armor': { amount: number };\n  'Effect:Stun': undefined;\n  'Effect:Bleed': { target: EffectTarget; turns: number };\n  'Effect:Defence': { target: EffectTarget; amount: number };\n  'Effect:Speed': { target: EffectTarget; amount: number };\n  'Effect:Attack': { target: EffectTarget; amount: number };\n}\ntype MonsterFunctionT = {\n  'Monster:Summon': { enemy: number };\n  'Monster:Dead': undefined;\n  'Monster:Attack': { amount: number };\n  'Monster:Move': { amount: number };\n}\ntype ItemFunctionT = {\n  'Wand:MagicBolt': undefined;\n  'BootsOfFlight:EOT': undefined;\n}\ntype ReduceFunctionT = {\n  'Reduce:PoisonBOT': { target: Target; turns: number };\n}\n\nconst engineFunctions = {\n  'Debug:GGWP': effectFun(\n    () => (_, play, currentState) => [play, { ...currentState, enemies: currentState.enemies.map(m => ({ ...m, hp: { ...m.hp, current: 0 } })) as EnemiesStats }]\n  ),\n  'Debug:Sudoku': effectFun(\n    () => (_, play, currentState) => [play, { ...currentState, player: { ...currentState.player, hp: { ...currentState.player.hp, current: 0 } } }]\n  ),\n  'Utility:Cleanup': effectFun(\n    () => (_origin, play, currentState) => [play,\n      pipe(\n        actions.changeStatusPlayer(currentState, (o) => ({ ...o, armor: { amount: 0 }, bleed: { turns: Math.max(o.bleed.turns - 1, 0) }, dodge: { active: false }, stun: { active: false } })),\n        (newState) =>\n          newState.enemies.reduce((acc, v, idx) => actions.changeStatusMonster(acc, idx as MonsterTarget, (o) => ({ ...o, armor: { amount: 0 }, bleed: { turns: Math.max(o.bleed.turns - 1, 0) }, dodge: { active: false }, stun: { active: false } })), currentState)\n      )\n    ],\n  ),\n}\n\nconst effectFunRepo: EffectFunctionRepository = {\n  ...engineFunctions,\n  // #region BASIC\n  'Basic:Rest': effectFun(\n    () => (_origin, play, currentState) => [play, currentState]\n  ),\n  'Basic:Move': effectFun(\n    ({ amount }) => (_origin, play, currentState) => [play, actions.changeDistance(currentState, currentState.target, amount)]\n  ),\n  'Basic:Attack': effectFun(\n    ({ amount }) => (_origin, play, currentState) => [play, actions.attackMonster(currentState, currentState.target, amount)]\n  ),\n  'Basic:Stamina': effectFun(\n    ({ amount }) => (_origin, play, currentState) => [play, actions.modifyPlayerStamina(currentState, amount)]\n  ),\n  // #endregion BASIC\n  // #region EFFECTS\n  'Effect:Dodge': effectFun(\n    () => (origin, play, currentState) => [play,\n      origin === 'Player'\n        ? actions.changeStatusPlayer(currentState, (o) => ({ ...o, dodge: { active: true } }))\n        : actions.changeStatusMonster(currentState, currentState.target, (o) => ({ ...o, dodge: { active: true } }))\n    ]\n  ),\n  'Effect:Armor': effectFun(\n    ({ amount }) => (origin, play, currentState) => [play,\n      origin === 'Player'\n        ? actions.changeStatusPlayer(currentState, (o) => ({ ...o, armor: { amount: amount } }))\n        : actions.changeStatusMonster(currentState, currentState.target, (o) => ({ ...o, armor: { amount: amount } }))\n    ]\n  ),\n  'Effect:Stun': effectFun(\n    () => (origin, play, currentState) => [play,\n      origin === 'Player'\n        ? actions.changeStatusMonster(currentState, currentState.target, (o) => ({ ...o, stun: { active: true } }))\n        : actions.changeStatusPlayer(currentState, (o) => ({ ...o, stun: { active: true } }))\n    ]\n  ),\n  'Effect:Bleed': effectFun(\n    ({ target, turns }) => (_, play, currentState) => [play,\n      target !== 'Player'\n        ? actions.changeStatusPlayer(currentState, (o) => ({ ...o, bleed: { turns: turns } }))\n        : actions.changeStatusMonster(currentState, currentState.target, (o) => ({ ...o, bleed: { turns: turns } }))\n    ]\n  ),\n  'Effect:Poison': effectFun(\n    ({ target, turns }) => (_, play, currentState) => [play,\n      pipe(target === 'Player' ? 'Player' as Target : currentState.target, (gameTarget) =>\n        applyPoison(play, currentState, { target: gameTarget, turns })\n      )\n    ],\n  ),\n  'Reduce:PoisonBOT': effectFun(\n    (params) => (_, play, currentState) =>\n      [play, applyPoison(play, currentState, params)],\n  ),\n  'Effect:Attack': effectFun(\n    ({ target, amount }) => (_, play, currentState) => [play,\n      target === 'Player'\n        ? actions.changeStatPlayer(currentState, ({ attack }) => ({ attack: { ...attack, current: Math.min(attack.current + amount, attack.max) } }))\n        : actions.changeStatMonster(currentState, currentState.target, ({ attack }) => ({ attack: { ...attack, current: Math.min(attack.current + amount, attack.max) } }))\n    ]\n  ),\n  'Effect:Speed': effectFun(\n    ({ target, amount }) => (_, play, currentState) => [play,\n      target === 'Player'\n        ? actions.changeStatPlayer(currentState, ({ speed }) => ({ speed: { ...speed, current: Math.min(speed.current + amount, speed.max) } }))\n        : actions.changeStatMonster(currentState, currentState.target, ({ speed }) => ({ speed: { ...speed, current: Math.min(speed.current + amount, speed.max) } }))\n    ]\n  ),\n  'Effect:Defence': effectFun(\n    ({ target, amount }) => (_, play, currentState) => [play,\n      target === 'Player'\n        ? actions.changeStatPlayer(currentState, ({ defence }) => ({ defence: { ...defence, current: Math.min(defence.current + amount, defence.max) } }))\n        : actions.changeStatMonster(currentState, currentState.target, ({ defence }) => ({ defence: { ...defence, current: Math.min(defence.current + amount, defence.max) } }))\n    ]\n  ),\n  // #endregion EFFECTS\n  // #region MONSTERS\n  'Monster:Attack': effectFun(\n    ({ amount }) => (_origin, play, currentState) => [play, actions.attackPlayer(currentState, amount)]\n  ),\n  'Monster:Summon': effectFun(\n    ({ enemy }) => (_origin, play, currentState) => actions.addEnemy(play, currentState, enemies[enemy][0], enemies[enemy][1])\n  ),\n  'Monster:Dead': effectFun(\n    () => (_origin, play, currentState) => [play, currentState]\n  ),\n  'Monster:Move': effectFun(\n    () => (origin, play, currentState) => [play, actions.changeDistance(currentState, origin, -2)]\n  ),\n  // #endregion MONSTERS\n  // #region ITEMS\n  'BootsOfFlight:EOT': effectFun(\n    () => (_, play, currentState) => [play, currentState.enemies.reduce((s, _m, idx) => actions.changeDistance(s, idx as MonsterTarget, 2), currentState)]\n  ),\n  'Wand:MagicBolt': effectFun(\n    () => (_, play, currentState) => {\n      let state = currentState;\n      while (state.player.stamina.current) {\n        state = actions.modifyPlayerStamina(state, -2);\n        state = actions.attackMonster(state, currentState.target, 1)\n      }\n      return [play, state];\n    }\n  ),\n  // #endregion ITEMS\n};\n\nexport type EffectFunctionT = SystemFunctionT & BasicFunctionT & StatusFunctionT & ReduceFunctionT & MonsterFunctionT & ItemFunctionT;\n\nexport type ReduceFun = (origin: Target, play: Play, newState: Snapshot) => [Play, Snapshot];\nexport type ParametrizedFun<T> = (params: T) => ReduceFun;\nexport type EffectFun<T> = Opaque<ParametrizedFun<T>, ParametrizedFun<T>>;\n\nexport type EffectFunctionRepository = { [k in keyof EffectFunctionT]: (params: EffectFunctionT[k]) => ReduceFun };\nexport type EffectFunRepoIndex = keyof EffectFunctionT & FunIndex;\nexport type EffectFunParams<T extends EffectFunRepoIndex> = Parameters<EffectFunctionRepository[T]>[0];\n\n// #endregion\n// #region Modify state\n\nconst updateMonster = (enemies: EnemiesStats, target: Target, override: (stats: EnemyStats) => Partial<EnemyStats>): EnemiesStats =>\n  enemies.map((m, idx) =>\n    (idx === target)\n      ? { ...m, ...override(m) }\n      : m) as EnemiesStats;\n\nconst updatePlayer = (curr: Snapshot, override: (player: PlayerStats) => Partial<PlayerStats>): Snapshot => {\n  return {\n    ...curr,\n    player: { ...curr.player, ...override(curr.player) }\n  };\n}\n\nconst updatePlayerStat = <T extends keyof PlayerStats>(curr: Snapshot, key: T, modify: (player: PlayerStats[T]) => Partial<PlayerStats[T]>): Snapshot => {\n  const player = curr.player;\n  player[key] = {\n    ...player[key],\n    ...modify(player[key])\n  }\n  return {\n    ...curr,\n    player\n  };\n}\n\nconst actions = {\n  attackPlayer,\n  attackMonster,\n  changeStatPlayer: updatePlayer,\n  changeStatMonster: (curr: Snapshot, target: MonsterTarget, f: (stats: EnemyStats) => Partial<EnemyStats>): Snapshot => ({\n    ...curr,\n    enemies: updateMonster(curr.enemies, target, f),\n  }),\n  changeStatusPlayer: (curr: Snapshot, updateStatus: (oldStatus: Status) => Status): Snapshot => ({\n    ...curr,\n    player: { ...curr.player, status: updateStatus(curr.player.status) }\n  }),\n  changeStatusMonster: (curr: Snapshot, target: MonsterTarget, updateStatus: (oldStatus: Status) => Status): Snapshot => ({\n    ...curr,\n    enemies: updateMonster(curr.enemies, target, ({ status }) => ({ status: updateStatus(status) })),\n  }),\n  changeDistance: (curr: Snapshot, origin: Target, amount: number): Snapshot =>\n  ({\n    ...curr,\n    enemies: updateMonster(curr.enemies, origin, ({ distance }) => ({ distance: clamp(distance + amount, 0, 4) as MonsterTarget })),\n  }),\n  removeMonster: (currPlay: Play, currSnap: Snapshot, target: MonsterTarget): [Play, Snapshot] =>\n    [\n      { ...currPlay, enemies: currPlay.enemies.filter((_, idx) => idx === target) as Enemies },\n      { ...currSnap, target: 0, enemies: currSnap.enemies.filter((_, idx) => idx === target) as EnemiesStats }\n    ],\n  modifyPlayerStamina: (\n    curr: Snapshot,\n    amount: number,\n  ): Snapshot =>\n    updatePlayerStat(curr, 'stamina', stamina => ({\n      current: clamp(stamina.current + amount, 0, stamina.max)\n    })),\n  addEotEffect: (\n    curr: Snapshot,\n    origin: Target,\n    effect: Effect,\n  ): Snapshot => ({\n    ...curr,\n    eot: [...(curr.eot ?? []), [origin, effect]],\n  }),\n  addBotEffect: (\n    curr: Snapshot,\n    origin: Target,\n    effect: Effect,\n  ): Snapshot => ({\n    ...curr,\n    bot: [...(curr.eot ?? []), [origin, effect]],\n  }),\n  addEnemy: (\n    play: Play,\n    curr: Snapshot,\n    enemy: Enemy,\n    enemyStats: EnemyStats,\n  ): [Play, Snapshot] => {\n    return play.enemies.length < 5\n      ? [{\n        ...play,\n        enemies: [...play.enemies, enemy] as Enemies,\n      }, {\n        ...curr,\n        enemies: [...curr.enemies, enemyStats] as EnemiesStats,\n      }]\n      : [play, curr];\n  }\n};\n\nfunction attackMonster(curr: Snapshot, target: MonsterTarget, amount: number): Snapshot {\n  const monster = curr.enemies[target]!!;\n  const armor = monster.status.armor.amount;\n  const damage = amount + curr.player.attack.current;\n  const afterDefence = Math.max(damage - monster.defence.current, 0);\n  const afterArmor = Math.max(afterDefence - armor, 0);\n  const armorSpent = armor - (afterDefence - afterArmor);\n  const afterBleed = afterArmor + (monster.status.bleed.turns > 0 ? 1 : 0);\n  return ({\n    ...curr,\n    enemies: updateMonster(curr.enemies, target, ({ status, hp }) => ({\n      hp: { max: hp.max, current: clamp(hp.current - afterBleed, 0, hp.max) },\n      status:\n        { ...status, armor: { amount: armorSpent } }\n    })),\n  });\n}\n\nfunction attackPlayer(curr: Snapshot, amount: number): Snapshot {\n  const armor = curr.player.status.armor.amount;\n  const damage = amount + curr.player.attack.current;\n  const afterDefence = Math.max(damage - curr.player.defence.current, 0);\n  const afterArmor = Math.max(afterDefence - armor, 0);\n  const armorSpent = armor - (afterDefence - afterArmor);\n  const afterBleed = afterArmor + (curr.player.status.bleed.turns > 0 ? 1 : 0);\n  return updatePlayer(curr, ({ hp, status }) => ({\n    hp: { max: hp.max, current: clamp(hp.current - afterBleed, 0, hp.max) },\n    status: { ...status, armor: { amount: status.armor.amount - armorSpent } }\n  }));\n}\n\n// #endregion\n// #region Stat funs\n\nexport type StatsFunIndex = keyof typeof statsRepository;\nexport const statsRepository = {\n  '+Health': (player: PlayerStats, enemies: EnemiesStats): [PlayerStats, EnemiesStats] => [{ ...player, hp: makeStat(player.hp.current + 3) }, enemies],\n  '+StaPerTurn': (player: PlayerStats, enemies: EnemiesStats): [PlayerStats, EnemiesStats] => [{ ...player, staminaPerTurn: makeStat(player.staminaPerTurn.current + 1) }, enemies],\n  '+Stamina': (player: PlayerStats, enemies: EnemiesStats): [PlayerStats, EnemiesStats] => [{ ...player, stamina: makeStat(player.stamina.current + 2) }, enemies],\n  '+Attack': (player: PlayerStats, enemies: EnemiesStats): [PlayerStats, EnemiesStats] => [{ ...player, attack: makeStat(player.attack.current + 1) }, enemies],\n  '+Speed': (player: PlayerStats, enemies: EnemiesStats): [PlayerStats, EnemiesStats] => [{ ...player, speed: makeStat(player.speed.current + 1) }, enemies],\n  '+Defence': (player: PlayerStats, enemies: EnemiesStats): [PlayerStats, EnemiesStats] => [{ ...player, defence: makeStat(player.defence.current + 1) }, enemies],\n\n  '-Health': (player: PlayerStats, enemies: EnemiesStats): [PlayerStats, EnemiesStats] => [{ ...player, hp: makeStat(player.hp.current - 3) }, enemies],\n  '-StaPerTurn': (player: PlayerStats, enemies: EnemiesStats): [PlayerStats, EnemiesStats] => [{ ...player, staminaPerTurn: makeStat(player.staminaPerTurn.current - 1) }, enemies],\n  '-Stamina': (player: PlayerStats, enemies: EnemiesStats): [PlayerStats, EnemiesStats] => [{ ...player, stamina: makeStat(player.stamina.current - 2) }, enemies],\n  '-Attack': (player: PlayerStats, enemies: EnemiesStats): [PlayerStats, EnemiesStats] => [{ ...player, attack: makeStat(player.attack.current - 1) }, enemies],\n  '-Speed': (player: PlayerStats, enemies: EnemiesStats): [PlayerStats, EnemiesStats] => [{ ...player, speed: makeStat(player.speed.current - 1) }, enemies],\n  '-Defence': (player: PlayerStats, enemies: EnemiesStats): [PlayerStats, EnemiesStats] => [{ ...player, defence: makeStat(player.defence.current - 1) }, enemies],\n}\n\n// #endregion","import { Enemies, Player, Snapshot, MonsterTarget, Target, InventoryEffect, EnemiesStats, PlayerStats, Play, RNG, StatsFun, Effect, PlayerTarget, effectFunCall, DisabledSkills, safeEntries, EffectPhase } from \"./types\";\nimport { Seq, Set } from \"immutable\";\nimport { allRanges, previousState } from \"./data\";\nimport { Chance } from \"chance\";\n// @ts-ignore fails on scripts despite having a d.ts file\nimport { toIndexableString } from 'pouchdb-collate';\nimport { extractFunction, statsRepository } from \"./effectRepository\";\nimport { clamp, rangeArr } from \"./zFunDump\";\n\n/**\n * @returns min inclusive, max exclusive rand\n */\nfunction turnDeterministicRng(turns: number, randPerTurn: number, monsterSeed: string | number): RNG {\n  const monsterChance = new Chance(monsterSeed);\n  const monsterRng =\n    rangeArr(turns)\n      .map(_ => rangeArr(randPerTurn)\n        .map(_ => monsterChance.floating({ min: 0, max: 1, fixed: 2 })));\n  return monsterRng as RNG;\n}\n\nexport const turnRng = (play: Play, turn: number): ((min: number, max: number) => number) => {\n  const turnRng = [...play.rng[turn]];\n  return (min: number, max: number) => Math.floor(((max - min) * turnRng.pop()!!) + min);\n}\n\nexport const playerPassives = (player: Player): StatsFun[] =>\n  Object.values(player.build).flatMap((s) => s.passives ?? []).map(i => statsRepository[i]);\n\nexport const playerActions = (player: Player): InventoryEffect[] =>\n  Object.values(player.build).flatMap((s) => s.effects ?? []);\n\nconst enemiesBotEffects = (enemies: Enemies): [MonsterTarget, Effect][] =>\n  enemies.flatMap((e, idx) => (e.bot ?? []).map(eff => [idx as MonsterTarget, eff] as const))\n    // Sure, typescript\n    .map(a => [...a]);\n\nconst enemiesEotEffects = (enemies: Enemies): [MonsterTarget, Effect][] =>\n  enemies.flatMap((e, idx) => (e.eot ?? []).map(eff => [idx as MonsterTarget, eff] as const))\n    // Sure, typescript\n    .map(a => [...a]);\n\nexport const playerBotEffects = (player: Player, d: DisabledSkills): [PlayerTarget, Effect][] =>\n  safeEntries(player.build).flatMap(([k, s]) => !Set(d).has(k) ? s.bot ?? [] : []).map(a => ['Player', a]);\n\nexport const playerEotEffects = (player: Player, d: DisabledSkills): [PlayerTarget, Effect][] =>\n  safeEntries(player.build).flatMap(([k, s]) => !Set(d).has(k) ? s.eot ?? [] : []).map(a => ['Player', a]);\n\nexport const buildPlayer = (player: Player, playerStats: PlayerStats, enemiesStats: EnemiesStats): [PlayerStats, EnemiesStats] =>\n  playerPassives(player).reduce(([p, e], fun) => fun(p, e), [playerStats, enemiesStats]);\n\nexport function makeGameNew(player: Player, playerStats: PlayerStats, enemies: Enemies, enemiesStats: EnemiesStats, turns: number, seed: number | string, randPerTurn: number = 20): Play {\n  const [playerGameStats, enemyGameStats] = buildPlayer(player, playerStats, enemiesStats);\n  return makeGameNextLevel(player, playerGameStats, enemies, enemyGameStats, turns, seed, randPerTurn);\n}\n\nexport function makeGameNextLevel(player: Player, playerStats: PlayerStats, enemies: Enemies, enemiesStats: EnemiesStats, turns: number, seed: number | string, randPerTurn: number = 20): Play {\n  return {\n    player,\n    enemies,\n    states: [{\n      player: playerStats,\n      enemies: enemiesStats,\n      target: 0,\n      lastAttacks: [],\n      disabledSkills: []\n    }],\n    rng: turnDeterministicRng(turns, randPerTurn, seed),\n    turns,\n    id: toIndexableString([player, enemies, turns, seed]),\n    seed,\n  };\n}\n\nconst reduceFuns = (funs: [Target, Effect][], p: Play, s: Snapshot, dodgeable: boolean, phase: EffectPhase): [Play, Snapshot] =>\n  Seq(funs)\n    .sortBy(([origin, a]) => {\n      const priorityBonus = origin === 'Player' ? s.player.speed.current : s.enemies[origin]!!.speed.current;\n      return clamp(a.priority - priorityBonus, 0, 4);\n    })\n    .reduce((acc, value) => {\n      const [origin, effect] = value;\n      const [oldPlay, oldState] = acc;\n      const monsterId = origin === 'Player' ? oldState.target : origin;\n      const targetMonster = oldState.enemies[monsterId]!!;\n\n      const isDeadAttackingMonster = origin !== 'Player' && targetMonster.hp.current <= 0;\n      if (isDeadAttackingMonster) {\n        const newState: Snapshot = {\n          ...oldState,\n          lastAttacks: [...oldState.lastAttacks, { origin, display: `💀💀DEAD💀💀 ${effect.display}`, phase }]\n        };\n        return [oldPlay, newState];\n      }\n\n      const isStunnedPlayer = origin === 'Player' && oldState.player.status.stun.active;\n      const isStunnedMonster = origin !== 'Player' && targetMonster.status.stun.active;\n      const isStunned = isStunnedPlayer || isStunnedMonster;\n      if (isStunned) {\n        const newState: Snapshot = {\n          ...oldState,\n          lastAttacks: [...oldState.lastAttacks, { origin, display: `💫💫STUNNED💫💫 ${effect.display}`, phase }]\n        };\n        return [oldPlay, newState];\n      }\n\n\n      const isInRange = Set([...effect.range]).has(targetMonster.distance);\n      if (!isInRange) {\n        const newState: Snapshot = {\n          ...oldState,\n          lastAttacks: [...oldState.lastAttacks, { origin, display: `❌❌WHIFFED❌❌ ${effect.display}`, phase }]\n        };\n        return [oldPlay, newState];\n      }\n\n      const monsterDodged = dodgeable && origin === 'Player' && targetMonster.status.dodge.active;\n      if (monsterDodged) {\n        const newState: Snapshot = {\n          ...oldState,\n          enemies: oldState.enemies.map((e, i) => i === monsterId ? { ...e, status: { ...e.status, dodge: { active: false } } } : e) as EnemiesStats,\n          lastAttacks: [...oldState.lastAttacks, { origin, display: `💨💨DODGED💨💨 ${effect.display}`, phase }]\n        };\n        return [oldPlay, newState];\n      }\n\n      const playerDodged = dodgeable && origin !== 'Player' && oldState.player.status.dodge.active;\n      if (playerDodged) {\n        const newState: Snapshot = {\n          ...oldState,\n          player: { ...oldState.player, status: { ...oldState.player.status, dodge: { active: false } } },\n          lastAttacks: [...oldState.lastAttacks, { origin, display: `💨💨DODGED💨💨 ${effect.display}`, phase }]\n        };\n        return [oldPlay, newState];\n      }\n\n      const [newPlay, newState] = extractFunction(effect)(origin, oldPlay, oldState);\n      const finalState: Snapshot = { ...newState, lastAttacks: [...newState.lastAttacks, { origin, display: effect.display, phase }] };\n      return [newPlay, finalState];\n    }, [p, s]);\n\nconst applyEffectStamina = (amount: number): Effect =>\n  ({ display: `${amount >= 0 ? '+' : ''}${amount} 💪`, tooltip: `Use ${amount} stamina`, effects: [effectFunCall(['Basic:Stamina', { amount }])], range: allRanges, priority: 0 });\n\nconst effectEotCleanup: Effect =\n  ({ display: 'Cleanup', tooltip: 'Cleanup', effects: [effectFunCall('Utility:Cleanup')], range: allRanges, priority: 0 });\n\nconst effectDead: Effect =\n  { display: \"⚰\", tooltip: \"⚰\", priority: 4, effects: [effectFunCall(\"Monster:Dead\")], range: allRanges };\n\nexport const handlePlayerEffect = (play: Play, index: number): Play => {\n\n  const lastTurnState = previousState(play);\n  const usedSkill = playerActions(play.player)[index];\n  const bot = lastTurnState.bot ?? [];\n  const eot = lastTurnState.eot ?? [];\n\n  const initialState: Snapshot = {\n    ...lastTurnState,\n    lastAttacks: [],\n    bot: undefined,\n    eot: undefined,\n  };\n\n  // Stamina\n  const [preBotPlay, preBotState] =\n    reduceFuns([['Player', applyEffectStamina(lastTurnState.player.staminaPerTurn.current - usedSkill.stamina)]], play, initialState, false, 'MAIN');\n\n  // BOT\n  // Lingering effects\n  const [postBotPlay, postBotState] = reduceFuns(bot, preBotPlay, preBotState, false, 'BOT');\n  // Player & Monster effects\n  const entitiesBot: [Target, Effect][] = [...playerBotEffects(postBotPlay.player, postBotState.disabledSkills), ...enemiesBotEffects(postBotPlay.enemies)];\n  const [postEntitiesBotPlay, postEntitiesBotState] = reduceFuns(entitiesBot, postBotPlay, postBotState, false, 'BOT');\n\n  // Turn\n  const rand = turnRng(postEntitiesBotPlay, postEntitiesBotPlay.states.length);\n  const turnFunctions: [Target, Effect][] = Seq(postEntitiesBotPlay.enemies).zip(Seq(postEntitiesBotState.enemies))\n    .map(([e, stats], idx) =>\n      [idx as Target,\n      stats.hp.current > 0\n        ? e.effects[e.rolls[stats.distance][rand(0, e.rolls[stats.distance].length)]]\n        : effectDead] as const)\n    .concat([['Player' as Target, usedSkill] as const])\n    .toArray()\n    // Sure, typescript\n    .map(a => [...a]);\n\n  const [newPlay, newState] =\n    reduceFuns(turnFunctions, postEntitiesBotPlay, postEntitiesBotState, true, 'MAIN');\n\n  // EOT\n  // Player & Monster effects\n  const entitiesEot = [...playerEotEffects(newPlay.player, newState.disabledSkills), ...enemiesEotEffects(newPlay.enemies)];\n  const [postPlayerEotPlay, postPlayerEotState] = reduceFuns(entitiesEot, newPlay, newState, false, 'EOT');\n  // Lingering effects\n  const [postEotPlay, postEotState] = reduceFuns(eot, postPlayerEotPlay, postPlayerEotState, false, 'EOT');\n  // Cleanup\n  const [postCleanup, postCleanupState] = reduceFuns([['Player' as Target, effectEotCleanup]], postEotPlay, postEotState, false, 'EOT');\n\n  return {\n    ...postCleanup,\n    states: [...postCleanup.states, postCleanupState],\n  };\n};\n\nexport const setSelected = (play: Play, target: MonsterTarget): Play => {\n  play.states[play.states.length - 1].target = target;\n  return {\n    ...play,\n    states: [...play.states],\n  };\n}\n\nexport const setDisabledSkills = (play: Play, disabled: DisabledSkills): Play => {\n  play.states[play.states.length - 1].disabledSkills = disabled;\n  return {\n    ...play,\n    states: [...play.states],\n  };\n}\n\nexport type PlayState = 'win' | 'loss' | 'playing'\n\nexport const playState = (play: Play): PlayState => {\n  const state = play.states[play.states.length - 1];\n  return state.player.hp.current <= 0\n    ? 'loss'\n    : state.enemies.reduce((acc, monster) => acc + monster.hp.current, 0) <= 0\n      ? 'win'\n      : 'playing';\n}\n\nexport const scoreGame = (play: Play): number => {\n  const firstState = play.states[0];\n  const lastState = play.states[play.states.length - 1];\n\n  const turns = play.states.length; // 1-50\n  const hpLoss = Math.max(0, firstState.player.hp.max - lastState.player.hp.current) / firstState.player.hp.max; // 0-1\n  const staminaLoss = Math.max(0, firstState.player.stamina.max - lastState.player.stamina.current) / firstState.player.hp.max; // 0-1\n  const enemies = lastState.enemies.length; // 1-5\n\n  return Math.floor(enemies * ((500 * hpLoss) + (150 * staminaLoss) + (500 - (turns * 10))));\n}\n","export const rangeArr = (max: number, min: number = 0) => {\n  let range = [...Array(max).keys()];\n  if (min >= 0) {\n    range.filter(i => i < min)\n  }\n  return range;\n}\n\nexport const clamp = (num: number, min: number, max: number = Infinity) =>\n  Math.min(Math.max(num, min), max);\n\nexport const pipe = <T, U>(t: T, f: (t: T) => U): U =>\n  f(t)\n\nexport const pipe2 = <T, U, A>(t: T, u: U, f: (t: T, u: U) => A): A =>\n  f(t, u)\n\nexport const pipe3 = <T, U, V, A>(t: T, u: U, v: V, f: (t: T, u: U, v: V) => A): A =>\n  f(t, u, v)","import { Opaque } from \"type-fest\";\nimport { EffectFunParams, EffectFunctionRepository, EffectFunRepoIndex, StatsFunIndex } from \"./effectRepository\";\n\nexport type Tuple<T, N extends number> = N extends N ? number extends N ? T[] : _TupleOf<T, N, []> : never;\ntype _TupleOf<T, N extends number, R extends unknown[]> = R['length'] extends N ? R : _TupleOf<T, N, [T, ...R]>;\n\nexport type Nel<T> = [T, ...T[]];\n\ntype Length<T extends any[]> =\n  T extends { length: infer L } ? L : never;\ntype BuildTuple<L extends number, T extends any[] = []> =\n  T extends { length: L } ? T : BuildTuple<L, [...T, any]>;\nexport type Subtract<A extends number, B extends number> =\n  BuildTuple<A> extends [...(infer U), ...BuildTuple<B>]\n  ? Length<U>\n  : never;\ntype EQ<A, B> =\n  A extends B\n  ? (B extends A ? true : false)\n  : false;\ntype AtTerminus<A extends number, B extends number> =\n  A extends 0\n  ? true\n  : (B extends 0 ? true : false);\ntype LT<A extends number, B extends number> =\n  AtTerminus<A, B> extends true\n  ? EQ<A, B> extends true\n  ? false\n  : (A extends 0 ? true : false)\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  : LT<Subtract<A, 1>, Subtract<B, 1>>;\n\nexport type TupleUpTo<T, N extends number> =\n  EQ<N, 1> extends true ? [T] : TupleUpTo<T, Subtract<N, 1>> | Tuple<T, N>;\n\nexport type UpTo<N extends number> =\n  EQ<N, 0> extends true ? 0 : UpTo<Subtract<N, 1>> | N;\n\nexport interface Stat {\n  max: number,\n  current: UpTo<Stat['max']>,\n}\n\nexport type Status = {\n  dodge: { active: boolean },\n  stun: { active: boolean },\n  armor: { amount: number },\n  bleed: { turns: number }\n};\nexport interface PlayerStats {\n  hp: Stat,\n  stamina: Stat,\n  staminaPerTurn: Stat,\n  speed: Stat,\n  attack: Stat,\n  defence: Stat,\n  status: Status\n};\nexport interface EnemyStats {\n  hp: Stat,\n  speed: Stat,\n  attack: Stat,\n  defence: Stat,\n  distance: UpTo<Subtract<Distances, 1>>,\n  status: Status\n};\n\nexport type Priorities = 5;\nexport type Distances = 5;\nexport type MonsterCount = 5;\nexport type Staminas = 10;\n\nexport type EffectPhase = 'MAIN' | 'EOT' | 'BOT';\nexport interface EffectSummary {\n  origin: Target;\n  display: string;\n  phase: EffectPhase;\n}\n\nexport type DisabledSkills = (keyof BuildRepository)[];\nexport interface Snapshot {\n  player: PlayerStats;\n  enemies: EnemiesStats;\n  target: MonsterTarget;\n  lastAttacks: EffectSummary[];\n  bot?: Nel<[Target, Effect]>;\n  eot?: Nel<[Target, Effect]>;\n  disabledSkills: DisabledSkills;\n};\n\nexport type RNG = Opaque<number[][], 'RNG'>;\n\nexport interface Play {\n  states: Nel<Snapshot>;\n  player: Player;\n  enemies: Enemies,\n  rng: RNG;\n  turns: number;\n  id: string;\n  seed: string | number;\n};\n\ntype ItemOrMonster = string /* TODO all items */ | 'Monster';\nexport type FunIndex = `${ItemOrMonster}:${string}`;\n\nexport type StatsFunRepo = { [key in StatsFunIndex]: StatsFun; }\nexport type StatsFun = (player: PlayerStats, enemies: EnemiesStats) => [PlayerStats, EnemiesStats];\n\nexport type Ranges = UpTo<Subtract<Distances, 1>>[];\n\ninterface EffectFunCallT {\n  index: EffectFunRepoIndex;\n  parameters: EffectFunParams<EffectFunRepoIndex>;\n};\nexport type EffectFunCall = Opaque<EffectFunCallT, EffectFunCallT>;\nexport const effectFunCall = <T extends EffectFunRepoIndex>(t: EffectFunParams<T> extends undefined ? T : [T, EffectFunParams<T>]): EffectFunCall =>\n  (Array.isArray(t) ? { index: t[0], parameters: t[1] } : { index: t, parameters: undefined }) as EffectFunCall;\nexport const callEffectFun = <T extends EffectFunRepoIndex>(repo: EffectFunctionRepository, t: T, p: EffectFunParams<T>) => {\n  const f = repo[t];\n  // @ts-expect-error: index and parameters are enforced to be compatible at construction and the runtime check above ^^^^\n  return f(p);\n}\n\nexport interface Effect {\n  display: string;\n  tooltip: string;\n  effects: Nel<EffectFunCall>;\n  priority: UpTo<Subtract<Priorities, 1>>;\n  range: Ranges;\n};\nexport interface InventoryEffect extends Effect {\n  stamina: UpTo<Subtract<Staminas, 1>>;\n};\n\nexport type MonsterTarget = UpTo<Subtract<MonsterCount, 1>>;\nexport type PlayerTarget = 'Player';\nexport type Target = MonsterTarget | PlayerTarget;\n\nexport interface BuildRepository {\n  debug: Item[];\n  basic: Item[];\n  class: Item[];\n  skill: Item[];\n  weapon: Item[];\n  offhand: Item[];\n  consumable: Item[];\n  armor: Item[];\n  headgear: Item[];\n  footwear: Item[];\n  charm: Item[];\n}\nexport type Build = {\n  [k in keyof BuildRepository]: Item\n};\n\nexport interface Item {\n  display: string;\n  tooltip?: string;\n  passives?: StatsFunIndex[];\n  bot?: Nel<Effect>;\n  eot?: Nel<Effect>;\n  effects?: Nel<InventoryEffect>;\n  //[key: string]: any;\n};\n\nexport interface Player {\n  id: string;\n  lore: Record<string, string | number>;\n  build: Build;\n};\n\n// Place in the array for now\ntype EffectIdentity = number;\nexport interface Enemy {\n  lore: Record<string, string | number>;\n  effects: Nel<Effect>;\n  rolls: Tuple<EffectIdentity[], Distances>;\n  bot?: Nel<Effect>;\n  eot?: Nel<Effect>;\n}\n\nexport type Enemies = TupleUpTo<Enemy, MonsterCount>;\nexport type EnemiesStats = TupleUpTo<EnemyStats, MonsterCount>;\n\nexport function safeEntries<T, K extends keyof T>(o: {\n  [s in K]: T[s];\n}): [K, T[K]][] {\n  return Object.entries(o).map(([k, v]) => [k as K, v as T[K]]);\n}\n","import WebSocket from 'ws';\nimport { assign, createMachine, interpret } from 'xstate';\nimport { inspect } from '@xstate/inspect/lib/server.js';\nimport { scoreGame } from '../utils/playGame';\n\nconst isDebug = process && process.env['SMD'] === '1';\n\nif (isDebug) {\n  inspect({\n    server: new WebSocket.Server({\n      port: 8888\n    })\n  });\n}\n\nconst toMenu = {\n  on: {\n    MENU: { target: 'main' },\n  }\n}\n\nconst quick = {\n  initial: 'play',\n  states: {\n    play: {\n      entry: ['reset'],\n      on: {\n        WIN: { target: 'win' },\n        LOSE: { target: 'lose' }\n      }\n    },\n    win: { type: 'final' as const },\n    lose: { type: 'final' as const },\n  },\n  ...toMenu,\n};\n\nconst single = {\n  initial: 'player',\n  states: {\n    player: {\n      entry: ['reset'],\n      on: {\n        PLAYER: { target: 'encounter' }\n      }\n    },\n    encounter: {\n      on: {\n        ENCOUNTER: { target: 'play' }\n      }\n    },\n    play: {\n      on: {\n        WIN: { target: 'win' },\n        LOSE: { target: 'lose' }\n      }\n    },\n    win: { type: 'final' as const },\n    lose: { type: 'final' as const },\n  },\n  ...toMenu,\n};\n\nconst arcade = {\n  initial: 'player',\n  states: {\n    player: {\n      entry: ['reset'],\n      on: {\n        PLAYER: { target: 'play' }\n      }\n    },\n    play: {\n      on: {\n        WIN: [\n          { target: 'victory', cond: 'isFinal' },\n          { target: 'play', actions: ['bumpVictories', 'bumpScore'], internal: true },\n        ],\n        LOSE: { target: 'defeat' }\n      }\n    },\n    victory: {\n      type: 'final' as const,\n    },\n    defeat: {\n      type: 'final' as const,\n    },\n  },\n  ...toMenu,\n};\n\nconst survival = {\n  initial: 'player',\n  states: {\n    player: {\n      entry: ['reset'],\n      on: {\n        PLAYER: { target: 'play' }\n      }\n    },\n    play: {\n      on: {\n        WIN: { target: 'play', actions: ['bumpVictories'] },\n        LOSE: { target: 'defeat' }\n      }\n    },\n    defeat: {\n      type: 'final' as const,\n      on: {\n        // ACK: { target: '#menus.leaderboards' }\n      }\n    },\n  },\n  ...toMenu,\n};\n\nconst puzzle = {\n  initial: 'puzzle',\n  states: {\n    puzzle: {\n      on: {\n        PLAYER: { target: 'player' }\n      }\n    },\n    player: {\n      on: {\n        SELECTED: { target: 'play' }\n      }\n    },\n    play: {\n      on: {\n        COMPLETE: { target: 'complete' },\n      }\n    },\n    complete: {\n      on: {\n        NEXT: { target: 'player' },\n        SELECT: { target: 'puzzle' },\n      }\n    },\n  },\n  ...toMenu,\n};\n\nconst load = {\n  initial: 'load',\n  states: {\n    load: {\n      on: {\n        LOAD: { target: 'play' }\n      }\n    },\n    play: {\n      on: {\n        WIN: { target: 'win' },\n        LOSE: { target: 'lose' }\n      }\n    },\n    win: { type: 'final' as const },\n    lose: { type: 'final' as const },\n  },\n  ...toMenu,\n}\n\nconst makeArcadeContext = () => ({\n  victories: 0,\n  score: 0,\n  seed: Math.random(),\n});\nconst makeSurvivalContext = () => ({\n  victories: 0,\n  seed: Math.random(),\n});\nconst makeSingleContext = () => ({\n  seed: Math.random(),\n});\nconst makeGameContext = () => ({\n  arcadeContext: makeArcadeContext(),\n  survivalContext: makeSurvivalContext(),\n  singleContext: makeSingleContext(),\n});\n\nexport const gameMenuMachine = createMachine({\n  tsTypes: {} as import(\"./menuStateMachine.typegen\").Typegen0,\n  id: 'menus',\n  initial: 'main',\n  context: makeGameContext(),\n  states: {\n    main: {\n      on: {\n        QUICK: { target: 'quick' },\n        SINGLE: { target: 'single' },\n        ARCADE: { target: 'arcade' },\n        SURVIVAL: { target: 'survival' },\n        LOAD: { target: 'load' },\n        // PUZZLE: { target: 'puzzle' },\n        // LEADERBOARDS: { target: 'leaderboards' },\n      }\n    },\n    quick: {\n      ...quick,\n    },\n    single: {\n      ...single,\n    },\n    arcade: {\n      ...arcade,\n    },\n    survival: {\n      ...survival,\n    },\n    load: {\n      ...load,\n    }\n    // puzzle: {\n    //   ...puzzle,\n    // },\n    // leaderboards: {\n    //   ...toMenu,\n    // }\n  },\n}, {\n  guards: {\n    isFinal: ({ arcadeContext: { victories } }) => victories + 1 >= 7,\n  },\n  actions: {\n    bumpVictories: assign({\n      arcadeContext: ({ arcadeContext }, _event) => ({ ...arcadeContext, victories: arcadeContext.victories + 1, seed: Math.random() }),\n      survivalContext: ({ survivalContext }, _event) => ({ ...survivalContext, victories: survivalContext.victories + 1, seed: Math.random() }),\n    }),\n    bumpScore: assign({\n      arcadeContext: ({ arcadeContext }, { game }) => ({ ...arcadeContext, score: arcadeContext.score + scoreGame(game), seed: Math.random() }),\n    }),\n    reset: assign({\n      survivalContext: (c, e) => makeSurvivalContext(),\n      arcadeContext: (c, e) => makeArcadeContext(),\n      singleContext: (c, e) => makeSingleContext(),\n    }),\n  }\n});\n\nif (isDebug) {\n  interpret(gameMenuMachine, { devTools: true })\n    .onTransition((state) => console.log(state))\n    .start();\n}\n"],"sourceRoot":""}