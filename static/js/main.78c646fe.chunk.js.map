{"version":3,"sources":["utils/data.ts","components/PlayerBuilder.tsx","hooks/useScroll.tsx","components/EncounterBuilder.tsx","components/menus/Menu.tsx","geneticalgorithm/geneticalgorithm.js","tinkerer/tinkerer.ts","components/Enemy.tsx","components/Player.tsx","components/Game.tsx","hooks/useForceRerender.tsx","hooks/usePressedKeys.tsx","components/menus/SingleGame.tsx","components/menus/LoadScreen.tsx","App.tsx","reportWebVitals.ts","index.tsx","utils/effectRepository.ts","utils/playGame.ts","utils/zFunDump.ts","utils/modding.ts","utils/types.ts","stateMachines/menuStateMachine.ts","serviceWorkerRegistration.ts"],"names":["previousState","play","states","length","makeRange","number","Set","allRanges","selfRange","makeStat","amount","max","current","defaultStatus","dodge","active","armor","bleed","turns","stun","randomEnemy","Chance","pickone","enemies","dummyEnemy","globals","trainingEnemy","randomName","names","Math","floor","random","randomBuild","rng","buildOverride","debug","build","basic","class","skill","weapon","offhand","footwear","headgear","charm","consumable","randomPlayer","statsOverride","id","string","lore","name","age","hp","stamina","staminaPerTurn","speed","attack","defence","status","weapons","display","tooltip","effects","effectFunCall","priority","range","target","passives","eot","rolls","distance","enemy","updateGlobals","systemBuildKeys","ElementPicker","isSelected","section","options","setField","scrollParams","elRef","useRef","scrollIntoView","useScroll","behavior","block","scrollTo","scrollRef","Row","Form","Label","ButtonGroup","size","className","map","item","Button","variant","onClick","ref","PlayerBuilder","onSave","player","playerStats","React","useState","form","setForm","setLore","displayType","type","postBuildPlayerStats","buildPlayer","onSubmit","e","preventDefault","Container","fluid","style","marginBottom","safeEntries","filter","has","values","value","field","Navbar","fixed","bg","maxHeight","Text","EncounterBuilder","encounter","setEncounter","a","enemiesStats","disabled","idx","found","m","_","Menu","title","Card","Title","state","geneticAlgorithmConstructor","settingWithDefaults","settings","defaults","mutationFunction","crossoverFunction","fitnessFunction","doesABeatBFunction","population","Error","populationSize","phenotype","b","undefined","cloneJSON","object","JSON","parse","stringify","mutate","crossover","mate","evolve","rand","push","populate","index","otherIndex","temp","randomizePopulationOrder","nextGeneration","p","competitor","compete","this","best","scored","scoredPopulation","reduce","score","bestScore","config","clone","defaultTinkererOptions","playerSeed","weights","monster","turn","tinkerer","iter","optionsOverride","rangeArr","oldPlay","latestState","monsterHealth","acc","newPlay","d6","setSelected","natural","min","latest","actions","playerActions","inventory","unavailable","handlePlayerEffect","exclude","playerHealth","playerStamina","startPlayerHealth","startPlayerStamina","startMonsterHealth","monsterKillingFitness","playerAlivenessFitness","killSpeedFitness","staminaFitness","fitness","console","log","gen","GeneticAlgorithmConstructor","i","EnemyCard","enemyStats","onSelect","latestAttack","canAct","hotkey","Body","Seq","countBy","toArray","v","find","OverlayTrigger","placement","delay","show","hide","overlay","Popover","Header","as","join","toFixed","toUpperCase","PlayerCard","selectedButtons","inventoryStats","onClickEffect","lastAction","disabledSkills","setDisabledSkills","k","bot","hasPassives","Subtitle","ToggleButton","checked","onChange","event","currentTarget","delete","add","Stack","direction","gap","clamp","monsterHotkeys","Game","game","solveGame","timeTravel","hint","onMenu","lastAttacks","isLogShown","setShowLog","forceUpdate","setValue","useForceRerender","useEffect","ingame","handleCloseLog","playerSkills","isPlayerAlive","areMonstersAlive","endGame","pressed","onUp","pressedKeys","updatePressedKeys","downHandler","key","set","upHandler","useCallback","window","addEventListener","removeEventListener","usePressedKeys","valNum","parseInt","save","undo","redo","flatMap","blob","Blob","saveAs","Date","now","Col","sm","md","Player","origin","phase","zip","stats","xs","Enemy","Modal","onHide","scrollable","centered","closeButton","s","Footer","SingleGame","onGameEnd","setGame","setRedo","gameState","playState","timeTravelObj","newRedo","pop","slice","iterations","maxBy","LoadScreen","onLoad","loadError","setLoadError","load","data","playRaw","fileData","files","reader","FileReader","onloadend","ev","result","readAsText","rawData","Alert","Group","Control","accept","muted","rows","placeholder","App","useMachine","gameMenuMachine","devTools","send","matches","Object","keys","main","on","quick","makeGameNew","context","singleContext","seed","single","training","arcade","survivalContext","arcadeContext","victories","otherEnemy","firstState","makeGameNextLevel","survival","lastState","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","container","document","getElementById","createRoot","render","StrictMode","serviceWorkerRegistration","effectFun","fun","params","oldState","applyPoison","currentState","pipe","changeStatPlayer","changeStatMonster","newState","addBotEffect","engineFunctions","_origin","changeStatusPlayer","o","changeStatusMonster","effectFunRepo","changeDistance","attackMonster","modifyPlayerStamina","gameTarget","attackPlayer","addEnemy","_m","updateMonster","override","updatePlayer","curr","damage","afterDefence","afterArmor","armorSpent","afterBleed","f","updateStatus","removeMonster","currPlay","currSnap","modify","updatePlayerStat","addEotEffect","effect","statsRepository","turnDeterministicRng","randPerTurn","monsterSeed","monsterChance","floating","used","playerPassives","playerGameStats","enemyGameStats","toIndexableString","reduceFuns","funs","dodgeable","sortBy","priorityBonus","monsterId","targetMonster","isStunnedPlayer","isStunnedMonster","startState","parameters","callEffectFun","extractFunction","effectEotCleanup","effectDead","d","lastTurnState","usedSkill","initialState","preBotPlay","preBotState","postBotPlay","postBotState","entitiesBot","eff","postEntitiesBotPlay","postEntitiesBotState","turnRng","turnFunctions","concat","entitiesEot","playerEotEffects","enemiesEotEffects","postPlayerEotPlay","postPlayerEotState","postEotPlay","postEotState","postCleanup","postCleanupState","scoreGame","hpLoss","staminaLoss","Array","num","Infinity","t","globalsDefault","globalThis","__buildmancer","isArray","repo","entries","isDebug","process","inspect","server","WebSocket","Server","port","toMenu","MENU","initial","entry","WIN","LOSE","win","lose","PLAYER","ENCOUNTER","cond","internal","victory","defeat","puzzle","SELECTED","COMPLETE","complete","NEXT","SELECT","LOAD","makeArcadeContext","makeSurvivalContext","makeSingleContext","createMachine","tsTypes","QUICK","SINGLE","TRAINING","ARCADE","SURVIVAL","guards","isFinal","bumpVictories","assign","_event","bumpScore","reset","c","interpret","onTransition","start","isLocalhost","Boolean","location","hostname","match","register","navigator","URL","href","swUrl","fetch","headers","response","contentType","get","indexOf","serviceWorker","ready","registration","unregister","reload","registerValidSW","catch","checkValidServiceWorker","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","error"],"mappings":"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EAAG,KAEd,CACDjB,GAAI5C,EAAS,IACb8D,SAAU,EACVf,MAAO/C,EAAS,GAChBgD,OAAQhD,EAAS,GACjBiD,QAASjD,EAAS,GAClBkD,OAAQ9C,IAEV,CAAC,CACCqC,KAAM,CACJC,KAAM,QAERY,QAAS,CACP,CAAEF,QAAS,QAASC,QAAS,QAASG,SAAU,EAAGF,QAAS,CAACC,YAAc,CAAC,iBAAkB,CAAEtD,OAAQ,MAAQwD,MAAO9D,MAEzHkE,MAAO,CACL,CAAC,GACD,CAAC,GACD,CAAC,GACD,CAAC,GACD,CAAC,KAEF,CACDjB,GAAI5C,EAAS,KACb8D,SAAU,EACVf,MAAO/C,EAAS,GAChBgD,OAAQhD,EAAS,GACjBiD,QAASjD,EAAS,GAClBkD,OAAQ9C,IAGV,CAAC,CACCqC,KAAM,CACJC,KAAM,QAERY,QAAS,CACP,CAAEF,QAAS,QAASC,QAAS,QAASG,SAAU,EAAGF,QAAS,CAACC,YAAc,CAAC,iBAAkB,CAAEtD,OAAQ,MAAQwD,MAAO9D,MAEzHkE,MAAO,CACL,CAAC,GACD,CAAC,GACD,CAAC,GACD,CAAC,GACD,CAAC,KAEF,CACDjB,GAAI5C,EAAS,GACb8D,SAAU,EACVf,MAAO/C,EAAS,GAChBgD,OAAQhD,EAAS,GACjBiD,QAASjD,EAAS,GAClBkD,OAAQ9C,KAINe,EAAQ,CACZ,QACA,QACA,SACA,MACA,QACA,UACA,QACA,QACA,QACA,UACA,SACA,SACA,QACA,WACA,QACA,QACA,SACA,QACA,SACA,SACA,SACA,SACA,UACA,SACA,SACA,SACA,OACA,QACA,OACA,QACA,MACA,SACA,SACA,OACA,UACA,QACA,UACA,SACA,UACA,QACA,SACA,SACA,UACA,SACA,OACA,QACA,SACA,SACA,UACA,QACA,OACA,UACA,OACA,SACA,SACA,QACA,UACA,SACA,SACA,OACA,QACA,QACA,SACA,QACA,QACA,SACA,SACA,OACA,OACA,SACA,QACA,QACA,UACA,SACA,QACA,UACA,UACA,UACA,WACA,QACA,WACA,QACA,SACA,SACA,OACA,SACA,QACA,QACA,OACA,WACA,SACA,QACA,UACA,SACA,UACA,SACA,SACA,SACA,SACA,QACA,QACA,OACA,OACA,QACA,QACA,WACA,QACA,UACA,SACA,UACA,QACA,OACA,OACA,OACA,SACA,WACA,OACA,OACA,QACA,MACA,SACA,OACA,UACA,QACA,UACA,SACA,MACA,UACA,QACA,SACA,QACA,SACA,QACA,QACA,QACA,QACA,SACA,QACA,QACA,SACA,QACA,OACA,QACA,SACA,SACA,UACA,QACA,QACA,QACA,OACA,QACA,OACA,QACA,SACA,SACA,QACA,QACA,QACA,QACA,QACA,UACA,UACA,QACA,QACA,QACA,UACA,SACA,QACA,SACA,UACA,SACA,QACA,OACA,SACA,QACA,OACA,UACA,QACA,SACA,UACA,SACA,MACA,QACA,OACA,MACA,QACA,YACA,OACA,QACA,QACA,SACA,QACA,QACA,SACA,QACA,SACA,UACA,UAGF6C,YAAc,CAAErC,QAAOb,a,0NCloCjBmD,EAAoCpE,YAAI,CAAC,QAAS,UAuDlDqE,EAAgB,SAAC,GAEhB,IAFkBC,EAEnB,EAFmBA,WAAYC,EAE/B,EAF+BA,QAASC,EAExC,EAFwCA,QAASC,EAEjD,EAFiDA,SAGrD,EC/Da,SAAsCC,GACnD,IAAMC,EAAQC,iBAAU,MAGxB,MAAO,CAFe,kBAAMD,EAAMrE,QAASuE,eAAeH,IAEnCC,GD2DOG,CAAU,CACtCC,SAAU,SACVC,MAAO,UAFT,mBAAOC,EAAP,KAAiBC,EAAjB,KAKA,OACE,eAACC,EAAA,EAAD,WACE,cAACC,EAAA,EAAKC,MAAN,UAAad,IACb,uBACA,cAACe,EAAA,EAAD,CAAaC,KAAK,KAAKC,UAAU,OAAjC,SACGhB,EAAQiB,KAAI,SAACC,GAAD,OACX,cAACC,EAAA,EAAD,CAEE9C,KAAM0B,EACN7B,GAAE,UAAKgD,EAAKnC,SACZqC,QAAStB,EAAWoB,GAAQ,UAAY,YACxCG,QAAS,WAAQpB,EAASiB,GAAOT,KALnC,SAMES,EAAKnC,SALAmC,EAAKnC,cAQhB,qBAAKb,GAAE,UAAK6B,EAAL,WAAu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","file":"static/js/main.78c646fe.chunk.js","sourcesContent":["import { Chance } from \"chance\";\nimport { Subtract } from \"type-fest/source/internal\";\nimport globals, { updateGlobals } from \"./modding\";\nimport { Build, Distances, Enemy, EnemyStats, Item, Player, PlayerStats, Ranges, Snapshot, UpTo, Play, effectFunCall, Stat, Status, BuildRepository, EnemyRepository } from \"./types\";\n\n\nexport const startState = (play: Play): Snapshot => play.states[0];\nexport const previousState = (play: Play): Snapshot => play.states[play.states.length - 1];\n\nexport const makeRange = (...number: UpTo<Subtract<Distances, 1>>[]) => [...new Set(number)] as Ranges;\nexport const allRanges = makeRange(0, 1, 2, 3, 4);\nexport const selfRange = allRanges;\n\nexport const makeStat = (amount: number, max: number = amount): Stat => ({ current: amount, max });\nexport const defaultStatus: Status = {\n  dodge: { active: false },\n  armor: { amount: 0 },\n  bleed: { turns: 0 },\n  stun: { active: false },\n}\n\nexport const randomEnemy = (): [Enemy, EnemyStats] => new Chance().pickone(enemies);\nexport const dummyEnemy = (): [Enemy, EnemyStats] => globals().trainingEnemy;\n\nexport const randomName = () => names[Math.floor(Math.random() * names.length)];\n\nexport const randomBuild = (rng: Chance.Chance, buildOverride?: Partial<Build>) => ({\n  debug: build.debug[globals().debug ? 1 : 0],\n  basic: rng.pickone(build.basic),\n  class: rng.pickone(build.class),\n  skill: rng.pickone(build.skill),\n  armor: rng.pickone(build.armor),\n  weapon: rng.pickone(build.weapon),\n  offhand: rng.pickone(build.offhand),\n  footwear: rng.pickone(build.footwear),\n  headgear: rng.pickone(build.headgear),\n  charm: rng.pickone(build.charm),\n  consumable: rng.pickone(build.consumable),\n  ...buildOverride,\n});\n\nexport const randomPlayer = (statsOverride?: PlayerStats, buildOverride?: Partial<Build>): [Player, PlayerStats] => {\n  const rng = new Chance();\n  return [{\n    id: rng.string(),\n    lore: {\n      name: randomName(),\n      age: rng.age(),\n    },\n    build: randomBuild(rng, buildOverride)\n  }, {\n    hp: makeStat(10),\n    stamina: makeStat(6),\n    staminaPerTurn: makeStat(2),\n    speed: makeStat(0),\n    attack: makeStat(0),\n    defence: makeStat(0),\n    status: defaultStatus,\n    ...statsOverride,\n  }];\n}\n\nconst weapons: Item[] = [\n  {\n    display: \"Sword\",\n    tooltip: \"All-rounder\",\n    effects: [\n      {\n        display: \"Slash\",\n        tooltip: \"Swings at the enemy\",\n        effects: [\n          effectFunCall([\"Basic:Attack\", { amount: 2 }])\n        ],\n        priority: 3,\n        stamina: 2,\n        range: makeRange(0, 1),\n      },\n      {\n        display: \"Pommel Hit\",\n        tooltip: \"Deals a quick blow\",\n        effects: [\n          effectFunCall([\"Basic:Attack\", { amount: 2 }])\n        ],\n        priority: 2,\n        stamina: 2,\n        range: makeRange(0),\n      },\n      {\n        display: \"Overhead Slice\",\n        tooltip: \"Moves into melee and deals a heavy blow\",\n        effects: [\n          effectFunCall([\"Basic:Move\", { amount: -1 }]), effectFunCall([\"Basic:Attack\", { amount: 4 }])\n        ],\n        priority: 4,\n        stamina: 3,\n        range: makeRange(1),\n      },\n    ],\n  },\n  {\n    display: \"Greatsword\",\n    tooltip: \"Specialized in big damage\",\n    effects: [\n      {\n        display: \"Rend\",\n        tooltip: \"Swings at the enemy\",\n        effects: [\n          effectFunCall([\"Basic:Attack\", { amount: 3 }])\n        ],\n        priority: 4,\n        stamina: 4,\n        range: makeRange(0, 1),\n      },\n      {\n        display: \"Feint\",\n        tooltip: \"Quick step backwards\",\n        effects: [\n          effectFunCall([\"Basic:Move\", { amount: 1 }])\n        ],\n        priority: 1,\n        stamina: 1,\n        range: makeRange(0, 1),\n      },\n      {\n        display: \"Earth Flattener\",\n        tooltip: \"Charges a monstruous stunning blow\",\n        effects: [\n          effectFunCall([\"Basic:Move\", { amount: 5 }]), effectFunCall(\"Effect:Stun\")\n        ],\n        priority: 4,\n        stamina: 6,\n        range: makeRange(1),\n      },\n    ],\n  },\n  {\n    display: \"Twinblades\",\n    tooltip: \"Specialized in mobility\",\n    effects: [\n      {\n        display: \"Swoosh\",\n        tooltip: \"Deals a strike and moves back\",\n        effects: [\n          effectFunCall([\"Basic:Attack\", { amount: 2 }]),\n          effectFunCall([\"Basic:Move\", { amount: 1 }])\n        ],\n        priority: 2,\n        stamina: 2,\n        range: makeRange(0, 1),\n      },\n      {\n        display: \"Fiuuum\",\n        tooltip: \"Jump attack\",\n        effects: [\n          effectFunCall([\"Basic:Move\", { amount: -2 }]),\n          effectFunCall([\"Basic:Attack\", { amount: 3 }])\n        ],\n        priority: 4,\n        stamina: 3,\n        range: makeRange(2, 3),\n      },\n      {\n        display: \"SwishSwishSwishSwish\",\n        tooltip: \"Deals multiple low damage hits\",\n        effects: [\n          effectFunCall([\"Basic:Attack\", { amount: 1 }]),\n          effectFunCall([\"Basic:Attack\", { amount: 1 }]),\n          effectFunCall([\"Basic:Attack\", { amount: 1 }]),\n          effectFunCall([\"Basic:Attack\", { amount: 1 }])\n        ],\n        priority: 3,\n        stamina: 4,\n        range: makeRange(0),\n      },\n    ],\n  },\n  {\n    display: \"Katana\",\n    tooltip: \"Specialized in bleeding\",\n    effects: [\n      {\n        display: \"Slice & Dice\",\n        tooltip: \"Deals two swift strikes\",\n        effects: [\n          effectFunCall([\"Basic:Attack\", { amount: 1 }]),\n          effectFunCall([\"Basic:Attack\", { amount: 1 }])],\n        priority: 3,\n        stamina: 2,\n        range: makeRange(0, 1),\n      },\n      {\n        display: \"Wakizashi\",\n        tooltip: \"Short sword with a quick attack causing bleeding\",\n        effects: [\n          effectFunCall([\"Basic:Attack\", { amount: 1 }]),\n          effectFunCall([\"Effect:Bleed\", { target: 'Monster', turns: 2 }])\n        ],\n        priority: 2,\n        stamina: 4,\n        range: makeRange(0, 1),\n      },\n      {\n        display: \"Unsheathe\",\n        tooltip: \"Dodges the next attack and deals damage\",\n        effects: [\n          effectFunCall('Effect:Dodge'),\n          effectFunCall([\"Basic:Attack\", { amount: 3 }])\n        ],\n        priority: 1,\n        stamina: 4,\n        range: makeRange(0),\n      },\n    ],\n  },\n  {\n    display: \"Axe\",\n    tooltip: \"Specialized in debuffs\",\n    effects: [\n      {\n        display: \"Chop\",\n        tooltip: \"A slow but reliable attack\",\n        effects: [\n          effectFunCall([\"Basic:Attack\", { amount: 2 }])\n        ],\n        priority: 4,\n        stamina: 3,\n        range: makeRange(0, 1),\n      },\n      {\n        display: \"Aim for the head!\",\n        tooltip: \"Cripples the monster\",\n        effects: [\n          effectFunCall([\"Effect:Defence\", { target: 'Monster', amount: -1 }]),\n          effectFunCall([\"Effect:Bleed\", { target: 'Player', turns: 3 }])\n        ],\n        priority: 4,\n        stamina: 5,\n        range: makeRange(1),\n      },\n      {\n        display: \"Target the limbs!\",\n        tooltip: \"Weakens the monster\",\n        effects: [\n          effectFunCall([\"Effect:Attack\", { target: 'Monster', amount: -1 }]),\n          effectFunCall([\"Effect:Bleed\", { target: 'Player', turns: 3 }])\n        ],\n        priority: 4,\n        stamina: 5,\n        range: makeRange(1),\n      },\n    ],\n  },\n  {\n    display: \"Lance\",\n    tooltip: \"Specialized in mid-range attacks\",\n    effects: [\n      {\n        display: \"Pierce\",\n        tooltip: \"Pokes the enemy\",\n        effects: [\n          effectFunCall([\"Basic:Attack\", { amount: 2 }])\n        ],\n        priority: 3,\n        stamina: 2,\n        range: makeRange(0, 1, 2),\n      },\n      {\n        display: \"Charge!!\",\n        tooltip: \"Runs towards the enemy to deal a massive blow\",\n        effects: [\n          effectFunCall([\"Basic:Move\", { amount: -5 }]), effectFunCall([\"Basic:Attack\", { amount: 4 }])\n        ],\n        priority: 1,\n        stamina: 3,\n        range: makeRange(4),\n      },\n    ],\n  },\n  {\n    display: \"Hammer\",\n    tooltip: \"Specialized in stunning\",\n    effects: [\n      {\n        display: \"Head Banger\",\n        tooltip: \"Hits the enemy in the head\",\n        effects: [\n          effectFunCall([\"Basic:Attack\", { amount: 2 }]),\n          effectFunCall(\"Effect:Stun\")\n        ],\n        priority: 4,\n        stamina: 4,\n        range: makeRange(0),\n      },\n      {\n        display: \"Large swing\",\n        tooltip: \"Uses the inertia of the hammer to safely advance\",\n        effects: [\n          effectFunCall([\"Basic:Move\", { amount: -3 }]),\n          effectFunCall(\"Effect:Stun\")\n        ],\n        priority: 3,\n        stamina: 3,\n        range: makeRange(1, 2, 3),\n      },\n      {\n        display: \"Go for the ankles\",\n        tooltip: \"Slows down the enemy\",\n        effects: [\n          effectFunCall([\"Effect:Speed\", { target: 'Monster', amount: -1 }]),\n          effectFunCall(\"Effect:Stun\"),\n        ],\n        priority: 4,\n        stamina: 6,\n        range: makeRange(1),\n      },\n    ],\n  },\n  {\n    display: \"Finger Claw\",\n    tooltip: \"Specialized in poison\",\n    effects: [\n      {\n        display: \"Caress\",\n        tooltip: \"Applies poison to the monster\",\n        effects: [\n          effectFunCall([\"Effect:Poison\", { target: 'Monster', turns: 2 }])\n        ],\n        priority: 3,\n        stamina: 2,\n        range: makeRange(0),\n      },\n      {\n        display: \"Backflip\",\n        tooltip: \"Dodges an attack and moves backward\",\n        effects: [\n          effectFunCall(\"Effect:Dodge\"),\n          effectFunCall([\"Basic:Move\", { amount: 2 }]),\n        ],\n        priority: 1,\n        stamina: 4,\n        range: makeRange(0, 1),\n      },\n    ],\n  },\n  {\n    display: \"Bow\",\n    tooltip: \"Specialized in ranged attacks\",\n    effects: [\n      {\n        display: \"Relaxed Shot\",\n        tooltip: \"Shoots an arrow\",\n        effects: [\n          effectFunCall([\"Basic:Attack\", { amount: 2 }])\n        ],\n        priority: 3,\n        stamina: 2,\n        range: makeRange(3, 4),\n      },\n      {\n        display: \"Power Draw\",\n        tooltip: \"Shoots your strongest arrow and makes you weaker\",\n        effects: [\n          effectFunCall([\"Basic:Attack\", { amount: 6 }]),\n          effectFunCall([\"Effect:Attack\", { target: 'Player', amount: -1 }]),\n        ],\n        priority: 3,\n        stamina: 4,\n        range: makeRange(4),\n      },\n    ],\n  },\n  {\n    display: \"Magic Staff\",\n    tooltip: \"Specialized in multiple attacks\",\n    effects: [\n      {\n        display: \"Bolt\",\n        tooltip: \"Shoots a low damage bolt\",\n        effects: [\n          effectFunCall([\"Basic:Attack\", { amount: 1 }])\n        ],\n        priority: 3,\n        stamina: 3,\n        range: allRanges,\n      },\n      {\n        display: \"Pew Pew Pew\",\n        tooltip: \"Shoots a barrage of bolts\",\n        effects: [\n          effectFunCall([\"Basic:Attack\", { amount: 1 }]),\n          effectFunCall([\"Basic:Attack\", { amount: 1 }]),\n          effectFunCall([\"Basic:Attack\", { amount: 1 }]),\n          effectFunCall([\"Basic:Attack\", { amount: 1 }])],\n        priority: 4,\n        stamina: 8,\n        range: makeRange(2, 3, 4),\n      },\n    ],\n  },\n];\n\nexport const build: BuildRepository = {\n  debug: [\n    {\n      display: \"None\",\n    },\n    {\n      display: \"Debug\",\n      effects: [\n        {\n          display: \"GGWP\",\n          tooltip: \"Wins the game\",\n          priority: 1,\n          stamina: 0,\n          range: allRanges,\n          effects: [effectFunCall('Debug:GGWP')]\n        },\n        {\n          display: \"SUDOKU\",\n          tooltip: \"Loses the game\",\n          priority: 1,\n          stamina: 0,\n          range: allRanges,\n          effects: [effectFunCall('Debug:Sudoku')]\n        },\n      ]\n    }\n  ],\n  basic: [\n    {\n      display: \"Basic\",\n      effects: [\n        {\n          display: \"Rest\",\n          tooltip: \"Skip the turn and restore stamina\",\n          priority: 4,\n          stamina: 0,\n          range: selfRange,\n          effects: [effectFunCall('Basic:Rest')]\n        },\n        {\n          display: \"Advance\",\n          tooltip: \"Move closer\",\n          priority: 4,\n          stamina: 1,\n          range: selfRange,\n          effects: [effectFunCall(['Basic:Move', { amount: -1 }])]\n        },\n        {\n          display: \"Retreat\",\n          tooltip: \"Move farther\",\n          effects: [effectFunCall([\"Basic:Move\", { amount: 1 }])],\n          priority: 4,\n          stamina: 1,\n          range: selfRange,\n        }\n      ]\n    }\n  ],\n  class: [\n    {\n      display: \"Warrior\",\n      passives: [\"+Attack\", \"+Defence\", \"+Stamina\"],\n      effects: [\n        {\n          display: \"Well placed kick\",\n          tooltip: \"Last resource attack\",\n          effects: [effectFunCall([\"Basic:Attack\", { amount: 2 }])],\n          priority: 2,\n          stamina: 1,\n          range: makeRange(0, 1),\n        }\n      ]\n    },\n    {\n      display: \"Rogue\",\n      passives: [\"+Speed\", \"+Speed\", \"-Attack\", \"-Stamina\"],\n      effects: [\n        {\n          display: \"Strategic Retreat\",\n          tooltip: \"Jump backwards\",\n          effects: [effectFunCall([\"Basic:Move\", { amount: 999 }])],\n          priority: 2,\n          stamina: 1,\n          range: selfRange,\n        }\n      ]\n    },\n    {\n      display: \"Berserk\",\n      passives: [\"+Attack\", \"+Attack\", \"+Attack\", \"-Defence\", \"-Defence\", \"-Health\"],\n      effects: [\n        {\n          display: \"All or Nothing!\",\n          tooltip: \"Deals massive damage and leaves you weakened\",\n          priority: 2,\n          stamina: 0,\n          range: makeRange(0, 1, 2),\n          amount: 1,\n          effects: [\n            effectFunCall(['Basic:Move', { amount: -5 }]),\n            effectFunCall(['Basic:Attack', { amount: 2 }]),\n            effectFunCall(['Basic:Attack', { amount: 2 }]),\n            effectFunCall(['Basic:Attack', { amount: 2 }]),\n            effectFunCall(['Basic:Attack', { amount: 2 }]),\n            effectFunCall(['Effect:Defence', { target: 'Player', amount: -3 }]),\n            effectFunCall(['Effect:Speed', { target: 'Player', amount: -1 }]),\n          ]\n        },\n      ]\n    },\n    {\n      display: \"Mage\",\n      passives: [\"+StaPerTurn\", \"+Stamina\", \"-Health\", \"-Speed\"],\n      effects: [\n        {\n          display: \"Just having a thought\",\n          tooltip: \"Restores stamina for the next action\",\n          priority: 4,\n          amount: 2,\n          stamina: 0,\n          range: selfRange,\n          effects: [\n            effectFunCall(['Basic:Stamina', { amount: 999 }]),\n          ]\n        },\n      ]\n    },\n    {\n      display: \"Cleric\",\n      passives: [\"+Defence\", \"+Stamina\"],\n      effects: [\n        {\n          display: \"Minor Healing\",\n          tooltip: \"Restores some HP\",\n          amount: 3,\n          effects: [\n            effectFunCall([\"Basic:HP\", { amount: 5 }]),\n          ],\n          priority: 3,\n          stamina: 3,\n          range: selfRange,\n        }\n      ]\n    },\n  ],\n  skill: [\n    {\n      display: \"Sturdy\",\n      effects: [\n        {\n          display: \"Endure the pain\",\n          tooltip: \"Blocks some damage\",\n          effects: [effectFunCall([\"Effect:Armor\", { amount: 2 }])],\n          priority: 1,\n          stamina: 2,\n          range: selfRange,\n        },\n      ]\n    },\n    {\n      display: \"Nimble\",\n      effects: [\n        {\n          display: \"Dodge\",\n          tooltip: \"Avoid one enemy attack\",\n          effects: [effectFunCall(\"Effect:Dodge\")],\n          priority: 2,\n          stamina: 4,\n          range: selfRange,\n        }\n      ]\n    },\n    {\n      display: \"Resourceful\",\n      effects: [\n        {\n          display: \"Dodge this!\",\n          tooltip: \"Throws a stone\",\n          effects: [effectFunCall([\"Basic:Attack\", { amount: 2 }])],\n          priority: 3,\n          stamina: 3,\n          range: makeRange(3, 4),\n        }\n      ]\n    },\n  ],\n  weapon: weapons,\n  offhand: [\n    {\n      display: \"Hook\",\n      passives: [\"-Stamina\"],\n      effects: [\n        {\n          display: \"Get over here!\",\n          tooltip: \"Moves enemy closer\",\n          effects: [effectFunCall([\"Basic:Attack\", { amount: 3 }]), effectFunCall([\"Basic:Move\", { amount: -2 }])],\n          priority: 4,\n          stamina: 3,\n          range: makeRange(2, 3, 4),\n        },\n      ],\n    },\n    {\n      display: \"Parry Dagger\",\n      passives: [\"-Defence\"],\n      effects: [\n        {\n          display: \"Get over here!\",\n          tooltip: \"Avoids a melee attack\",\n          effects: [effectFunCall(\"Effect:Dodge\")],\n          priority: 2,\n          stamina: 2,\n          range: makeRange(1),\n        },\n      ],\n    },\n    {\n      display: \"Shield\",\n      passives: [\"+Defence\", \"-Speed\"],\n      effects: [\n        {\n          display: \"Not today!\",\n          tooltip: \"Blocks a lot of damage\",\n          effects: [effectFunCall([\"Effect:Armor\", { amount: 5 }])],\n          priority: 2,\n          stamina: 4,\n          range: selfRange,\n        },\n      ],\n    },\n    {\n      display: \"Focus\",\n      passives: [\"+Speed\", \"+StaPerTurn\"]\n    },\n    {\n      display: \"Wand\",\n      passives: [\"-Defence\", \"-StaPerTurn\"],\n      effects: [\n        {\n          display: \"Magic Bolt\",\n          tooltip: \"Shoots mana bolts until the caster faints\",\n          effects: [effectFunCall(\"Wand:MagicBolt\")],\n          priority: 3,\n          stamina: 1,\n          range: makeRange(3, 4),\n        }\n      ]\n    },\n  ],\n  armor: [\n    {\n      display: \"Heavy\",\n      passives: [\"+Defence\", \"+Defence\", \"+Defence\", \"+Defence\", \"-Speed\", \"-Speed\", \"-StaPerTurn\"],\n    },\n    {\n      display: \"Medium\",\n      passives: [\"+Defence\", \"+Defence\", \"-StaPerTurn\"],\n    },\n    {\n      display: \"Light\",\n      passives: [\"+Defence\"],\n    },\n    {\n      display: \"None\",\n      passives: [\"+Speed\"],\n    },\n  ],\n  headgear: [\n    {\n      display: \"Helm\",\n      passives: [\"+Defence\", \"+Defence\", \"-Speed\", \"-StaPerTurn\"],\n      tooltip: \"Big protection for slow combatants\",\n    },\n    {\n      display: \"Feather Cap\",\n      passives: [\"+StaPerTurn\", \"+Stamina\"],\n      tooltip: \"Makes you feel energized, doesn't it?\",\n    },\n    {\n      display: \"Mage Hat\",\n      passives: [\"-StaPerTurn\"],\n      tooltip: \"Small tricks for big plays\",\n      effects: [\n        {\n          display: \"Flash!\",\n          tooltip: \"Blinks you to a better position\",\n          effects: [\n            effectFunCall([\"Basic:Attack\", { amount: 1 }]),\n            effectFunCall([\"Basic:Move\", { amount: 2 }])\n          ],\n          priority: 3,\n          stamina: 4,\n          range: makeRange(1, 2),\n        }\n      ]\n    },\n  ],\n  footwear: [\n    {\n      display: \"Slippers of Dooooodge!\",\n      tooltip: \"Allows you to dodge attacks\",\n      passives: [\"-Stamina\"],\n      effects: [\n        {\n          display: \"Advanced Dodge\",\n          tooltip: \"Avoid 1 attack\",\n          effects: [effectFunCall(\"Effect:Dodge\")],\n          priority: 1,\n          stamina: 3,\n          range: selfRange,\n        },\n      ],\n    },\n    {\n      display: \"Boots of Flight\",\n      tooltip: \"Avoid your enemies\",\n      passives: [\"-StaPerTurn\", \"-Defence\"],\n      eot: [{\n        display: \"Flight!\",\n        tooltip: \"Increases distance every turn\",\n        priority: 0,\n        range: allRanges,\n        effects: [effectFunCall('BootsOfFlight:EOT')],\n      }],\n    },\n    {\n      display: \"Greaves of Stability\",\n      tooltip: \"Extra resilient\",\n      passives: [\"+Defence\", \"-Speed\"],\n      effects: [\n        {\n          display: \"Dig your heels\",\n          tooltip: \"Resists damage\",\n          effects: [effectFunCall([\"Effect:Armor\", { amount: 3 }])],\n          priority: 1,\n          stamina: 4,\n          range: selfRange,\n        },\n      ],\n    },\n  ],\n  charm: [\n    {\n      display: \"of Health\",\n      passives: [\"+Health\", \"-Speed\"],\n      tooltip: \"Increases your maximum health\",\n    },\n    {\n      display: \"of Haste\",\n      passives: [\"+StaPerTurn\", \"-Stamina\"],\n      tooltip: \"Increases your maximum stamina regeneration\",\n    },\n    {\n      display: \"of Resilience\",\n      passives: [\"+Stamina\", \"-StaPerTurn\"],\n      tooltip: \"Increases your maximum stamina\",\n    },\n    {\n      display: \"of Strength\",\n      passives: [\"+Attack\", \"-Health\", \"-StaPerTurn\"],\n      tooltip: \"Increases your maximum attack\",\n    },\n    {\n      display: \"of Swiftness\",\n      passives: [\"+Speed\", \"-Attack\"],\n      tooltip: \"Increases your maximum speed\",\n    },\n    {\n      display: \"of Defence\",\n      passives: [\"+Defence\", \"-Stamina\", \"-Speed\"],\n      tooltip: \"Increases your maximum defence\",\n    },\n  ],\n  consumable: [\n    {\n      display: \"Healing Potion\",\n      effects: [\n        {\n          display: \"Healing!\",\n          tooltip: \"Restores some HP\",\n          effects: [\n            effectFunCall([\"Basic:HP\", { amount: 4 }]),\n          ],\n          priority: 4,\n          stamina: 5,\n          amount: 3,\n          range: selfRange,\n        }\n      ]\n    },\n    {\n      display: \"Pot of Razors\",\n      effects: [\n        {\n          display: \"Throw pot\",\n          tooltip: \"Causes bleeding\",\n          amount: 2,\n          effects: [\n            effectFunCall([\"Effect:Bleed\", { target: 'Monster', turns: 3 }]),\n          ],\n          priority: 4,\n          stamina: 5,\n          range: selfRange,\n        }\n      ]\n    },\n    {\n      display: \"Life Bubble\",\n      effects: [\n        {\n          display: \"Activate Bubble\",\n          tooltip: \"Protects against a single source of damage this turn\",\n          effects: [\n            effectFunCall(\"Effect:Dodge\"),\n          ],\n          priority: 1,\n          stamina: 1,\n          amount: 1,\n          range: selfRange,\n        }\n      ]\n    },\n    {\n      display: \"Pet Rock\",\n      effects: [\n        {\n          display: \"Rock, to me!\",\n          tooltip: \"Reduces damage\",\n          effects: [\n            effectFunCall([\"Effect:Armor\", { amount: 3 }]),\n          ],\n          priority: 2,\n          stamina: 3,\n          amount: 3,\n          range: selfRange,\n        }\n      ]\n    },\n  ],\n};\n\nexport const enemies: EnemyRepository = [\n  [{\n    lore: {\n      name: \"Sacapuntas\",\n    },\n    rolls: [\n      [0, 1, 2, 1, 0],\n      [0, 1, 0, 0, 0],\n      [0, 0, 0, 0, 0],\n      [0, 0, 0, 0, 0],\n      [0, 1, 2, 1, 0, 0],\n    ],\n    effects: [\n      { display: \"Swipe\", tooltip: \"Swipe\", priority: 3, effects: [effectFunCall([\"Monster:Attack\", { amount: 3 }])], range: makeRange(0, 1) },\n      { display: \"Roar\", tooltip: \"Roar\", priority: 1, effects: [effectFunCall([\"Basic:Stamina\", { amount: -5 }])], range: allRanges },\n      { display: \"Jump\", tooltip: \"Jump\", priority: 2, effects: [effectFunCall([\"Monster:Move\", { amount: -4 }])], range: makeRange(2, 3, 4) },\n    ],\n  }, {\n    hp: makeStat(25),\n    distance: 4,\n    speed: makeStat(0),\n    attack: makeStat(0),\n    defence: makeStat(0),\n    status: defaultStatus,\n  }],\n  [{\n    lore: {\n      name: \"Toro\",\n    },\n    effects: [\n      { display: \"Swipe\", tooltip: \"Swipe\", priority: 3, effects: [effectFunCall([\"Monster:Attack\", { amount: 3 }])], range: allRanges },\n      { display: \"Jump\", tooltip: \"Jump\", priority: 2, effects: [effectFunCall([\"Monster:Move\", { amount: -4 }])], range: makeRange(2, 3, 4) },\n    ],\n    rolls: [\n      [0, 0, 0, 0, 0],\n      [0, 0, 0, 0, 0],\n      [1, 1, 0, 0, 0],\n      [1, 1, 1, 0, 0],\n      [1, 1, 1, 1, 0],\n    ]\n  }, {\n    hp: makeStat(22),\n    distance: 4,\n    speed: makeStat(0),\n    attack: makeStat(0),\n    defence: makeStat(0),\n    status: defaultStatus,\n  }],\n  [{\n    lore: {\n      name: \"Summoner\",\n    },\n    effects: [\n      { display: \"Swipe\", tooltip: \"Swipe\", priority: 3, effects: [effectFunCall([\"Monster:Attack\", { amount: 3 }])], range: makeRange(0, 1) },\n      { display: \"Retreat\", tooltip: \"Jump\", priority: 3, effects: [effectFunCall([\"Monster:Move\", { amount: 5 }])], range: allRanges },\n      { display: \"Summon Smol\", tooltip: \"Summon Smol\", priority: 4, effects: [effectFunCall([\"Monster:Summon\", { enemy: 4 }])], range: makeRange(2, 3, 4) },\n      { display: \"Spit\", tooltip: \"Summon Smol\", priority: 4, effects: [effectFunCall([\"Monster:Attack\", { amount: 2 }])], range: makeRange(2, 3, 4) },\n    ],\n    rolls: [\n      [1, 1, 1, 0, 0],\n      [1, 1, 1, 0, 0],\n      [1, 1, 3, 3, 0],\n      [2, 3, 3, 3, 0],\n      [2, 2, 3, 3, 0],\n    ]\n  }, {\n    hp: makeStat(30),\n    distance: 4,\n    speed: makeStat(0),\n    attack: makeStat(0),\n    defence: makeStat(0),\n    status: defaultStatus,\n  }],\n  [{\n    lore: {\n      name: \"Body\",\n    },\n    effects: [\n      { display: \"Swipe\", tooltip: \"Swipe\", priority: 3, effects: [effectFunCall([\"Monster:Attack\", { amount: 3 }])], range: makeRange() },\n    ],\n    rolls: [\n      [0],\n      [0],\n      [0],\n      [0],\n      [0],\n    ]\n  }, {\n    hp: makeStat(300),\n    distance: 0,\n    speed: makeStat(0),\n    attack: makeStat(0),\n    defence: makeStat(0),\n    status: defaultStatus,\n  }],\n\n  [{\n    lore: {\n      name: \"Smol\",\n    },\n    effects: [\n      { display: \"Swipe\", tooltip: \"Swipe\", priority: 3, effects: [effectFunCall([\"Monster:Attack\", { amount: 3 }])], range: makeRange() },\n    ],\n    rolls: [\n      [0],\n      [0],\n      [0],\n      [0],\n      [0],\n    ]\n  }, {\n    hp: makeStat(5),\n    distance: 0,\n    speed: makeStat(0),\n    attack: makeStat(0),\n    defence: makeStat(0),\n    status: defaultStatus,\n  }],\n];\n\nconst names = [\n  \"Lydan\",\n  \"Syrin\",\n  \"Ptorik\",\n  \"Joz\",\n  \"Varog\",\n  \"Gethrod\",\n  \"Hezra\",\n  \"Feron\",\n  \"Ophni\",\n  \"Colborn\",\n  \"Fintis\",\n  \"Gatlin\",\n  \"Jinto\",\n  \"Hagalbar\",\n  \"Krinn\",\n  \"Lenox\",\n  \"Revvyn\",\n  \"Hodus\",\n  \"Dimian\",\n  \"Paskel\",\n  \"Kontas\",\n  \"Weston\",\n  \"Azamarr\",\n  \"Jather\",\n  \"Tekren\",\n  \"Jareth\",\n  \"Adon\",\n  \"Zaden\",\n  \"Eune\",\n  \"Graff\",\n  \"Tez\",\n  \"Jessop\",\n  \"Gunnar\",\n  \"Pike\",\n  \"Domnhar\",\n  \"Baske\",\n  \"Jerrick\",\n  \"Mavrek\",\n  \"Riordan\",\n  \"Wulfe\",\n  \"Straus\",\n  \"Tyvrik\",\n  \"Henndar\",\n  \"Favroe\",\n  \"Whit\",\n  \"Jaris\",\n  \"Renham\",\n  \"Kagran\",\n  \"Lassrin\",\n  \"Vadim\",\n  \"Arlo\",\n  \"Quintis\",\n  \"Vale\",\n  \"Caelan\",\n  \"Yorjan\",\n  \"Khron\",\n  \"Ishmael\",\n  \"Jakrin\",\n  \"Fangar\",\n  \"Roux\",\n  \"Baxar\",\n  \"Hawke\",\n  \"Gatlen\",\n  \"Barak\",\n  \"Nazim\",\n  \"Kadric\",\n  \"Paquin\",\n  \"Kent\",\n  \"Moki\",\n  \"Rankar\",\n  \"Lothe\",\n  \"Ryven\",\n  \"Clawsen\",\n  \"Pakker\",\n  \"Embre\",\n  \"Cassian\",\n  \"Verssek\",\n  \"Dagfinn\",\n  \"Ebraheim\",\n  \"Nesso\",\n  \"Eldermar\",\n  \"Rivik\",\n  \"Rourke\",\n  \"Barton\",\n  \"Hemm\",\n  \"Sarkin\",\n  \"Blaiz\",\n  \"Talon\",\n  \"Agro\",\n  \"Zagaroth\",\n  \"Turrek\",\n  \"Esdel\",\n  \"Lustros\",\n  \"Zenner\",\n  \"Baashar\",\n  \"Dagrod\",\n  \"Gentar\",\n  \"Feston\",\n  \"Syrana\",\n  \"Resha\",\n  \"Varin\",\n  \"Wren\",\n  \"Yuni\",\n  \"Talis\",\n  \"Kessa\",\n  \"Magaltie\",\n  \"Aeris\",\n  \"Desmina\",\n  \"Krynna\",\n  \"Asralyn\",\n  \"Herra\",\n  \"Pret\",\n  \"Kory\",\n  \"Afia\",\n  \"Tessel\",\n  \"Rhiannon\",\n  \"Zara\",\n  \"Jesi\",\n  \"Belen\",\n  \"Rei\",\n  \"Ciscra\",\n  \"Temy\",\n  \"Renalee\",\n  \"Estyn\",\n  \"Maarika\",\n  \"Lynorr\",\n  \"Tiv\",\n  \"Annihya\",\n  \"Semet\",\n  \"Tamrin\",\n  \"Antia\",\n  \"Reslyn\",\n  \"Basak\",\n  \"Vixra\",\n  \"Pekka\",\n  \"Xavia\",\n  \"Beatha\",\n  \"Yarri\",\n  \"Liris\",\n  \"Sonali\",\n  \"Razra\",\n  \"Soko\",\n  \"Maeve\",\n  \"Everen\",\n  \"Yelina\",\n  \"Morwena\",\n  \"Hagar\",\n  \"Palra\",\n  \"Elysa\",\n  \"Sage\",\n  \"Ketra\",\n  \"Lynx\",\n  \"Agama\",\n  \"Thesra\",\n  \"Tezani\",\n  \"Ralia\",\n  \"Esmee\",\n  \"Heron\",\n  \"Naima\",\n  \"Rydna\",\n  \"Sparrow\",\n  \"Baakshi\",\n  \"Ibera\",\n  \"Phlox\",\n  \"Dessa\",\n  \"Braithe\",\n  \"Taewen\",\n  \"Larke\",\n  \"Silene\",\n  \"Phressa\",\n  \"Esther\",\n  \"Anika\",\n  \"Rasy\",\n  \"Harper\",\n  \"Indie\",\n  \"Vita\",\n  \"Drusila\",\n  \"Minha\",\n  \"Surane\",\n  \"Lassona\",\n  \"Merula\",\n  \"Kye\",\n  \"Jonna\",\n  \"Lyla\",\n  \"Zet\",\n  \"Orett\",\n  \"Naphtalia\",\n  \"Turi\",\n  \"Rhays\",\n  \"Shike\",\n  \"Hartie\",\n  \"Beela\",\n  \"Leska\",\n  \"Vemery\",\n  \"Lunex\",\n  \"Fidess\",\n  \"Tisette\",\n  \"Partha\",\n]\n\nupdateGlobals({ build, enemies });\n","import React from \"react\";\nimport { Container, Row, Form, Button, ButtonGroup, Navbar } from \"react-bootstrap\";\nimport useScroll from \"../hooks/useScroll\";\n\nimport { Build, Item, Player, PlayerStats, safeEntries } from \"../utils/types\";\nimport { build, randomEnemy, randomName, randomPlayer } from \"../utils/data\";\nimport { Set } from 'immutable';\nimport { buildPlayer } from \"../utils/playGame\";\n\nconst systemBuildKeys: Set<keyof Build> = Set(['debug', 'basic']);\n\nconst PlayerBuilder = ({ onSave }: { onSave: (player: Player, playerStats: PlayerStats) => void }) => {\n  const [player, playerStats] = randomPlayer();\n  const [form, setForm] = React.useState<Build>(player.build);\n  const [lore, setLore] = React.useState(player.lore);\n  const setField = <T extends keyof Build>(field: T, value: Build[T]) => {\n    setForm({\n      ...form,\n      [field]: value,\n    });\n  };\n  const onFormSubmit = (e: any) => {\n    e.preventDefault();\n    onSave({\n      id: \"p-1\",\n      lore,\n      build: form,\n    }, playerStats);\n  };\n  const displayType = (type: keyof Build) => <b>{form[type].display}</b>;\n\n  const postBuildPlayerStats = buildPlayer({ ...player, build: form }, playerStats, [randomEnemy()[1]])[0];\n\n  return (\n    <Form onSubmit={onFormSubmit}>\n      <Container fluid style={{ marginBottom: '105px' }}>\n        <Row className=\"g-2\">\n          {safeEntries(build)\n            .filter(([type, _]) => !systemBuildKeys.has(type))\n            .map(([type, values]) =>\n              <ElementPicker\n                setField={(value) => setField(type, value)}\n                section={type}\n                options={(values as Item[])}\n                key={type}\n                isSelected={(value) => form[type].display === value.display} />)\n          }\n        </Row>\n        <Navbar fixed=\"bottom\" bg=\"dark\" variant=\"dark\" style={{ maxHeight: '100px' }}>\n          <Container>\n            <Navbar.Text>You are <i onClick={() => setLore((lore) => ({ ...lore, name: randomName() }))}>{lore.name}</i>, the {displayType('skill')} {displayType('class')} {displayType('charm')}<br />who wields a {displayType('weapon')} and a {displayType('offhand')}<br />and wears {displayType('armor')} with {displayType('headgear')} and {displayType('footwear')}</Navbar.Text>\n            <Navbar.Text>\n              {postBuildPlayerStats.hp.current}/{postBuildPlayerStats.hp.max} ❤<br />\n              {postBuildPlayerStats.stamina.current}/{postBuildPlayerStats.stamina.max} 💪 ({postBuildPlayerStats.staminaPerTurn.current >= 0 && \"+\"}{postBuildPlayerStats.staminaPerTurn.current})<br />\n              Attack {postBuildPlayerStats.attack.current} | Defence {postBuildPlayerStats.defence.current} | Speed {postBuildPlayerStats.speed.current}\n            </Navbar.Text>\n            <Button type=\"submit\">This is me!</Button>\n          </Container>\n        </ Navbar>\n      </Container >\n    </Form >\n  );\n};\n\nconst ElementPicker = ({ isSelected, section, options, setField }: {\n  options: Item[], isSelected: (value: Item) => boolean, setField: (value: Item) => void, section: string\n}) => {\n  const [scrollTo, scrollRef] = useScroll({\n    behavior: 'smooth',\n    block: 'start',\n  });\n\n  return (\n    <Row>\n      <Form.Label>{section}</Form.Label>\n      <br />\n      <ButtonGroup size=\"lg\" className=\"mb-2\">\n        {options.map((item) => (\n          <Button\n            key={item.display}\n            name={section}\n            id={`${item.display}`}\n            variant={isSelected(item) ? 'primary' : 'secondary'}\n            onClick={() => { setField(item); scrollTo(); }}\n          >{item.display}</Button>\n        ))}\n      </ButtonGroup>\n      <div id={`${section}-scroll`} ref={scrollRef} />\n    </Row>\n  );\n}\n\nexport default PlayerBuilder;\n","import { Ref, useRef } from \"react\";\n\ntype ScrollToFn = () => void;\n\nexport default function useScroll<T extends Element>(scrollParams: ScrollIntoViewOptions): [ScrollToFn, Ref<any>] {\n  const elRef = useRef<T>(null);\n  const executeScroll = () => elRef.current!.scrollIntoView(scrollParams);\n\n  return [executeScroll, elRef];\n};\n","import React from \"react\";\nimport { Container, ButtonGroup, Form, Button, Navbar } from \"react-bootstrap\";\n\nimport { Player, Enemies, Enemy, EnemiesStats, EnemyStats, Build } from \"../utils/types\";\nimport { enemies, randomEnemy } from \"../utils/data\";\n\nconst EncounterBuilder = ({ player, onSave }: { player: Player, onSave: (enemies: Enemies, enemiesStats: EnemiesStats) => void }) => {\n  const [encounter, setEncounter] = React.useState<[Enemy, EnemyStats][]>([]);\n  const onFormSubmit = (e: any) => {\n    e.preventDefault();\n    const enemies = encounter.map(a => a[0]);\n    const enemiesStats = encounter.map(a => a[1]);\n    // Size enforced by UI\n    onSave(enemies as Enemies, enemiesStats as EnemiesStats);\n  };\n  const displayType = (type: keyof Build) => <b>{player.build[type].display}</b>;\n  return (\n    <Form onSubmit={onFormSubmit}>\n      <Container fluid style={{ marginBottom: encounter.length > 0 ? '205px' : '105px' }}>\n        <ButtonGroup size=\"lg\" className=\"mb-2\">\n          {enemies.map((enemy) =>\n            <Button\n              key={enemy[0].lore.name}\n              disabled={encounter.length > 4}\n              onClick={() => setEncounter((e) => [...e, enemy])}\n            >{enemy[0].lore.name}</Button>\n          )}\n        </ButtonGroup>\n      </Container >\n      {\n        encounter.length > 0 &&\n        <Navbar fixed=\"bottom\" bg=\"dark\" variant=\"dark\" style={{ marginBottom: '100px' }}>\n          <Container fluid>\n            <ButtonGroup size=\"sm\" className=\"mb-2\">\n              {encounter.map((enemy, idx) => <Button key={`${enemy[0].lore.name}-${idx}`} onClick={() => setEncounter((e) => { let found = false; return e.filter((m) => (found || m[0].lore.name !== enemy[0].lore.name) || !(found = true)); })}>{enemy[0].lore.name}</Button>)}\n            </ButtonGroup>\n          </Container>\n        </ Navbar>\n      }\n      <Navbar fixed=\"bottom\" bg=\"dark\" variant=\"dark\" style={{ maxHeight: '100px' }}>\n        <Container>\n          <Navbar.Text>You are <i>{player.lore.name}</i>, the {displayType('skill')} {displayType('class')} {displayType('charm')}<br />who wields a {displayType('weapon')} and a {displayType('offhand')}<br />and wears {displayType('armor')} with {displayType('headgear')} and {displayType('footwear')}</Navbar.Text>\n          <ButtonGroup>\n            <Button\n              disabled={encounter.length < 0 || encounter.length > 4}\n              onClick={(_) => setEncounter((e) => [...e, randomEnemy()])}>\n              Add Random\n            </Button>\n            <Button type=\"submit\" disabled={encounter.length < 1 || encounter.length > 5}>To Battle!</Button>\n          </ButtonGroup>\n        </Container>\n      </ Navbar>\n    </Form >\n  );\n};\n\nexport default EncounterBuilder;\n","import React from \"react\";\nimport { Container, Card, Row, Button } from \"react-bootstrap\";\n\nconst Menu: React.FC<{\n  title: string;\n  states: string[];\n  onClick: (value: string) => void\n}> = ({ title, states, onClick }) =>\n    <Container fluid style={{ marginBottom: '105px' }}>\n      <Row className=\"g-2\">\n        <Card.Title>\n          {title}\n        </Card.Title>\n      </Row>\n      {states.map(state =>\n        <Row className=\"g-2\" key={state}>\n          <Button size=\"lg\" className=\"mb-2\"\n            key={state}\n            variant={'primary'}\n            onClick={() => { onClick(state); }}\n          >{state}</Button>\n        </Row>\n      )}</Container >;\n\nexport default Menu;\n","export default function geneticAlgorithmConstructor(options) {\n\n    function settingDefaults() {\n        return {\n\n            mutationFunction: function (phenotype) { return phenotype },\n\n            crossoverFunction: function (a, b) { return [a, b] },\n\n            fitnessFunction: function (phenotype) { return 0 },\n\n            doesABeatBFunction: undefined,\n\n            population: [],\n            populationSize: 100,\n        }\n    }\n\n    function settingWithDefaults(settings, defaults) {\n        settings = settings || {}\n\n        settings.mutationFunction = settings.mutationFunction || defaults.mutationFunction\n        settings.crossoverFunction = settings.crossoverFunction || defaults.crossoverFunction\n        settings.fitnessFunction = settings.fitnessFunction || defaults.fitnessFunction\n\n        settings.doesABeatBFunction = settings.doesABeatBFunction || defaults.doesABeatBFunction\n\n        settings.population = settings.population || defaults.population\n        if (settings.population.length <= 0) throw Error(\"population must be an array and contain at least 1 phenotypes\")\n\n        settings.populationSize = settings.populationSize || defaults.populationSize\n        if (settings.populationSize <= 0) throw Error(\"populationSize must be greater than 0\")\n\n        return settings\n    }\n\n    var settings = settingWithDefaults(options, settingDefaults())\n\n    function populate() {\n        var size = settings.population.length\n        while (settings.population.length < settings.populationSize) {\n            const rand = Math.floor(Math.random() * size);\n            settings.population.push(\n                mutate(\n                    cloneJSON(settings.population[Math.floor(rand)])\n                )\n            )\n        }\n    }\n\n    function cloneJSON(object) {\n        return JSON.parse(JSON.stringify(object))\n    }\n\n    function mutate(phenotype) {\n        return settings.mutationFunction(cloneJSON(phenotype))\n    }\n\n    function crossover(phenotype) {\n        phenotype = cloneJSON(phenotype)\n        var mate = settings.population[Math.floor(Math.random() * settings.population.length)]\n        mate = cloneJSON(mate)\n        return settings.crossoverFunction(phenotype, mate)[0]\n    }\n\n    function doesABeatB(a, b) {\n        if (settings.doesABeatBFunction) {\n            return settings.doesABeatBFunction(a, b)\n        } else {\n            return settings.fitnessFunction(a) >= settings.fitnessFunction(b)\n        }\n    }\n\n    function compete() {\n        var nextGeneration = []\n\n        for (var p = 0; p < settings.population.length - 1; p += 2) {\n            var phenotype = settings.population[p];\n            var competitor = settings.population[p + 1];\n\n            nextGeneration.push(phenotype)\n            if (doesABeatB(phenotype, competitor)) {\n                if (Math.random() < 0.5) {\n                    nextGeneration.push(mutate(phenotype))\n                } else {\n                    nextGeneration.push(crossover(phenotype))\n                }\n            } else {\n                nextGeneration.push(competitor)\n            }\n        }\n\n        settings.population = nextGeneration;\n    }\n\n\n\n    function randomizePopulationOrder() {\n\n        for (var index = 0; index < settings.population.length; index++) {\n            var otherIndex = Math.floor(Math.random() * settings.population.length)\n            var temp = settings.population[otherIndex]\n            settings.population[otherIndex] = settings.population[index]\n            settings.population[index] = temp\n        }\n    }\n\n    return {\n        evolve: function (options) {\n\n            if (options) {\n                settings = settingWithDefaults(options, settings)\n            }\n\n            populate()\n            randomizePopulationOrder()\n            compete()\n            return this\n        },\n        best: function () {\n            var scored = this.scoredPopulation()\n            var result = scored.reduce(function (a, b) {\n                return a.score >= b.score ? a : b\n            }, scored[0]).phenotype\n            return cloneJSON(result)\n        },\n        bestScore: function () {\n            return settings.fitnessFunction(this.best())\n        },\n        population: function () {\n            return cloneJSON(this.config().population)\n        },\n        scoredPopulation: function () {\n            return this.population().map(function (phenotype) {\n                return {\n                    phenotype: cloneJSON(phenotype),\n                    score: settings.fitnessFunction(phenotype)\n                }\n            })\n        },\n        config: function () {\n            return cloneJSON(settings)\n        },\n        clone: function (options) {\n            return geneticAlgorithmConstructor(\n                settingWithDefaults(options,\n                    settingWithDefaults(this.config(), settings)\n                )\n            )\n        }\n    }\n}\n","import GeneticAlgorithmConstructor, { GeneticAlgorithmConfig, ScoredPhenotype } from '../geneticalgorithm/geneticalgorithm';\nimport { handlePlayerEffect, playerActions, setSelected } from '../utils/playGame';\nimport Chance from 'chance';\nimport { MonsterTarget, Play } from '../utils/types';\nimport { previousState } from '../utils/data';\nimport prettyjson from 'prettyjson';\nimport { Seq } from 'immutable';\nimport { rangeArr } from '../utils/zFunDump';\n\nexport type TinkererOptions = typeof defaultTinkererOptions & { turns?: number };\n\nexport const defaultTinkererOptions = {\n  playerSeed: \"Miau\",\n  weights: { monster: 0.70, player: 0.125, turn: 0.1, stamina: 0.075 },\n  debug: false,\n};\n\nexport const gameRender = (results: ScoredPhenotype<Play>[]): string => {\n  const best: ScoredPhenotype<Play> = Seq(results).maxBy(a => a.score)!!;\n  const lastState = previousState(best.phenotype);\n  return `BEST BY ${best.score} in ${best.phenotype.states.length - 1} turns\\n` +\n    prettyjson.render([\n      lastState.lastAttacks.map(({ origin, display, phase }) => [origin === 'Player' ? 'Player' : `${best.phenotype.enemies[origin]!!.lore.name} [${origin}]`, display, phase]),\n      Seq(best.phenotype.enemies).zip(Seq(lastState.enemies)).flatMap(([enemy, stats], idx) => [`[${idx}] ${enemy.lore.name}`, stats]).toArray(),\n      lastState.player,\n    ]);\n}\n\nexport default function tinkerer(play: Play, iter: number, optionsOverride?: Partial<TinkererOptions>): ScoredPhenotype<Play>[] {\n  const options: TinkererOptions = { ...defaultTinkererOptions, ...optionsOverride };\n  const range = rangeArr(iter);\n  const rand = new Chance(options.playerSeed);\n  const config: GeneticAlgorithmConfig<Play> = {\n    mutationFunction: (oldPlay) => {\n      const latestState = previousState(oldPlay);\n      const monsterHealth = latestState.enemies.reduce((acc, monster) => acc + monster.hp.current, 0);\n      const playerHealth = latestState.player.hp.current;\n      if (playerHealth === 0 || monsterHealth === 0) {\n        return oldPlay;\n      }\n      let newPlay = oldPlay;\n      while (rand.d6() === 6 || (previousState(newPlay).enemies[previousState(newPlay).target]?.hp ?? 0) <= 0) {\n        newPlay = setSelected(newPlay, rand.natural({ min: 0, max: previousState(newPlay).enemies.length - 1 }) as MonsterTarget);\n      }\n      const latest = previousState(newPlay);\n      const actions = playerActions(play.player, latest.inventory);\n      const unavailable = actions.map((a, idx) => [a, idx] as const).filter(([a, _]) => a.stamina > latest.player.stamina.current).map(([_, idx]) => idx);\n      newPlay = handlePlayerEffect(\n        newPlay,\n        rand.natural({ min: 0, max: actions.length - 1, exclude: unavailable })\n      );\n      return newPlay;\n    },\n    fitnessFunction: (play) => {\n      const latestState = previousState(play);\n      const monsterHealth = latestState.enemies.reduce((acc, monster) => acc + monster.hp.current, 0);\n      const playerHealth = latestState.player.hp.current;\n      const playerStamina = latestState.player.stamina.current;\n      const startPlayerHealth = play.states[0].player.hp.max;\n      const startPlayerStamina = play.states[0].player.stamina.max;\n      const startMonsterHealth = play.states[0].enemies.reduce((acc, monster) => acc + monster.hp.current, 0);\n\n      const monsterKillingFitness = ((startMonsterHealth - monsterHealth) / startMonsterHealth);\n      const playerAlivenessFitness = (playerHealth / startPlayerHealth);\n      const killSpeedFitness = (play.turns - play.states.length) / play.turns;\n      const staminaFitness = (playerStamina / startPlayerStamina);\n\n      const fitness = (monsterKillingFitness * options.weights.monster) + (playerAlivenessFitness * options.weights.player) + (killSpeedFitness * options.weights.turn) + (staminaFitness * options.weights.stamina);\n      if (options.debug) {\n        console.log(`MH: ${monsterHealth} | PH: ${playerHealth} | TR: ${play.states.length}\\nFitness: ${fitness} | MF: ${monsterKillingFitness} | PF: ${playerAlivenessFitness} | SF: ${staminaFitness} | TF: ${killSpeedFitness}\\nWeights: ${JSON.stringify(options.weights)}`);\n      }\n      return fitness;\n    },\n    population: range.map((_) => play),\n    populationSize: iter,\n  }\n\n  const turns = optionsOverride?.turns ? optionsOverride?.turns : play.turns;\n  let gen = new GeneticAlgorithmConstructor<Play>(config);\n  for (let i = 0; i < turns; i++) {\n    gen = gen.evolve();\n  }\n  return gen.scoredPopulation();\n}\n","import React from \"react\";\nimport { Card, Button, OverlayTrigger, Popover } from \"react-bootstrap\";\nimport { Enemy, Effect, EnemyStats } from \"../utils/types\";\nimport { Seq } from \"immutable\";\n\nconst skillPercents = (effects: Effect[]) =>\n  Seq(effects).countBy((e) => e.display).toArray().map(([display, v], idx) => {\n    const { range, priority, tooltip } = effects.find(a => a.display === display)!!;\n    return <OverlayTrigger\n      key={idx}\n      placement=\"right\"\n      delay={{ show: 100, hide: 250 }}\n      overlay={<Popover>\n        <Popover.Header as=\"h3\">{display}</Popover.Header>\n        <Popover.Body>\n          {tooltip}<br />⏱:{priority}<br />🏹:{range.length === 5 ? 'Any' : range.length === 0 ? 'None' : range.map(a => a + 1).join(\", \")}\n        </Popover.Body>\n      </Popover>}\n    ><>[{(v / effects.length * 100).toFixed(2)}%] {display}<br key={idx} /></>\n    </OverlayTrigger>\n  });\n\nconst EnemyCard: React.FC<{\n  enemy: Enemy;\n  enemyStats: EnemyStats;\n  latestAttack: string | undefined;\n  isSelected?: boolean;\n  onSelect: () => void;\n  canAct: boolean;\n  hotkey: string;\n}> = ({ enemy, enemyStats, isSelected, onSelect, latestAttack, canAct, hotkey }) => (\n  <Card bg={isSelected ? \"info\" : undefined}>\n    <Card.Body>\n      <Card.Title>{enemy.lore.name} {enemyStats.hp.current > 0 ? \"\" : (<b>💀DEAD💀</b>)}</Card.Title>\n      <Card.Text>❤:{enemyStats.hp.current} 🏹:{enemyStats.distance + 1}</Card.Text>\n      <Card.Text>Attack {enemyStats.attack.current}<br />Defence {enemyStats.defence.current}<br />Speed {enemyStats.speed.current}</Card.Text>\n      {enemyStats.status.bleed.turns > 0 && ` ${enemyStats.status.bleed.turns} 🩸`}\n      {latestAttack && (<Card.Text>Latest attack: {latestAttack}</Card.Text>)}\n      <Card.Text>\n        Next attack prediction:\n        <br />\n        {skillPercents(enemy.rolls[enemyStats.distance].map((idx) => enemy.effects[idx]))}\n        <br />\n      </Card.Text>\n      {canAct && (<Button disabled={isSelected} onClick={onSelect}>[<i>{hotkey.toUpperCase()}</i>] Select</Button>)}\n    </Card.Body>\n  </Card>\n);\n\nexport default EnemyCard;\n","import React from \"react\";\nimport { Card, Button, Stack, ToggleButton, ButtonGroup, Popover, OverlayTrigger } from \"react-bootstrap\";\nimport { DisabledSkills, InventoryStats, Player, PlayerStats, safeEntries } from \"../utils/types\";\nimport { Set } from 'immutable';\nimport { clamp } from \"../utils/zFunDump\";\nimport { playerActions } from \"../utils/playGame\";\n\nconst PlayerCard: React.FC<{\n  selectedButtons: Set<string>,\n  player: Player;\n  playerStats: PlayerStats;\n  inventoryStats: InventoryStats;\n  canAct: boolean;\n  lastAction: string | undefined;\n  onClickEffect: (index: number) => void;\n  disabledSkills: DisabledSkills;\n  setDisabledSkills: (skills: DisabledSkills) => void;\n}> = ({ selectedButtons, player, playerStats, inventoryStats, onClickEffect, canAct, lastAction, disabledSkills, setDisabledSkills, }) => {\n  const passives = safeEntries(player.build)\n    .map(([k, e]) => [k, e, [...(e.bot ?? []), ...(e.eot ?? [])]] as const);\n\n  const hasPassives = passives.reduce((acc, [k, e, passives]) => passives.length > 0, false);\n  return <Card>\n    <Card.Body>\n      <Card.Title>{player.lore.name}{playerStats.hp.current > 0 ? \"\" : (<b> 💀DEAD💀 </b>)}</Card.Title>\n      <Card.Subtitle className=\"mb-2 text-muted\">\n        {player.build.class.display}\n      </Card.Subtitle>\n      <Card.Text>Attack {playerStats.attack.current} | Defence {playerStats.defence.current} | Speed {playerStats.speed.current}</Card.Text>\n      <Card.Text>{playerStats.hp.current}/{playerStats.hp.max} ❤</Card.Text>\n      <Card.Text>{playerStats.stamina.current}/{playerStats.stamina.max} 💪 ({playerStats.staminaPerTurn.current >= 0 && \"+\"}{playerStats.staminaPerTurn.current})</Card.Text>\n      {playerStats.status.bleed.turns > 0 && <Card.Text>` ${playerStats.status.bleed.turns} 🩸`</Card.Text>}\n      {lastAction && (<Card.Text>Last action: {lastAction}</Card.Text>)}\n    </Card.Body>\n    {canAct && hasPassives && (<>\n      <b>Passives</b>\n      <ButtonGroup>\n        {passives\n          .map(([k, e, passives], idx) => passives.length > 0 && (<OverlayTrigger\n            key={idx}\n            placement=\"right\"\n            delay={{ show: 100, hide: 250 }}\n            overlay={<Popover>\n              <Popover.Header as=\"h3\">{e.display}</Popover.Header>\n              <Popover.Body>\n                {e.tooltip}\n              </Popover.Body>\n            </Popover>}\n          >\n            <ToggleButton\n              checked={!Set(disabledSkills).has(k)}\n              value={k}\n              id={`passive-skill-${k}`}\n              type=\"checkbox\"\n              variant=\"outline-primary\"\n              onChange={(event) => setDisabledSkills(\n                event.currentTarget.checked\n                  ? Set(disabledSkills).delete(k).toArray()\n                  : Set(disabledSkills).add(k).toArray())}>\n              {e.display}\n            </ToggleButton>\n          </OverlayTrigger>\n          ))}\n      </ButtonGroup>\n    </>)}\n    {canAct && (<Card.Body>\n      <Stack direction=\"horizontal\" gap={2}>\n        {playerActions(player, inventoryStats)\n          .map((e, idx) => (<OverlayTrigger\n            key={e.display}\n            placement=\"top\"\n            delay={{ show: 100, hide: 250 }}\n            overlay={<Popover>\n              <Popover.Header as=\"h3\">{e.display}</Popover.Header>\n              <Popover.Body>\n                {e.tooltip}\n              </Popover.Body>\n            </Popover>}\n          >\n            <div>\n              <Button\n                active={selectedButtons.has(e.display)}\n                disabled={playerStats.stamina.current < e.stamina}\n                onClick={(_) => onClickEffect(idx)}\n              >\n                [<i>{idx + 1}</i>] <b>{e.display}</b>\n              </Button>\n              <br />\n              <Card.Text>💪:{e.stamina} ⏱:{clamp(e.priority - playerStats.speed.current, 0, 4)}<br />🏹:{e.range.length === 5 ? 'Any' : e.range.map(a => a + 1).join(\", \")}</Card.Text>\n            </div>\n          </OverlayTrigger>\n          ))}\n      </Stack>\n    </Card.Body>)}\n  </Card>\n}\n\nexport default PlayerCard;\n","import { Container, Row, Col, Card, Modal, ButtonGroup } from \"react-bootstrap\";\n\nimport { DisabledSkills, MonsterTarget, Play } from \"../utils/types\";\n\nimport EnemyCard from \"./Enemy\";\nimport PlayerCard from \"./Player\";\nimport usePressedKeys from \"../hooks/usePressedKeys\";\nimport { playerActions } from \"../utils/playGame\";\nimport { Seq, Set } from \"immutable\";\nimport { previousState } from \"../utils/data\";\nimport { Button } from \"react-bootstrap\";\nimport saveAs from 'file-saver';\nimport { useCallback, useEffect, useState } from \"react\";\nimport globals, { updateGlobals } from \"src/utils/modding\";\nimport { useForceRerender } from \"src/hooks/useForceRerender\";\n\nexport type GameProps = {\n  game: Play;\n  setSelected: (target: MonsterTarget) => void;\n  setDisabledSkills: (disabled: DisabledSkills) => void;\n  handlePlayerEffect: (index: number) => void,\n  solveGame: (iterations: number) => void,\n  hint: (iterations: number) => void,\n  timeTravel: { undo: () => void; redo: (() => void) | undefined } | undefined,\n  onMenu: () => void,\n};\n\nconst monsterHotkeys = [\"q\", \"w\", \"e\", \"r\", \"t\", \"y\"];\n\nconst Game = ({ handlePlayerEffect, setSelected, setDisabledSkills, game, solveGame, timeTravel, hint, onMenu }: GameProps): JSX.Element => {\n  const { player, enemies } = game;\n  const { player: playerStats, enemies: enemiesStats, target, lastAttacks, disabledSkills, inventory: inventoryStats } = previousState(game);\n  const [isLogShown, setShowLog] = useState(false);\n  const forceUpdate = useForceRerender();\n\n  useEffect(() => {\n    if (globals().debug) {\n      updateGlobals({ ingame: { game: game, forceUpdate } });\n    } else {\n      updateGlobals({ ingame: undefined });\n    }\n    return () => {\n      updateGlobals({ ingame: undefined });\n    }\n  }, [game, forceUpdate]);\n\n  const handleCloseLog = () => setShowLog(false);\n  const handleShowLog = () => setShowLog(true);\n\n  const playerSkills = playerActions(player, inventoryStats);\n  const monsterHealth = enemiesStats.reduce((acc, m) => m.hp.current + acc, 0);\n  const isPlayerAlive = playerStats.hp.current > 0;\n  const areMonstersAlive = monsterHealth > 0;\n  const endGame = game.states.length < game.turns;\n  const canAct = isPlayerAlive && areMonstersAlive && endGame;\n\n  const pressed = usePressedKeys((key) => {\n    if (!canAct) return;\n    const valNum = parseInt(key);\n    if (valNum > 0 && valNum <= playerSkills.length) {\n      const hasStamina = playerSkills[valNum - 1].stamina <= playerStats.stamina.current;\n      if (!hasStamina) return;\n      handlePlayerEffect(valNum - 1);\n    }\n\n    if (key === \"Escape\") {\n      onMenu();\n    }\n    if (key === \"h\") {\n      hint(100);\n    }\n\n    if (key === \"l\") {\n      setShowLog(!isLogShown);\n    }\n\n    if (key === \"s\") {\n      save();\n    }\n\n    if (key === \"a\" && game.states.length > 1 && timeTravel) {\n      timeTravel.undo();\n    }\n    if (key === \"d\" && timeTravel && timeTravel.redo != null) {\n      timeTravel.redo();\n    }\n\n    if (key === monsterHotkeys[0] && enemies.length > 0) {\n      setSelected(0 as MonsterTarget);\n    }\n    if (key === monsterHotkeys[1] && enemies.length > 1) {\n      setSelected(1 as MonsterTarget);\n    }\n    if (key === monsterHotkeys[2] && enemies.length > 2) {\n      setSelected(2 as MonsterTarget);\n    }\n    if (key === monsterHotkeys[3] && enemies.length > 3) {\n      setSelected(3 as MonsterTarget);\n    }\n    if (key === monsterHotkeys[4] && enemies.length > 4) {\n      setSelected(4 as MonsterTarget);\n    }\n  });\n\n  const selectedButtons = Set<string>([...pressed].flatMap((key: string) => {\n    const valNum = parseInt(key);\n    if (valNum > 0 && valNum <= playerSkills.length) {\n      return [playerSkills[valNum - 1].display];\n    } else {\n      return [];\n    }\n  }));\n\n  const save = useCallback(() => {\n    const blob = new Blob([JSON.stringify(game)], { type: \"application/json;charset=utf-8\" });\n    saveAs(blob, `buildmancer-${Date.now()}.json`);\n  }, [game]);\n\n  return (\n    <>\n      <Container fluid>\n        <Row className=\"justify-content-center align-items-flex-start\">\n          <Col sm={12} md={8}>\n            <Button onClick={onMenu}>[<i>Esc</i>] MAIN MENU</Button>\n            <Card.Title>\n              {!isPlayerAlive ? (<b>❌❌DEFEAT❌❌</b>) : !areMonstersAlive ? (<b>🎉🎉VICTORY🎉🎉</b>) : \"\"} Turn {game.states.length} out of {game.turns}\n            </Card.Title>\n            <PlayerCard\n              player={player}\n              playerStats={playerStats}\n              inventoryStats={inventoryStats}\n              disabledSkills={disabledSkills}\n              setDisabledSkills={setDisabledSkills}\n              onClickEffect={(idx) => handlePlayerEffect(idx)}\n              selectedButtons={selectedButtons}\n              lastAction={lastAttacks.filter(a => a.origin === 'Player' && a.phase === 'MAIN').map(a => `${a.display}`).join(\" -> \") ?? undefined}\n              canAct={canAct} />\n            {timeTravel != null && (<Row>\n              <ButtonGroup>\n                {game.states.length > 1 && (<Button onClick={(_) => timeTravel.undo()}>[<i>A</i>] Undo ↩</Button>)}\n                {timeTravel.redo && (<Button onClick={(_) => timeTravel.redo!!()}>[<i>D</i>] Redo ↪</Button>)}\n              </ButtonGroup>\n            </Row>)}\n            <Row>\n              <ButtonGroup>\n                <Button onClick={(_) => hint(100)}><i>[H]</i> Hint</Button>\n              </ButtonGroup>\n            </Row>\n            <Row>\n              {Seq(enemies).zip(Seq(enemiesStats)).map(([enemy, stats], idx) => (\n                <Col key={idx} xs={6} md={4}>\n                  <EnemyCard\n                    key={idx}\n                    enemyStats={stats}\n                    enemy={enemy}\n                    canAct={canAct}\n                    latestAttack={Seq(lastAttacks).filter(({ origin, phase }) => origin === idx && phase === 'MAIN').map(a => `${a.display}`).join(\" -> \") ?? undefined}\n                    isSelected={idx === target}\n                    onSelect={() => setSelected(idx as MonsterTarget)}\n                    hotkey={monsterHotkeys[idx]}\n                  />\n                </Col>\n              ))}\n            </Row>\n            <Card.Title>\n              Debug\n            </Card.Title>\n            <Row>\n              <ButtonGroup>\n                <Button onClick={handleShowLog}>[<i>L</i>] Log 🗒</Button>\n                <Button onClick={save}>[<i>S</i>] Dump to file 📂</Button>\n              </ButtonGroup>\n            </Row>\n            <Card.Title>\n              Cheats\n            </Card.Title>\n            <Row>\n              <ButtonGroup>\n                <Button onClick={(_) => solveGame(100)}>Solve ⌛</Button>\n                <Button onClick={(_) => solveGame(1000)}>Solve thoroughly ⌛⌛⌛</Button>\n              </ButtonGroup>\n            </Row>\n          </Col>\n        </Row>\n      </Container>\n      <Modal show={isLogShown} onHide={handleCloseLog} scrollable={true} centered={true}>\n        <Modal.Header closeButton>\n          <Modal.Title>Game Log</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          {game.states.map((s, idx) => (\n            <div key={idx}>\n              <b>Turn {idx}</b><br />\n              Player: {JSON.stringify(s.player, null, 2)}<br />\n              Enemies: {JSON.stringify(s.enemies, null, 2)}<br />\n              Inventory?: {JSON.stringify(s.inventory, null, 2)}<br />\n              Target [{s.target}]<br />\n              Bot?: {JSON.stringify(s.bot, null, 2)}<br />\n              Eot?: {JSON.stringify(s.eot, null, 2)}<br />\n              Actions:<br />\n              {s.lastAttacks.map((a, idx) => (<div key={idx}>{\"-->\"} {JSON.stringify(a, null, 2)}<br /></div>))}\n            </div>\n          ))}\n        </Modal.Body>\n        <Modal.Footer>\n          <Button variant=\"primary\" onClick={handleCloseLog}>\n            Close\n          </Button>\n        </Modal.Footer>\n      </Modal >\n    </>\n  );\n};\n\nexport default Game;\n","import React from \"react\";\n\nexport function useForceRerender() {\n  const [value, setValue] = React.useState(false);\n  return () => setValue(!value);\n}\n","import { useEffect, useCallback, useState } from \"react\";\n\nexport default function usePressedKeys(onUp: (e: string) => void): Set<string> {\n\n  const [pressedKeys, updatePressedKeys] = useState(new Set<string>());\n\n  const downHandler = ({ key }: { key: string }) => {\n    updatePressedKeys((set) => new Set([...set, key]));\n  }\n\n  const upHandler = useCallback(({ key }: { key: string }) => {\n    updatePressedKeys((set) => new Set([...set].filter((k) => k !== key)));\n    onUp(key);\n  }, [onUp]);\n\n  useEffect(() => {\n    window.addEventListener(\"keydown\", downHandler);\n    window.addEventListener(\"keyup\", upHandler);\n\n    return () => {\n      window.removeEventListener(\"keydown\", downHandler);\n      window.removeEventListener(\"keyup\", upHandler);\n    };\n  }, [upHandler]);\n\n  return pressedKeys;\n}","import { Seq } from \"immutable\";\nimport React from \"react\";\nimport tinkerer from \"../../tinkerer/tinkerer\";\nimport { previousState } from \"../../utils/data\";\nimport { PlayState, playState, setSelected, setDisabledSkills, handlePlayerEffect } from \"../../utils/playGame\";\nimport { Play, Snapshot } from \"../../utils/types\";\nimport Game from \"../Game\";\n\nconst SingleGame = ({ play, timeTravel, onGameEnd, onMenu }: { play: Play; timeTravel: boolean, onGameEnd: (state: PlayState, play: Play) => void, onMenu: () => void }) => {\n  const [game, setGame] = React.useState<Play>(play);\n  const [redo, setRedo] = React.useState<Snapshot[]>([]);\n\n  React.useEffect(() => {\n    setGame(play);\n  }, [play]);\n\n  React.useEffect(() => {\n    const gameState = playState(game);\n    const hasEnded = gameState !== 'playing';\n    if (hasEnded) {\n      onGameEnd(gameState, game);\n    }\n  }, [game]);\n\n  const timeTravelObj = timeTravel ? {\n    redo: redo.length > 0 ? (() => {\n      const newRedo = [...redo];\n      const latest = newRedo.pop() as Snapshot;\n      setRedo(newRedo);\n      setGame({ ...game, states: [...game.states, latest] });\n    }) : undefined,\n    undo: () => {\n      setRedo([...redo, previousState(game)]);\n      setGame({ ...game, states: [game.states[0], ...game.states.slice(1, -1)] });\n    }\n  } : undefined;\n\n  return (<Game\n    game={game}\n    timeTravel={timeTravelObj}\n    onMenu={onMenu}\n    setSelected={(idx) => { setRedo([]); setGame(setSelected(game, idx)); }}\n    setDisabledSkills={(disabled) => { setRedo([]); setGame(setDisabledSkills(game, disabled)) }}\n    handlePlayerEffect={(idx) => { setRedo([]); setGame(handlePlayerEffect(game, idx)); }}\n    solveGame={(iterations) => setGame(Seq(tinkerer(game, iterations, { turns: game.turns - game.states.length })).maxBy(a => a.score)!!.phenotype)}\n    hint={(iterations) =>\n      setGame({\n        ...game,\n        states: [...game.states, Seq(tinkerer(game, iterations, { turns: game.turns - game.states.length })).maxBy(a => a.score)!!.phenotype.states[game.states.length]]\n      })\n    }\n  />\n  );\n}\n\nexport default SingleGame;\n","import React from \"react\";\nimport { Form, Col, Row, Alert, Button, Container } from \"react-bootstrap\";\nimport { Play } from \"../../utils/types\";\nimport { playSchema } from \"../../utils/typesSchemas\";\n\nconst LoadScreen = ({ onLoad, onMenu }: { onLoad: (g: Play) => void; onMenu: () => void }) => {\n  const [loadError, setLoadError] = React.useState<string | undefined>();\n  const load = (data: string) => {\n    try {\n      const playRaw = JSON.parse(data);\n      try {\n        // FIXME update schema\n        //playSchema.parse(playRaw);\n        onLoad(playRaw as Play);\n      } catch (e) {\n        setLoadError(\"Failed to Load - Invalid Data\");\n      }\n    } catch (e) {\n      setLoadError(\"Failed to Load - Bad Data\");\n    }\n  }\n  const onFormSubmit = (e: any) => {\n    e.preventDefault();\n    if (e.target?.fileData?.files[0] != null) {\n      const reader = new FileReader();\n      reader.onloadend = (ev: ProgressEvent<FileReader>) => {\n        const result = ev.target?.result as string | undefined;\n        if (result != null) {\n          load(result);\n        } else {\n          setLoadError(\"Failed to read file\");\n        }\n      };\n      reader.readAsText(e.target.fileData.files[0])\n    } else if (e.target?.rawData?.value != null && e.target?.rawData?.value != \"\") {\n      load(e.target.rawData.value);\n    }\n  };\n  return <Form onSubmit={onFormSubmit}>\n    <Container fluid>\n      <Col>\n        <Row>\n          {loadError && (<><Alert variant={'danger'}>{loadError}</Alert><br /><br /></>)}\n        </Row>\n        <Row>\n          <Form.Group>\n            <Form.Label>Load File</Form.Label>\n            <Form.Control type=\"file\" name=\"fileData\" accept=\".json\" />\n            <Form.Text muted>Select the file to load</Form.Text>\n          </Form.Group>\n        </Row>\n        <br />\n        <Row>\n          <Form.Group>\n            <Form.Label>Load</Form.Label>\n            <Form.Control name=\"rawData\" as=\"textarea\" rows={3} placeholder=\"Save Data\" />\n            <Form.Text muted>Paste the text of your savegame here</Form.Text>\n          </Form.Group>\n        </Row>\n        <br />\n        <Button variant=\"primary\" type=\"submit\">Load</Button>\n      </Col>\n      <br />\n      <Button onClick={onMenu}>MAIN MENU</Button>\n    </Container>\n  </Form>;\n}\n\nexport default LoadScreen;\n","import \"./App.css\";\n// import { readString } from \"react-papaparse\";\nimport { Snapshot, Play, EnemyStats, Enemy, EnemiesStats, Enemies } from \"./utils/types\";\n\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport PlayerBuilder from \"./components/PlayerBuilder\";\nimport EncounterBuilder from \"./components/EncounterBuilder\";\nimport { makeGameNew, makeGameNextLevel, PlayState } from \"./utils/playGame\";\nimport { dummyEnemy, randomEnemy, randomPlayer } from \"./utils/data\";\nimport { useMachine } from '@xstate/react';\nimport { gameMenuMachine } from \"./stateMachines/menuStateMachine\";\nimport Menu from \"./components/menus/Menu\";\nimport SingleGame from \"./components/menus/SingleGame\";\nimport LoadScreen from \"./components/menus/LoadScreen\";\n\nfunction App() {\n  const [state, send] = useMachine(gameMenuMachine, { devTools: true });\n  const event = state.event;\n  const onMenu = () => {\n    send('MENU');\n  }\n\n  switch (true) {\n    case state.matches('main'):\n      return <Menu\n        title={\"Main Menu\"}\n        states={Object.keys(gameMenuMachine.states.main.on)}\n        onClick={send}\n      />;\n    // QUICK\n    case state.matches({ quick: 'play' }): {\n      const player = randomPlayer();\n      const encounter = randomEnemy();\n      return <SingleGame\n        play={makeGameNew(player[0], player[1], [encounter[0]], [encounter[1]], 50, state.context.singleContext.seed)}\n        onMenu={onMenu}\n        timeTravel={true}\n        onGameEnd={(result, game) => { send(result === 'win' ? 'WIN' : 'LOSE', { result, game }) }}\n      />;\n    }\n    case state.matches({ quick: 'win' }):\n    case state.matches({ quick: 'lose' }):\n      return <Menu\n        title={`${event.result} in ${event.game.states.length - 1} turns`}\n        states={[\"MENU\"]}\n        onClick={send}\n      />;\n    // SINGLE\n    case state.matches({ single: 'player' }):\n      return <PlayerBuilder onSave={(player, playerStats) => { send('PLAYER', { player: [player, playerStats] }); }} />;\n    case state.matches({ single: 'encounter' }):\n      return <EncounterBuilder\n        player={event.player[0]}\n        onSave={(enemies, enemiesStats) => { send('ENCOUNTER', { encounter: [enemies, enemiesStats], player: event.player }) }}\n      />;\n    case state.matches({ single: 'play' }): {\n      return <SingleGame\n        play={makeGameNew(event.player[0], event.player[1], event.encounter[0], event.encounter[1], 50, state.context.singleContext.seed)}\n        onMenu={onMenu}\n        timeTravel={true}\n        onGameEnd={(result, game) => { send(result === 'win' ? 'WIN' : 'LOSE', { result, game }) }}\n      />;\n    }\n    case state.matches({ single: 'win' }):\n    case state.matches({ single: 'lose' }):\n      return <Menu\n        title={`${event.result} in ${event.game.states.length - 1} turns`}\n        states={[\"MENU\"]}\n        onClick={send}\n      />;\n    // TRAINING\n    case state.matches({ training: 'player' }):\n      return <PlayerBuilder onSave={(player, playerStats) => { send('PLAYER', { player: [player, playerStats] }); }} />;\n    case state.matches({ training: 'play' }): {\n      const player = randomPlayer();\n      const encounter = dummyEnemy();\n      return <SingleGame\n        play={makeGameNew(player[0], player[1], [encounter[0]], [encounter[1]], 50, state.context.singleContext.seed)}\n        onMenu={onMenu}\n        timeTravel={true}\n        onGameEnd={(result, game) => { send(result === 'win' ? 'WIN' : 'LOSE', { result, game }) }}\n      />;\n    }\n    case state.matches({ training: 'win' }):\n    case state.matches({ training: 'lose' }):\n      return <Menu\n        title={`You have dealt a lot of damage! Well done 💯`}\n        states={[\"MENU\"]}\n        onClick={send}\n      />;\n    // ARCADE\n    case state.matches({ arcade: 'player' }): {\n      const encounter = randomEnemy();\n      return <PlayerBuilder onSave={(player, playerStats) => { send('PLAYER', { game: makeGameNew(player, playerStats, [encounter[0]], [encounter[1]], 50, state.context.survivalContext.seed) }); }} />;\n    }\n    case state.matches({ arcade: 'play' }): {\n      return <SingleGame\n        play={event.game}\n        timeTravel={false}\n        onMenu={onMenu}\n        onGameEnd={(result: PlayState, game: Play) => {\n          let encounter = [[], []] as [Enemy[], EnemyStats[]];\n          if (state.context.arcadeContext.victories >= 0) {\n            const otherEnemy = randomEnemy();\n            encounter = [[...encounter[0], otherEnemy[0]], [...encounter[1], otherEnemy[1]]];\n          }\n          if (state.context.arcadeContext.victories >= 2) {\n            const otherEnemy = randomEnemy();\n            encounter = [[...encounter[0], otherEnemy[0]], [...encounter[1], otherEnemy[1]]];\n          }\n          if (state.context.arcadeContext.victories >= 5) {\n            const otherEnemy = randomEnemy();\n            encounter = [[...encounter[0], otherEnemy[0]], [...encounter[1], otherEnemy[1]]];\n          }\n          const firstState: Snapshot = game.states[0];\n          send(result === 'win' ? 'WIN' : 'LOSE', { result, game: makeGameNextLevel(game.player, firstState.player, encounter[0] as Enemies, encounter[1] as EnemiesStats, {}, 50, state.context.survivalContext.seed) });\n        }}\n      />;\n    }\n    case state.matches({ arcade: 'victory' }): {\n      return <Menu\n        title={`🎉🎉VICTORY!🎉🎉 Final score: ${state.context.arcadeContext.score}`}\n        states={[\"MENU\"]}\n        onClick={send}\n      />;\n    }\n    case state.matches({ arcade: 'defeat' }): {\n      return <Menu\n        title={`Failed after ${state.context.arcadeContext.victories} victories`}\n        states={[\"MENU\"]}\n        onClick={send}\n      />;\n    }\n    // SURVIVAL\n    case state.matches({ survival: 'player' }): {\n      const encounter = randomEnemy();\n      return <PlayerBuilder onSave={(player, playerStats) => { send('PLAYER', { game: makeGameNew(player, playerStats, [encounter[0]], [encounter[1]], 50, state.context.survivalContext.seed) }); }} />;\n    }\n    case state.matches({ survival: 'play' }): {\n      return <SingleGame\n        play={event.game}\n        onMenu={onMenu}\n        timeTravel={false}\n        onGameEnd={(result, game) => {\n          const encounter = randomEnemy();\n          const lastState: Snapshot = game.states[event.game.states.length - 1];\n          send(result === 'win' ? 'WIN' : 'LOSE', { result, game: makeGameNextLevel(game.player, lastState.player, [encounter[0]], [encounter[1]], lastState.inventory, 50, state.context.survivalContext.seed) });\n        }}\n      />;\n    }\n    case state.matches({ survival: 'defeat' }): {\n      return <Menu\n        title={`Completed after ${state.context.survivalContext.victories} victories`}\n        states={[\"MENU\"]}\n        onClick={send}\n      />;\n    }\n    // LOAD\n    case state.matches({ load: 'load' }): {\n      return <LoadScreen\n        onLoad={(game) => send('LOAD', { game })}\n        onMenu={onMenu}\n      />;\n    }\n    case state.matches({ load: 'play' }): {\n      return <SingleGame\n        play={event.game}\n        onMenu={onMenu}\n        timeTravel={true}\n        onGameEnd={(result, game) => { send(result === 'win' ? 'WIN' : 'LOSE', { result, game }) }}\n      />;\n    }\n    case state.matches({ load: 'win' }):\n    case state.matches({ load: 'lose' }):\n      return <Menu\n        title={`${event.result} in ${event.game.states.length - 1} turns`}\n        states={[\"MENU\"]}\n        onClick={send}\n      />;\n    default:\n      return <>{JSON.stringify(state.value)}</>;\n  }\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport { createRoot } from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorkerRegistration from './serviceWorkerRegistration';\nimport reportWebVitals from './reportWebVitals';\n\nconst container = document.getElementById('root');\nconst root = createRoot(container!);\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://cra.link/PWA\nserviceWorkerRegistration.register();\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","import { Opaque } from \"type-fest\";\nimport { allRanges, enemies, makeStat } from \"./data\";\nimport { updateGlobals } from \"./modding\";\nimport { Build, callEffectFun, Effect, effectFunCall, Enemies, EnemiesStats, Enemy, EnemyStats, FunIndex, MonsterTarget, Play, PlayerStats, Snapshot, Status, Target } from \"./types\";\nimport { clamp, pipe } from \"./zFunDump\";\n\n// #region Effect funs\n\nexport function extractFunction({ effects }: Effect): ReduceFun {\n  return (origin, play, startState) => effects.reduce((acc, { index, parameters }) =>\n    callEffectFun(effectFunRepo, index, parameters)(origin, ...acc), [play, startState]);\n}\n\nconst effectFun = <T>(fun: ParametrizedFun<T>): EffectFun<T> =>\n  ((params) => (origin, play, oldState) => fun(params)(origin, play, oldState)) as EffectFun<T>;\n\nconst applyPoison = (play: Play, currentState: Snapshot, { target, turns }: ReduceFunctionT['Reduce:PoisonBOT']) =>\n  pipe(\n    target === 'Player'\n      ? actions.changeStatPlayer(currentState, ({ hp }) => ({ hp: { ...hp, current: Math.max(0, hp.current - 1) } }))\n      : actions.changeStatMonster(currentState, currentState.target, ({ hp }) => ({ hp: { ...hp, current: Math.max(0, hp.current - 1) } })),\n    (newState) =>\n      turns > 0\n        ? actions.addBotEffect(newState, 'Player', { display: `Poison ${target === 'Player' ? 'Player' : play.enemies[target]!!.lore.name + \"[\" + (target + 1)} + \"]\"`, tooltip: '', range: allRanges, priority: 4, effects: [effectFunCall(['Reduce:PoisonBOT', { target: target, turns: turns - 1 }])] })\n        : newState\n  )\n\ntype SystemFunctionT = {\n  'Utility:Cleanup': undefined;\n  'Debug:GGWP': undefined;\n  'Debug:Sudoku': undefined;\n}\ntype BasicFunctionT = {\n  'Basic:Rest': undefined;\n  'Basic:Move': { amount: number };\n  'Basic:Attack': { amount: number };\n  'Basic:Stamina': { amount: number };\n  'Basic:HP': { amount: number };\n}\nexport type EffectTarget = 'Player' | 'Monster';\ntype StatusFunctionT = {\n  'Effect:Poison': { target: EffectTarget; turns: number };\n  'Effect:Dodge': undefined;\n  'Effect:Armor': { amount: number };\n  'Effect:Stun': undefined;\n  'Effect:Bleed': { target: EffectTarget; turns: number };\n  'Effect:Defence': { target: EffectTarget; amount: number };\n  'Effect:Speed': { target: EffectTarget; amount: number };\n  'Effect:Attack': { target: EffectTarget; amount: number };\n}\ntype MonsterFunctionT = {\n  'Monster:Summon': { enemy: number };\n  'Monster:Dead': undefined;\n  'Monster:Attack': { amount: number };\n  'Monster:Move': { amount: number };\n}\ntype ItemFunctionT = {\n  'Wand:MagicBolt': undefined;\n  'BootsOfFlight:EOT': undefined;\n}\ntype ReduceFunctionT = {\n  'Reduce:PoisonBOT': { target: Target; turns: number };\n}\n\nconst engineFunctions = {\n  'Debug:GGWP': effectFun(\n    () => (_, play, currentState) => [play, { ...currentState, enemies: currentState.enemies.map(m => ({ ...m, hp: { ...m.hp, current: 0 } })) as EnemiesStats }]\n  ),\n  'Debug:Sudoku': effectFun(\n    () => (_, play, currentState) => [play, { ...currentState, player: { ...currentState.player, hp: { ...currentState.player.hp, current: 0 } } }]\n  ),\n  'Utility:Cleanup': effectFun(\n    () => (_origin, play, currentState) => [play,\n      pipe(\n        actions.changeStatusPlayer(currentState, (o) => ({ ...o, armor: { amount: 0 }, bleed: { turns: Math.max(o.bleed.turns - 1, 0) }, dodge: { active: false }, stun: { active: false } })),\n        (newState) =>\n          newState.enemies.reduce((acc, v, idx) => actions.changeStatusMonster(acc, idx as MonsterTarget, (o) => ({ ...o, armor: { amount: 0 }, bleed: { turns: Math.max(o.bleed.turns - 1, 0) }, dodge: { active: false }, stun: { active: false } })), currentState)\n      )\n    ],\n  ),\n}\n\nconst effectFunRepo: EffectFunctionRepository = {\n  ...engineFunctions,\n  // #region BASIC\n  'Basic:Rest': effectFun(\n    () => (_origin, play, currentState) => [play, currentState]\n  ),\n  'Basic:Move': effectFun(\n    ({ amount }) => (_origin, play, currentState) => [play, actions.changeDistance(currentState, currentState.target, amount)]\n  ),\n  'Basic:Attack': effectFun(\n    ({ amount }) => (_origin, play, currentState) => [play, actions.attackMonster(currentState, currentState.target, amount)]\n  ),\n  'Basic:Stamina': effectFun(\n    ({ amount }) => (_origin, play, currentState) => [play, actions.modifyPlayerStamina(currentState, amount)]\n  ),\n  'Basic:HP': effectFun(\n    ({ amount }) => (_origin, play, currentState) => [play, actions.changeStatPlayer(currentState, ({ hp }) => ({ hp: { ...hp, current: clamp(hp.current + amount, 0, hp.max) } }))]\n  ),\n  // #endregion BASIC\n  // #region EFFECTS\n  'Effect:Dodge': effectFun(\n    () => (origin, play, currentState) => [play,\n      origin === 'Player'\n        ? actions.changeStatusPlayer(currentState, (o) => ({ ...o, dodge: { active: true } }))\n        : actions.changeStatusMonster(currentState, currentState.target, (o) => ({ ...o, dodge: { active: true } }))\n    ]\n  ),\n  'Effect:Armor': effectFun(\n    ({ amount }) => (origin, play, currentState) => [play,\n      origin === 'Player'\n        ? actions.changeStatusPlayer(currentState, (o) => ({ ...o, armor: { amount: amount } }))\n        : actions.changeStatusMonster(currentState, currentState.target, (o) => ({ ...o, armor: { amount: amount } }))\n    ]\n  ),\n  'Effect:Stun': effectFun(\n    () => (origin, play, currentState) => [play,\n      origin === 'Player'\n        ? actions.changeStatusMonster(currentState, currentState.target, (o) => ({ ...o, stun: { active: true } }))\n        : actions.changeStatusPlayer(currentState, (o) => ({ ...o, stun: { active: true } }))\n    ]\n  ),\n  'Effect:Bleed': effectFun(\n    ({ target, turns }) => (_, play, currentState) => [play,\n      target !== 'Player'\n        ? actions.changeStatusPlayer(currentState, (o) => ({ ...o, bleed: { turns: turns } }))\n        : actions.changeStatusMonster(currentState, currentState.target, (o) => ({ ...o, bleed: { turns: turns } }))\n    ]\n  ),\n  'Effect:Poison': effectFun(\n    ({ target, turns }) => (_, play, currentState) => [play,\n      pipe(target === 'Player' ? 'Player' as Target : currentState.target, (gameTarget) =>\n        applyPoison(play, currentState, { target: gameTarget, turns })\n      )\n    ],\n  ),\n  'Reduce:PoisonBOT': effectFun(\n    (params) => (_, play, currentState) =>\n      [play, applyPoison(play, currentState, params)],\n  ),\n  'Effect:Attack': effectFun(\n    ({ target, amount }) => (_, play, currentState) => [play,\n      target === 'Player'\n        ? actions.changeStatPlayer(currentState, ({ attack }) => ({ attack: { ...attack, current: Math.min(attack.current + amount, attack.max) } }))\n        : actions.changeStatMonster(currentState, currentState.target, ({ attack }) => ({ attack: { ...attack, current: Math.min(attack.current + amount, attack.max) } }))\n    ]\n  ),\n  'Effect:Speed': effectFun(\n    ({ target, amount }) => (_, play, currentState) => [play,\n      target === 'Player'\n        ? actions.changeStatPlayer(currentState, ({ speed }) => ({ speed: { ...speed, current: Math.min(speed.current + amount, speed.max) } }))\n        : actions.changeStatMonster(currentState, currentState.target, ({ speed }) => ({ speed: { ...speed, current: Math.min(speed.current + amount, speed.max) } }))\n    ]\n  ),\n  'Effect:Defence': effectFun(\n    ({ target, amount }) => (_, play, currentState) => [play,\n      target === 'Player'\n        ? actions.changeStatPlayer(currentState, ({ defence }) => ({ defence: { ...defence, current: Math.min(defence.current + amount, defence.max) } }))\n        : actions.changeStatMonster(currentState, currentState.target, ({ defence }) => ({ defence: { ...defence, current: Math.min(defence.current + amount, defence.max) } }))\n    ]\n  ),\n  // #endregion EFFECTS\n  // #region MONSTERS\n  'Monster:Attack': effectFun(\n    ({ amount }) => (_origin, play, currentState) => [play, actions.attackPlayer(currentState, amount)]\n  ),\n  'Monster:Summon': effectFun(\n    ({ enemy }) => (_origin, play, currentState) => actions.addEnemy(play, currentState, enemies[enemy][0], enemies[enemy][1])\n  ),\n  'Monster:Dead': effectFun(\n    () => (_origin, play, currentState) => [play, currentState]\n  ),\n  'Monster:Move': effectFun(\n    () => (origin, play, currentState) => [play, actions.changeDistance(currentState, origin, -2)]\n  ),\n  // #endregion MONSTERS\n  // #region ITEMS\n  'BootsOfFlight:EOT': effectFun(\n    () => (_, play, currentState) => [play, currentState.enemies.reduce((s, _m, idx) => actions.changeDistance(s, idx as MonsterTarget, 2), currentState)]\n  ),\n  'Wand:MagicBolt': effectFun(\n    () => (_, play, currentState) => {\n      let state = currentState;\n      while (state.player.stamina.current) {\n        state = actions.modifyPlayerStamina(state, -2);\n        state = actions.attackMonster(state, currentState.target, 1)\n      }\n      return [play, state];\n    }\n  ),\n  // #endregion ITEMS\n};\n\nexport type EffectFunctionT = SystemFunctionT & BasicFunctionT & StatusFunctionT & ReduceFunctionT & MonsterFunctionT & ItemFunctionT;\n\nexport type ReduceFun = (origin: Target, play: Play, newState: Snapshot) => [Play, Snapshot];\nexport type ParametrizedFun<T> = (params: T) => ReduceFun;\nexport type EffectFun<T> = Opaque<ParametrizedFun<T>, ParametrizedFun<T>>;\n\nexport type EffectFunctionRepository = { [k in keyof EffectFunctionT]: (params: EffectFunctionT[k]) => ReduceFun };\nexport type EffectFunRepoIndex = keyof EffectFunctionT & FunIndex;\nexport type EffectFunParams<T extends EffectFunRepoIndex> = Parameters<EffectFunctionRepository[T]>[0];\n\n// #endregion\n// #region Modify state\n\nconst updateMonster = (enemies: EnemiesStats, target: Target, override: (stats: EnemyStats) => Partial<EnemyStats>): EnemiesStats =>\n  enemies.map((m, idx) =>\n    (idx === target)\n      ? { ...m, ...override(m) }\n      : m) as EnemiesStats;\n\nconst updatePlayer = (curr: Snapshot, override: (player: PlayerStats) => Partial<PlayerStats>): Snapshot => {\n  return {\n    ...curr,\n    player: { ...curr.player, ...override(curr.player) }\n  };\n}\n\nconst updatePlayerStat = <T extends keyof PlayerStats>(curr: Snapshot, key: T, modify: (player: PlayerStats[T]) => Partial<PlayerStats[T]>): Snapshot => {\n  const player = curr.player;\n  player[key] = {\n    ...player[key],\n    ...modify(player[key])\n  }\n  return {\n    ...curr,\n    player\n  };\n}\n\nconst actions = {\n  attackPlayer,\n  attackMonster,\n  changeStatPlayer: updatePlayer,\n  changeStatMonster: (curr: Snapshot, target: MonsterTarget, f: (stats: EnemyStats) => Partial<EnemyStats>): Snapshot => ({\n    ...curr,\n    enemies: updateMonster(curr.enemies, target, f),\n  }),\n  changeStatusPlayer: (curr: Snapshot, updateStatus: (oldStatus: Status) => Status): Snapshot => ({\n    ...curr,\n    player: { ...curr.player, status: updateStatus(curr.player.status) }\n  }),\n  changeStatusMonster: (curr: Snapshot, target: MonsterTarget, updateStatus: (oldStatus: Status) => Status): Snapshot => ({\n    ...curr,\n    enemies: updateMonster(curr.enemies, target, ({ status }) => ({ status: updateStatus(status) })),\n  }),\n  changeDistance: (curr: Snapshot, origin: Target, amount: number): Snapshot =>\n  ({\n    ...curr,\n    enemies: updateMonster(curr.enemies, origin, ({ distance }) => ({ distance: clamp(distance + amount, 0, 4) as MonsterTarget })),\n  }),\n  removeMonster: (currPlay: Play, currSnap: Snapshot, target: MonsterTarget): [Play, Snapshot] =>\n    [\n      { ...currPlay, enemies: currPlay.enemies.filter((_, idx) => idx === target) as Enemies },\n      { ...currSnap, target: 0, enemies: currSnap.enemies.filter((_, idx) => idx === target) as EnemiesStats }\n    ],\n  modifyPlayerStamina: (\n    curr: Snapshot,\n    amount: number,\n  ): Snapshot =>\n    updatePlayerStat(curr, 'stamina', stamina => ({\n      current: clamp(stamina.current + amount, 0, stamina.max)\n    })),\n  addEotEffect: (\n    curr: Snapshot,\n    origin: Target,\n    effect: Effect,\n  ): Snapshot => ({\n    ...curr,\n    eot: [...(curr.eot ?? []), [origin, effect]],\n  }),\n  addBotEffect: (\n    curr: Snapshot,\n    origin: Target,\n    effect: Effect,\n  ): Snapshot => ({\n    ...curr,\n    bot: [...(curr.eot ?? []), [origin, effect]],\n  }),\n  addEnemy: (\n    play: Play,\n    curr: Snapshot,\n    enemy: Enemy,\n    enemyStats: EnemyStats,\n  ): [Play, Snapshot] => {\n    return play.enemies.length < 5\n      ? [{\n        ...play,\n        enemies: [...play.enemies, enemy] as Enemies,\n      }, {\n        ...curr,\n        enemies: [...curr.enemies, enemyStats] as EnemiesStats,\n      }]\n      : [play, curr];\n  }\n};\n\nfunction attackMonster(curr: Snapshot, target: MonsterTarget, amount: number): Snapshot {\n  const monster = curr.enemies[target]!!;\n  const armor = monster.status.armor.amount;\n  const damage = amount + curr.player.attack.current;\n  const afterDefence = Math.max(damage - monster.defence.current, 0);\n  const afterArmor = Math.max(afterDefence - armor, 0);\n  const armorSpent = armor - (afterDefence - afterArmor);\n  const afterBleed = afterArmor + (monster.status.bleed.turns > 0 ? 1 : 0);\n  return ({\n    ...curr,\n    enemies: updateMonster(curr.enemies, target, ({ status, hp }) => ({\n      hp: { max: hp.max, current: clamp(hp.current - afterBleed, 0, hp.max) },\n      status:\n        { ...status, armor: { amount: armorSpent } }\n    })),\n  });\n}\n\nfunction attackPlayer(curr: Snapshot, amount: number): Snapshot {\n  const armor = curr.player.status.armor.amount;\n  const damage = amount + curr.player.attack.current;\n  const afterDefence = Math.max(damage - curr.player.defence.current, 0);\n  const afterArmor = Math.max(afterDefence - armor, 0);\n  const armorSpent = armor - (afterDefence - afterArmor);\n  const afterBleed = afterArmor + (curr.player.status.bleed.turns > 0 ? 1 : 0);\n  return updatePlayer(curr, ({ hp, status }) => ({\n    hp: { max: hp.max, current: clamp(hp.current - afterBleed, 0, hp.max) },\n    status: { ...status, armor: { amount: status.armor.amount - armorSpent } }\n  }));\n}\n\n// #endregion\n// #region Stat funs\n\nexport type StatsFunIndex = keyof typeof statsRepository;\nexport const statsRepository = {\n  '+Health': (player: PlayerStats, enemies: EnemiesStats): [PlayerStats, EnemiesStats] => [{ ...player, hp: makeStat(player.hp.current + 3) }, enemies],\n  '+StaPerTurn': (player: PlayerStats, enemies: EnemiesStats): [PlayerStats, EnemiesStats] => [{ ...player, staminaPerTurn: makeStat(player.staminaPerTurn.current + 1) }, enemies],\n  '+Stamina': (player: PlayerStats, enemies: EnemiesStats): [PlayerStats, EnemiesStats] => [{ ...player, stamina: makeStat(player.stamina.current + 2) }, enemies],\n  '+Attack': (player: PlayerStats, enemies: EnemiesStats): [PlayerStats, EnemiesStats] => [{ ...player, attack: makeStat(player.attack.current + 1) }, enemies],\n  '+Speed': (player: PlayerStats, enemies: EnemiesStats): [PlayerStats, EnemiesStats] => [{ ...player, speed: makeStat(player.speed.current + 1) }, enemies],\n  '+Defence': (player: PlayerStats, enemies: EnemiesStats): [PlayerStats, EnemiesStats] => [{ ...player, defence: makeStat(player.defence.current + 1) }, enemies],\n\n  '-Health': (player: PlayerStats, enemies: EnemiesStats): [PlayerStats, EnemiesStats] => [{ ...player, hp: makeStat(player.hp.current - 3) }, enemies],\n  '-StaPerTurn': (player: PlayerStats, enemies: EnemiesStats): [PlayerStats, EnemiesStats] => [{ ...player, staminaPerTurn: makeStat(player.staminaPerTurn.current - 1) }, enemies],\n  '-Stamina': (player: PlayerStats, enemies: EnemiesStats): [PlayerStats, EnemiesStats] => [{ ...player, stamina: makeStat(player.stamina.current - 2) }, enemies],\n  '-Attack': (player: PlayerStats, enemies: EnemiesStats): [PlayerStats, EnemiesStats] => [{ ...player, attack: makeStat(player.attack.current - 1) }, enemies],\n  '-Speed': (player: PlayerStats, enemies: EnemiesStats): [PlayerStats, EnemiesStats] => [{ ...player, speed: makeStat(player.speed.current - 1) }, enemies],\n  '-Defence': (player: PlayerStats, enemies: EnemiesStats): [PlayerStats, EnemiesStats] => [{ ...player, defence: makeStat(player.defence.current - 1) }, enemies],\n}\n\n// #endregion\n\nupdateGlobals({ effects: effectFunRepo });\n","import { Enemies, Player, Snapshot, MonsterTarget, Target, InventoryEffect, EnemiesStats, PlayerStats, Play, RNG, StatsFun, Effect, PlayerTarget, effectFunCall, DisabledSkills, safeEntries, EffectPhase, InventoryStats, Item } from \"./types\";\nimport { Seq, Set } from \"immutable\";\nimport { allRanges, previousState } from \"./data\";\nimport { Chance } from \"chance\";\n// @ts-ignore fails on scripts despite having a d.ts file\nimport { toIndexableString } from 'pouchdb-collate';\nimport { extractFunction, statsRepository } from \"./effectRepository\";\nimport { clamp, rangeArr } from \"./zFunDump\";\n\n/**\n * @returns min inclusive, max exclusive rand\n */\nfunction turnDeterministicRng(turns: number, randPerTurn: number, monsterSeed: string | number): RNG {\n  const monsterChance = new Chance(monsterSeed);\n  const monsterRng =\n    rangeArr(turns)\n      .map(_ => rangeArr(randPerTurn)\n        .map(_ => monsterChance.floating({ min: 0, max: 1, fixed: 2 })));\n  return monsterRng as RNG;\n}\n\nexport const turnRng = (play: Play, turn: number): ((min: number, max: number) => number) => {\n  const turnRng = [...play.rng[turn]];\n  return (min: number, max: number) => Math.floor(((max - min) * turnRng.pop()!!) + min);\n}\n\nexport const playerPassives = (player: Player): StatsFun[] =>\n  safeEntries(player.build).flatMap(([_k, s]) => s.passives ?? []).map(i => statsRepository[i]);\n\nexport const playerActions = (player: Player, inventoryStats: InventoryStats): InventoryEffect[] =>\n  safeEntries(player.build)\n    .flatMap(([_k, i]) => (i.effects ?? []))\n    .filter(e => (e.amount ?? 999) > (inventoryStats[e.display]?.used ?? 0));\n\nconst enemiesBotEffects = (enemies: Enemies): [MonsterTarget, Effect][] =>\n  enemies.flatMap((e, idx) => (e.bot ?? []).map(eff => [idx as MonsterTarget, eff] as const))\n    // Sure, typescript\n    .map(a => [...a]);\n\nconst enemiesEotEffects = (enemies: Enemies): [MonsterTarget, Effect][] =>\n  enemies.flatMap((e, idx) => (e.eot ?? []).map(eff => [idx as MonsterTarget, eff] as const))\n    // Sure, typescript\n    .map(a => [...a]);\n\nexport const playerBotEffects = (player: Player, d: DisabledSkills): [PlayerTarget, Effect][] =>\n  safeEntries(player.build).flatMap(([k, s]) => !Set(d).has(k) ? s.bot ?? [] : []).map(a => ['Player', a]);\n\nexport const playerEotEffects = (player: Player, d: DisabledSkills): [PlayerTarget, Effect][] =>\n  safeEntries(player.build).flatMap(([k, s]) => !Set(d).has(k) ? s.eot ?? [] : []).map(a => ['Player', a]);\n\nexport const buildPlayer = (player: Player, playerStats: PlayerStats, enemiesStats: EnemiesStats): [PlayerStats, EnemiesStats] =>\n  playerPassives(player).reduce(([p, e], fun) => fun(p, e), [playerStats, enemiesStats]);\n\nexport function makeGameNew(player: Player, playerStats: PlayerStats, enemies: Enemies, enemiesStats: EnemiesStats, turns: number, seed: number | string, randPerTurn: number = 20): Play {\n  const [playerGameStats, enemyGameStats] = buildPlayer(player, playerStats, enemiesStats);\n  return makeGameNextLevel(player, playerGameStats, enemies, enemyGameStats, {}, turns, seed, randPerTurn);\n}\n\nexport function makeGameNextLevel(player: Player, playerStats: PlayerStats, enemies: Enemies, enemiesStats: EnemiesStats, inventoryStats: InventoryStats, turns: number, seed: number | string, randPerTurn: number = 20): Play {\n  return {\n    player,\n    enemies,\n    states: [{\n      player: playerStats,\n      enemies: enemiesStats,\n      inventory: inventoryStats,\n      target: 0,\n      lastAttacks: [],\n      disabledSkills: []\n    }],\n    rng: turnDeterministicRng(turns, randPerTurn, seed),\n    turns,\n    id: toIndexableString([player, enemies, turns, seed]),\n    seed,\n  };\n}\n\nconst reduceFuns = (funs: [Target, Effect][], p: Play, s: Snapshot, dodgeable: boolean, phase: EffectPhase): [Play, Snapshot] =>\n  Seq(funs)\n    .sortBy(([origin, a]) => {\n      const priorityBonus = origin === 'Player' ? s.player.speed.current : s.enemies[origin]!!.speed.current;\n      return clamp(a.priority - priorityBonus, 0, 4);\n    })\n    .reduce((acc, value) => {\n      const [origin, effect] = value;\n      const [oldPlay, oldState] = acc;\n      const monsterId = origin === 'Player' ? oldState.target : origin;\n      const targetMonster = oldState.enemies[monsterId]!!;\n\n      const isDeadAttackingMonster = origin !== 'Player' && targetMonster.hp.current <= 0;\n      if (isDeadAttackingMonster) {\n        const newState: Snapshot = {\n          ...oldState,\n          lastAttacks: [...oldState.lastAttacks, { origin, display: `💀💀DEAD💀💀 ${effect.display}`, phase }]\n        };\n        return [oldPlay, newState];\n      }\n\n      const isStunnedPlayer = origin === 'Player' && oldState.player.status.stun.active;\n      const isStunnedMonster = origin !== 'Player' && targetMonster.status.stun.active;\n      const isStunned = isStunnedPlayer || isStunnedMonster;\n      if (isStunned) {\n        const newState: Snapshot = {\n          ...oldState,\n          lastAttacks: [...oldState.lastAttacks, { origin, display: `💫💫STUNNED💫💫 ${effect.display}`, phase }]\n        };\n        return [oldPlay, newState];\n      }\n\n\n      const isInRange = Set([...effect.range]).has(targetMonster.distance);\n      if (!isInRange) {\n        const newState: Snapshot = {\n          ...oldState,\n          lastAttacks: [...oldState.lastAttacks, { origin, display: `❌❌WHIFFED❌❌ ${effect.display}`, phase }]\n        };\n        return [oldPlay, newState];\n      }\n\n      const monsterDodged = dodgeable && origin === 'Player' && targetMonster.status.dodge.active;\n      if (monsterDodged) {\n        const newState: Snapshot = {\n          ...oldState,\n          enemies: oldState.enemies.map((e, i) => i === monsterId ? { ...e, status: { ...e.status, dodge: { active: false } } } : e) as EnemiesStats,\n          lastAttacks: [...oldState.lastAttacks, { origin, display: `💨💨DODGED💨💨 ${effect.display}`, phase }]\n        };\n        return [oldPlay, newState];\n      }\n\n      const playerDodged = dodgeable && origin !== 'Player' && oldState.player.status.dodge.active;\n      if (playerDodged) {\n        const newState: Snapshot = {\n          ...oldState,\n          player: { ...oldState.player, status: { ...oldState.player.status, dodge: { active: false } } },\n          lastAttacks: [...oldState.lastAttacks, { origin, display: `💨💨DODGED💨💨 ${effect.display}`, phase }]\n        };\n        return [oldPlay, newState];\n      }\n\n      const [newPlay, newState] = extractFunction(effect)(origin, oldPlay, oldState);\n      const finalState: Snapshot = { ...newState, lastAttacks: [...newState.lastAttacks, { origin, display: effect.display, phase }] };\n      return [newPlay, finalState];\n    }, [p, s]);\n\nconst applyEffectStamina = (amount: number): Effect =>\n  ({ display: `${amount >= 0 ? '+' : ''}${amount} 💪`, tooltip: `Use ${amount} stamina`, effects: [effectFunCall(['Basic:Stamina', { amount }])], range: allRanges, priority: 0 });\n\nconst effectEotCleanup: Effect =\n  ({ display: 'Cleanup', tooltip: 'Cleanup', effects: [effectFunCall('Utility:Cleanup')], range: allRanges, priority: 0 });\n\nconst effectDead: Effect =\n  { display: \"⚰\", tooltip: \"⚰\", priority: 4, effects: [effectFunCall(\"Monster:Dead\")], range: allRanges };\n\nexport const handlePlayerEffect = (play: Play, index: number): Play => {\n\n  const lastTurnState = previousState(play);\n  const usedSkill = playerActions(play.player, lastTurnState.inventory)[index];\n  const bot = lastTurnState.bot ?? [];\n  const eot = lastTurnState.eot ?? [];\n\n  const initialState: Snapshot = {\n    ...lastTurnState,\n    lastAttacks: [],\n    bot: undefined,\n    eot: undefined,\n    inventory: {\n      ...lastTurnState.inventory,\n      [usedSkill.display]: {\n        used: 1 + (lastTurnState.inventory[usedSkill.display]?.used ?? 0)\n      }\n    }\n  };\n\n  // Stamina\n  const [preBotPlay, preBotState] =\n    reduceFuns([['Player', applyEffectStamina(lastTurnState.player.staminaPerTurn.current - usedSkill.stamina)]], play, initialState, false, 'MAIN');\n\n  // BOT\n  // Lingering effects\n  const [postBotPlay, postBotState] = reduceFuns(bot, preBotPlay, preBotState, false, 'BOT');\n  // Player & Monster effects\n  const entitiesBot: [Target, Effect][] = [...playerBotEffects(postBotPlay.player, postBotState.disabledSkills), ...enemiesBotEffects(postBotPlay.enemies)];\n  const [postEntitiesBotPlay, postEntitiesBotState] = reduceFuns(entitiesBot, postBotPlay, postBotState, false, 'BOT');\n\n  // Turn\n  const rand = turnRng(postEntitiesBotPlay, postEntitiesBotPlay.states.length);\n  const turnFunctions: [Target, Effect][] = Seq(postEntitiesBotPlay.enemies).zip(Seq(postEntitiesBotState.enemies))\n    .map(([e, stats], idx) =>\n      [idx as Target,\n      stats.hp.current > 0\n        ? e.effects[e.rolls[stats.distance][rand(0, e.rolls[stats.distance].length)]]\n        : effectDead] as const)\n    .concat([['Player' as Target, usedSkill] as const])\n    .toArray()\n    // Sure, typescript\n    .map(a => [...a]);\n\n  const [newPlay, newState] =\n    reduceFuns(turnFunctions, postEntitiesBotPlay, postEntitiesBotState, true, 'MAIN');\n\n  // EOT\n  // Player & Monster effects\n  const entitiesEot = [...playerEotEffects(newPlay.player, newState.disabledSkills), ...enemiesEotEffects(newPlay.enemies)];\n  const [postPlayerEotPlay, postPlayerEotState] = reduceFuns(entitiesEot, newPlay, newState, false, 'EOT');\n  // Lingering effects\n  const [postEotPlay, postEotState] = reduceFuns(eot, postPlayerEotPlay, postPlayerEotState, false, 'EOT');\n  // Cleanup\n  const [postCleanup, postCleanupState] = reduceFuns([['Player' as Target, effectEotCleanup]], postEotPlay, postEotState, false, 'EOT');\n\n  const endOfTurn: Play = {\n    ...postCleanup,\n    states: [...postCleanup.states, postCleanupState],\n  };\n\n  return endOfTurn;\n};\n\nexport const setSelected = (play: Play, target: MonsterTarget): Play => {\n  play.states[play.states.length - 1].target = target;\n  return {\n    ...play,\n    states: [...play.states],\n  };\n}\n\nexport const setDisabledSkills = (play: Play, disabled: DisabledSkills): Play => {\n  play.states[play.states.length - 1].disabledSkills = disabled;\n  return {\n    ...play,\n    states: [...play.states],\n  };\n}\n\nexport type PlayState = 'win' | 'loss' | 'playing'\n\nexport const playState = (play: Play): PlayState => {\n  const state = play.states[play.states.length - 1];\n  return state.player.hp.current <= 0\n    ? 'loss'\n    : state.enemies.reduce((acc, monster) => acc + monster.hp.current, 0) <= 0\n      ? 'win'\n      : 'playing';\n}\n\nexport const scoreGame = (play: Play): number => {\n  const firstState = play.states[0];\n  const lastState = play.states[play.states.length - 1];\n\n  const turns = play.states.length; // 1-50\n  const hpLoss = Math.max(0, firstState.player.hp.max - lastState.player.hp.current) / firstState.player.hp.max; // 0-1\n  const staminaLoss = Math.max(0, firstState.player.stamina.max - lastState.player.stamina.current) / firstState.player.hp.max; // 0-1\n  const enemies = lastState.enemies.length; // 1-5\n\n  return Math.floor(enemies * ((500 * hpLoss) + (150 * staminaLoss) + (500 - (turns * 10))));\n}\n","export const rangeArr = (max: number, min: number = 0) => {\n  let range = [...Array(max).keys()];\n  if (min >= 0) {\n    range.filter(i => i < min)\n  }\n  return range;\n}\n\nexport const clamp = (num: number, min: number, max: number = Infinity) =>\n  Math.min(Math.max(num, min), max);\n\nexport const pipe = <T, U>(t: T, f: (t: T) => U): U =>\n  f(t)\n\nexport const pipe2 = <T, U, A>(t: T, u: U, f: (t: T, u: U) => A): A =>\n  f(t, u)\n\nexport const pipe3 = <T, U, V, A>(t: T, u: U, v: V, f: (t: T, u: U, v: V) => A): A =>\n  f(t, u, v)","import { EffectFunctionRepository } from \"./effectRepository\";\nimport { BuildRepository, effectFunCall, Enemy, EnemyRepository, EnemyStats, Play } from \"./types\";\n\nexport type Globals = {\n  debug: boolean;\n  trainingEnemy: [Enemy, EnemyStats];\n  build?: BuildRepository;\n  effects?: EffectFunctionRepository;\n  enemies?: EnemyRepository;\n  ingame?: {\n    game: Play;\n    forceUpdate: () => void;\n  }\n};\n\nconst globalsDefault: Globals = {\n  debug: false,\n  trainingEnemy: [{\n    lore: {\n      name: \"🤖 Dummy 🤖\",\n    },\n    effects: [\n      {\n        display: \"Approve of your life choices\",\n        tooltip: \"You're doing great!\",\n        priority: 4,\n        effects: [effectFunCall([\"Monster:Attack\", { amount: 0 }])],\n        range: []\n      },\n    ],\n    rolls: [\n      [0],\n      [0],\n      [0],\n      [0],\n      [0],\n    ]\n  }, {\n    hp: { current: 300, max: 300 },\n    distance: 0,\n    speed: { current: 0, max: 0 },\n    attack: { current: 0, max: 0 },\n    defence: { current: 0, max: 0 },\n    status: {\n      dodge: { active: false },\n      armor: { amount: 0 },\n      bleed: { turns: 0 },\n      stun: { active: false },\n    },\n  }],\n}\n\nexport const globals = (): Globals =>\n  // @ts-ignore\n  globalThis.__buildmancer;\n\nexport const updateGlobals = (p: Partial<Globals>) => {\n  // @ts-ignore\n  globalThis.__buildmancer = ({\n    ...globalsDefault,\n    // @ts-ignore\n    ...(globalThis.__buildmancer ?? {}),\n    ...p,\n  });\n}\n\nupdateGlobals({});\n\nexport default globals;\n","import { Opaque } from \"type-fest\";\nimport { EffectFunParams, EffectFunctionRepository, EffectFunRepoIndex, StatsFunIndex } from \"./effectRepository\";\n\nexport type Tuple<T, N extends number> = N extends N ? number extends N ? T[] : _TupleOf<T, N, []> : never;\ntype _TupleOf<T, N extends number, R extends unknown[]> = R['length'] extends N ? R : _TupleOf<T, N, [T, ...R]>;\n\nexport type Nel<T> = [T, ...T[]];\n\ntype Length<T extends any[]> =\n  T extends { length: infer L } ? L : never;\ntype BuildTuple<L extends number, T extends any[] = []> =\n  T extends { length: L } ? T : BuildTuple<L, [...T, any]>;\nexport type Subtract<A extends number, B extends number> =\n  BuildTuple<A> extends [...(infer U), ...BuildTuple<B>]\n  ? Length<U>\n  : never;\ntype EQ<A, B> =\n  A extends B\n  ? (B extends A ? true : false)\n  : false;\ntype AtTerminus<A extends number, B extends number> =\n  A extends 0\n  ? true\n  : (B extends 0 ? true : false);\ntype LT<A extends number, B extends number> =\n  AtTerminus<A, B> extends true\n  ? EQ<A, B> extends true\n  ? false\n  : (A extends 0 ? true : false)\n  : LT<Subtract<A, 1>, Subtract<B, 1>>;\n\nexport type TupleUpTo<T, N extends number> =\n  EQ<N, 1> extends true ? [T] : TupleUpTo<T, Subtract<N, 1>> | Tuple<T, N>;\n\nexport type UpTo<N extends number> =\n  EQ<N, 0> extends true ? 0 : UpTo<Subtract<N, 1>> | N;\n\nexport interface Stat {\n  max: number,\n  current: UpTo<Stat['max']>,\n}\n\nexport type Status = {\n  dodge: { active: boolean },\n  stun: { active: boolean },\n  armor: { amount: number },\n  bleed: { turns: number }\n};\nexport interface PlayerStats {\n  hp: Stat,\n  stamina: Stat,\n  staminaPerTurn: Stat,\n  speed: Stat,\n  attack: Stat,\n  defence: Stat,\n  status: Status\n};\nexport interface EnemyStats {\n  hp: Stat,\n  speed: Stat,\n  attack: Stat,\n  defence: Stat,\n  distance: UpTo<Subtract<Distances, 1>>,\n  status: Status\n};\nexport type InventoryStats = {\n  [k in Item['display']]: { used: number }\n};\n\nexport type Priorities = 5;\nexport type Distances = 5;\nexport type MonsterCount = 5;\nexport type Staminas = 10;\n\nexport type EffectPhase = 'MAIN' | 'EOT' | 'BOT';\nexport interface EffectSummary {\n  origin: Target;\n  display: string;\n  phase: EffectPhase;\n}\n\nexport type DisabledSkills = (keyof BuildRepository)[];\nexport interface Snapshot {\n  player: PlayerStats;\n  enemies: EnemiesStats;\n  inventory: InventoryStats;\n  target: MonsterTarget;\n  lastAttacks: EffectSummary[];\n  bot?: Nel<[Target, Effect]>;\n  eot?: Nel<[Target, Effect]>;\n  disabledSkills: DisabledSkills;\n};\n\nexport type RNG = Opaque<number[][], 'RNG'>;\n\nexport interface Play {\n  states: Nel<Snapshot>;\n  player: Player;\n  enemies: Enemies,\n  rng: RNG;\n  turns: number;\n  id: string;\n  seed: string | number;\n};\n\ntype ItemOrMonster = string /* TODO all items */ | 'Monster';\nexport type FunIndex = `${ItemOrMonster}:${string}`;\n\nexport type StatsFunRepo = { [key in StatsFunIndex]: StatsFun; }\nexport type StatsFun = (player: PlayerStats, enemies: EnemiesStats) => [PlayerStats, EnemiesStats];\n\nexport type Ranges = UpTo<Subtract<Distances, 1>>[];\n\ninterface EffectFunCallT {\n  index: EffectFunRepoIndex;\n  parameters: EffectFunParams<EffectFunRepoIndex>;\n};\nexport type EffectFunCall = Opaque<EffectFunCallT, EffectFunCallT>;\nexport const effectFunCall = <T extends EffectFunRepoIndex>(t: EffectFunParams<T> extends undefined ? T : [T, EffectFunParams<T>]): EffectFunCall =>\n  (Array.isArray(t) ? { index: t[0], parameters: t[1] } : { index: t, parameters: undefined }) as EffectFunCall;\nexport const callEffectFun = <T extends EffectFunRepoIndex>(repo: EffectFunctionRepository, t: T, p: EffectFunParams<T>) => {\n  const f = repo[t];\n  // @ts-expect-error: index and parameters are enforced to be compatible at construction and the runtime check above ^^^^\n  return f(p);\n}\n\nexport interface Effect {\n  display: string;\n  tooltip: string;\n  effects: Nel<EffectFunCall>;\n  priority: UpTo<Subtract<Priorities, 1>>;\n  range: Ranges;\n};\nexport interface InventoryEffect extends Effect {\n  stamina: UpTo<Subtract<Staminas, 1>>;\n  amount?: number;\n};\n\nexport type MonsterTarget = UpTo<Subtract<MonsterCount, 1>>;\nexport type PlayerTarget = 'Player';\nexport type Target = MonsterTarget | PlayerTarget;\n\nexport interface BuildRepository {\n  debug: Item[];\n  basic: Item[];\n  class: Item[];\n  skill: Item[];\n  weapon: Item[];\n  offhand: Item[];\n  consumable: Item[];\n  armor: Item[];\n  headgear: Item[];\n  footwear: Item[];\n  charm: Item[];\n}\nexport type Build = {\n  [k in keyof BuildRepository]: Item\n};\n\nexport type EnemyInfo = [Enemy, EnemyStats];\nexport type EnemyRepository = EnemyInfo[];\n\nexport interface Item {\n  display: string;\n  tooltip?: string;\n  passives?: StatsFunIndex[];\n  bot?: Nel<Effect>;\n  eot?: Nel<Effect>;\n  effects?: Nel<InventoryEffect>;\n  //[key: string]: any;\n};\n\nexport interface Player {\n  id: string;\n  lore: Record<string, string | number>;\n  build: Build;\n};\n\n// Place in the array for now\ntype EffectIdentity = number;\nexport interface Enemy {\n  lore: Record<string, string | number>;\n  effects: Nel<Effect>;\n  rolls: Tuple<EffectIdentity[], Distances>;\n  bot?: Nel<Effect>;\n  eot?: Nel<Effect>;\n}\n\nexport type Enemies = TupleUpTo<Enemy, MonsterCount>;\nexport type EnemiesStats = TupleUpTo<EnemyStats, MonsterCount>;\n\nexport function safeEntries<T, K extends keyof T>(o: {\n  [s in K]: T[s];\n}): [K, T[K]][] {\n  return Object.entries(o).map(([k, v]) => [k as K, v as T[K]]);\n}\n","import WebSocket from 'ws';\nimport { assign, createMachine, interpret } from 'xstate';\nimport { inspect } from '@xstate/inspect/lib/server.js';\nimport { scoreGame } from '../utils/playGame';\n\nconst isDebug = process && process.env['SMD'] === '1';\n\nif (isDebug) {\n  inspect({\n    server: new WebSocket.Server({\n      port: 8888\n    })\n  });\n}\n\nconst toMenu = {\n  on: {\n    MENU: { target: 'main' },\n  }\n}\n\nconst quick = {\n  initial: 'play',\n  states: {\n    play: {\n      entry: ['reset'],\n      on: {\n        WIN: { target: 'win' },\n        LOSE: { target: 'lose' }\n      }\n    },\n    win: { type: 'final' as const },\n    lose: { type: 'final' as const },\n  },\n  ...toMenu,\n};\n\nconst single = {\n  initial: 'player',\n  states: {\n    player: {\n      entry: ['reset'],\n      on: {\n        PLAYER: { target: 'encounter' }\n      }\n    },\n    encounter: {\n      on: {\n        ENCOUNTER: { target: 'play' }\n      }\n    },\n    play: {\n      on: {\n        WIN: { target: 'win' },\n        LOSE: { target: 'lose' }\n      }\n    },\n    win: { type: 'final' as const },\n    lose: { type: 'final' as const },\n  },\n  ...toMenu,\n};\n\nconst arcade = {\n  initial: 'player',\n  states: {\n    player: {\n      entry: ['reset'],\n      on: {\n        PLAYER: { target: 'play' }\n      }\n    },\n    play: {\n      on: {\n        WIN: [\n          { target: 'victory', cond: 'isFinal' },\n          { target: 'play', actions: ['bumpVictories', 'bumpScore'], internal: true },\n        ],\n        LOSE: { target: 'defeat' }\n      }\n    },\n    victory: {\n      type: 'final' as const,\n    },\n    defeat: {\n      type: 'final' as const,\n    },\n  },\n  ...toMenu,\n};\n\nconst survival = {\n  initial: 'player',\n  states: {\n    player: {\n      entry: ['reset'],\n      on: {\n        PLAYER: { target: 'play' }\n      }\n    },\n    play: {\n      on: {\n        WIN: { target: 'play', actions: ['bumpVictories'] },\n        LOSE: { target: 'defeat' }\n      }\n    },\n    defeat: {\n      type: 'final' as const,\n      on: {\n        // ACK: { target: '#menus.leaderboards' }\n      }\n    },\n  },\n  ...toMenu,\n};\n\nconst puzzle = {\n  initial: 'puzzle',\n  states: {\n    puzzle: {\n      on: {\n        PLAYER: { target: 'player' }\n      }\n    },\n    player: {\n      on: {\n        SELECTED: { target: 'play' }\n      }\n    },\n    play: {\n      on: {\n        COMPLETE: { target: 'complete' },\n      }\n    },\n    complete: {\n      on: {\n        NEXT: { target: 'player' },\n        SELECT: { target: 'puzzle' },\n      }\n    },\n  },\n  ...toMenu,\n};\n\nconst load = {\n  initial: 'load',\n  states: {\n    load: {\n      on: {\n        LOAD: { target: 'play' }\n      }\n    },\n    play: {\n      on: {\n        WIN: { target: 'win' },\n        LOSE: { target: 'lose' }\n      }\n    },\n    win: { type: 'final' as const },\n    lose: { type: 'final' as const },\n  },\n  ...toMenu,\n}\n\nconst training = {\n  initial: 'player',\n  states: {\n    player: {\n      entry: ['reset'],\n      on: {\n        PLAYER: { target: 'play' }\n      }\n    },\n    play: {\n      on: {\n        WIN: { target: 'win' },\n        LOSE: { target: 'lose' }\n      }\n    },\n    win: { type: 'final' as const },\n    lose: { type: 'final' as const },\n  },\n  ...toMenu,\n}\n\nconst makeArcadeContext = () => ({\n  victories: 0,\n  score: 0,\n  seed: Math.random(),\n});\nconst makeSurvivalContext = () => ({\n  victories: 0,\n  seed: Math.random(),\n});\nconst makeSingleContext = () => ({\n  seed: Math.random(),\n});\nconst makeGameContext = () => ({\n  arcadeContext: makeArcadeContext(),\n  survivalContext: makeSurvivalContext(),\n  singleContext: makeSingleContext(),\n});\n\nexport const gameMenuMachine = createMachine({\n  tsTypes: {} as import(\"./menuStateMachine.typegen\").Typegen0,\n  id: 'menus',\n  initial: 'main',\n  context: makeGameContext(),\n  states: {\n    main: {\n      on: {\n        QUICK: { target: 'quick' },\n        SINGLE: { target: 'single' },\n        TRAINING: { target: 'training' },\n        ARCADE: { target: 'arcade' },\n        SURVIVAL: { target: 'survival' },\n        LOAD: { target: 'load' },\n        // PUZZLE: { target: 'puzzle' },\n        // LEADERBOARDS: { target: 'leaderboards' },\n      }\n    },\n    quick: {\n      ...quick,\n    },\n    single: {\n      ...single,\n    },\n    arcade: {\n      ...arcade,\n    },\n    survival: {\n      ...survival,\n    },\n    load: {\n      ...load,\n    },\n    training: {\n      ...training,\n    }\n    // puzzle: {\n    //   ...puzzle,\n    // },\n    // leaderboards: {\n    //   ...toMenu,\n    // }\n  },\n}, {\n  guards: {\n    isFinal: ({ arcadeContext: { victories } }) => victories + 1 >= 7,\n  },\n  actions: {\n    bumpVictories: assign({\n      arcadeContext: ({ arcadeContext }, _event) => ({ ...arcadeContext, victories: arcadeContext.victories + 1, seed: Math.random() }),\n      survivalContext: ({ survivalContext }, _event) => ({ ...survivalContext, victories: survivalContext.victories + 1, seed: Math.random() }),\n    }),\n    bumpScore: assign({\n      arcadeContext: ({ arcadeContext }, { game }) => ({ ...arcadeContext, score: arcadeContext.score + scoreGame(game), seed: Math.random() }),\n    }),\n    reset: assign({\n      survivalContext: (c, e) => makeSurvivalContext(),\n      arcadeContext: (c, e) => makeArcadeContext(),\n      singleContext: (c, e) => makeSingleContext(),\n    }),\n  }\n});\n\nif (isDebug) {\n  interpret(gameMenuMachine, { devTools: true })\n    .onTransition((state) => console.log(state))\n    .start();\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n  // [::1] is the IPv6 localhost address.\n  window.location.hostname === '[::1]' ||\n  // 127.0.0.0/8 are considered localhost for IPv4.\n  window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process && process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n            'worker. To learn more, visit https://cra.link/PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                'tabs for this page are closed. See https://cra.link/PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n"],"sourceRoot":""}