{"version":3,"sources":["utils/playGame.ts","geneticalgorithm/geneticalgorithm.js","tinkerer/tinkerer.ts","tinkerer/tinkererCLI.ts","tinkerer/tinkererTools.ts","utils/data.ts","components/Enemy.tsx","components/Player.tsx","components/Game.tsx","hooks/usePressedKeys.tsx","components/PlayerBuilder.tsx","hooks/useScroll.tsx","components/EncounterBuilder.tsx","App.tsx","serviceWorkerRegistration.ts","reportWebVitals.ts","index.tsx"],"names":["clamp","num","min","max","Math","turnDeterministicRng","turns","randPerTurn","monsterSeed","monsterChance","Chance","Array","keys","map","_","floating","fixed","updateMonster","enemies","target","override","m","idx","playerPassives","player","Object","values","build","flatMap","s","passive","i","statsRepository","playerActions","effects","actions","attackMonster","start","curr","amount","hp","changeDistance","origin","distance","attackPlayer","modifyPlayerStamina","stamina","addEotEffect","effect","eot","addBotEffect","bot","addEnemy","play","enemy","enemyStats","length","playerStats","enemiesStats","seed","reduce","fun","playerGameStats","enemyGameStats","states","lastAttacks","rng","id","toIndexableString","reducePlayerFuns","funs","acc","f","reduceMultiTurnFuns","p","snap","parameters","multiTurnEffectRepository","handlePlayerEffect","index","previousState","usedSkill","playerBot","effectRepository","playerBotEffects","preBotState","staminaPerTurn","postBotPlay","postBotState","postPlayerBotState","rand","turn","turnRng","floor","pop","Seq","zip","e","stats","rolls","effectDead","concat","sortBy","priority","value","oldState","Set","range","has","display","newState","preEotState","playerEot","playerEotEffects","postPlayerEotState","postEotPlay","postEotState","setSelected","geneticAlgorithmConstructor","options","settingWithDefaults","settings","defaults","mutationFunction","crossoverFunction","fitnessFunction","doesABeatBFunction","population","Error","populationSize","phenotype","a","b","undefined","cloneJSON","object","JSON","parse","stringify","mutate","crossover","mate","random","evolve","size","push","populate","otherIndex","temp","randomizePopulationOrder","nextGeneration","competitor","compete","this","best","scored","scoredPopulation","score","bestScore","config","clone","defaultTinkererOptions","playerSeed","weights","monster","debug","gameRender","results","maxBy","lastState","prettyjson","render","lore","name","toArray","tinkerer","iter","optionsOverride","oldPlay","latestState","monsterHealth","newPlay","d6","natural","latest","unavailable","filter","exclude","playerHealth","playerStamina","startPlayerHealth","startPlayerStamina","startMonsterHealth","monsterKillingFitness","playerAlivenessFitness","killSpeedFitness","staminaFitness","fitness","console","log","gen","GeneticAlgorithmConstructor","PouchDb","plugin","pouchFind","paramsRender","params","resolve","basic","class","weapon","skill","offhand","consumable","armor","headgear","footwear","charm","writeToDb","db","pouch","createIndex","fields","Promise","all","r","playerHp","monsterHp","outcome","get","catch","res","_id","hasher","docs","bulkDocs","json","iterations","output","readFileSync","toString","gameOptions","tinker","makeGame","writeFileSync","minimist","process","argv","slice","gameConfig","age","v","startState","chain","randomEnemy","pickone","makeRange","number","allRanges","selfRange","_origin","_play","currentState","_p","lifespan","_m","chain2","randomName","names","rage","EnemyCard","isSelected","onSelect","latestAttack","canAct","Card","bg","Body","Title","Text","countBy","find","toFixed","join","Button","disabled","onClick","PlayerCard","selectedButtons","onClickEffect","lastAction","Subtitle","className","Stack","direction","gap","active","Game","game","solveGame","undo","redo","hint","playerSkills","isPlayerAlive","areMonstersAlive","endGame","pressed","onUp","useState","pressedKeys","updatePressedKeys","downHandler","key","set","upHandler","useCallback","k","useEffect","window","addEventListener","removeEventListener","usePressedKeys","valNum","parseInt","Container","fluid","Row","Col","sm","md","Player","xs","Enemy","first","selects","entries","type","ElementPicker","section","setField","scrollParams","elRef","useRef","current","scrollIntoView","useScroll","behavior","block","scrollTo","scrollRef","Form","Label","ButtonGroup","variant","ref","PlayerBuilder","onSave","React","form","setForm","setLore","displayType","onSubmit","preventDefault","style","marginBottom","field","Navbar","maxHeight","EncounterBuilder","encounter","setEncounter","found","App","status","setStatus","playerBuild","setPlayerBuild","encounterBuild","setGame","setRedo","encounterStats","newRedo","isLocalhost","Boolean","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","onUpdate","onSuccess","error","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById","URL","href","fetch","headers","response","contentType","indexOf","ready","unregister","reload","checkValidServiceWorker","serviceWorkerRegistration"],"mappings":"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A,QACA,QACA,SACA,QACA,SACA,SACA,SACA,SACA,WACA,UACA,UACA,SACA,OACA,QACA,QACA,QACA,MACA,SACA,SACA,OACA,UACA,QACA,UACA,SACA,UACA,QACA,SACA,UACA,UACA,SACA,OACA,QACA,SACA,SACA,WACA,QACA,OACA,UACA,OACA,SACA,SACA,QACA,UACA,SACA,SACA,OACA,QACA,QACA,SACA,QACA,QACA,SACA,SACA,OACA,OACA,SACA,QACA,QACA,UACA,SACA,QACA,UACA,UACA,UACA,WACA,QACA,WACA,QACA,SACA,SACA,OACA,SACA,SACA,QACA,OACA,WACA,SACA,QACA,UACA,SACA,WACA,UACA,SACA,SACA,SACA,QACA,QACA,OACA,OACA,QACA,QACA,WACA,QACA,UACA,SACA,WACA,QACA,OACA,OACA,OACA,SACA,WACA,OACA,OACA,QACA,MACA,SACA,OACA,WACA,QACA,UACA,SACA,MACA,UACA,QACA,SACA,QACA,SACA,QACA,QACA,SACA,QACA,UACA,QACA,QACA,SACA,SACA,OACA,QACA,SACA,SACA,UACA,QACA,QACA,QACA,OACA,QACA,OACA,QACA,UACA,SACA,QACA,QACA,QACA,QACA,SACA,UACA,WACA,QACA,QACA,QACA,UACA,SACA,QACA,SACA,UACA,SACA,QACA,QACA,SACA,QACA,OACA,UACA,QACA,SACA,UACA,SACA,MACA,QACA,OACA,MACA,QACA,YACA,OACA,QACA,QACA,SACA,QACA,QACA,UACA,QACA,SACA,UACA,W,2OC1baE,EAjBV,SAAC,GAAD,IAbkB5O,EAafoB,EAAH,EAAGA,MAAOC,EAAV,EAAUA,WAAYwN,EAAtB,EAAsBA,WAAYC,EAAlC,EAAkCA,SAAUC,EAA5C,EAA4CA,aAAcC,EAA1D,EAA0DA,OAA1D,OACH,cAACC,EAAA,EAAD,CAAMC,GAAIL,EAAa,YAAS1I,EAAhC,SACE,eAAC8I,EAAA,EAAKE,KAAN,WACE,eAACF,EAAA,EAAKG,MAAN,WAAahO,EAAMsH,KAAKC,KAAxB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","file":"static/js/main.249ef99b.chunk.js","sourcesContent":["import { Enemies, Player, Snapshot, MonsterTarget, Target, EnemyStats, InventoryEffect, EnemiesStats, PlayerStats, Play, RNG, EffectFun, StatsFun, MultiTurnEffect, Enemy } from \"./types\";\nimport { Seq } from \"immutable\";\nimport { effectDead, effectRepository, multiTurnEffectRepository, previousState, statsRepository } from \"./data\";\nimport { Chance } from \"chance\";\n// @ts-ignore fails on scripts despite having a d.ts file\nimport { toIndexableString } from 'pouchdb-collate';\n\nconst clamp = (num: number, min: number, max: number) =>\n  Math.min(Math.max(num, min), max);\n\n/**\n * @returns min inclusive, max exclusive rand\n */\nfunction turnDeterministicRng(turns: number, randPerTurn: number, monsterSeed: string | number): RNG {\n  const monsterChance = new Chance(monsterSeed);\n  const monsterRng =\n    [...Array(turns).keys()]\n      .map(_ => [...Array(randPerTurn).keys()]\n        .map(_ => monsterChance.floating({ min: 0, max: 1, fixed: 2 })));\n  return monsterRng as RNG;\n}\n\nexport const turnRng = (play: Play, turn: number) => (min: number, max: number): number => {\n  const turnRng = [...play.rng[turn]];\n  return Math.floor(((max - min) * turnRng.pop()!!) + min);\n}\n\nconst updateMonster = (enemies: EnemiesStats, target: Target, override: (stats: EnemyStats) => object): EnemiesStats =>\n  enemies.map((m, idx) =>\n    (idx === target)\n      ? { ...m, ...override(m) }\n      : m) as EnemiesStats;\n\nexport const playerPassives = (player: Player): StatsFun[] =>\n  Object.values(player.build).flatMap((s) => s.passive ?? []).map(i => statsRepository[i]);\n\nexport const playerActions = (player: Player): InventoryEffect[] =>\n  Object.values(player.build).flatMap((s) => s.effects ?? []);\n\nexport const playerBotEffects = (player: Player): EffectFun[] =>\n  Object.values(player.build).flatMap((s) => s.bot ?? []).map((i) => effectRepository[i]);\n\nexport const playerEotEffects = (player: Player): EffectFun[] =>\n  Object.values(player.build).flatMap((s) => s.eot ?? []).map((i) => effectRepository[i]);\n\nexport const actions = {\n  attackMonster: (start: Snapshot, curr: Snapshot, target: MonsterTarget, amount: number): Snapshot =>\n  ({\n    ...curr,\n    enemies: updateMonster(curr.enemies, target, ({ hp }) => ({ hp: clamp(hp - amount, 0, start.enemies[target]!!/* enforced by UI */.hp) })),\n  }),\n  changeDistance: (curr: Snapshot, origin: Target, amount: number): Snapshot =>\n  ({\n    ...curr,\n    enemies: updateMonster(curr.enemies, origin, ({ distance }) => ({ distance: clamp(distance + amount, 1, 5) })),\n  }),\n\n  attackPlayer: (start: Snapshot, curr: Snapshot, amount: number): Snapshot =>\n  ({\n    ...curr,\n    player: {\n      ...curr.player,\n      hp: clamp(curr.player.hp - amount, 0, start.player.hp)\n    },\n  }),\n  modifyPlayerStamina: (\n    start: Snapshot,\n    curr: Snapshot,\n    amount: number,\n  ): Snapshot =>\n  ({\n    ...curr,\n    player: {\n      ...curr.player,\n      stamina: clamp(curr.player.stamina + amount, 0, start.player.stamina),\n    },\n  }),\n\n  addEotEffect: (\n    curr: Snapshot,\n    effect: MultiTurnEffect,\n  ): Snapshot => ({\n    ...curr,\n    eot: [...(curr.eot ?? []), effect],\n  }),\n  addBotEffect: (\n    curr: Snapshot,\n    effect: MultiTurnEffect,\n  ): Snapshot => ({\n    ...curr,\n    bot: [...(curr.eot ?? []), effect],\n  }),\n\n  addEnemy: (\n    play: Play,\n    curr: Snapshot,\n    enemy: Enemy,\n    enemyStats: EnemyStats,\n  ): [Play, Snapshot] => {\n    return play.enemies.length < 5\n      ? [{\n        ...play,\n        enemies: [...play.enemies, enemy] as Enemies,\n      }, {\n        ...curr,\n        enemies: [...curr.enemies, enemyStats] as EnemiesStats\n      }]\n      : [play, curr];\n  }\n};\n\nexport default function play(player: Player, playerStats: PlayerStats, enemies: Enemies, enemiesStats: EnemiesStats, turns: number, seed: number | string, randPerTurn: number = 20): Play {\n  const [playerGameStats, enemyGameStats] = playerPassives(player).reduce(([p, e], fun) => fun(p, e), [playerStats, enemiesStats] as const);\n  return {\n    player,\n    enemies,\n    states: [{\n      player: playerGameStats,\n      enemies: enemyGameStats,\n      target: 0,\n      lastAttacks: []\n    }],\n    rng: turnDeterministicRng(turns, randPerTurn, seed),\n    turns,\n    id: toIndexableString([player, enemies, turns, seed]),\n    seed,\n  };\n}\n\nconst reducePlayerFuns = (play: Play, funs: EffectFun[], s: Snapshot): Snapshot =>\n  funs.reduce((acc, f) => f('Player', play, acc), s);\n\nconst reduceMultiTurnFuns = (funs: MultiTurnEffect[], p: Play, s: Snapshot): [Play, Snapshot] =>\n  funs.reduce(\n    ([play, snap], { effect, origin, parameters }) =>\n      multiTurnEffectRepository[effect](parameters)(origin, play, snap),\n    [p, s]);\n\nexport const handlePlayerEffect = (play: Play, index: number): Play => {\n  const { enemies, player, bot, eot } = previousState(play);\n  const playerSkills = playerActions(play.player);\n  const usedSkill = playerSkills[index];\n\n  // BOT\n  const playerBot = playerBotEffects(play.player);\n  const preBotState: Snapshot =\n    actions.modifyPlayerStamina(play.states[0], previousState(play), player.staminaPerTurn - usedSkill.stamina);\n  const [postBotPlay, postBotState] = reduceMultiTurnFuns(bot ?? [], play, preBotState);\n  const postPlayerBotState = reducePlayerFuns(postBotPlay, playerBot, postBotState);\n\n  // Turn\n  const rand = turnRng(play, play.states.length - 1);\n  const functions = Seq(play.enemies).zip(Seq(enemies))\n    .map(([e, stats], idx) =>\n      [idx as Target,\n      stats.hp > 0\n        ? e.effects[e.rolls[stats.distance - 1][rand(0, e.rolls[stats.distance - 1].length)]]\n        : effectDead] as const)\n    .concat([['Player' as Target, usedSkill] as const])\n    .sortBy(([_origin, effect]) => effect.priority);\n\n  const [newState, lastAttacks] =\n    functions.reduce((acc, value) => {\n      const [origin, effect] = value;\n      const [oldState, lastAttacks] = acc;\n      const target = origin === 'Player' ? postPlayerBotState.target : origin;\n      const isInRange = new Set([...effect.range]).has(postPlayerBotState.enemies[target]?.distance!!);\n      return isInRange\n        ? [effectRepository[effect.effect](origin, postBotPlay, oldState), [...lastAttacks, [origin, effect.display] as [Target, string]]]\n        : [oldState, [...lastAttacks, [origin, `${effect.display} ❌❌WHIFF❌❌`] as [Target, string]]];\n    }, [postPlayerBotState, [] as [Target, string][]]);\n\n  // EOT\n  const preEotState = { ...newState, lastAttacks };\n  const playerEot = playerEotEffects(play.player);\n  const postPlayerEotState = reducePlayerFuns(postBotPlay, playerEot, preEotState);\n  const [postEotPlay, postEotState] = reduceMultiTurnFuns(eot ?? [], postBotPlay, postPlayerEotState);\n\n  return {\n    ...postEotPlay,\n    states: [...postEotPlay.states, postEotState],\n  };\n};\n\nexport const setSelected = (play: Play, target: MonsterTarget): Play => {\n  play.states[play.states.length - 1].target = target;\n  return {\n    ...play,\n    states: [...play.states],\n  };\n}\n","export default function geneticAlgorithmConstructor(options) {\n\n    function settingDefaults() {\n        return {\n\n            mutationFunction: function (phenotype) { return phenotype },\n\n            crossoverFunction: function (a, b) { return [a, b] },\n\n            fitnessFunction: function (phenotype) { return 0 },\n\n            doesABeatBFunction: undefined,\n\n            population: [],\n            populationSize: 100,\n        }\n    }\n\n    function settingWithDefaults(settings, defaults) {\n        settings = settings || {}\n\n        settings.mutationFunction = settings.mutationFunction || defaults.mutationFunction\n        settings.crossoverFunction = settings.crossoverFunction || defaults.crossoverFunction\n        settings.fitnessFunction = settings.fitnessFunction || defaults.fitnessFunction\n\n        settings.doesABeatBFunction = settings.doesABeatBFunction || defaults.doesABeatBFunction\n\n        settings.population = settings.population || defaults.population\n        if (settings.population.length <= 0) throw Error(\"population must be an array and contain at least 1 phenotypes\")\n\n        settings.populationSize = settings.populationSize || defaults.populationSize\n        if (settings.populationSize <= 0) throw Error(\"populationSize must be greater than 0\")\n\n        return settings\n    }\n\n    var settings = settingWithDefaults(options, settingDefaults())\n\n    function populate() {\n        var size = settings.population.length\n        while (settings.population.length < settings.populationSize) {\n            const rand = Math.floor(Math.random() * size);\n            settings.population.push(\n                mutate(\n                    cloneJSON(settings.population[Math.floor(rand)])\n                )\n            )\n        }\n    }\n\n    function cloneJSON(object) {\n        return JSON.parse(JSON.stringify(object))\n    }\n\n    function mutate(phenotype) {\n        return settings.mutationFunction(cloneJSON(phenotype))\n    }\n\n    function crossover(phenotype) {\n        phenotype = cloneJSON(phenotype)\n        var mate = settings.population[Math.floor(Math.random() * settings.population.length)]\n        mate = cloneJSON(mate)\n        return settings.crossoverFunction(phenotype, mate)[0]\n    }\n\n    function doesABeatB(a, b) {\n        if (settings.doesABeatBFunction) {\n            return settings.doesABeatBFunction(a, b)\n        } else {\n            return settings.fitnessFunction(a) >= settings.fitnessFunction(b)\n        }\n    }\n\n    function compete() {\n        var nextGeneration = []\n\n        for (var p = 0; p < settings.population.length - 1; p += 2) {\n            var phenotype = settings.population[p];\n            var competitor = settings.population[p + 1];\n\n            nextGeneration.push(phenotype)\n            if (doesABeatB(phenotype, competitor)) {\n                if (Math.random() < 0.5) {\n                    nextGeneration.push(mutate(phenotype))\n                } else {\n                    nextGeneration.push(crossover(phenotype))\n                }\n            } else {\n                nextGeneration.push(competitor)\n            }\n        }\n\n        settings.population = nextGeneration;\n    }\n\n\n\n    function randomizePopulationOrder() {\n\n        for (var index = 0; index < settings.population.length; index++) {\n            var otherIndex = Math.floor(Math.random() * settings.population.length)\n            var temp = settings.population[otherIndex]\n            settings.population[otherIndex] = settings.population[index]\n            settings.population[index] = temp\n        }\n    }\n\n    return {\n        evolve: function (options) {\n\n            if (options) {\n                settings = settingWithDefaults(options, settings)\n            }\n\n            populate()\n            randomizePopulationOrder()\n            compete()\n            return this\n        },\n        best: function () {\n            var scored = this.scoredPopulation()\n            var result = scored.reduce(function (a, b) {\n                return a.score >= b.score ? a : b\n            }, scored[0]).phenotype\n            return cloneJSON(result)\n        },\n        bestScore: function () {\n            return settings.fitnessFunction(this.best())\n        },\n        population: function () {\n            return cloneJSON(this.config().population)\n        },\n        scoredPopulation: function () {\n            return this.population().map(function (phenotype) {\n                return {\n                    phenotype: cloneJSON(phenotype),\n                    score: settings.fitnessFunction(phenotype)\n                }\n            })\n        },\n        config: function () {\n            return cloneJSON(settings)\n        },\n        clone: function (options) {\n            return geneticAlgorithmConstructor(\n                settingWithDefaults(options,\n                    settingWithDefaults(this.config(), settings)\n                )\n            )\n        }\n    }\n}\n","import GeneticAlgorithmConstructor, { GeneticAlgorithmConfig, ScoredPhenotype } from '../geneticalgorithm/geneticalgorithm';\nimport { handlePlayerEffect, playerActions, setSelected } from '../utils/playGame';\nimport Chance from 'chance';\nimport { MonsterTarget, Play } from '../utils/types';\nimport { previousState } from '../utils/data';\nimport prettyjson from 'prettyjson';\nimport { Seq } from 'immutable';\n\nexport type TinkererOptions = typeof defaultTinkererOptions & { turns?: number };\n\nexport const defaultTinkererOptions = {\n  playerSeed: \"Miau\",\n  weights: { monster: 0.70, player: 0.125, turn: 0.05, stamina: 0.075 },\n  debug: false,\n};\n\nexport const gameRender = (results: ScoredPhenotype<Play>[]): string => {\n  const best: ScoredPhenotype<Play> = Seq(results).maxBy(a => a.score)!!;\n  const lastState = previousState(best.phenotype);\n  return `BEST BY ${best.score} in ${best.phenotype.states.length - 1} turns\\n` +\n    prettyjson.render([\n      lastState.lastAttacks.flatMap(([target, id]) => [target === 'Player' ? 'Player' : `[${target}] ${best.phenotype.enemies[target]!!.lore.name}`, id]),\n      Seq(best.phenotype.enemies).zip(Seq(lastState.enemies)).flatMap(([enemy, stats], idx) => [`[${idx}] ${enemy.lore.name}`, stats]).toArray(),\n      lastState.player,\n    ]);\n}\n\nexport default function tinkerer(play: Play, iter: number, optionsOverride?: Partial<TinkererOptions>): ScoredPhenotype<Play>[] {\n  const options: TinkererOptions = { ...defaultTinkererOptions, ...optionsOverride };\n  const range = [...Array(iter).keys()];\n  const rand = new Chance(options.playerSeed);\n  const actions = playerActions(play.player);\n  const config: GeneticAlgorithmConfig<Play> = {\n    mutationFunction: (oldPlay) => {\n      const latestState = previousState(oldPlay);\n      const monsterHealth = latestState.enemies.reduce((acc, monster) => acc + monster.hp, 0);\n      const playerHealth = latestState.player.hp;\n      if (playerHealth === 0 || monsterHealth === 0) {\n        return oldPlay;\n      }\n      let newPlay = oldPlay;\n      while (rand.d6() === 6 || (previousState(newPlay).enemies[previousState(newPlay).target]?.hp ?? 0) <= 0) {\n        newPlay = setSelected(newPlay, rand.natural({ min: 0, max: previousState(newPlay).enemies.length - 1 }) as MonsterTarget);\n      }\n      const latest = previousState(newPlay);\n      const unavailable = actions.map((a, idx) => [a, idx] as const).filter(([a, _]) => a.stamina > latest.player.stamina).map(([_, idx]) => idx);\n      newPlay = handlePlayerEffect(\n        newPlay,\n        rand.natural({ min: 0, max: actions.length - 1, exclude: unavailable })\n      );\n      return newPlay;\n    },\n    fitnessFunction: (play) => {\n      const latestState = previousState(play);\n      const monsterHealth = latestState.enemies.reduce((acc, monster) => acc + monster.hp, 0);\n      const playerHealth = latestState.player.hp;\n      const playerStamina = latestState.player.stamina;\n      const startPlayerHealth = play.states[0].player.hp;\n      const startPlayerStamina = play.states[0].player.hp;\n      const startMonsterHealth = play.states[0].enemies.reduce((acc, monster) => acc + monster.hp, 0);\n\n      const monsterKillingFitness = ((startMonsterHealth - monsterHealth) / startMonsterHealth);\n      const playerAlivenessFitness = (playerHealth / startPlayerHealth);\n      const killSpeedFitness = (play.turns - play.states.length) / play.turns;\n      const staminaFitness = (playerStamina / startPlayerStamina);\n\n      const fitness = (monsterKillingFitness * options.weights.monster) + (playerAlivenessFitness * options.weights.player) + (killSpeedFitness * options.weights.turn) + (staminaFitness * options.weights.stamina);\n      if (options.debug) {\n        console.log(`MH: ${monsterHealth} | PH: ${playerHealth} | TR: ${play.states.length}\\nFitness: ${fitness} | MF: ${monsterKillingFitness} | PF: ${playerAlivenessFitness} | SF: ${staminaFitness} | TF: ${killSpeedFitness}\\nWeights: ${JSON.stringify(options.weights)}`);\n      }\n      return fitness;\n    },\n    population: range.map((_) => play),\n    populationSize: iter,\n  }\n\n  const turns = optionsOverride?.turns ? optionsOverride?.turns : play.turns;\n  let gen = new GeneticAlgorithmConstructor<Play>(config);\n  for (let i = 0; i < turns; i++) {\n    gen = gen.evolve();\n  }\n  return gen.scoredPopulation();\n}\n","import minimist from 'minimist';\nimport { readFileSync, writeFileSync } from 'fs';\nimport prettyjson from 'prettyjson';\nimport { build, enemies } from '../utils/data';\nimport tinker, { gameRender } from './tinkerer';\nimport PouchDb from 'pouchdb';\nimport pouchFind from 'pouchdb-find';\nimport { ScoredPhenotype } from '../geneticalgorithm/geneticalgorithm';\nimport { GameConfig, makeGame } from './tinkererTools';\nimport hasher from 'object-hash';\nimport { Play } from '../utils/types';\n\nPouchDb.plugin(pouchFind);\n\nexport const paramsRender = (params: GameConfig): string => {\n  const resolve = {\n    ...params,\n    enemies: params.enemies.map(a => enemies[a][0].lore.name),\n    basic: build.basic[params.basic].display,\n    class: build.class[params.class].display,\n    weapon: build.weapon[params.weapon].display,\n    skill: build.skill[params.skill].display,\n    offhand: build.offhand[params.offhand].display,\n    consumable: build.consumable[params.consumable].display,\n    armor: build.armor[params.armor].display,\n    headgear: build.headgear[params.headgear].display,\n    footwear: build.footwear[params.footwear].display,\n    charm: build.charm[params.charm].display,\n  }\n  return prettyjson.render(resolve);\n}\n\nconst writeToDb = async (db: string, results: ScoredPhenotype<Play>[]) => {\n  const pouch = new PouchDb(db);\n  await pouch.createIndex({\n    index: { fields: ['score'] }\n  });\n  const docs = await Promise.all(results.flatMap(async (r) => {\n    const lastState = r.phenotype.states[r.phenotype.states.length - 1];\n    const playerHp = lastState.player.hp;\n    const monsterHp = lastState.enemies.reduce((acc, m) => m.hp + acc, 0);\n    const outcome = playerHp > 0 && monsterHp <= 0 ? 'W' : 'L';\n    const res = await pouch.get(r.phenotype.id).catch(() => null);\n    return (res == null)\n      ? { _id: `##${r.phenotype.id}##${outcome}##${hasher(r.phenotype.states)}##`, ...r }\n      : [];\n  }));\n  await pouch.bulkDocs(docs).catch(e => console.log(JSON.stringify(e)));\n}\n\nconst start = async ({ json, iterations, seed, output, db }: minimist.ParsedArgs) => {\n  const params = JSON.parse(readFileSync(json).toString()) as GameConfig;\n  console.log(`\\n==========\\nCONFIG\\n==========\\n${prettyjson.render({ seed, iterations })}\\n${paramsRender(params)}\\n==========\\n`);\n  const gameOptions = params.gameOptions || {};\n  const results = tinker(makeGame(params), iterations, gameOptions);\n  console.log(`\\n==========\\nRESULT\\n==========\\n${gameRender(results)}\\n==========\\n`);\n  if (output != null) {\n    console.log(`Writing to ${output}...`);\n    writeFileSync(output, JSON.stringify(results, null, 2));\n  }\n  if (db != null) {\n    console.log(`Storing in ${db}...`);\n    await writeToDb(db, results);\n  }\n}\n\nstart(minimist(process.argv.slice(2)));\n","import play from \"../utils/playGame\";\nimport { Enemies, EnemiesStats, Play } from \"../utils/types\";\nimport { build, enemies } from \"../utils/data\";\nimport { TinkererOptions } from \"./tinkerer\";\n\nexport const makeGame = (gameConfig: GameConfig): Play => play(\n  {\n    id: \"1\",\n    lore: {\n      name: \"XXX\",\n      age: 123,\n    },\n    build: {\n      basic: build.basic[gameConfig.basic],\n      class: build.class[gameConfig.class],\n      weapon: build.weapon[gameConfig.weapon],\n      skill: build.skill[gameConfig.skill],\n      offhand: build.offhand[gameConfig.offhand],\n      consumable: build.consumable[gameConfig.consumable],\n      armor: build.armor[gameConfig.armor],\n      headgear: build.headgear[gameConfig.headgear],\n      footwear: build.footwear[gameConfig.footwear],\n      charm: build.charm[gameConfig.charm],\n    }\n  },\n  {\n    hp: gameConfig.player.hp,\n    stamina: gameConfig.player.stamina,\n    staminaPerTurn: gameConfig.player.staminaPerTurn,\n  },\n  gameConfig.enemies.map(v => enemies[v][0]) as Enemies,\n  gameConfig.enemies.map(v => enemies[v][1]) as EnemiesStats,\n  gameConfig.turns,\n  gameConfig.seed);\n\nexport type GameConfig = {\n  enemies: number[],\n  basic: number,\n  class: number,\n  weapon: number,\n  skill: number,\n  offhand: number,\n  consumable: number,\n  armor: number,\n  headgear: number,\n  footwear: number,\n  charm: number,\n  player: {\n    hp: number,\n    stamina: number,\n    staminaPerTurn: number,\n  },\n  turns: number,\n  seed: string | number,\n  gameOptions?: Partial<TinkererOptions>,\n}","import { Chance } from \"chance\";\nimport { paramsRender } from \"../tinkerer/tinkererCLI\";\nimport { Subtract } from \"type-fest/source/internal\";\nimport { actions } from \"./playGame\";\nimport { Build, Distances, Effect, EffectFun, EffectFunRepo, Enemy, EnemyStats, Item, MonsterTarget, Player, PlayerStats, Ranges, Snapshot, StatsFunRepo, UpTo, Play, MultiTurnEffectFunRepo, MultiTurnEffectFun } from \"./types\";\n\nexport const startState = (play: Play): Snapshot => play.states[0];\nexport const previousState = (play: Play): Snapshot => play.states[play.states.length - 1];\n\nexport const chain = (...funs: Array<EffectFun>): EffectFun =>\n  // TODO check direction of the fold\n  funs.reduce((acc, value) => (origin, play, newState) => value(origin, play, acc(origin, play, newState)));\n\nexport const chain2 = (...funs: Array<MultiTurnEffectFun>): MultiTurnEffectFun =>\n  // TODO check direction of the fold\n  funs.reduce((acc, value) => (params) => (origin, play, oldState) => {\n    const [newPlay, newState] = acc(params)(origin, play, oldState);\n    return value(params)(origin, newPlay, newState);\n  });\n\nexport const randomEnemy = (): [Enemy, EnemyStats] => new Chance().pickone(enemies);\n\nexport const randomPlayer = (statsOverride?: PlayerStats, buildOverride?: Build): [Player, PlayerStats] => {\n  const rng = new Chance();\n  return [{\n    id: rng.string(),\n    lore: {\n      name: randomName(),\n      age: rng.age(),\n    },\n    build: {\n      basic: rng.pickone(build.basic),\n      class: rng.pickone(build.class),\n      armor: rng.pickone(build.armor),\n      weapon: rng.pickone(build.weapon),\n      offhand: rng.pickone(build.offhand),\n      footwear: rng.pickone(build.footwear),\n      headwear: rng.pickone(build.headwear),\n      charm: rng.pickone(build.charm),\n      ...buildOverride,\n    }\n  }, {\n    hp: 25,\n    stamina: 8,\n    staminaPerTurn: 2,\n    ...statsOverride,\n  }];\n}\n\nexport const makeRange = (...number: UpTo<Subtract<Distances, 1>>[]) => [...new Set(number)] as Ranges;\nexport const allRanges = makeRange(0, 1, 2, 3, 4);\nexport const selfRange = allRanges;\n\nexport const effectDead: Effect = { display: \"DEAD\", priority: 4, effect: \"Monster:Dead\", range: makeRange() };\nexport const effectRepository: EffectFunRepo = {\n  'Monster:Dead': (_origin, _play, newState) => newState,\n  'Basic:Rest': (_origin, _play, newState) => newState,\n  'Basic:Advance': (_origin, _play, newState) => actions.changeDistance(newState, newState.target, -2),\n  'Basic:Retreat': (_origin, _play, newState) => actions.changeDistance(newState, newState.target, 2),\n  'Axe:Chop': (_, play, currentState) => actions.attackMonster(startState(play), currentState, currentState.target, 3),\n  'Axe:Cut': chain(\n    (_, play, currentState) => actions.attackMonster(startState(play), currentState, currentState.target, 3),\n    (origin, _p, currentState) => actions.addEotEffect(currentState, { effect: 'Target:Bleed', origin, parameters: { lifespan: 3, target: currentState.target } })\n  ),\n  'Hook:GetHere': chain(\n    (_, play, currentState) => actions.attackMonster(startState(play), currentState, currentState.target, 3),\n    (_origin, _play, currentState) => actions.changeDistance(currentState, currentState.target, -1),\n  ),\n  'Monster:Swipe': (_, play, currentState) => actions.attackPlayer(startState(play), currentState, 2),\n  'Monster:Roar': (_, play, currentState) => actions.modifyPlayerStamina(startState(play), currentState, -5),\n  'Monster:Jump': (origin, _, currentState) => actions.changeDistance(currentState, origin, -2),\n  'Monster:SummonToro': (origin, _, currentState) => actions.addEotEffect(currentState, { effect: 'Monster:Summon', origin, parameters: { enemy: 1 } }),\n  'BootsOfFlight:EOT': (_, _p, currentState) => currentState.enemies.reduce((s, _m, idx) => actions.changeDistance(s, idx as MonsterTarget, -2), currentState),\n};\n\nexport const multiTurnEffectRepository: MultiTurnEffectFunRepo = {\n  'Target:Bleed': chain2(\n    ({ target }) => (origin, play, currentState) => [play, target === 'Player' ? actions.attackPlayer(startState(play), currentState, 1) : actions.attackMonster(startState(play), currentState, target, 3)],\n    ({ lifespan }) => (origin, play, currentState) => [play, lifespan > 0 ? actions.addEotEffect(currentState, { effect: 'Target:Bleed', origin, parameters: { ...paramsRender, lifespan: lifespan - 1 } }) : currentState],\n  ),\n  'Monster:Summon': ({ enemy }) => (_, play, currentState) => actions.addEnemy(play, currentState, enemies[enemy][0], enemies[enemy][1]),\n};\n\nexport const statsRepository: StatsFunRepo = {\n  'Charm:ofHealth': (player, enemies) => [{ ...player, hp: player.hp + 10 }, enemies],\n  'Charm:ofHaste': (player, enemies) => [{ ...player, staminaPerTurn: player.staminaPerTurn + 1 }, enemies],\n  'Charm:ofResilience': (player, enemies) => [{ ...player, stamina: player.stamina + 10 }, enemies],\n}\n\nexport const build: Record<\n  string,\n  Item[]\n> = {\n  basic: [\n    {\n      display: \"Basic\",\n      effects: [\n        {\n          display: \"Rest\",\n          effect: \"Basic:Rest\",\n          priority: 4,\n          stamina: 0,\n          range: selfRange,\n        },\n        {\n          display: \"Advance\",\n          effect: \"Basic:Advance\",\n          priority: 4,\n          stamina: 1,\n          range: selfRange,\n        },\n        {\n          display: \"Retreat\",\n          effect: \"Basic:Retreat\",\n          priority: 4,\n          stamina: 1,\n          range: selfRange,\n        }\n      ]\n    }\n  ],\n  class: [\n    {\n      display: \"Warrior\",\n    },\n    {\n      display: \"Mage\",\n    },\n    {\n      display: \"Rogue\",\n    },\n  ],\n  skill: [\n    {\n      display: \"Sturdy\",\n    },\n    {\n      display: \"Nimble\",\n    },\n  ],\n  weapon: [\n    {\n      display: \"Axe\",\n      effects: [\n        {\n          display: \"Chop\",\n          effect: \"Axe:Chop\",\n          priority: 2,\n          stamina: 2,\n          range: makeRange(0, 1),\n        },\n        {\n          display: \"Cut\",\n          effect: \"Axe:Cut\",\n          priority: 3,\n          stamina: 2,\n          range: makeRange(0),\n        },\n      ],\n    },\n  ],\n  offhand: [\n    {\n      display: \"Hook\",\n      effects: [\n        {\n          display: \"Get over here!\",\n          effect: \"Hook:GetHere\",\n          priority: 4,\n          stamina: 3,\n          range: makeRange(2, 3, 4),\n        },\n      ],\n    },\n  ],\n  consumable: [\n    {\n      display: \"Potion\",\n    },\n  ],\n  armor: [\n    {\n      display: \"Heavy\",\n    },\n  ],\n  headgear: [\n    {\n      display: \"Helm\",\n    },\n  ],\n  footwear: [\n    {\n      display: \"Boots of Flight\",\n      eot: [\"BootsOfFlight:EOT\"],\n    },\n  ],\n  charm: [\n    {\n      display: \"of Health\",\n      passive: \"Charm:ofHealth\",\n    },\n    {\n      display: \"of Haste\",\n      passive: \"Charm:ofHaste\",\n    },\n    {\n      display: \"of Resilience\",\n      passive: \"Charm:ofResilience\",\n    },\n  ],\n};\n\nexport const randomName = () => names[Math.floor(Math.random() * names.length)];\n\nexport const enemies: [Enemy, EnemyStats][] = [\n  [{\n    lore: {\n      name: \"Sacapuntas\",\n    },\n    rolls: [\n      [0, 1, 2, 1, 0],\n      [0, 1, 0, 0, 0],\n      [0, 0, 0, 0, 0],\n      [0, 0, 0, 0, 0],\n      [0, 1, 2, 1, 0, 0],\n    ],\n    effects: [\n      { display: \"Swipe\", priority: 3, effect: \"Monster:Swipe\", range: makeRange(0, 1) },\n      { display: \"Roar\", priority: 1, effect: \"Monster:Roar\", range: allRanges },\n      { display: \"Jump\", priority: 2, effect: \"Monster:Jump\", range: makeRange(2, 3, 4) },\n    ],\n  }, {\n    hp: 25,\n    rage: 0,\n    distance: 4,\n  }],\n  [{\n    lore: {\n      name: \"Toro\",\n    },\n    effects: [\n      { display: \"Swipe\", priority: 3, effect: \"Monster:Swipe\", range: allRanges },\n      { display: \"Jump\", priority: 2, effect: \"Monster:Jump\", range: makeRange(2, 3, 4) },\n    ],\n    rolls: [\n      [0, 0, 0, 0, 0],\n      [0, 0, 0, 0, 0],\n      [1, 1, 0, 0, 0],\n      [1, 1, 1, 0, 0],\n      [1, 1, 1, 1, 0],\n    ]\n  }, {\n    hp: 22,\n    rage: 0,\n    distance: 4,\n  }],\n  [{\n    lore: {\n      name: \"Summoner\",\n    },\n    effects: [\n      { display: \"Swipe\", priority: 3, effect: \"Monster:Swipe\", range: makeRange(0, 1) },\n      { display: \"Jump\", priority: 3, effect: \"Monster:Jump\", range: allRanges },\n      { display: \"Summon Toro\", priority: 4, effect: \"Monster:SummonToro\", range: makeRange(2, 3, 4) },\n    ],\n    rolls: [\n      [0, 0, 0, 0, 0],\n      [1, 0, 0, 0, 0],\n      [1, 1, 2, 0, 0],\n      [1, 1, 2, 0, 0],\n      [1, 2, 2, 0, 0],\n    ]\n  }, {\n    hp: 30,\n    rage: 0,\n    distance: 4,\n  }]\n];\n\nconst names = [\n  \"Lydan\",\n  \"Syrin\",\n  \"Ptorik\",\n  \"Joz\",\n  \"Varog\",\n  \"Gethrod\",\n  \"Hezra\",\n  \"Feron\",\n  \"Ophni\",\n  \"Colborn\",\n  \"Fintis\",\n  \"Gatlin\",\n  \"Jinto\",\n  \"Hagalbar\",\n  \"Krinn\",\n  \"Lenox\",\n  \"Revvyn\",\n  \"Hodus\",\n  \"Dimian\",\n  \"Paskel\",\n  \"Kontas\",\n  \"Weston\",\n  \"Azamarr \",\n  \"Jather \",\n  \"Tekren \",\n  \"Jareth\",\n  \"Adon\",\n  \"Zaden\",\n  \"Eune \",\n  \"Graff\",\n  \"Tez\",\n  \"Jessop\",\n  \"Gunnar\",\n  \"Pike\",\n  \"Domnhar\",\n  \"Baske\",\n  \"Jerrick\",\n  \"Mavrek\",\n  \"Riordan\",\n  \"Wulfe\",\n  \"Straus\",\n  \"Tyvrik \",\n  \"Henndar\",\n  \"Favroe\",\n  \"Whit\",\n  \"Jaris\",\n  \"Renham\",\n  \"Kagran\",\n  \"Lassrin \",\n  \"Vadim\",\n  \"Arlo\",\n  \"Quintis\",\n  \"Vale\",\n  \"Caelan\",\n  \"Yorjan\",\n  \"Khron\",\n  \"Ishmael\",\n  \"Jakrin\",\n  \"Fangar\",\n  \"Roux\",\n  \"Baxar\",\n  \"Hawke\",\n  \"Gatlen\",\n  \"Barak\",\n  \"Nazim\",\n  \"Kadric\",\n  \"Paquin\",\n  \"Kent\",\n  \"Moki\",\n  \"Rankar\",\n  \"Lothe\",\n  \"Ryven\",\n  \"Clawsen\",\n  \"Pakker\",\n  \"Embre\",\n  \"Cassian\",\n  \"Verssek\",\n  \"Dagfinn\",\n  \"Ebraheim\",\n  \"Nesso\",\n  \"Eldermar\",\n  \"Rivik\",\n  \"Rourke\",\n  \"Barton\",\n  \"Hemm\",\n  \"Sarkin\",\n  \"Blaiz \",\n  \"Talon\",\n  \"Agro\",\n  \"Zagaroth\",\n  \"Turrek\",\n  \"Esdel\",\n  \"Lustros\",\n  \"Zenner\",\n  \"Baashar \",\n  \"Dagrod \",\n  \"Gentar\",\n  \"Feston\",\n  \"Syrana\",\n  \"Resha\",\n  \"Varin\",\n  \"Wren\",\n  \"Yuni\",\n  \"Talis\",\n  \"Kessa\",\n  \"Magaltie\",\n  \"Aeris\",\n  \"Desmina\",\n  \"Krynna\",\n  \"Asralyn \",\n  \"Herra\",\n  \"Pret\",\n  \"Kory\",\n  \"Afia\",\n  \"Tessel\",\n  \"Rhiannon\",\n  \"Zara\",\n  \"Jesi\",\n  \"Belen\",\n  \"Rei\",\n  \"Ciscra\",\n  \"Temy\",\n  \"Renalee \",\n  \"Estyn\",\n  \"Maarika\",\n  \"Lynorr\",\n  \"Tiv\",\n  \"Annihya\",\n  \"Semet\",\n  \"Tamrin\",\n  \"Antia\",\n  \"Reslyn\",\n  \"Basak\",\n  \"Vixra\",\n  \"Pekka \",\n  \"Xavia\",\n  \"Beatha \",\n  \"Yarri\",\n  \"Liris\",\n  \"Sonali\",\n  \"Razra \",\n  \"Soko\",\n  \"Maeve\",\n  \"Everen\",\n  \"Yelina\",\n  \"Morwena\",\n  \"Hagar\",\n  \"Palra\",\n  \"Elysa\",\n  \"Sage\",\n  \"Ketra\",\n  \"Lynx\",\n  \"Agama\",\n  \"Thesra \",\n  \"Tezani\",\n  \"Ralia\",\n  \"Esmee\",\n  \"Heron\",\n  \"Naima\",\n  \"Rydna \",\n  \"Sparrow\",\n  \"Baakshi \",\n  \"Ibera\",\n  \"Phlox\",\n  \"Dessa\",\n  \"Braithe\",\n  \"Taewen\",\n  \"Larke\",\n  \"Silene\",\n  \"Phressa\",\n  \"Esther\",\n  \"Anika\",\n  \"Rasy \",\n  \"Harper\",\n  \"Indie\",\n  \"Vita\",\n  \"Drusila\",\n  \"Minha\",\n  \"Surane\",\n  \"Lassona\",\n  \"Merula\",\n  \"Kye\",\n  \"Jonna\",\n  \"Lyla\",\n  \"Zet\",\n  \"Orett\",\n  \"Naphtalia\",\n  \"Turi\",\n  \"Rhays\",\n  \"Shike\",\n  \"Hartie\",\n  \"Beela\",\n  \"Leska\",\n  \"Vemery \",\n  \"Lunex\",\n  \"Fidess\",\n  \"Tisette\",\n  \"Partha\",\n]","import React from \"react\";\nimport { Card, Button } from \"react-bootstrap\";\nimport { Enemy, Effect, EnemyStats } from \"../utils/types\";\nimport { Seq } from \"immutable\";\n\nconst skillPercents = (effects: Effect[]) =>\n  Seq(effects).countBy((e) => e.display).toArray().map(([display, v], idx) => {\n    const { range, priority } = effects.find(a => a.display === display)!!;\n    return <>[{(v / effects.length * 100).toFixed(2)}%] {display} ⏱:{priority} 🏹:{range.length === 5 ? 'Any' : range.map(a => a + 1).join(\",\")}<br key={idx} /></>\n  });\n\nconst EnemyCard: React.FC<{\n  enemy: Enemy;\n  enemyStats: EnemyStats;\n  latestAttack: string | undefined;\n  isSelected?: boolean;\n  onSelect: () => void;\n  canAct: boolean;\n}> = ({ enemy, enemyStats, isSelected, onSelect, latestAttack, canAct }) => (\n  <Card bg={isSelected ? \"info\" : undefined}>\n    <Card.Body>\n      <Card.Title>{enemy.lore.name} {enemyStats.hp > 0 ? \"\" : (<b>💀DEAD💀</b>)}</Card.Title>\n      <Card.Text>❤:{enemyStats.hp} 🏹:{enemyStats.distance}</Card.Text>\n      {latestAttack && (<Card.Text>Latest attack: {latestAttack}</Card.Text>)}\n      <Card.Text>\n        Next attack prediction:\n        <br />\n        {skillPercents(enemy.rolls[enemyStats.distance - 1].map((idx) => enemy.effects[idx]))}\n        <br />\n      </Card.Text>\n      {canAct && (<Button disabled={isSelected} onClick={onSelect}>Select</Button>)}\n    </Card.Body>\n  </Card>\n);\n\nexport default EnemyCard;\n","import React from \"react\";\nimport { Card, Button, Stack } from \"react-bootstrap\";\nimport { Player, PlayerStats } from \"../utils/types\";\n\nconst PlayerCard: React.FC<{\n  selectedButtons: Set<string>,\n  player: Player;\n  playerStats: PlayerStats;\n  canAct: boolean;\n  lastAction: string | undefined;\n  onClickEffect: (index: number) => void;\n}> = ({ selectedButtons, player, playerStats, onClickEffect, canAct, lastAction }) => (\n  <Card>\n    <Card.Body>\n      <Card.Title>{player.lore.name}{playerStats.hp > 0 ? \"\" : (<b> 💀DEAD💀 </b>)}</Card.Title>\n      <Card.Subtitle className=\"mb-2 text-muted\">\n        {player.build.class.display}\n      </Card.Subtitle>\n      <Card.Text>{playerStats.hp} ❤ {playerStats.stamina} 💪</Card.Text>\n      {lastAction && (<Card.Text>Last action: {lastAction}</Card.Text>)}\n    </Card.Body>\n    {canAct && (<Card.Body>\n      <Stack direction=\"horizontal\" gap={2}>\n        {Object.values(player.build)\n          .flatMap((a) => a.effects ?? [])\n          .map((e, idx) => (<div>\n            <Button\n              key={e.display}\n              active={selectedButtons.has(e.display)}\n              disabled={playerStats.stamina < e.stamina}\n              onClick={(_) => onClickEffect(idx)}\n            >\n              [<i>{idx + 1}</i>] <b>{e.display}</b>\n            </Button>\n            <Card.Text>💪:{e.stamina} ⏱:{e.priority}<br />🏹:{e.range.length === 5 ? 'Any' : e.range.map(a => a + 1).join(\",\")}</Card.Text>\n          </div>\n          ))}\n      </Stack>\n    </Card.Body>)}\n  </Card>\n);\n\nexport default PlayerCard;\n","import { Container, Row, Col, Card } from \"react-bootstrap\";\n\nimport { MonsterTarget, Play } from \"../utils/types\";\n\nimport EnemyCard from \"./Enemy\";\nimport PlayerCard from \"./Player\";\nimport usePressedKeys from \"../hooks/usePressedKeys\";\nimport { playerActions } from \"../utils/playGame\";\nimport { Seq } from \"immutable\";\nimport { previousState } from \"../utils/data\";\nimport { Button } from \"react-bootstrap\";\n\nexport type GameProps = {\n  game: Play;\n  setSelected: (target: MonsterTarget) => void;\n  handlePlayerEffect: (index: number) => void,\n  solveGame: (iterations: number) => void,\n  hint: (iterations: number) => void,\n  undo: () => void\n  redo: (() => void) | undefined;\n};\n\nconst Game = ({ handlePlayerEffect, setSelected, game, solveGame, undo, redo, hint }: GameProps): JSX.Element => {\n  const { player, enemies } = game;\n  const { player: playerStats, enemies: enemiesStats, target, lastAttacks } = previousState(game);\n\n  const playerSkills = playerActions(player);\n  const monsterHealth = enemiesStats.reduce((acc, m) => m.hp + acc, 0);\n  const isPlayerAlive = playerStats.hp > 0;\n  const areMonstersAlive = monsterHealth > 0;\n  const endGame = game.states.length <= game.turns;\n  const canAct = isPlayerAlive && areMonstersAlive && endGame;\n\n  const pressed = usePressedKeys((key) => {\n    if (!canAct) return;\n    const valNum = parseInt(key);\n    if (valNum > 0 && valNum <= playerSkills.length) {\n      const hasStamina = playerSkills[valNum - 1].stamina <= playerStats.stamina;\n      if (!hasStamina) return;\n      handlePlayerEffect(valNum - 1);\n    }\n  });\n\n  const selectedButtons = new Set<string>([...pressed].flatMap((key: string) => {\n    const valNum = parseInt(key);\n    if (valNum > 0 && valNum <= playerSkills.length) {\n      return [playerSkills[valNum - 1].display];\n    } else {\n      return [];\n    }\n  }));\n\n  return (\n    <Container fluid>\n      <Row className=\"justify-content-center align-items-flex-start\">\n        <Col sm={12} md={8}>\n          <Row>\n            <Card.Title>\n              Turn {game.states.length} out of {game.turns} {!isPlayerAlive ? (<b>❌❌DEFEAT❌❌</b>) : !areMonstersAlive ? (<b>🎉🎉VICTORY🎉🎉</b>) : \"\"}\n            </Card.Title>\n          </Row>\n          <Row>\n            <Col>\n              <PlayerCard\n                player={player}\n                playerStats={playerStats}\n                onClickEffect={handlePlayerEffect}\n                selectedButtons={selectedButtons}\n                lastAction={(lastAttacks.find(a => a[0] === 'Player') ?? [undefined, undefined])[1]}\n                canAct={canAct} />\n            </Col>\n          </Row>\n          <Row className=\"mt-2 g-2\">\n            {Seq(enemies).zip(Seq(enemiesStats)).map(([enemy, stats], idx) => (\n              <Col key={idx} xs={6} md={4}>\n                <EnemyCard\n                  key={idx}\n                  enemyStats={stats}\n                  enemy={enemy}\n                  canAct={canAct}\n                  latestAttack={Seq(lastAttacks).filter(([target, _]) => target === idx).map(v => v[1]).first()}\n                  isSelected={idx === target}\n                  onSelect={() => setSelected(idx as MonsterTarget)}\n                />\n              </Col>\n            ))}\n          </Row>\n          <Row>\n            {game.states.length > 1 && (<Button onClick={(_) => undo()}>Undo ↩</Button>)}\n            {redo && (<Button onClick={(_) => redo()}>Redo ↪</Button>)}\n            <Button onClick={(_) => hint(100)}>Hint</Button>\n            <Button onClick={(_) => solveGame(100)}>Solve ⌛</Button>\n            <Button onClick={(_) => solveGame(1000)}>Solve thoroughly ⌛⌛⌛</Button>\n          </Row>\n        </Col>\n      </Row>\n    </Container>\n  );\n};\n\nexport default Game;\n","import { useEffect, useCallback, useState } from \"react\";\n\nexport default function usePressedKeys(onUp: (e: string) => void): Set<string> {\n\n  const [pressedKeys, updatePressedKeys] = useState(new Set<string>());\n\n  const downHandler = ({ key }: { key: string }) => {\n    updatePressedKeys((set) => new Set([...set, key]));\n  }\n\n  const upHandler = useCallback(({ key }: { key: string }) => {\n    updatePressedKeys((set) => new Set([...set].filter((k) => k !== key)));\n    onUp(key);\n  }, [onUp]);\n\n  useEffect(() => {\n    window.addEventListener(\"keydown\", downHandler);\n    window.addEventListener(\"keyup\", upHandler);\n\n    return () => {\n      window.removeEventListener(\"keydown\", downHandler);\n      window.removeEventListener(\"keyup\", upHandler);\n    };\n  }, [upHandler]);\n\n  return pressedKeys;\n}","import React from \"react\";\nimport { Container, Row, Form, Button, ButtonGroup, Navbar } from \"react-bootstrap\";\nimport useScroll from \"../hooks/useScroll\";\n\nimport { Player, PlayerStats } from \"../utils/types\";\nimport { build, randomName } from \"../utils/data\";\nimport Chance from 'chance';\n\nconst selects = Object.entries(build).map(([type, options]) => ({\n  type,\n  options: options.map(({ display }, value) => ({\n    display,\n    value,\n  })),\n}));\n\nconst PlayerBuilder = ({ onSave }: { onSave: (player: Player, playerStats: PlayerStats) => void }) => {\n  const [form, setForm] = React.useState<Record<string, number>>(\n    selects.reduce(\n      (acc, { type, options }) => ({\n        ...acc,\n        [type]: options[0].value,\n      }),\n      {},\n    ),\n  );\n  const [lore, setLore] = React.useState({\n    name: randomName(),\n    age: new Chance().age(),\n  });\n  const setField = (field: string, value: number) => {\n    setForm({\n      ...form,\n      [field]: value,\n    });\n  };\n  const onFormSubmit = (e: any) => {\n    e.preventDefault();\n    onSave({\n      id: \"p-1\",\n      lore,\n      build: Object.entries(form).reduce((acc, [type, value]) => {\n        return {\n          ...acc,\n          [type]: build[type][value]\n        }\n      }, { basic: build.basic[0] }),\n    }, {\n      hp: 25,\n      stamina: 8,\n      staminaPerTurn: 2,\n    });\n  };\n  const displayType = (type: string) => <b>{build[type][form[type]].display}</b>;\n  return (\n    <Form onSubmit={onFormSubmit}>\n      <Container fluid style={{ marginBottom: '105px' }}>\n        <Row className=\"g-2\">\n          {selects.map(({ type, options }) =>\n            <ElementPicker\n              setField={(value) => setField(type, value)}\n              section={type}\n              options={options}\n              key={type}\n              isSelected={(value) => form[type] === value} />\n          )}\n        </Row>\n        <Navbar fixed=\"bottom\" bg=\"dark\" variant=\"dark\" style={{ maxHeight: '100px' }}>\n          <Container>\n            <Navbar.Text>You are <i onClick={() => setLore((lore) => ({ ...lore, name: randomName() }))}>{lore.name}</i>, the {displayType('skill')} {displayType('class')} {displayType('charm')}<br />who wields a {displayType('weapon')} and a {displayType('offhand')}<br />and wears {displayType('armor')} with {displayType('headgear')} and {displayType('footwear')}</Navbar.Text>\n            <Button type=\"submit\">Pick your foe!</Button>\n          </Container>\n        </ Navbar>\n      </Container >\n    </Form >\n  );\n};\n\nconst ElementPicker = ({ isSelected, section, options, setField }: {\n  options: {\n    display: string;\n    value: number;\n  }[], isSelected: (value: number) => boolean, setField: (value: number) => void, section: string\n}) => {\n  const [scrollTo, scrollRef] = useScroll({\n    behavior: 'smooth',\n    block: 'start',\n  });\n\n  return (\n    <Row>\n      <Form.Label>{section}</Form.Label>\n      <br />\n      <ButtonGroup size=\"lg\" className=\"mb-2\">\n        {options.map(({ display, value }) => (\n          <Button\n            key={value}\n            name={section}\n            id={`${value}`}\n            variant={isSelected(value) ? 'primary' : 'secondary'}\n            onClick={() => { setField(value); scrollTo(); }}\n          >{display}</Button>\n        ))}\n      </ButtonGroup>\n      <div id={`${section}-scroll`} ref={scrollRef} />\n    </Row>\n  );\n}\n\nexport default PlayerBuilder;\n","import { Ref, useRef } from \"react\";\n\ntype ScrollToFn = () => void;\n\nexport default function useScroll<T extends Element>(scrollParams: ScrollIntoViewOptions): [ScrollToFn, Ref<any>] {\n  const elRef = useRef<T>(null);\n  const executeScroll = () => elRef.current!.scrollIntoView(scrollParams);\n\n  return [executeScroll, elRef];\n};\n","import React from \"react\";\nimport { Container, ButtonGroup, Form, Button, Navbar } from \"react-bootstrap\";\n\nimport { Player, Enemies, Enemy, EnemiesStats, EnemyStats } from \"../utils/types\";\nimport { enemies, randomEnemy } from \"../utils/data\";\n\nconst EncounterBuilder = ({ player, onSave }: { player: Player, onSave: (enemies: Enemies, enemiesStats: EnemiesStats) => void }) => {\n  const [encounter, setEncounter] = React.useState<[Enemy, EnemyStats][]>([]);\n  const onFormSubmit = (e: any) => {\n    e.preventDefault();\n    const enemies = encounter.map(a => a[0]);\n    const enemiesStats = encounter.map(a => a[1]);\n    // Size enforced by UI\n    onSave(enemies as Enemies, enemiesStats as EnemiesStats);\n  };\n  const displayType = (type: string) => <b>{player.build[type].display}</b>;\n  return (\n    <Form onSubmit={onFormSubmit}>\n      <Container fluid style={{ marginBottom: encounter.length > 0 ? '205px' : '105px' }}>\n        <ButtonGroup size=\"lg\" className=\"mb-2\">\n          {enemies.map((enemy) =>\n            <Button\n              key={enemy[0].lore.name}\n              disabled={encounter.length > 4}\n              onClick={() => setEncounter((e) => [...e, enemy])}\n            >{enemy[0].lore.name}</Button>\n          )}\n        </ButtonGroup>\n      </Container >\n      {\n        encounter.length > 0 &&\n        <Navbar fixed=\"bottom\" bg=\"dark\" variant=\"dark\" style={{ marginBottom: '100px' }}>\n          <Container fluid>\n            <ButtonGroup size=\"sm\" className=\"mb-2\">\n              {encounter.map((enemy, idx) => <Button key={`${enemy[0].lore.name}-${idx}`} onClick={() => setEncounter((e) => { let found = false; return e.filter((m) => (found || m[0].lore.name !== enemy[0].lore.name) || !(found = true)); })}>{enemy[0].lore.name}</Button>)}\n            </ButtonGroup>\n          </Container>\n        </ Navbar>\n      }\n      <Navbar fixed=\"bottom\" bg=\"dark\" variant=\"dark\" style={{ maxHeight: '100px' }}>\n        <Container>\n          <Navbar.Text>You are <i>{player.lore.name}</i>, the {displayType('skill')} {displayType('class')} {displayType('charm')}<br />who wields a {displayType('weapon')} and a {displayType('offhand')}<br />and wears {displayType('armor')} with {displayType('headgear')} and {displayType('footwear')}</Navbar.Text>\n          <ButtonGroup>\n            <Button\n              disabled={encounter.length < 0 || encounter.length > 5}\n              onClick={(_) => setEncounter((e) => [...e, randomEnemy()])}>\n              Add Random\n            </Button>\n            <Button type=\"submit\" disabled={encounter.length < 1 || encounter.length > 5}>To Battle!</Button>\n          </ButtonGroup>\n        </Container>\n      </ Navbar>\n    </Form >\n  );\n};\n\nexport default EncounterBuilder;\n","import React from \"react\";\nimport \"./App.css\";\n// import { readString } from \"react-papaparse\";\nimport { Enemies, EnemiesStats, Player, PlayerStats, Snapshot, Play } from \"./utils/types\";\n\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport Game from \"./components/Game\";\nimport PlayerBuilder from \"./components/PlayerBuilder\";\nimport EncounterBuilder from \"./components/EncounterBuilder\";\nimport play, { handlePlayerEffect, setSelected } from \"./utils/playGame\";\nimport tinkerer from \"./tinkerer/tinkerer\";\nimport { Seq } from \"immutable\";\nimport { previousState } from \"./utils/data\";\n\ntype AppStatus = \"buildPlayer\" | \"buildEncounter\" | \"game\" | \"endGame\";\n\nfunction App() {\n  const [status, setStatus] = React.useState<AppStatus>(\"buildPlayer\");\n  const [playerBuild, setPlayerBuild] = React.useState<\n    [Player, PlayerStats] | undefined\n  >();\n  const [encounterBuild, setEncounter] = React.useState<[Enemies, EnemiesStats]>();\n  const [game, setGame] = React.useState<Play | undefined>();\n  const [redo, setRedo] = React.useState<Snapshot[]>([]);\n\n  const handleSavePlayer = (player: Player, playerStats: PlayerStats) => {\n    setPlayerBuild([player, playerStats]);\n    setStatus(\"buildEncounter\");\n  };\n  const handleSaveEncounter = (encounter: Enemies, encounterStats: EnemiesStats) => {\n    setEncounter([encounter, encounterStats]);\n    setStatus(\"game\");\n  }\n\n  if (!game && playerBuild && encounterBuild) {\n    const [player, playerStats] = playerBuild;\n    const [encounter, encounterStats] = encounterBuild;\n    const game = play(player, playerStats, encounter, encounterStats, 50, 'PACC');\n    setGame(game);\n  }\n\n  return (\n    <div className=\"App\">\n      {status === \"buildPlayer\" ? (\n        <PlayerBuilder onSave={handleSavePlayer} />\n      ) : null}\n      {status === \"buildEncounter\" && playerBuild ? (\n        <EncounterBuilder\n          player={playerBuild[0]}\n          onSave={handleSaveEncounter}\n        />\n      ) : null}\n      {status === \"game\" && game ? (\n        <Game\n          game={game}\n          redo={redo.length > 0 ? (() => {\n            const newRedo = [...redo];\n            const latest = newRedo.pop() as Snapshot;\n            setRedo(newRedo);\n            setGame({ ...game, states: [...game.states, latest] });\n          }) : undefined}\n          undo={() => {\n            setRedo([...redo, previousState(game)]);\n            setGame({ ...game, states: [game.states[0], ...game.states.slice(1, -1)] });\n          }}\n          setSelected={(idx) => { setRedo([]); setGame(setSelected(game, idx)); }}\n          handlePlayerEffect={(idx) => { setRedo([]); setGame(handlePlayerEffect(game, idx)); }}\n          solveGame={(iterations) => setGame(Seq(tinkerer(game, iterations, { turns: game.turns - game.states.length })).maxBy(a => a.score)!!.phenotype)}\n          hint={(iterations) =>\n            setGame({\n              ...game,\n              states: [...game.states, Seq(tinkerer(game, iterations, { turns: game.turns - game.states.length })).maxBy(a => a.score)!!.phenotype.states[game.states.length]]\n            })\n          }\n        />\n      ) : null}\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://cra.link/PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://cra.link/PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorkerRegistration from './serviceWorkerRegistration';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://cra.link/PWA\nserviceWorkerRegistration.register();\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}