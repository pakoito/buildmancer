{"version":3,"sources":["components/Enemy.tsx","components/Player.tsx","utils/playGame.ts","components/Game.tsx","hooks/usePressedKeys.tsx","components/PlayerBuilder.tsx","hooks/useScroll.tsx","components/EncounterBuilder.tsx","geneticalgorithm/geneticalgorithm.js","tinkerer/tinkerer.ts","App.tsx","serviceWorkerRegistration.ts","reportWebVitals.ts","index.tsx","utils/types.ts","utils/effectRepository.ts","utils/effectFunctions.ts","utils/data.ts"],"names":["EnemyCard","effects","enemy","enemyStats","isSelected","onSelect","latestAttack","canAct","Card","bg","undefined","Body","Title","lore","name","hp","Text","distance","rolls","map","idx","Seq","countBy","e","display","toArray","v","find","a","range","priority","length","toFixed","join","Button","disabled","onClick","PlayerCard","selectedButtons","player","playerStats","onClickEffect","lastAction","disabledSkills","setDisabledSkills","Subtitle","className","build","class","stamina","ButtonGroup","Object","entries","k","bot","eot","ToggleButton","checked","Set","has","value","id","type","variant","onChange","event","currentTarget","delete","add","Stack","direction","gap","values","flatMap","active","_","turnDeterministicRng","turns","randPerTurn","monsterSeed","monsterChance","Chance","Array","keys","floating","min","max","fixed","playerPassives","s","passive","i","statsRepository","playerActions","reduceFuns","funs","p","phase","sortBy","reduce","acc","origin","effect","oldPlay","oldState","target","enemies","extractFunction","newPlay","newState","lastAttacks","handlePlayerEffect","play","index","amount","d","usedSkill","previousState","initialState","staminaPerTurn","effectFunCall","allRanges","preBotPlay","preBotState","postBotPlay","postBotState","entitiesBot","eff","postEntitiesBotPlay","postEntitiesBotState","rand","turn","turnRng","rng","Math","floor","pop","states","turnFunctions","zip","stats","effectDead","concat","entitiesEot","playerEotEffects","enemiesEotEffects","postPlayerEotPlay","postPlayerEotState","postEotPlay","postEotState","setSelected","Game","game","solveGame","undo","redo","hint","enemiesStats","useState","show","setShowLog","handleCloseLog","playerSkills","monsterHealth","m","isPlayerAlive","areMonstersAlive","endGame","pressed","onUp","pressedKeys","updatePressedKeys","downHandler","key","set","upHandler","useCallback","filter","useEffect","window","addEventListener","removeEventListener","usePressedKeys","valNum","parseInt","save","blob","Blob","JSON","stringify","saveAs","Date","now","Container","fluid","Row","Col","sm","md","Player","xs","Enemy","Modal","onHide","scrollable","centered","Header","closeButton","Footer","selects","options","ElementPicker","section","setField","scrollParams","elRef","useRef","current","scrollIntoView","useScroll","behavior","block","scrollTo","scrollRef","Form","Label","size","ref","PlayerBuilder","onSave","React","form","setForm","randomName","age","setLore","displayType","onSubmit","preventDefault","basic","style","marginBottom","field","Navbar","maxHeight","EncounterBuilder","encounter","setEncounter","found","randomEnemy","geneticAlgorithmConstructor","settingWithDefaults","settings","defaults","mutationFunction","crossoverFunction","fitnessFunction","doesABeatBFunction","population","Error","populationSize","phenotype","b","cloneJSON","object","parse","mutate","crossover","mate","random","evolve","push","populate","otherIndex","temp","randomizePopulationOrder","nextGeneration","competitor","compete","this","best","scored","scoredPopulation","score","bestScore","config","clone","defaultTinkererOptions","playerSeed","weights","monster","debug","tinkerer","iter","optionsOverride","actions","latestState","d6","natural","latest","unavailable","exclude","playerHealth","playerStamina","startPlayerHealth","startPlayerStamina","startMonsterHealth","monsterKillingFitness","playerAlivenessFitness","killSpeedFitness","staminaFitness","fitness","console","log","gen","GeneticAlgorithmConstructor","App","status","setStatus","playerBuild","setPlayerBuild","encounterBuild","setGame","setRedo","seed","fun","playerGameStats","enemyGameStats","toIndexableString","encounterStats","newRedo","slice","iterations","maxBy","isLocalhost","Boolean","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","onUpdate","onSuccess","catch","error","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById","URL","process","href","fetch","headers","response","contentType","get","indexOf","ready","unregister","reload","checkValidServiceWorker","serviceWorkerRegistration","t","parameters","callEffectFun","repo","f","applyKvp","op","obj","copy","effectFun","params","ops","_origin","currentState","attackPlayer","startState","attackMonster","lifespan","addEotEffect","addEnemy","changeDistance","modifyPlayerStamina","_m","clamp","num","updateMonster","override","start","curr","removeMonster","currPlay","currSnap","addBotEffect","isNode","isAnyEffectFunParams","includes","effectRepository","assignObject","validators","is","createIs","pickone","makeRange","number","selfRange","skill","weapon","offhand","consumable","armor","headgear","footwear","charm","names","rage"],"mappings":"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a,EAAQ,CACZ,QACA,QACA,SACA,MACA,QACA,UACA,QACA,QACA,QACA,UACA,SACA,SACA,QACA,WACA,QACA,QACA,SACA,QACA,SACA,SACA,SACA,SACA,WACA,UACA,UACA,SACA,OACA,QACA,QACA,QACA,MACA,SACA,SACA,OACA,UACA,QACA,UACA,SACA,UACA,QACA,SACA,UACA,UACA,SACA,OACA,QACA,SACA,SACA,WACA,QACA,OACA,UACA,OACA,SACA,SACA,QACA,UACA,SACA,SACA,OACA,QACA,QACA,SACA,QACA,QACA,SACA,SACA,OACA,OACA,SACA,QACA,QACA,UACA,SACA,QACA,UACA,UACA,UACA,WACA,QACA,WACA,QACA,SACA,SACA,OACA,SACA,SACA,QACA,OACA,WACA,SACA,QACA,UACA,SACA,WACA,UACA,SACA,SACA,SACA,QACA,QACA,OACA,OACA,QACA,QACA,WACA,QACA,UACA,SACA,WACA,QACA,OACA,OACA,OACA,SACA,WACA,OACA,OACA,QACA,MACA,SACA,OACA,WACA,QACA,UACA,SACA,MACA,UACA,QACA,SACA,QACA,SACA,QACA,QACA,SACA,QACA,UACA,QACA,QACA,SACA,SACA,OACA,QACA,SACA,SACA,UACA,QACA,QACA,QACA,OACA,QACA,OACA,QACA,UACA,SACA,QACA,QACA,QACA,QACA,SACA,UACA,WACA,QACA,QACA,QACA,UACA,SACA,QACA,SACA,UACA,SACA,QACA,QACA,SACA,QACA,OACA,UACA,QACA,SACA,UACA,SACA,MACA,QACA,OACA,MACA,QACA,YACA,OACA,QACA,QACA,SACA,QACA,QACA,UACA,QACA,SACA,UACA,Y","file":"static/js/main.e63bf086.chunk.js","sourcesContent":["import React from \"react\";\nimport { Card, Button } from \"react-bootstrap\";\nimport { Enemy, Effect, EnemyStats } from \"../utils/types\";\nimport { Seq } from \"immutable\";\n\nconst skillPercents = (effects: Effect[]) =>\n  Seq(effects).countBy((e) => e.display).toArray().map(([display, v], idx) => {\n    const { range, priority } = effects.find(a => a.display === display)!!;\n    return <div key={idx}>[{(v / effects.length * 100).toFixed(2)}%] {display} ⏱:{priority} 🏹:{range.length === 5 ? 'Any' : range.map(a => a + 1).join(\", \")}<br key={idx} /></div>\n  });\n\nconst EnemyCard: React.FC<{\n  enemy: Enemy;\n  enemyStats: EnemyStats;\n  latestAttack: string | undefined;\n  isSelected?: boolean;\n  onSelect: () => void;\n  canAct: boolean;\n}> = ({ enemy, enemyStats, isSelected, onSelect, latestAttack, canAct }) => (\n  <Card bg={isSelected ? \"info\" : undefined}>\n    <Card.Body>\n      <Card.Title>{enemy.lore.name} {enemyStats.hp > 0 ? \"\" : (<b>💀DEAD💀</b>)}</Card.Title>\n      <Card.Text>❤:{enemyStats.hp} 🏹:{enemyStats.distance + 1}</Card.Text>\n      {latestAttack && (<Card.Text>Latest attack: {latestAttack}</Card.Text>)}\n      <Card.Text>\n        Next attack prediction:\n        <br />\n        {skillPercents(enemy.rolls[enemyStats.distance].map((idx) => enemy.effects[idx]))}\n        <br />\n      </Card.Text>\n      {canAct && (<Button disabled={isSelected} onClick={onSelect}>Select</Button>)}\n    </Card.Body>\n  </Card>\n);\n\nexport default EnemyCard;\n","import React from \"react\";\nimport { Card, Button, Stack, ToggleButton, ButtonGroup } from \"react-bootstrap\";\nimport { DisabledSkills, Player, PlayerStats } from \"../utils/types\";\nimport { Set } from 'immutable';\n\nconst PlayerCard: React.FC<{\n  selectedButtons: Set<string>,\n  player: Player;\n  playerStats: PlayerStats;\n  canAct: boolean;\n  lastAction: string | undefined;\n  onClickEffect: (index: number) => void;\n  disabledSkills: DisabledSkills;\n  setDisabledSkills: (skills: DisabledSkills) => void;\n}> = ({ selectedButtons, player, playerStats, onClickEffect, canAct, lastAction, disabledSkills, setDisabledSkills }) => (\n  <Card>\n    <Card.Body>\n      <Card.Title>{player.lore.name}{playerStats.hp > 0 ? \"\" : (<b> 💀DEAD💀 </b>)}</Card.Title>\n      <Card.Subtitle className=\"mb-2 text-muted\">\n        {player.build.class.display}\n      </Card.Subtitle>\n      <Card.Text>{playerStats.hp} ❤ {playerStats.stamina} 💪</Card.Text>\n      {lastAction && (<Card.Text>Last action: {lastAction}</Card.Text>)}\n    </Card.Body>\n    {canAct && (<>\n      <b>Passives</b>\n      <ButtonGroup>\n        {Object.entries(player.build)\n          .map(([k, e]) => [k, e, [...(e.bot ?? []), ...(e.eot ?? [])]] as const)\n          .map(([k, e, passives], idx) => passives.length > 0 && (\n            <ToggleButton\n              key={idx}\n              checked={!Set(disabledSkills).has(k)}\n              value={k}\n              id={`passive-skill-${k}`}\n              type=\"checkbox\"\n              variant=\"outline-primary\"\n              onChange={(event) => setDisabledSkills(\n                event.currentTarget.checked\n                  ? Set(disabledSkills).delete(k).toArray()\n                  : Set(disabledSkills).add(k).toArray())}>\n              {e.display}\n            </ToggleButton>\n          ))}\n      </ButtonGroup>\n    </>)}\n    {canAct && (<Card.Body>\n      <Stack direction=\"horizontal\" gap={2}>\n        {Object.values(player.build)\n          .flatMap((a) => a.effects ?? [])\n          .map((e, idx) => (<>\n            <Button\n              key={e.display}\n              active={selectedButtons.has(e.display)}\n              disabled={playerStats.stamina < e.stamina}\n              onClick={(_) => onClickEffect(idx)}\n            >\n              [<i>{idx + 1}</i>] <b>{e.display}</b>\n            </Button>\n            <br key={`$br-{idx}`} />\n            <Card.Text key={`footer-${idx}`}>💪:{e.stamina} ⏱:{e.priority}<br />🏹:{e.range.length === 5 ? 'Any' : e.range.map(a => a + 1).join(\", \")}</Card.Text>\n          </>\n          ))}\n      </Stack>\n    </Card.Body>)}\n  </Card>\n);\n\nexport default PlayerCard;\n","import { Enemies, Player, Snapshot, MonsterTarget, Target, InventoryEffect, EnemiesStats, PlayerStats, Play, RNG, StatsFun, Effect, PlayerTarget, effectFunCall, DisabledSkills } from \"./types\";\nimport { Seq, Set } from \"immutable\";\nimport { allRanges, effectDead, previousState, statsRepository } from \"./data\";\nimport { Chance } from \"chance\";\n// @ts-ignore fails on scripts despite having a d.ts file\nimport { toIndexableString } from 'pouchdb-collate';\nimport { extractFunction } from \"./effectFunctions\";\n\n/**\n * @returns min inclusive, max exclusive rand\n */\nfunction turnDeterministicRng(turns: number, randPerTurn: number, monsterSeed: string | number): RNG {\n  const monsterChance = new Chance(monsterSeed);\n  const monsterRng =\n    [...Array(turns).keys()]\n      .map(_ => [...Array(randPerTurn).keys()]\n        .map(_ => monsterChance.floating({ min: 0, max: 1, fixed: 2 })));\n  return monsterRng as RNG;\n}\n\nexport const turnRng = (play: Play, turn: number): ((min: number, max: number) => number) => {\n  const turnRng = [...play.rng[turn]];\n  return (min: number, max: number) => Math.floor(((max - min) * turnRng.pop()!!) + min);\n}\n\nexport const playerPassives = (player: Player): StatsFun[] =>\n  Object.values(player.build).flatMap((s) => s.passive ?? []).map(i => statsRepository[i]);\n\nexport const playerActions = (player: Player): InventoryEffect[] =>\n  Object.values(player.build).flatMap((s) => s.effects ?? []);\n\nconst enemiesBotEffects = (enemies: Enemies): [MonsterTarget, Effect][] =>\n  enemies.flatMap((e, idx) => (e.bot ?? []).map(eff => [idx as MonsterTarget, eff] as const))\n    // Sure, typescript\n    .map(a => [...a])\n\nconst enemiesEotEffects = (enemies: Enemies): [MonsterTarget, Effect][] =>\n  enemies.flatMap((e, idx) => (e.eot ?? []).map(eff => [idx as MonsterTarget, eff] as const))\n    // Sure, typescript\n    .map(a => [...a])\n\nexport const playerBotEffects = (player: Player, d: string[]): [PlayerTarget, Effect][] =>\n  Object.entries(player.build).flatMap(([k, s]) => !Set(d).has(k) ? s.bot ?? [] : []).map(a => ['Player', a]);\n\nexport const playerEotEffects = (player: Player, d: string[]): [PlayerTarget, Effect][] =>\n  Object.entries(player.build).flatMap(([k, s]) => !Set(d).has(k) ? s.eot ?? [] : []).map(a => ['Player', a]);\n\nexport default function start(player: Player, playerStats: PlayerStats, enemies: Enemies, enemiesStats: EnemiesStats, turns: number, seed: number | string, randPerTurn: number = 20): Play {\n  const [playerGameStats, enemyGameStats] = playerPassives(player).reduce(([p, e], fun) => fun(p, e), [playerStats, enemiesStats] as const);\n  return {\n    player,\n    enemies,\n    states: [{\n      player: playerGameStats,\n      enemies: enemyGameStats,\n      target: 0,\n      lastAttacks: [],\n      disabledSkills: []\n    }],\n    rng: turnDeterministicRng(turns, randPerTurn, seed),\n    turns,\n    id: toIndexableString([player, enemies, turns, seed]),\n    seed,\n  };\n}\n\nconst reduceFuns = (funs: [Target, Effect][], p: Play, s: Snapshot, phase: string): [Play, Snapshot] =>\n  Seq(funs)\n    .sortBy(([_t, a]) => a.priority)\n    .reduce((acc, value) => {\n      const [origin, effect] = value;\n      const [oldPlay, oldState] = acc;\n      const target = origin === 'Player' ? oldState.target : origin;\n      const isInRange = Set([...effect.range]).has(oldState.enemies[target]?.distance!!);\n      if (isInRange) {\n        const [newPlay, newState] = extractFunction(effect)(origin, oldPlay, oldState);\n        return [newPlay, { ...newState, lastAttacks: [...newState.lastAttacks, { origin, display: effect.display, phase }] }]\n      } else {\n        return [oldPlay, { ...oldState, lastAttacks: [...oldState.lastAttacks, { origin, display: `${effect.display} ❌❌WHIFF❌❌`, phase }] }]\n      }\n    }, [p, s]);\n\nconst applyEffectStamina = (amount: number): Effect =>\n  ({ display: `${amount >= 0 ? '+' : ''}${amount} 💪`, effects: [effectFunCall(['Player:Stats', [['+', 'stamina', amount]]])], range: allRanges, priority: 0 });\n\nexport const handlePlayerEffect = (play: Play, index: number): Play => {\n\n  const usedSkill = playerActions(play.player)[index];\n  const bot = previousState(play).bot ?? [];\n  const eot = previousState(play).eot ?? [];\n\n  const initialState: Snapshot = {\n    ...previousState(play),\n    lastAttacks: [],\n    bot: undefined, eot: undefined,\n  };\n\n  // Stamina\n  const [preBotPlay, preBotState] =\n    reduceFuns([['Player', applyEffectStamina(previousState(play).player.staminaPerTurn - usedSkill.stamina)]], play, initialState, 'STAMINA');\n\n  // BOT\n  // Lingering effects\n  const [postBotPlay, postBotState] = reduceFuns(bot, preBotPlay, preBotState, 'BOT');\n  // Player & Monster effects\n  const entitiesBot: [Target, Effect][] = [...playerBotEffects(postBotPlay.player, postBotState.disabledSkills), ...enemiesBotEffects(postBotPlay.enemies)];\n  const [postEntitiesBotPlay, postEntitiesBotState] = reduceFuns(entitiesBot, postBotPlay, postBotState, 'BOT');\n\n  // Turn\n  const rand = turnRng(postEntitiesBotPlay, postEntitiesBotPlay.states.length);\n  const turnFunctions: [Target, Effect][] = Seq(postEntitiesBotPlay.enemies).zip(Seq(postEntitiesBotState.enemies))\n    .map(([e, stats], idx) =>\n      [idx as Target,\n      stats.hp > 0\n        ? e.effects[e.rolls[stats.distance][rand(0, e.rolls[stats.distance].length)]]\n        : effectDead] as const)\n    .concat([['Player' as Target, usedSkill] as const])\n    .toArray()\n    // Sure, typescript\n    .map(a => [...a]);\n\n  const [newPlay, newState] =\n    reduceFuns(turnFunctions, postEntitiesBotPlay, postEntitiesBotState, 'MAIN');\n\n  // EOT\n  // Player & Monster effects\n  const entitiesEot = [...playerEotEffects(newPlay.player, newState.disabledSkills), ...enemiesEotEffects(newPlay.enemies)];\n  const [postPlayerEotPlay, postPlayerEotState] = reduceFuns(entitiesEot, newPlay, newState, 'EOT');\n  // Lingering effects\n  const [postEotPlay, postEotState] = reduceFuns(eot, postPlayerEotPlay, postPlayerEotState, 'EOT');\n\n  return {\n    ...postEotPlay,\n    states: [...postEotPlay.states, postEotState],\n  };\n};\n\nexport const setSelected = (play: Play, target: MonsterTarget): Play => {\n  play.states[play.states.length - 1].target = target;\n  return {\n    ...play,\n    states: [...play.states],\n  };\n}\n\nexport const setDisabledSkills = (play: Play, disabled: DisabledSkills): Play => {\n  play.states[play.states.length - 1].disabledSkills = disabled;\n  return {\n    ...play,\n    states: [...play.states],\n  };\n}\n","import { Container, Row, Col, Card, Modal, ButtonGroup } from \"react-bootstrap\";\n\nimport { DisabledSkills, MonsterTarget, Play } from \"../utils/types\";\n\nimport EnemyCard from \"./Enemy\";\nimport PlayerCard from \"./Player\";\nimport usePressedKeys from \"../hooks/usePressedKeys\";\nimport { playerActions } from \"../utils/playGame\";\nimport { Seq, Set } from \"immutable\";\nimport { previousState } from \"../utils/data\";\nimport { Button } from \"react-bootstrap\";\nimport saveAs from 'file-saver';\nimport { useCallback, useState } from \"react\";\n\nexport type GameProps = {\n  game: Play;\n  setSelected: (target: MonsterTarget) => void;\n  setDisabledSkills: (disabled: DisabledSkills) => void;\n  handlePlayerEffect: (index: number) => void,\n  solveGame: (iterations: number) => void,\n  hint: (iterations: number) => void,\n  undo: () => void\n  redo: (() => void) | undefined;\n};\n\nconst Game = ({ handlePlayerEffect, setSelected, setDisabledSkills, game, solveGame, undo, redo, hint }: GameProps): JSX.Element => {\n  const { player, enemies } = game;\n  const { player: playerStats, enemies: enemiesStats, target, lastAttacks, disabledSkills } = previousState(game);\n  const [show, setShowLog] = useState(false);\n\n  const handleCloseLog = () => setShowLog(false);\n  const handleShowLog = () => setShowLog(true);\n\n  const playerSkills = playerActions(player);\n  const monsterHealth = enemiesStats.reduce((acc, m) => m.hp + acc, 0);\n  const isPlayerAlive = playerStats.hp > 0;\n  const areMonstersAlive = monsterHealth > 0;\n  const endGame = game.states.length <= game.turns;\n  const canAct = isPlayerAlive && areMonstersAlive && endGame;\n\n  const pressed = usePressedKeys((key) => {\n    if (!canAct) return;\n    const valNum = parseInt(key);\n    if (valNum > 0 && valNum <= playerSkills.length) {\n      const hasStamina = playerSkills[valNum - 1].stamina <= playerStats.stamina;\n      if (!hasStamina) return;\n      handlePlayerEffect(valNum - 1);\n    }\n  });\n\n  const selectedButtons = Set<string>([...pressed].flatMap((key: string) => {\n    const valNum = parseInt(key);\n    if (valNum > 0 && valNum <= playerSkills.length) {\n      return [playerSkills[valNum - 1].display];\n    } else {\n      return [];\n    }\n  }));\n\n  const save = useCallback(() => {\n    const blob = new Blob([JSON.stringify(game)], { type: \"application/json;charset=utf-8\" });\n    saveAs(blob, `buildmancer-${Date.now()}.json`);\n  }, [game]);\n\n  return (\n    <>\n      <Container fluid>\n        <Row className=\"justify-content-center align-items-flex-start\">\n          <Col sm={12} md={8}>\n            <Card.Title>\n              Turn {game.states.length} out of {game.turns} {!isPlayerAlive ? (<b>❌❌DEFEAT❌❌</b>) : !areMonstersAlive ? (<b>🎉🎉VICTORY🎉🎉</b>) : \"\"}\n            </Card.Title>\n            <PlayerCard\n              player={player}\n              playerStats={playerStats}\n              disabledSkills={disabledSkills}\n              setDisabledSkills={setDisabledSkills}\n              onClickEffect={(idx) => handlePlayerEffect(idx)}\n              selectedButtons={selectedButtons}\n              lastAction={lastAttacks.filter(a => a.origin === 'Player').map(a => `[${a.phase}] ${a.display}`).join(\" -> \") ?? undefined}\n              canAct={canAct} />\n            <Row>\n              <ButtonGroup>\n                {game.states.length > 1 && (<Button onClick={(_) => undo()}>Undo ↩</Button>)}\n                {redo && (<Button onClick={(_) => redo()}>Redo ↪</Button>)}\n              </ButtonGroup>\n            </Row>\n            <Row>\n              <ButtonGroup>\n                <Button onClick={(_) => hint(100)}>Hint</Button>\n              </ButtonGroup>\n            </Row>\n            <Row>\n              {Seq(enemies).zip(Seq(enemiesStats)).map(([enemy, stats], idx) => (\n                <Col key={idx} xs={6} md={4}>\n                  <EnemyCard\n                    key={idx}\n                    enemyStats={stats}\n                    enemy={enemy}\n                    canAct={canAct}\n                    latestAttack={Seq(lastAttacks).filter(({ origin }) => origin === idx).map(a => `[${a.phase}] ${a.display}`).join(\" -> \") ?? undefined}\n                    isSelected={idx === target}\n                    onSelect={() => setSelected(idx as MonsterTarget)}\n                  />\n                </Col>\n              ))}\n            </Row>\n            <Card.Title>\n              Debug\n            </Card.Title>\n            <Row>\n              <ButtonGroup>\n                <Button onClick={handleShowLog}>Log 🗒</Button>\n                <Button onClick={save}>Dump to file 📂</Button>\n              </ButtonGroup>\n            </Row>\n            <Card.Title>\n              Cheats\n            </Card.Title>\n            <Row>\n              <ButtonGroup>\n                <Button onClick={(_) => solveGame(100)}>Solve ⌛</Button>\n                <Button onClick={(_) => solveGame(1000)}>Solve thoroughly ⌛⌛⌛</Button>\n              </ButtonGroup>\n            </Row>\n          </Col>\n        </Row>\n      </Container>\n      <Modal show={show} onHide={handleCloseLog} scrollable={true} centered={true}>\n        <Modal.Header closeButton>\n          <Modal.Title>Game Log</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          {game.states.map((s, idx) => (\n            <>\n              <b>Turn {idx}</b><br />\n              Player: {JSON.stringify(s.player, null, 2)}<br />\n              Enemies: {JSON.stringify(s.enemies, null, 2)}<br />\n              Target [{s.target}]<br />\n              Eot? Bot?: {JSON.stringify({ bot: s.bot, eot: s.eot }, null, 2)}<br />\n              Actions:<br />\n              {s.lastAttacks.map(a => (<>  {JSON.stringify(a, null, 2)}<br /></>))}\n            </>\n          ))}\n        </Modal.Body>\n        <Modal.Footer>\n          <Button variant=\"primary\" onClick={handleCloseLog}>\n            Close\n          </Button>\n        </Modal.Footer>\n      </Modal>\n    </>\n  );\n};\n\nexport default Game;\n","import { useEffect, useCallback, useState } from \"react\";\n\nexport default function usePressedKeys(onUp: (e: string) => void): Set<string> {\n\n  const [pressedKeys, updatePressedKeys] = useState(new Set<string>());\n\n  const downHandler = ({ key }: { key: string }) => {\n    updatePressedKeys((set) => new Set([...set, key]));\n  }\n\n  const upHandler = useCallback(({ key }: { key: string }) => {\n    updatePressedKeys((set) => new Set([...set].filter((k) => k !== key)));\n    onUp(key);\n  }, [onUp]);\n\n  useEffect(() => {\n    window.addEventListener(\"keydown\", downHandler);\n    window.addEventListener(\"keyup\", upHandler);\n\n    return () => {\n      window.removeEventListener(\"keydown\", downHandler);\n      window.removeEventListener(\"keyup\", upHandler);\n    };\n  }, [upHandler]);\n\n  return pressedKeys;\n}","import React from \"react\";\nimport { Container, Row, Form, Button, ButtonGroup, Navbar } from \"react-bootstrap\";\nimport useScroll from \"../hooks/useScroll\";\n\nimport { Player, PlayerStats } from \"../utils/types\";\nimport { build, randomName } from \"../utils/data\";\nimport Chance from 'chance';\n\nconst version = 'dev';\n\nconst selects = Object.entries(build).map(([type, options]) => ({\n  type,\n  options: options.map(({ display }, value) => ({\n    display,\n    value,\n  })),\n}));\n\nconst PlayerBuilder = ({ onSave }: { onSave: (player: Player, playerStats: PlayerStats) => void }) => {\n  const [form, setForm] = React.useState<Record<string, number>>(\n    selects.reduce(\n      (acc, { type, options }) => ({\n        ...acc,\n        [type]: options[0].value,\n      }),\n      {},\n    ),\n  );\n  const [lore, setLore] = React.useState({\n    name: randomName(),\n    age: new Chance().age(),\n  });\n  const setField = (field: string, value: number) => {\n    setForm({\n      ...form,\n      [field]: value,\n    });\n  };\n  const onFormSubmit = (e: any) => {\n    e.preventDefault();\n    onSave({\n      id: \"p-1\",\n      lore,\n      build: Object.entries(form).reduce((acc, [type, value]) => {\n        return {\n          ...acc,\n          [type]: build[type][value]\n        }\n      }, { basic: build.basic[0] }),\n    }, {\n      hp: 25,\n      stamina: 6,\n      staminaPerTurn: 1,\n    });\n  };\n  const displayType = (type: string) => <b>{build[type][form[type]].display}</b>;\n  return (\n    <Form onSubmit={onFormSubmit}>\n      Build: {version}\n      <Container fluid style={{ marginBottom: '105px' }}>\n        <Row className=\"g-2\">\n          {selects.map(({ type, options }) =>\n            <ElementPicker\n              setField={(value) => setField(type, value)}\n              section={type}\n              options={options}\n              key={type}\n              isSelected={(value) => form[type] === value} />\n          )}\n        </Row>\n        <Navbar fixed=\"bottom\" bg=\"dark\" variant=\"dark\" style={{ maxHeight: '100px' }}>\n          <Container>\n            <Navbar.Text>You are <i onClick={() => setLore((lore) => ({ ...lore, name: randomName() }))}>{lore.name}</i>, the {displayType('skill')} {displayType('class')} {displayType('charm')}<br />who wields a {displayType('weapon')} and a {displayType('offhand')}<br />and wears {displayType('armor')} with {displayType('headgear')} and {displayType('footwear')}</Navbar.Text>\n            <Button type=\"submit\">Pick your foe!</Button>\n          </Container>\n        </ Navbar>\n      </Container >\n    </Form >\n  );\n};\n\nconst ElementPicker = ({ isSelected, section, options, setField }: {\n  options: {\n    display: string;\n    value: number;\n  }[], isSelected: (value: number) => boolean, setField: (value: number) => void, section: string\n}) => {\n  const [scrollTo, scrollRef] = useScroll({\n    behavior: 'smooth',\n    block: 'start',\n  });\n\n  return (\n    <Row>\n      <Form.Label>{section}</Form.Label>\n      <br />\n      <ButtonGroup size=\"lg\" className=\"mb-2\">\n        {options.map(({ display, value }) => (\n          <Button\n            key={value}\n            name={section}\n            id={`${value}`}\n            variant={isSelected(value) ? 'primary' : 'secondary'}\n            onClick={() => { setField(value); scrollTo(); }}\n          >{display}</Button>\n        ))}\n      </ButtonGroup>\n      <div id={`${section}-scroll`} ref={scrollRef} />\n    </Row>\n  );\n}\n\nexport default PlayerBuilder;\n","import { Ref, useRef } from \"react\";\n\ntype ScrollToFn = () => void;\n\nexport default function useScroll<T extends Element>(scrollParams: ScrollIntoViewOptions): [ScrollToFn, Ref<any>] {\n  const elRef = useRef<T>(null);\n  const executeScroll = () => elRef.current!.scrollIntoView(scrollParams);\n\n  return [executeScroll, elRef];\n};\n","import React from \"react\";\nimport { Container, ButtonGroup, Form, Button, Navbar } from \"react-bootstrap\";\n\nimport { Player, Enemies, Enemy, EnemiesStats, EnemyStats } from \"../utils/types\";\nimport { enemies, randomEnemy } from \"../utils/data\";\n\nconst EncounterBuilder = ({ player, onSave }: { player: Player, onSave: (enemies: Enemies, enemiesStats: EnemiesStats) => void }) => {\n  const [encounter, setEncounter] = React.useState<[Enemy, EnemyStats][]>([]);\n  const onFormSubmit = (e: any) => {\n    e.preventDefault();\n    const enemies = encounter.map(a => a[0]);\n    const enemiesStats = encounter.map(a => a[1]);\n    // Size enforced by UI\n    onSave(enemies as Enemies, enemiesStats as EnemiesStats);\n  };\n  const displayType = (type: string) => <b>{player.build[type].display}</b>;\n  return (\n    <Form onSubmit={onFormSubmit}>\n      <Container fluid style={{ marginBottom: encounter.length > 0 ? '205px' : '105px' }}>\n        <ButtonGroup size=\"lg\" className=\"mb-2\">\n          {enemies.map((enemy) =>\n            <Button\n              key={enemy[0].lore.name}\n              disabled={encounter.length > 4}\n              onClick={() => setEncounter((e) => [...e, enemy])}\n            >{enemy[0].lore.name}</Button>\n          )}\n        </ButtonGroup>\n      </Container >\n      {\n        encounter.length > 0 &&\n        <Navbar fixed=\"bottom\" bg=\"dark\" variant=\"dark\" style={{ marginBottom: '100px' }}>\n          <Container fluid>\n            <ButtonGroup size=\"sm\" className=\"mb-2\">\n              {encounter.map((enemy, idx) => <Button key={`${enemy[0].lore.name}-${idx}`} onClick={() => setEncounter((e) => { let found = false; return e.filter((m) => (found || m[0].lore.name !== enemy[0].lore.name) || !(found = true)); })}>{enemy[0].lore.name}</Button>)}\n            </ButtonGroup>\n          </Container>\n        </ Navbar>\n      }\n      <Navbar fixed=\"bottom\" bg=\"dark\" variant=\"dark\" style={{ maxHeight: '100px' }}>\n        <Container>\n          <Navbar.Text>You are <i>{player.lore.name}</i>, the {displayType('skill')} {displayType('class')} {displayType('charm')}<br />who wields a {displayType('weapon')} and a {displayType('offhand')}<br />and wears {displayType('armor')} with {displayType('headgear')} and {displayType('footwear')}</Navbar.Text>\n          <ButtonGroup>\n            <Button\n              disabled={encounter.length < 0 || encounter.length > 5}\n              onClick={(_) => setEncounter((e) => [...e, randomEnemy()])}>\n              Add Random\n            </Button>\n            <Button type=\"submit\" disabled={encounter.length < 1 || encounter.length > 5}>To Battle!</Button>\n          </ButtonGroup>\n        </Container>\n      </ Navbar>\n    </Form >\n  );\n};\n\nexport default EncounterBuilder;\n","export default function geneticAlgorithmConstructor(options) {\n\n    function settingDefaults() {\n        return {\n\n            mutationFunction: function (phenotype) { return phenotype },\n\n            crossoverFunction: function (a, b) { return [a, b] },\n\n            fitnessFunction: function (phenotype) { return 0 },\n\n            doesABeatBFunction: undefined,\n\n            population: [],\n            populationSize: 100,\n        }\n    }\n\n    function settingWithDefaults(settings, defaults) {\n        settings = settings || {}\n\n        settings.mutationFunction = settings.mutationFunction || defaults.mutationFunction\n        settings.crossoverFunction = settings.crossoverFunction || defaults.crossoverFunction\n        settings.fitnessFunction = settings.fitnessFunction || defaults.fitnessFunction\n\n        settings.doesABeatBFunction = settings.doesABeatBFunction || defaults.doesABeatBFunction\n\n        settings.population = settings.population || defaults.population\n        if (settings.population.length <= 0) throw Error(\"population must be an array and contain at least 1 phenotypes\")\n\n        settings.populationSize = settings.populationSize || defaults.populationSize\n        if (settings.populationSize <= 0) throw Error(\"populationSize must be greater than 0\")\n\n        return settings\n    }\n\n    var settings = settingWithDefaults(options, settingDefaults())\n\n    function populate() {\n        var size = settings.population.length\n        while (settings.population.length < settings.populationSize) {\n            const rand = Math.floor(Math.random() * size);\n            settings.population.push(\n                mutate(\n                    cloneJSON(settings.population[Math.floor(rand)])\n                )\n            )\n        }\n    }\n\n    function cloneJSON(object) {\n        return JSON.parse(JSON.stringify(object))\n    }\n\n    function mutate(phenotype) {\n        return settings.mutationFunction(cloneJSON(phenotype))\n    }\n\n    function crossover(phenotype) {\n        phenotype = cloneJSON(phenotype)\n        var mate = settings.population[Math.floor(Math.random() * settings.population.length)]\n        mate = cloneJSON(mate)\n        return settings.crossoverFunction(phenotype, mate)[0]\n    }\n\n    function doesABeatB(a, b) {\n        if (settings.doesABeatBFunction) {\n            return settings.doesABeatBFunction(a, b)\n        } else {\n            return settings.fitnessFunction(a) >= settings.fitnessFunction(b)\n        }\n    }\n\n    function compete() {\n        var nextGeneration = []\n\n        for (var p = 0; p < settings.population.length - 1; p += 2) {\n            var phenotype = settings.population[p];\n            var competitor = settings.population[p + 1];\n\n            nextGeneration.push(phenotype)\n            if (doesABeatB(phenotype, competitor)) {\n                if (Math.random() < 0.5) {\n                    nextGeneration.push(mutate(phenotype))\n                } else {\n                    nextGeneration.push(crossover(phenotype))\n                }\n            } else {\n                nextGeneration.push(competitor)\n            }\n        }\n\n        settings.population = nextGeneration;\n    }\n\n\n\n    function randomizePopulationOrder() {\n\n        for (var index = 0; index < settings.population.length; index++) {\n            var otherIndex = Math.floor(Math.random() * settings.population.length)\n            var temp = settings.population[otherIndex]\n            settings.population[otherIndex] = settings.population[index]\n            settings.population[index] = temp\n        }\n    }\n\n    return {\n        evolve: function (options) {\n\n            if (options) {\n                settings = settingWithDefaults(options, settings)\n            }\n\n            populate()\n            randomizePopulationOrder()\n            compete()\n            return this\n        },\n        best: function () {\n            var scored = this.scoredPopulation()\n            var result = scored.reduce(function (a, b) {\n                return a.score >= b.score ? a : b\n            }, scored[0]).phenotype\n            return cloneJSON(result)\n        },\n        bestScore: function () {\n            return settings.fitnessFunction(this.best())\n        },\n        population: function () {\n            return cloneJSON(this.config().population)\n        },\n        scoredPopulation: function () {\n            return this.population().map(function (phenotype) {\n                return {\n                    phenotype: cloneJSON(phenotype),\n                    score: settings.fitnessFunction(phenotype)\n                }\n            })\n        },\n        config: function () {\n            return cloneJSON(settings)\n        },\n        clone: function (options) {\n            return geneticAlgorithmConstructor(\n                settingWithDefaults(options,\n                    settingWithDefaults(this.config(), settings)\n                )\n            )\n        }\n    }\n}\n","import GeneticAlgorithmConstructor, { GeneticAlgorithmConfig, ScoredPhenotype } from '../geneticalgorithm/geneticalgorithm';\nimport { handlePlayerEffect, playerActions, setSelected } from '../utils/playGame';\nimport Chance from 'chance';\nimport { MonsterTarget, Play } from '../utils/types';\nimport { previousState } from '../utils/data';\nimport prettyjson from 'prettyjson';\nimport { Seq } from 'immutable';\n\nexport type TinkererOptions = typeof defaultTinkererOptions & { turns?: number };\n\nexport const defaultTinkererOptions = {\n  playerSeed: \"Miau\",\n  weights: { monster: 0.70, player: 0.125, turn: 0.05, stamina: 0.075 },\n  debug: false,\n};\n\nexport const gameRender = (results: ScoredPhenotype<Play>[]): string => {\n  const best: ScoredPhenotype<Play> = Seq(results).maxBy(a => a.score)!!;\n  const lastState = previousState(best.phenotype);\n  return `BEST BY ${best.score} in ${best.phenotype.states.length - 1} turns\\n` +\n    prettyjson.render([\n      lastState.lastAttacks.map(({ origin, display, phase }) => [origin === 'Player' ? 'Player' : `${best.phenotype.enemies[origin]!!.lore.name} [${origin}]`, display, phase]),\n      Seq(best.phenotype.enemies).zip(Seq(lastState.enemies)).flatMap(([enemy, stats], idx) => [`[${idx}] ${enemy.lore.name}`, stats]).toArray(),\n      lastState.player,\n    ]);\n}\n\nexport default function tinkerer(play: Play, iter: number, optionsOverride?: Partial<TinkererOptions>): ScoredPhenotype<Play>[] {\n  const options: TinkererOptions = { ...defaultTinkererOptions, ...optionsOverride };\n  const range = [...Array(iter).keys()];\n  const rand = new Chance(options.playerSeed);\n  const actions = playerActions(play.player);\n  const config: GeneticAlgorithmConfig<Play> = {\n    mutationFunction: (oldPlay) => {\n      const latestState = previousState(oldPlay);\n      const monsterHealth = latestState.enemies.reduce((acc, monster) => acc + monster.hp, 0);\n      const playerHealth = latestState.player.hp;\n      if (playerHealth === 0 || monsterHealth === 0) {\n        return oldPlay;\n      }\n      let newPlay = oldPlay;\n      while (rand.d6() === 6 || (previousState(newPlay).enemies[previousState(newPlay).target]?.hp ?? 0) <= 0) {\n        newPlay = setSelected(newPlay, rand.natural({ min: 0, max: previousState(newPlay).enemies.length - 1 }) as MonsterTarget);\n      }\n      const latest = previousState(newPlay);\n      const unavailable = actions.map((a, idx) => [a, idx] as const).filter(([a, _]) => a.stamina > latest.player.stamina).map(([_, idx]) => idx);\n      newPlay = handlePlayerEffect(\n        newPlay,\n        rand.natural({ min: 0, max: actions.length - 1, exclude: unavailable })\n      );\n      return newPlay;\n    },\n    fitnessFunction: (play) => {\n      const latestState = previousState(play);\n      const monsterHealth = latestState.enemies.reduce((acc, monster) => acc + monster.hp, 0);\n      const playerHealth = latestState.player.hp;\n      const playerStamina = latestState.player.stamina;\n      const startPlayerHealth = play.states[0].player.hp;\n      const startPlayerStamina = play.states[0].player.hp;\n      const startMonsterHealth = play.states[0].enemies.reduce((acc, monster) => acc + monster.hp, 0);\n\n      const monsterKillingFitness = ((startMonsterHealth - monsterHealth) / startMonsterHealth);\n      const playerAlivenessFitness = (playerHealth / startPlayerHealth);\n      const killSpeedFitness = (play.turns - play.states.length) / play.turns;\n      const staminaFitness = (playerStamina / startPlayerStamina);\n\n      const fitness = (monsterKillingFitness * options.weights.monster) + (playerAlivenessFitness * options.weights.player) + (killSpeedFitness * options.weights.turn) + (staminaFitness * options.weights.stamina);\n      if (options.debug) {\n        console.log(`MH: ${monsterHealth} | PH: ${playerHealth} | TR: ${play.states.length}\\nFitness: ${fitness} | MF: ${monsterKillingFitness} | PF: ${playerAlivenessFitness} | SF: ${staminaFitness} | TF: ${killSpeedFitness}\\nWeights: ${JSON.stringify(options.weights)}`);\n      }\n      return fitness;\n    },\n    population: range.map((_) => play),\n    populationSize: iter,\n  }\n\n  const turns = optionsOverride?.turns ? optionsOverride?.turns : play.turns;\n  let gen = new GeneticAlgorithmConstructor<Play>(config);\n  for (let i = 0; i < turns; i++) {\n    gen = gen.evolve();\n  }\n  return gen.scoredPopulation();\n}\n","import React from \"react\";\nimport \"./App.css\";\n// import { readString } from \"react-papaparse\";\nimport { Enemies, EnemiesStats, Player, PlayerStats, Snapshot, Play } from \"./utils/types\";\n\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport Game from \"./components/Game\";\nimport PlayerBuilder from \"./components/PlayerBuilder\";\nimport EncounterBuilder from \"./components/EncounterBuilder\";\nimport play, { handlePlayerEffect, setDisabledSkills, setSelected } from \"./utils/playGame\";\nimport tinkerer from \"./tinkerer/tinkerer\";\nimport { Seq } from \"immutable\";\nimport { previousState } from \"./utils/data\";\n\ntype AppStatus = \"buildPlayer\" | \"buildEncounter\" | \"game\" | \"endGame\";\n\nfunction App() {\n  const [status, setStatus] = React.useState<AppStatus>(\"buildPlayer\");\n  const [playerBuild, setPlayerBuild] = React.useState<\n    [Player, PlayerStats] | undefined\n  >();\n  const [encounterBuild, setEncounter] = React.useState<[Enemies, EnemiesStats]>();\n  const [game, setGame] = React.useState<Play | undefined>();\n  const [redo, setRedo] = React.useState<Snapshot[]>([]);\n\n  const handleSavePlayer = (player: Player, playerStats: PlayerStats) => {\n    setPlayerBuild([player, playerStats]);\n    setStatus(\"buildEncounter\");\n  };\n  const handleSaveEncounter = (encounter: Enemies, encounterStats: EnemiesStats) => {\n    setEncounter([encounter, encounterStats]);\n    setStatus(\"game\");\n  }\n\n  if (!game && playerBuild && encounterBuild) {\n    const [player, playerStats] = playerBuild;\n    const [encounter, encounterStats] = encounterBuild;\n    const game = play(player, playerStats, encounter, encounterStats, 50, 'PACC');\n    setGame(game);\n  }\n\n  return (\n    <div className=\"App\">\n      {status === \"buildPlayer\" ? (\n        <PlayerBuilder onSave={handleSavePlayer} />\n      ) : null}\n      {status === \"buildEncounter\" && playerBuild ? (\n        <EncounterBuilder\n          player={playerBuild[0]}\n          onSave={handleSaveEncounter}\n        />\n      ) : null}\n      {status === \"game\" && game ? (\n        <Game\n          game={game}\n          redo={redo.length > 0 ? (() => {\n            const newRedo = [...redo];\n            const latest = newRedo.pop() as Snapshot;\n            setRedo(newRedo);\n            setGame({ ...game, states: [...game.states, latest] });\n          }) : undefined}\n          undo={() => {\n            setRedo([...redo, previousState(game)]);\n            setGame({ ...game, states: [game.states[0], ...game.states.slice(1, -1)] });\n          }}\n          setSelected={(idx) => { setRedo([]); setGame(setSelected(game, idx)); }}\n          setDisabledSkills={(disabled) => { setRedo([]); setGame(setDisabledSkills(game, disabled)) }}\n          handlePlayerEffect={(idx) => { setRedo([]); setGame(handlePlayerEffect(game, idx)); }}\n          solveGame={(iterations) => setGame(Seq(tinkerer(game, iterations, { turns: game.turns - game.states.length })).maxBy(a => a.score)!!.phenotype)}\n          hint={(iterations) =>\n            setGame({\n              ...game,\n              states: [...game.states, Seq(tinkerer(game, iterations, { turns: game.turns - game.states.length })).maxBy(a => a.score)!!.phenotype.states[game.states.length]]\n            })\n          }\n        />\n      ) : null}\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://cra.link/PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://cra.link/PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorkerRegistration from './serviceWorkerRegistration';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://cra.link/PWA\nserviceWorkerRegistration.register();\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","import { Opaque } from \"type-fest\";\nimport { EffectFunParams, EffectFunRepo, EffectFunRepoIndex } from \"./effectFunctions\";\n\nexport type Tuple<T, N extends number> = N extends N ? number extends N ? T[] : _TupleOf<T, N, []> : never;\ntype _TupleOf<T, N extends number, R extends unknown[]> = R['length'] extends N ? R : _TupleOf<T, N, [T, ...R]>;\n\nexport type Nel<T> = [T, ...T[]];\n\ntype Length<T extends any[]> =\n  T extends { length: infer L } ? L : never;\ntype BuildTuple<L extends number, T extends any[] = []> =\n  T extends { length: L } ? T : BuildTuple<L, [...T, any]>;\nexport type Subtract<A extends number, B extends number> =\n  BuildTuple<A> extends [...(infer U), ...BuildTuple<B>]\n  ? Length<U>\n  : never;\ntype EQ<A, B> =\n  A extends B\n  ? (B extends A ? true : false)\n  : false;\ntype AtTerminus<A extends number, B extends number> =\n  A extends 0\n  ? true\n  : (B extends 0 ? true : false);\ntype LT<A extends number, B extends number> =\n  AtTerminus<A, B> extends true\n  ? EQ<A, B> extends true\n  ? false\n  : (A extends 0 ? true : false)\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  : LT<Subtract<A, 1>, Subtract<B, 1>>;\n\nexport type TupleUpTo<T, N extends number> =\n  EQ<N, 1> extends true ? [T] : TupleUpTo<T, Subtract<N, 1>> | Tuple<T, N>;\n\nexport type UpTo<N extends number> =\n  EQ<N, 0> extends true ? 0 : UpTo<Subtract<N, 1>> | N\n\nexport type PlayerStats = Record<string, number> & { hp: number, stamina: number, staminaPerTurn: number };\nexport type EnemyStats = Record<string, number> & { hp: number, distance: UpTo<Subtract<Distances, 1>> };\n\nexport type Priorities = 5;\nexport type Distances = 5;\nexport type MonsterCount = 5;\nexport type Staminas = 5;\n\nexport type EffectSummary = {\n  origin: Target;\n  display: string;\n  phase: string;\n}\n\nexport type DisabledSkills = string[];\nexport type Snapshot = {\n  player: PlayerStats;\n  enemies: EnemiesStats;\n  target: MonsterTarget;\n  lastAttacks: EffectSummary[];\n  bot?: Nel<[Target, Effect]>;\n  eot?: Nel<[Target, Effect]>;\n  disabledSkills: DisabledSkills;\n};\n\nexport type RNG = Opaque<number[][], 'RNG'>;\n\nexport type Play = {\n  states: Nel<Snapshot>;\n  player: Player;\n  enemies: Enemies,\n  rng: RNG;\n  turns: number;\n  id: string;\n  seed: string | number;\n};\n\ntype ItemOrMonster = string /* TODO all items */ | 'Monster';\nexport type FunIndex = `${ItemOrMonster}:${string}`;\n\nexport type StatsFunIndex = FunIndex;\nexport type StatsFunRepo = { [key: StatsFunIndex]: StatsFun; }\nexport type StatsFun = (player: PlayerStats, enemies: EnemiesStats) => [PlayerStats, EnemiesStats];\n\nexport type Ranges = UpTo<Subtract<Distances, 1>>[];\n\ntype EffectFunCallT = {\n  index: EffectFunRepoIndex;\n  parameters: EffectFunParams<EffectFunRepoIndex>;\n};\nexport type EffectFunCall = Opaque<EffectFunCallT, EffectFunCallT>;\nexport const effectFunCall = <T extends EffectFunRepoIndex>(t: EffectFunParams<T> extends undefined ? [T] : [T, EffectFunParams<T>]): EffectFunCall =>\n  ({ index: t[0], parameters: t[1] }) as EffectFunCall;\nexport const callEffectFun = <T extends EffectFunRepoIndex>(repo: EffectFunRepo, t: T, p: EffectFunParams<T>) => {\n  const f = repo[t];\n  // @ts-expect-error: index and parameters are enforced to be compatible at construction and the runtime check above ^^^^\n  return f(p);\n}\n\ntype EffectT = {\n  display: string;\n  effects: Nel<EffectFunCall>;\n  priority: UpTo<Subtract<Priorities, 1>>;\n  range: Ranges;\n};\nexport type Effect = EffectT;\nexport type InventoryEffect = Effect & {\n  stamina: UpTo<Subtract<Staminas, 1>>;\n};\n\nexport type MonsterTarget = UpTo<Subtract<MonsterCount, 1>>;\nexport type PlayerTarget = 'Player';\nexport type Target = MonsterTarget | PlayerTarget;\n\nexport type Build = Record<\n  string,\n  Item\n>;\n\nexport type Item = {\n  display: string;\n  passive?: StatsFunIndex;\n  bot?: Nel<Effect>;\n  eot?: Nel<Effect>;\n  effects?: Nel<InventoryEffect>;\n  [key: string]: any;\n};\n\nexport type Player = {\n  id: string;\n  lore: Record<string, string | number>;\n  build: Build;\n};\n\n// Place in the array for now\ntype EffectIdentity = number;\nexport type Enemy = {\n  lore: Record<string, string | number>;\n  effects: Nel<Effect>;\n  rolls: Tuple<EffectIdentity[], Distances>;\n  bot?: Nel<Effect>;\n  eot?: Nel<Effect>;\n}\n\nexport type Enemies = TupleUpTo<Enemy, MonsterCount>;\nexport type EnemiesStats = TupleUpTo<EnemyStats, MonsterCount>;\n","import { allRanges, enemies, startState } from \"./data\";\nimport { EffectFun, ParametrizedFun, ReduceFun } from \"./effectFunctions\";\nimport { Effect, effectFunCall, Enemies, EnemiesStats, Enemy, EnemyStats, MonsterTarget, Nel, Play, PlayerStats, Snapshot, Target } from \"./types\";\n\nexport type EffectFunctionRepository = { [k in keyof EffectFunctionT]: (params: EffectFunctionT[k]) => ReduceFun };\nexport type Op = '+' | '*';\nexport type StatsFun<T> = [Op, keyof T, T[keyof T]];\nexport type EffectFunctionT = {\n  'Player:Stats': Nel<StatsFun<PlayerStats>>;\n  'Monster:Stats': Nel<StatsFun<EnemyStats>>;\n  'Target:Bleed': { target: Target; lifespan: number };\n  'Monster:Summon': { enemy: number };\n  'Monster:Dead': undefined;\n  'Basic:Rest': undefined;\n  'Basic:Advance': undefined;\n  'Basic:Retreat': undefined;\n  'Axe:Chop': undefined;\n  'Axe:Cut': undefined;\n  'Hook:GetHere': undefined;\n  'Monster:Swipe': undefined;\n  'Monster:Roar': undefined;\n  'Monster:Jump': undefined;\n  'BootsOfFlight:EOT': undefined;\n}\n\nconst applyObject = <T extends { [k: string]: number }>(op: Op, obj: T, apply: Partial<T>): T =>\n  Object.entries(apply).reduce((acc, [k, v]) => {\n    if (v == null) {\n      return acc;\n    }\n    return applyKvp(op, acc, k, v);\n  }, obj);\n\nconst applyKvp = <T extends { [k: string]: number }>(op: Op, obj: T, k: keyof T, v: T[keyof T]): T => {\n  const copy = { ...obj };\n  op === '+'\n    ? copy[k] = copy[k] + v as T[keyof T]\n    : op === '*'\n      ? copy[k] = copy[k] * v as T[keyof T]\n      : void 0;\n  return copy;\n};\n\nconst effectFun = <T>(...funs: Nel<ParametrizedFun<T>>): EffectFun<T> =>\n  // TODO check direction of the fold\n  (funs.length > 1\n    ? funs.reduce((acc, value) => (params) => (origin, play, oldState) => {\n      const [newPlay, newState] = acc(params)(origin, play, oldState);\n      return value(params)(origin, newPlay, newState);\n    }) : funs[0]) as EffectFun<T>;\n\nconst repo: EffectFunctionRepository = {\n  'Player:Stats': effectFun(\n    (ops) => (_origin, play, currentState) => [play, { ...currentState, player: ops.reduce((player, [op, k, v]) => applyKvp(op, player, k, v), currentState.player) }],\n  ),\n  'Monster:Stats': effectFun(\n    (ops) => (_origin, play, currentState) => [play, { ...currentState, enemies: currentState.enemies.map((e, idx) => idx === currentState.target ? ops.reduce((enemy, [op, k, v]) => applyKvp(op, enemy, k, v), e) : e) as EnemiesStats }],\n  ),\n  'Target:Bleed': effectFun(\n    ({ target }) => (_origin, play, currentState) => [play, target === 'Player' ? actions.attackPlayer(startState(play), currentState, 1) : actions.attackMonster(startState(play), currentState, target, 1)],\n    (params) => (origin, play, currentState) => [play,\n      (params.target !== 'Player' && currentState.enemies[params.target]!!.hp > 0)\n        && (params.lifespan > 0)\n        ? actions.addEotEffect(currentState, origin, { display: `Bleed ${play.enemies[params.target]!!.lore.name} [${params.target + 1}]`, range: allRanges, priority: 4, effects: [effectFunCall(['Target:Bleed', { ...params, lifespan: params.lifespan - 1 }])] })\n        : currentState],\n  ),\n  'Monster:Summon': effectFun(\n    ({ enemy }) => (_origin, play, currentState) => actions.addEnemy(play, currentState, enemies[enemy][0], enemies[enemy][1])\n  ),\n  'Monster:Dead': effectFun(\n    () => (_origin, play, currentState) => [play, currentState]\n  ),\n  'Basic:Rest': effectFun(\n    () => (_origin, play, newState) => [play, newState]\n  ),\n  'Basic:Advance': effectFun(\n    () => (_origin, play, newState) => [play, actions.changeDistance(newState, newState.target, -2)]\n  ),\n  'Basic:Retreat': effectFun(\n    () => (_origin, play, newState) => [play, actions.changeDistance(newState, newState.target, 2)]\n  ),\n  'Axe:Chop': effectFun(\n    () => (_, play, currentState) => [play, actions.attackMonster(startState(play), currentState, currentState.target, 3)]\n  ),\n  'Axe:Cut': effectFun(\n    () => (_, play, currentState) => [play, actions.attackMonster(startState(play), currentState, currentState.target, 3)],\n    () => (origin, play, currentState) => [play,\n      actions.addEotEffect(currentState, origin, { display: `Bleed ${play.enemies[currentState.target]!!.lore.name} [${currentState.target + 1}]`, range: allRanges, priority: 4, effects: [effectFunCall(['Target:Bleed', { target: currentState.target, lifespan: 2 }])] })]\n  ),\n  'Hook:GetHere': effectFun(\n    () => (_, play, currentState) => [play, actions.attackMonster(startState(play), currentState, currentState.target, 3)],\n    () => (_origin, play, currentState) => [play, actions.changeDistance(currentState, currentState.target, -1)]\n  ),\n  'Monster:Swipe': effectFun(\n    () => (_, play, currentState) => [play, actions.attackPlayer(startState(play), currentState, 2)]\n  ),\n  'Monster:Roar': effectFun(\n    () => (_, play, currentState) => [play, actions.modifyPlayerStamina(startState(play), currentState, -5)]\n  ),\n  'Monster:Jump': effectFun(\n    () => (origin, play, currentState) => [play, actions.changeDistance(currentState, origin, -2)]\n  ),\n  'BootsOfFlight:EOT': effectFun(\n    () => (_, play, currentState) => [play, currentState.enemies.reduce((s, _m, idx) => actions.changeDistance(s, idx as MonsterTarget, -2), currentState)]\n  ),\n};\n\nconst clamp = (num: number, min: number, max: number) =>\n  Math.min(Math.max(num, min), max);\n\nconst updateMonster = (enemies: EnemiesStats, target: Target, override: (stats: EnemyStats) => object): EnemiesStats =>\n  enemies.map((m, idx) =>\n    (idx === target)\n      ? { ...m, ...override(m) }\n      : m) as EnemiesStats;\n\nconst actions = {\n  attackMonster: (start: Snapshot, curr: Snapshot, target: MonsterTarget, amount: number): Snapshot =>\n  ({\n    ...curr,\n    enemies: updateMonster(curr.enemies, target, ({ hp }) => ({ hp: clamp(hp - amount, 0, start.enemies[target]!!/* enforced by UI */.hp) })),\n  }),\n  changeDistance: (curr: Snapshot, origin: Target, amount: number): Snapshot =>\n  ({\n    ...curr,\n    enemies: updateMonster(curr.enemies, origin, ({ distance }) => ({ distance: clamp(distance + amount, 0, 4) })),\n  }),\n  removeMonster: (currPlay: Play, currSnap: Snapshot, target: MonsterTarget): [Play, Snapshot] =>\n    [\n      { ...currPlay, enemies: currPlay.enemies.filter((_, idx) => idx === target) as Enemies },\n      { ...currSnap, target: 0, enemies: currSnap.enemies.filter((_, idx) => idx === target) as EnemiesStats }\n    ],\n\n  attackPlayer: (start: Snapshot, curr: Snapshot, amount: number): Snapshot =>\n  ({\n    ...curr,\n    player: {\n      ...curr.player,\n      hp: clamp(curr.player.hp - amount, 0, start.player.hp)\n    },\n  }),\n  modifyPlayerStamina: (\n    start: Snapshot,\n    curr: Snapshot,\n    amount: number,\n  ): Snapshot =>\n  ({\n    ...curr,\n    player: {\n      ...curr.player,\n      stamina: clamp(curr.player.stamina + amount, 0, start.player.stamina),\n    },\n  }),\n\n  addEotEffect: (\n    curr: Snapshot,\n    origin: Target,\n    effect: Effect,\n  ): Snapshot => ({\n    ...curr,\n    eot: [...(curr.eot ?? []), [origin, effect]],\n  }),\n  addBotEffect: (\n    curr: Snapshot,\n    origin: Target,\n    effect: Effect,\n  ): Snapshot => ({\n    ...curr,\n    bot: [...(curr.eot ?? []), [origin, effect]],\n  }),\n\n  addEnemy: (\n    play: Play,\n    curr: Snapshot,\n    enemy: Enemy,\n    enemyStats: EnemyStats,\n  ): [Play, Snapshot] => {\n    return play.enemies.length < 5\n      ? [{\n        ...play,\n        enemies: [...play.enemies, enemy] as Enemies,\n      }, {\n        ...curr,\n        enemies: [...curr.enemies, enemyStats] as EnemiesStats,\n      }]\n      : [play, curr];\n  }\n};\n\nexport default repo;\n","import { createIs, is } from 'typescript-is';\nimport { Opaque } from \"type-fest\";\nimport { callEffectFun, Effect, FunIndex, Play, Snapshot, Target } from \"./types\";\nimport effectRepository, { EffectFunctionRepository, EffectFunctionT } from './effectRepository';\n\nexport type ReduceFun = (origin: Target, play: Play, newState: Snapshot) => [Play, Snapshot];\nexport type ParametrizedFun<T> = (params: T) => ReduceFun;\nexport type EffectFun<T> = Opaque<ParametrizedFun<T>, ParametrizedFun<T>>;\n\nexport type EffectFunRepo = EffectFunctionRepository;\nexport type EffectFunRepoIndex = keyof EffectFunctionT & FunIndex;\nexport type EffectFunParams<T extends EffectFunRepoIndex> = Parameters<EffectFunRepo[T]>[0];\n\nconst isNode = typeof process === 'undefined';\n\nexport function extractFunction({ effects }: Effect): ReduceFun {\n  if (!isNode || !effects.map(({ index, parameters }) => isAnyEffectFunParams(index, parameters)).includes(false)) {\n    return (origin, play, startState) => effects.reduce((acc, { index, parameters }) =>\n      callEffectFun(effectRepository, index, parameters)(origin, ...acc), [play, startState]);\n  }\n  throw new Error(`ValidationException: ${JSON.stringify(effects.filter(({ index, parameters }) => !isAnyEffectFunParams(index, parameters)))}`);\n}\n\nconst assignObject = <T extends EffectFunRepoIndex>(idx: T, obj: object, value: any): object => {\n  // @ts-ignore\n  obj[idx as string] = value;\n  return { ...obj };\n}\n\n// Uses all the tricks in the book for runtime validation\nconst validators = !isNode\n  ? {} as { [k: string]: any }\n  : Object.keys(effectRepository)\n    // eslint-disable-next-line array-callback-return\n    .reduce((obj, idx) => {\n      if (!is<EffectFunRepoIndex>(idx)) {\n        return obj;\n      }\n      switch (idx) {\n        case 'Target:Bleed': return assignObject(idx, obj, [createIs<typeof idx>(), createIs<EffectFunParams<typeof idx>>()]);\n        case 'Monster:Summon': return assignObject(idx, obj, [createIs<typeof idx>(), createIs<EffectFunParams<typeof idx>>()]);\n        case 'Monster:Dead': return assignObject(idx, obj, [createIs<typeof idx>(), createIs<EffectFunParams<typeof idx>>()]);\n        case 'Basic:Rest': return assignObject(idx, obj, [createIs<typeof idx>(), createIs<EffectFunParams<typeof idx>>()]);\n        case 'Basic:Advance': return assignObject(idx, obj, [createIs<typeof idx>(), createIs<EffectFunParams<typeof idx>>()]);\n        case 'Basic:Retreat': return assignObject(idx, obj, [createIs<typeof idx>(), createIs<EffectFunParams<typeof idx>>()]);\n        case 'Axe:Chop': return assignObject(idx, obj, [createIs<typeof idx>(), createIs<EffectFunParams<typeof idx>>()]);\n        case 'Axe:Cut': return assignObject(idx, obj, [createIs<typeof idx>(), createIs<EffectFunParams<typeof idx>>()]);\n        case 'Hook:GetHere': return assignObject(idx, obj, [createIs<typeof idx>(), createIs<EffectFunParams<typeof idx>>()]);\n        case 'Monster:Swipe': return assignObject(idx, obj, [createIs<typeof idx>(), createIs<EffectFunParams<typeof idx>>()]);\n        case 'Monster:Roar': return assignObject(idx, obj, [createIs<typeof idx>(), createIs<EffectFunParams<typeof idx>>()]);\n        case 'Monster:Jump': return assignObject(idx, obj, [createIs<typeof idx>(), createIs<EffectFunParams<typeof idx>>()]);\n        case 'BootsOfFlight:EOT': return assignObject(idx, obj, [createIs<typeof idx>(), createIs<EffectFunParams<typeof idx>>()]);\n        case 'Player:Stats': return assignObject(idx, obj, [createIs<typeof idx>(), createIs<EffectFunParams<typeof idx>>()]);\n        case 'Monster:Stats': return assignObject(idx, obj, [createIs<typeof idx>(), createIs<EffectFunParams<typeof idx>>()]);\n      }\n    }, {}) as Validators;\ntype Validators = { [k in EffectFunRepoIndex]: [(object: any) => object is k, (object: any) => object is EffectFunParams<k>] };\n\nexport function isAnyEffectFunParams(idx: any, value: any): value is EffectFunParams<EffectFunRepoIndex> {\n  if (is<EffectFunRepoIndex>(idx)) {\n    const v = validators[idx];\n    if (v != null) {\n      return v[0](idx) && v[1](value);\n    }\n  }\n  return false;\n}\n\nexport function isEffectFunParams<T extends EffectFunRepoIndex>(expected: T, idx: any, value: any): value is EffectFunParams<T> {\n  if (expected === idx) {\n    const v = validators[expected];\n    return v[0](idx) && v[1](value);\n  }\n  return false;\n}\n\n// Jest doesn't work so this should do\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nconst test = () => {\n  const assertF = (a: any, b: any) => a === b ? void 0 : console.log(`Failed ${a.toString()} compared to ${b.toString()} ${new Error().stack?.split('\\n')[2].trim()}`);\n  const [idx1, value1] = JSON.parse(JSON.stringify(['Monster:Summon', { enemy: 1 }]));\n  assertF(true, isAnyEffectFunParams(idx1, value1));\n  assertF(false, isEffectFunParams('Target:Bleed', idx1, value1));\n  assertF(false, isAnyEffectFunParams('Target:Bleed', value1));\n\n  const [idx2, value2] = JSON.parse(JSON.stringify(['Monster:Summon', { patatas: 1 }]));\n  assertF(false, isAnyEffectFunParams(idx2, value2));\n\n  const [idx3, value3] = JSON.parse(JSON.stringify(['Monster:Patatas', {}]));\n  assertF(false, isAnyEffectFunParams(idx3, value3));\n\n  const [idx4, value4] = JSON.parse(JSON.stringify(['Monster:Swipe']));\n  assertF(true, isAnyEffectFunParams(idx4, value4));\n  assertF(false, isAnyEffectFunParams(idx4, value4 ?? null));\n  assertF(true, isAnyEffectFunParams(idx4, value4 ?? undefined));\n\n  const [idx5, value5] = JSON.parse(JSON.stringify(['Monster:Swipe', undefined]));\n  assertF(false, isAnyEffectFunParams(idx5, value5));\n  assertF(false, isAnyEffectFunParams(idx5, value5 ?? null));\n  assertF(true, isAnyEffectFunParams(idx5, value5 ?? undefined));\n}\n\n// node --experimental-specifier-resolution=node --loader ts-node/esm src/utils/effectFunctions.ts \n// test();\n","import { Chance } from \"chance\";\nimport { Subtract } from \"type-fest/source/internal\";\nimport { Build, Distances, Effect, Enemy, EnemyStats, Item, Player, PlayerStats, Ranges, Snapshot, StatsFunRepo, UpTo, Play, effectFunCall } from \"./types\";\n\nexport const startState = (play: Play): Snapshot => play.states[0];\nexport const previousState = (play: Play): Snapshot => play.states[play.states.length - 1];\n\nexport const randomEnemy = (): [Enemy, EnemyStats] => new Chance().pickone(enemies);\n\nexport const randomPlayer = (statsOverride?: PlayerStats, buildOverride?: Build): [Player, PlayerStats] => {\n  const rng = new Chance();\n  return [{\n    id: rng.string(),\n    lore: {\n      name: randomName(),\n      age: rng.age(),\n    },\n    build: {\n      basic: rng.pickone(build.basic),\n      class: rng.pickone(build.class),\n      armor: rng.pickone(build.armor),\n      weapon: rng.pickone(build.weapon),\n      offhand: rng.pickone(build.offhand),\n      footwear: rng.pickone(build.footwear),\n      headwear: rng.pickone(build.headwear),\n      charm: rng.pickone(build.charm),\n      ...buildOverride,\n    }\n  }, {\n    hp: 25,\n    stamina: 8,\n    staminaPerTurn: 2,\n    ...statsOverride,\n  }];\n}\n\nexport const makeRange = (...number: UpTo<Subtract<Distances, 1>>[]) => [...new Set(number)] as Ranges;\nexport const allRanges = makeRange(0, 1, 2, 3, 4);\nexport const selfRange = allRanges;\n\nexport const effectDead: Effect =\n  { display: \"⚰\", priority: 4, effects: [effectFunCall([\"Monster:Dead\"])], range: allRanges };\n\nexport const statsRepository: StatsFunRepo = {\n  'Charm:ofHealth': (player, enemies) => [{ ...player, hp: player.hp + 10 }, enemies],\n  'Charm:ofHaste': (player, enemies) => [{ ...player, staminaPerTurn: player.staminaPerTurn + 1 }, enemies],\n  'Charm:ofResilience': (player, enemies) => [{ ...player, stamina: player.stamina + 10 }, enemies],\n}\n\nexport const build: Record<\n  string,\n  Item[]\n> = {\n  basic: [\n    {\n      display: \"Basic\",\n      effects: [\n        {\n          display: \"Rest\",\n          priority: 4,\n          stamina: 0,\n          range: selfRange,\n          effects: [effectFunCall(['Basic:Rest'])]\n        },\n        {\n          display: \"Advance\",\n          priority: 4,\n          stamina: 1,\n          range: selfRange,\n          effects: [effectFunCall(['Basic:Advance'])]\n        },\n        {\n          display: \"Retreat\",\n          effects: [effectFunCall([\"Basic:Retreat\"])],\n          priority: 4,\n          stamina: 1,\n          range: selfRange,\n        },\n      ]\n    }\n  ],\n  class: [\n    {\n      display: \"Warrior\",\n    },\n    {\n      display: \"Mage\",\n    },\n    {\n      display: \"Rogue\",\n    },\n  ],\n  skill: [\n    {\n      display: \"Sturdy\",\n    },\n    {\n      display: \"Nimble\",\n    },\n  ],\n  weapon: [\n    {\n      display: \"Axe\",\n      effects: [\n        {\n          display: \"Chop\",\n          effects: [effectFunCall([\"Axe:Chop\"])],\n          priority: 2,\n          stamina: 2,\n          range: makeRange(0, 1),\n        },\n        {\n          display: \"Cut\",\n          effects: [effectFunCall(['Monster:Stats', [['+', 'hp', -2]]])],\n          priority: 3,\n          stamina: 2,\n          range: makeRange(0),\n        },\n      ],\n    },\n  ],\n  offhand: [\n    {\n      display: \"Hook\",\n      effects: [\n        {\n          display: \"Get over here!\",\n          effects: [effectFunCall([\"Hook:GetHere\"])],\n          priority: 4,\n          stamina: 3,\n          range: makeRange(2, 3, 4),\n        },\n      ],\n    },\n  ],\n  consumable: [\n    {\n      display: \"Potion\",\n    },\n  ],\n  armor: [\n    {\n      display: \"Heavy\",\n    },\n  ],\n  headgear: [\n    {\n      display: \"Helm\",\n    },\n  ],\n  footwear: [{\n    display: \"Boots of Dooooodge!\",\n  },\n  {\n    display: \"Boots of Flight\",\n    eot: [{\n      display: \"Flight!\",\n      priority: 0,\n      range: allRanges,\n      effects: [effectFunCall(['BootsOfFlight:EOT'])],\n    }],\n  },\n  ],\n  charm: [\n    {\n      display: \"of Health\",\n      passive: \"Charm:ofHealth\",\n    },\n    {\n      display: \"of Haste\",\n      passive: \"Charm:ofHaste\",\n    },\n    {\n      display: \"of Resilience\",\n      passive: \"Charm:ofResilience\",\n    },\n  ],\n};\n\nexport const randomName = () => names[Math.floor(Math.random() * names.length)];\n\nexport const enemies: [Enemy, EnemyStats][] = [\n  [{\n    lore: {\n      name: \"Sacapuntas\",\n    },\n    rolls: [\n      [0, 1, 2, 1, 0],\n      [0, 1, 0, 0, 0],\n      [0, 0, 0, 0, 0],\n      [0, 0, 0, 0, 0],\n      [0, 1, 2, 1, 0, 0],\n    ],\n    effects: [\n      { display: \"Swipe\", priority: 3, effects: [effectFunCall([\"Monster:Swipe\"])], range: makeRange(0, 1) },\n      { display: \"Roar\", priority: 1, effects: [effectFunCall([\"Monster:Roar\"])], range: allRanges },\n      { display: \"Jump\", priority: 2, effects: [effectFunCall([\"Monster:Jump\"])], range: makeRange(2, 3, 4) },\n    ],\n  }, {\n    hp: 25,\n    rage: 0,\n    distance: 4,\n  }],\n  [{\n    lore: {\n      name: \"Toro\",\n    },\n    effects: [\n      { display: \"Swipe\", priority: 3, effects: [effectFunCall([\"Monster:Swipe\"])], range: allRanges },\n      { display: \"Jump\", priority: 2, effects: [effectFunCall([\"Monster:Jump\"])], range: makeRange(2, 3, 4) },\n    ],\n    rolls: [\n      [0, 0, 0, 0, 0],\n      [0, 0, 0, 0, 0],\n      [1, 1, 0, 0, 0],\n      [1, 1, 1, 0, 0],\n      [1, 1, 1, 1, 0],\n    ]\n  }, {\n    hp: 22,\n    rage: 0,\n    distance: 4,\n  }],\n  [{\n    lore: {\n      name: \"Summoner\",\n    },\n    effects: [\n      { display: \"Swipe\", priority: 3, effects: [effectFunCall([\"Monster:Swipe\"])], range: makeRange(0, 1) },\n      { display: \"Jump\", priority: 3, effects: [effectFunCall([\"Monster:Jump\"])], range: allRanges },\n      { display: \"Summon Toro\", priority: 4, effects: [effectFunCall([\"Monster:Summon\", { enemy: 1 }])], range: makeRange(2, 3, 4) },\n    ],\n    rolls: [\n      [0, 0, 0, 0, 0],\n      [1, 0, 0, 0, 0],\n      [1, 1, 2, 0, 0],\n      [1, 1, 2, 0, 0],\n      [1, 2, 2, 0, 0],\n    ]\n  }, {\n    hp: 30,\n    rage: 0,\n    distance: 4,\n  }],\n  [{\n    lore: {\n      name: \"Body\",\n    },\n    effects: [\n      { display: \"Swipe\", priority: 3, effects: [effectFunCall([\"Monster:Swipe\"])], range: makeRange() },\n    ],\n    rolls: [\n      [0],\n      [0],\n      [0],\n      [0],\n      [0],\n    ]\n  }, {\n    hp: 300,\n    rage: 0,\n    distance: 0,\n  }],\n\n  [{\n    lore: {\n      name: \"Smol\",\n    },\n    effects: [\n      { display: \"Swipe\", priority: 3, effects: [effectFunCall([\"Monster:Swipe\"])], range: makeRange() },\n    ],\n    rolls: [\n      [0],\n      [0],\n      [0],\n      [0],\n      [0],\n    ]\n  }, {\n    hp: 5,\n    rage: 0,\n    distance: 0,\n  }],\n];\n\nconst names = [\n  \"Lydan\",\n  \"Syrin\",\n  \"Ptorik\",\n  \"Joz\",\n  \"Varog\",\n  \"Gethrod\",\n  \"Hezra\",\n  \"Feron\",\n  \"Ophni\",\n  \"Colborn\",\n  \"Fintis\",\n  \"Gatlin\",\n  \"Jinto\",\n  \"Hagalbar\",\n  \"Krinn\",\n  \"Lenox\",\n  \"Revvyn\",\n  \"Hodus\",\n  \"Dimian\",\n  \"Paskel\",\n  \"Kontas\",\n  \"Weston\",\n  \"Azamarr \",\n  \"Jather \",\n  \"Tekren \",\n  \"Jareth\",\n  \"Adon\",\n  \"Zaden\",\n  \"Eune \",\n  \"Graff\",\n  \"Tez\",\n  \"Jessop\",\n  \"Gunnar\",\n  \"Pike\",\n  \"Domnhar\",\n  \"Baske\",\n  \"Jerrick\",\n  \"Mavrek\",\n  \"Riordan\",\n  \"Wulfe\",\n  \"Straus\",\n  \"Tyvrik \",\n  \"Henndar\",\n  \"Favroe\",\n  \"Whit\",\n  \"Jaris\",\n  \"Renham\",\n  \"Kagran\",\n  \"Lassrin \",\n  \"Vadim\",\n  \"Arlo\",\n  \"Quintis\",\n  \"Vale\",\n  \"Caelan\",\n  \"Yorjan\",\n  \"Khron\",\n  \"Ishmael\",\n  \"Jakrin\",\n  \"Fangar\",\n  \"Roux\",\n  \"Baxar\",\n  \"Hawke\",\n  \"Gatlen\",\n  \"Barak\",\n  \"Nazim\",\n  \"Kadric\",\n  \"Paquin\",\n  \"Kent\",\n  \"Moki\",\n  \"Rankar\",\n  \"Lothe\",\n  \"Ryven\",\n  \"Clawsen\",\n  \"Pakker\",\n  \"Embre\",\n  \"Cassian\",\n  \"Verssek\",\n  \"Dagfinn\",\n  \"Ebraheim\",\n  \"Nesso\",\n  \"Eldermar\",\n  \"Rivik\",\n  \"Rourke\",\n  \"Barton\",\n  \"Hemm\",\n  \"Sarkin\",\n  \"Blaiz \",\n  \"Talon\",\n  \"Agro\",\n  \"Zagaroth\",\n  \"Turrek\",\n  \"Esdel\",\n  \"Lustros\",\n  \"Zenner\",\n  \"Baashar \",\n  \"Dagrod \",\n  \"Gentar\",\n  \"Feston\",\n  \"Syrana\",\n  \"Resha\",\n  \"Varin\",\n  \"Wren\",\n  \"Yuni\",\n  \"Talis\",\n  \"Kessa\",\n  \"Magaltie\",\n  \"Aeris\",\n  \"Desmina\",\n  \"Krynna\",\n  \"Asralyn \",\n  \"Herra\",\n  \"Pret\",\n  \"Kory\",\n  \"Afia\",\n  \"Tessel\",\n  \"Rhiannon\",\n  \"Zara\",\n  \"Jesi\",\n  \"Belen\",\n  \"Rei\",\n  \"Ciscra\",\n  \"Temy\",\n  \"Renalee \",\n  \"Estyn\",\n  \"Maarika\",\n  \"Lynorr\",\n  \"Tiv\",\n  \"Annihya\",\n  \"Semet\",\n  \"Tamrin\",\n  \"Antia\",\n  \"Reslyn\",\n  \"Basak\",\n  \"Vixra\",\n  \"Pekka \",\n  \"Xavia\",\n  \"Beatha \",\n  \"Yarri\",\n  \"Liris\",\n  \"Sonali\",\n  \"Razra \",\n  \"Soko\",\n  \"Maeve\",\n  \"Everen\",\n  \"Yelina\",\n  \"Morwena\",\n  \"Hagar\",\n  \"Palra\",\n  \"Elysa\",\n  \"Sage\",\n  \"Ketra\",\n  \"Lynx\",\n  \"Agama\",\n  \"Thesra \",\n  \"Tezani\",\n  \"Ralia\",\n  \"Esmee\",\n  \"Heron\",\n  \"Naima\",\n  \"Rydna \",\n  \"Sparrow\",\n  \"Baakshi \",\n  \"Ibera\",\n  \"Phlox\",\n  \"Dessa\",\n  \"Braithe\",\n  \"Taewen\",\n  \"Larke\",\n  \"Silene\",\n  \"Phressa\",\n  \"Esther\",\n  \"Anika\",\n  \"Rasy \",\n  \"Harper\",\n  \"Indie\",\n  \"Vita\",\n  \"Drusila\",\n  \"Minha\",\n  \"Surane\",\n  \"Lassona\",\n  \"Merula\",\n  \"Kye\",\n  \"Jonna\",\n  \"Lyla\",\n  \"Zet\",\n  \"Orett\",\n  \"Naphtalia\",\n  \"Turi\",\n  \"Rhays\",\n  \"Shike\",\n  \"Hartie\",\n  \"Beela\",\n  \"Leska\",\n  \"Vemery \",\n  \"Lunex\",\n  \"Fidess\",\n  \"Tisette\",\n  \"Partha\",\n]"],"sourceRoot":""}