{"version":3,"sources":["components/PlayerBuilder.tsx","hooks/useScroll.tsx","components/EncounterBuilder.tsx","components/menus/Menu.tsx","geneticalgorithm/geneticalgorithm.js","game/tinkerer.ts","components/Enemy.tsx","components/Player.tsx","components/Game.tsx","hooks/useForceRerender.tsx","hooks/usePressedKeys.tsx","components/menus/SingleGame.tsx","components/menus/LoadScreen.tsx","App.tsx","reportWebVitals.ts","index.tsx","game/effectRepository.ts","game/playGame.ts","game/data/enemies.ts","game/data/armors.ts","game/data/charms.ts","game/data/classes.ts","game/data/consumables.ts","game/data/footwears.ts","game/data/headgears.ts","game/data/offhand.ts","game/data/skills.ts","game/data/weapons.ts","game/data/build.ts","game/data.ts","game/zFunDump.ts","game/modding.ts","game/types.ts","game/data/names.ts","game/makeGame.ts","stateMachines/menuStateMachine.ts","serviceWorkerRegistration.ts"],"names":["systemBuildKeys","Set","ElementPicker","isSelected","section","options","setField","scrollParams","elRef","useRef","current","scrollIntoView","useScroll","behavior","block","scrollTo","scrollRef","Row","Form","Label","ButtonGroup","size","className","map","item","Button","name","id","display","variant","onClick","ref","PlayerBuilder","onSave","randomPlayer","player","playerStats","React","useState","build","form","setForm","lore","setLore","displayType","type","postBuildPlayerStats","buildPlayer","randomEnemy","onSubmit","e","preventDefault","Container","fluid","style","marginBottom","safeEntries","values","has","value","field","safeValues","Navbar","fixed","bg","maxHeight","Text","randomName","hp","stamina","staminaPerTurn","attack","defence","speed","EncounterBuilder","encounter","setEncounter","enemies","a","enemiesStats","length","enemy","disabled","idx","found","filter","m","_","Menu","title","states","Card","Title","state","geneticAlgorithmConstructor","settingWithDefaults","settings","defaults","mutationFunction","crossoverFunction","fitnessFunction","doesABeatBFunction","population","Error","populationSize","phenotype","b","undefined","cloneJSON","object","JSON","parse","stringify","mutate","crossover","mate","Math","floor","random","evolve","rand","push","populate","index","otherIndex","temp","randomizePopulationOrder","nextGeneration","p","competitor","compete","this","best","scored","scoredPopulation","reduce","score","bestScore","config","clone","defaultTinkererOptions","playerSeed","weights","monster","turn","debug","findBestPlay","play","iter","optionsOverride","Chance","initStats","startState","initialState","startPlayerHealth","max","startPlayerStamina","startMonsterHealth","acc","startStats","oldPlay","latestState","previousState","monsterHealth","turns","newPlay","d6","target","setSelected","natural","min","latest","actions","playerActions","inventory","unavailable","handlePlayerEffect","exclude","playerHealth","playerStamina","monsterKillingFitness","playerAlivenessFitness","killSpeedFitness","staminaFitness","fitness","console","log","scorePlay","gen","GeneticAlgorithmConstructor","i","Seq","sortBy","toArray","EnemyCard","effects","enemyStats","onSelect","latestAttack","canAct","hotkey","Body","distance","status","bleed","rolls","countBy","v","find","range","priority","tooltip","OverlayTrigger","placement","delay","show","hide","overlay","props","Popover","Header","as","join","toFixed","toUpperCase","PlayerCard","selectedButtons","inventoryStats","onClickEffect","lastAction","disabledSkills","setDisabledSkills","hotkeys","passives","k","bot","eot","count","sta","s","passiveCount","passiveStamina","hasPassives","Subtitle","class","effs","ToggleButton","checked","onChange","event","currentTarget","delete","add","playerItemActions","groupBy","active","clamp","playerHotkeys","Game","game","solveGame","timeTravel","hint","onMenu","lastAttacks","isLogShown","setShowLog","forceUpdate","setValue","useForceRerender","useEffect","updateGlobals","ingame","handleCloseLog","playerSkills","isPlayerAlive","areMonstersAlive","endGame","pressed","onUp","pressedKeys","updatePressedKeys","downHandler","key","set","upHandler","useCallback","window","addEventListener","removeEventListener","usePressedKeys","indexOf","skillNumber","save","undo","redo","valNum","parseInt","flatMap","skillIndex","blob","Blob","saveAs","Date","now","Col","sm","md","Player","origin","phase","zip","stats","xs","Enemy","Modal","onHide","scrollable","centered","closeButton","Footer","SingleGame","onGameEnd","setGame","setRedo","gameState","playState","timeTravelObj","newRedo","pop","slice","iterations","maxBy","LoadScreen","onLoad","loadError","setLoadError","load","data","playRaw","fileData","files","reader","FileReader","onloadend","ev","result","readAsText","rawData","Alert","Group","Control","accept","muted","rows","placeholder","App","useMachine","gameMenuMachine","devTools","send","matches","Object","keys","main","on","quick","makeGameNew","context","singleContext","seed","single","training","dummyEnemy","arcade","survivalContext","arcadeContext","victories","otherEnemy","firstState","makeGameNextLevel","survival","lastState","replay","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","container","document","getElementById","createRoot","render","StrictMode","serviceWorkerRegistration","effectFun","fun","params","oldState","applyPoison","currentState","pipe","changeStatPlayer","changeStatMonster","newState","addBotEffect","allRanges","interruptible","effectFunCall","engineFunctions","_origin","changeStatusPlayer","o","armor","amount","dodge","stun","changeStatusMonster","effectFunRepo","changeDistance","attackMonster","modifyPlayerStamina","gameTarget","attackPlayer","addEnemy","_m","updateMonster","override","updatePlayer","curr","damage","afterDefence","afterArmor","armorSpent","afterBleed","f","updateStatus","removeMonster","currPlay","currSnap","modify","updatePlayerStat","addEotEffect","effect","statsRepository","makeStat","turnDeterministicRng","randPerTurn","monsterSeed","monsterChance","rangeArr","floating","used","playerPassives","playerGameStats","enemyGameStats","rng","toIndexableString","version","reduceFuns","funs","priorityBonus","monsterId","targetMonster","isStunnedPlayer","isStunnedMonster","parameters","callEffectFun","extractFunction","effectEotCleanup","effectDead","d","lastTurnState","usedSkill","postBotPlay","postBotState","playerBotEffs","entitiesBot","eff","postEntitiesBotPlay","postEntitiesBotState","turnRng","turnFunctions","roll","concat","playerEotEffs","playerEotEffects","entitiesEot","enemiesEotEffects","postPlayerEotPlay","postPlayerEotState","postEotPlay","postEotState","passivesStamina","postStaminaPlay","postStaminaState","postCleanup","postCleanupState","scoreGame","hpLoss","staminaLoss","piripuru","selfRange","makeRange","defaultStatus","toros","description","purupuri","ninkujorua","tshopuritazios","armors","heavy","medium","light","none","charms","health","haste","resilience","strength","swiftness","classes","warrior","rogue","berserk","mage","cleric","consumables","healing","razors","bubble","rock","footwears","slippers","boots","greaves","headgears","helm","cap","magehat","offhands","hook","parry","shield","focus","wand","skills","sturdy","nimble","resourceful","weapons","sword","greatsword","twinblades","katana","axe","lance","hammer","claw","bow","staff","enabled","basic","skill","weapon","offhand","headgear","footwear","charm","consumable","enemyRepository","Array","num","Infinity","t","globalsDefault","trainingEnemy","starting","globals","globalThis","theThis","__buildmancer","isArray","repo","entries","names","number","amt","pickone","randomBuild","buildOverride","playerStatsDefault","statsOverride","string","age","isDebug","process","inspect","server","WebSocket","Server","port","toMenu","MENU","initial","entry","WIN","LOSE","win","lose","PLAYER","ENCOUNTER","cond","internal","victory","defeat","puzzle","SELECTED","COMPLETE","complete","NEXT","SELECT","REPLAY","makeArcadeContext","makeSurvivalContext","makeSingleContext","createMachine","tsTypes","QUICK","SINGLE","TRAINING","ARCADE","SURVIVAL","guards","isFinal","bumpVictories","assign","_event","bumpScore","reset","c","interpret","onTransition","start","isLocalhost","Boolean","location","hostname","match","register","navigator","URL","href","swUrl","fetch","headers","response","contentType","get","serviceWorker","ready","registration","unregister","reload","registerValidSW","catch","checkValidServiceWorker","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","error"],"mappings":"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uD,GAAD,OAAOA,EAAE,Q,sZC3C3BggB,EAzMD,CACZ,QACA,QACA,SACA,MACA,QACA,UACA,QACA,QACA,QACA,UACA,SACA,SACA,QACA,WACA,QACA,QACA,SACA,QACA,SACA,SACA,SACA,SACA,UACA,SACA,SACA,SACA,OACA,QACA,OACA,QACA,MACA,SACA,SACA,OACA,UACA,QACA,UACA,SACA,UACA,QACA,SACA,SACA,UACA,SACA,OACA,QACA,SACA,SACA,UACA,QACA,OACA,UACA,OACA,SACA,SACA,QACA,UACA,SACA,SACA,OACA,QACA,QACA,SACA,QACA,QACA,SACA,SACA,OACA,OACA,SACA,QACA,QACA,UACA,SACA,QACA,UACA,UACA,UACA,WACA,QACA,WACA,QACA,SACA,SACA,OACA,SACA,QACA,QACA,OACA,WACA,SACA,QACA,UACA,SACA,UACA,SACA,SACA,SACA,SACA,QACA,QACA,OACA,OACA,QACA,QACA,WACA,QACA,UACA,SACA,UACA,QACA,OACA,OACA,OACA,SACA,WACA,OACA,OACA,QACA,MACA,SACA,OACA,UACA,QACA,UACA,SACA,MACA,UACA,QACA,SACA,QACA,SACA,QACA,QACA,QACA,QACA,SACA,QACA,QACA,SACA,QACA,OACA,QACA,SACA,SACA,UACA,QACA,QACA,QACA,OACA,QACA,OACA,QACA,SACA,SACA,QACA,QACA,QACA,QACA,QACA,UACA,UACA,QACA,QACA,QACA,UACA,SACA,QACA,SACA,UACA,SACA,QACA,OACA,SACA,QACA,OACA,UACA,QACA,SACA,UACA,SACA,MACA,QACA,OACA,MACA,QACA,YACA,OACA,QACA,QACA,SACA,QACA,QACA,SACA,QACA,SACA,UACA,U,eCpLWlF,EAAY,sCAAImF,EAAJ,yBAAIA,EAAJ,mCACnB,IAAI9kB,IAAI8kB,KACDpL,EAAYiG,EAAU,EAAG,EAAG,EAAG,EAAG,GAClCD,EAAYhG,EAEZuC,EAAW,SACtB/B,GADsB,IAEtBxQ,EAFsB,uDAES,SAACqb,GAA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","file":"static/js/main.c7f5d4af.chunk.js","sourcesContent":["import React from 'react';\nimport { Container, Row, Form, Button, ButtonGroup, Navbar } from 'react-bootstrap';\nimport useScroll from '../hooks/useScroll';\nimport { Build, Item, Player, PlayerStats, safeEntries, safeValues } from '../game/types';\nimport { build } from '../game/data';\nimport { Set } from 'immutable';\nimport { buildPlayer } from '../game/playGame';\nimport { randomPlayer, randomEnemy, randomName } from '../game/makeGame';\n\nconst systemBuildKeys: Set<keyof Build> = Set(['debug', 'basic']);\n\nconst PlayerBuilder = ({\n  onSave,\n}: {\n  onSave: (player: Player, playerStats: PlayerStats) => void;\n}) => {\n  const [player, playerStats] = randomPlayer();\n  const [form, setForm] = React.useState<Build>(player.build);\n  const [lore, setLore] = React.useState(player.lore);\n  const setField = <T extends keyof Build>(field: T, value: Build[T]) => {\n    setForm({\n      ...form,\n      [field]: value,\n    });\n  };\n  const onFormSubmit = (e: any) => {\n    e.preventDefault();\n    onSave(\n      {\n        id: 'p-1',\n        lore,\n        build: form,\n      },\n      playerStats\n    );\n  };\n  const displayType = (type: keyof Build) => <b>{form[type].display}</b>;\n\n  const postBuildPlayerStats = buildPlayer({ ...player, build: form }, playerStats, [\n    randomEnemy()[1],\n  ])[0];\n\n  return (\n    <Form onSubmit={onFormSubmit}>\n      <Container fluid style={{ marginBottom: '105px' }}>\n        <Row className=\"g-2\">\n          {safeEntries(build).map(\n            ([type, values]) =>\n              !systemBuildKeys.has(type) && (\n                <ElementPicker\n                  setField={(value) => setField(type, value)}\n                  section={type}\n                  options={safeValues<{ [k: string]: Item }, string>(values)}\n                  key={type}\n                  isSelected={(value) => form[type].display === value.display}\n                />\n              )\n          )}\n        </Row>\n        <Navbar fixed=\"bottom\" bg=\"dark\" variant=\"dark\" style={{ maxHeight: '100px' }}>\n          <Container>\n            <Navbar.Text>\n              You are{' '}\n              <i onClick={() => setLore((lore) => ({ ...lore, name: randomName() }))}>\n                {lore.name}\n              </i>\n              , the {displayType('skill')} {displayType('class')} {displayType('charm')}\n              <br />\n              who wields a {displayType('weapon')} and a {displayType('offhand')}\n              <br />\n              and wears {displayType('armor')} with {displayType('headgear')} and{' '}\n              {displayType('footwear')}\n            </Navbar.Text>\n            <Navbar.Text>\n              {postBuildPlayerStats.hp.current} ❤\n              <br />\n              {postBuildPlayerStats.stamina.current} 💪 (\n              {postBuildPlayerStats.staminaPerTurn.current >= 0 && '+'}\n              {postBuildPlayerStats.staminaPerTurn.current})<br />\n              Attack {postBuildPlayerStats.attack.current} | Defence{' '}\n              {postBuildPlayerStats.defence.current} | Speed {postBuildPlayerStats.speed.current}\n            </Navbar.Text>\n            <Button type=\"submit\">This is me!</Button>\n          </Container>\n        </Navbar>\n      </Container>\n    </Form>\n  );\n};\n\nconst ElementPicker = ({\n  isSelected,\n  section,\n  options,\n  setField,\n}: {\n  options: Item[];\n  isSelected: (value: Item) => boolean;\n  setField: (value: Item) => void;\n  section: string;\n}) => {\n  const [scrollTo, scrollRef] = useScroll({\n    behavior: 'smooth',\n    block: 'start',\n  });\n\n  return (\n    <Row>\n      <Form.Label>{section}</Form.Label>\n      <br />\n      <ButtonGroup size=\"lg\" className=\"mb-2\">\n        {options.map((item) => (\n          <Button\n            key={item.display}\n            name={section}\n            id={`${item.display}`}\n            variant={isSelected(item) ? 'primary' : 'secondary'}\n            onClick={() => {\n              setField(item);\n              scrollTo();\n            }}\n          >\n            {item.display}\n          </Button>\n        ))}\n      </ButtonGroup>\n      <div id={`${section}-scroll`} ref={scrollRef} />\n    </Row>\n  );\n};\n\nexport default PlayerBuilder;\n","import { Ref, useRef } from 'react';\n\ntype ScrollToFn = () => void;\n\nexport default function useScroll<T extends Element>(\n  scrollParams: ScrollIntoViewOptions\n): [ScrollToFn, Ref<any>] {\n  const elRef = useRef<T>(null);\n  const executeScroll = () => elRef.current!.scrollIntoView(scrollParams);\n\n  return [executeScroll, elRef];\n}\n","import React from 'react';\nimport { Container, ButtonGroup, Form, Button, Navbar } from 'react-bootstrap';\n\nimport { Player, Enemies, EnemiesStats, Build, EnemyInfo, safeValues } from '../game/types';\nimport { enemies } from '../game/data';\nimport { randomEnemy } from '../game/makeGame';\n\nconst EncounterBuilder = ({\n  player,\n  onSave,\n}: {\n  player: Player;\n  onSave: (enemies: Enemies, enemiesStats: EnemiesStats) => void;\n}) => {\n  const [encounter, setEncounter] = React.useState<EnemyInfo[]>([]);\n  const onFormSubmit = (e: any) => {\n    e.preventDefault();\n    const enemies = encounter.map((a) => a[0]);\n    const enemiesStats = encounter.map((a) => a[1]);\n    // Size enforced by UI\n    onSave(enemies as Enemies, enemiesStats as EnemiesStats);\n  };\n  const displayType = (type: keyof Build) => <b>{player.build[type].display}</b>;\n  return (\n    <Form onSubmit={onFormSubmit}>\n      <Container fluid style={{ marginBottom: encounter.length > 0 ? '205px' : '105px' }}>\n        <ButtonGroup size=\"lg\" className=\"mb-2\">\n          {safeValues(enemies).map((enemy) => (\n            <Button\n              key={enemy[0].lore.name}\n              disabled={encounter.length > 4}\n              onClick={() => setEncounter((e) => [...e, enemy])}\n            >\n              {enemy[0].lore.name}\n            </Button>\n          ))}\n        </ButtonGroup>\n      </Container>\n      {encounter.length > 0 && (\n        <Navbar fixed=\"bottom\" bg=\"dark\" variant=\"dark\" style={{ marginBottom: '100px' }}>\n          <Container fluid>\n            <ButtonGroup size=\"sm\" className=\"mb-2\">\n              {encounter.map((enemy, idx) => (\n                <Button\n                  key={`${enemy[0].lore.name}-${idx}`}\n                  onClick={() =>\n                    setEncounter((e) => {\n                      let found = false;\n                      return e.filter(\n                        (m) => found || m[0].lore.name !== enemy[0].lore.name || !(found = true)\n                      );\n                    })\n                  }\n                >\n                  {enemy[0].lore.name}\n                </Button>\n              ))}\n            </ButtonGroup>\n          </Container>\n        </Navbar>\n      )}\n      <Navbar fixed=\"bottom\" bg=\"dark\" variant=\"dark\" style={{ maxHeight: '100px' }}>\n        <Container>\n          <Navbar.Text>\n            You are <i>{player.lore.name}</i>, the {displayType('skill')} {displayType('class')}{' '}\n            {displayType('charm')}\n            <br />\n            who wields a {displayType('weapon')} and a {displayType('offhand')}\n            <br />\n            and wears {displayType('armor')} with {displayType('headgear')} and{' '}\n            {displayType('footwear')}\n          </Navbar.Text>\n          <ButtonGroup>\n            <Button\n              disabled={encounter.length < 0 || encounter.length > 4}\n              onClick={(_) => setEncounter((e) => [...e, randomEnemy()])}\n            >\n              Add Random\n            </Button>\n            <Button type=\"submit\" disabled={encounter.length < 1 || encounter.length > 5}>\n              To Battle!\n            </Button>\n          </ButtonGroup>\n        </Container>\n      </Navbar>\n    </Form>\n  );\n};\n\nexport default EncounterBuilder;\n","import React from 'react';\nimport { Container, Card, Row, Button } from 'react-bootstrap';\n\nconst Menu: React.FC<{\n  title: string;\n  states: string[];\n  onClick: (value: string) => void;\n}> = ({ title, states, onClick }) => (\n  <Container fluid style={{ marginBottom: '105px' }}>\n    <Row className=\"g-2\">\n      <Card.Title>{title}</Card.Title>\n    </Row>\n    {states.map((state) => (\n      <Row className=\"g-2\" key={state}>\n        <Button\n          size=\"lg\"\n          className=\"mb-2\"\n          key={state}\n          variant={'primary'}\n          onClick={() => {\n            onClick(state);\n          }}\n        >\n          {state}\n        </Button>\n      </Row>\n    ))}\n  </Container>\n);\n\nexport default Menu;\n","export default function geneticAlgorithmConstructor(options) {\n  function settingDefaults() {\n    return {\n      mutationFunction: function (phenotype) {\n        return phenotype;\n      },\n\n      crossoverFunction: function (a, b) {\n        return [a, b];\n      },\n\n      fitnessFunction: function (phenotype) {\n        return 0;\n      },\n\n      doesABeatBFunction: undefined,\n\n      population: [],\n      populationSize: 100,\n    };\n  }\n\n  function settingWithDefaults(settings, defaults) {\n    settings = settings || {};\n\n    settings.mutationFunction = settings.mutationFunction || defaults.mutationFunction;\n    settings.crossoverFunction = settings.crossoverFunction || defaults.crossoverFunction;\n    settings.fitnessFunction = settings.fitnessFunction || defaults.fitnessFunction;\n\n    settings.doesABeatBFunction = settings.doesABeatBFunction || defaults.doesABeatBFunction;\n\n    settings.population = settings.population || defaults.population;\n    if (settings.population.length <= 0)\n      throw Error('population must be an array and contain at least 1 phenotypes');\n\n    settings.populationSize = settings.populationSize || defaults.populationSize;\n    if (settings.populationSize <= 0) throw Error('populationSize must be greater than 0');\n\n    return settings;\n  }\n\n  var settings = settingWithDefaults(options, settingDefaults());\n\n  function populate() {\n    var size = settings.population.length;\n    while (settings.population.length < settings.populationSize) {\n      const rand = Math.floor(Math.random() * size);\n      settings.population.push(mutate(cloneJSON(settings.population[Math.floor(rand)])));\n    }\n  }\n\n  function cloneJSON(object) {\n    return JSON.parse(JSON.stringify(object));\n  }\n\n  function mutate(phenotype) {\n    return settings.mutationFunction(cloneJSON(phenotype));\n  }\n\n  function crossover(phenotype) {\n    phenotype = cloneJSON(phenotype);\n    var mate = settings.population[Math.floor(Math.random() * settings.population.length)];\n    mate = cloneJSON(mate);\n    return settings.crossoverFunction(phenotype, mate)[0];\n  }\n\n  function doesABeatB(a, b) {\n    if (settings.doesABeatBFunction) {\n      return settings.doesABeatBFunction(a, b);\n    } else {\n      return settings.fitnessFunction(a) >= settings.fitnessFunction(b);\n    }\n  }\n\n  function compete() {\n    var nextGeneration = [];\n\n    for (var p = 0; p < settings.population.length - 1; p += 2) {\n      var phenotype = settings.population[p];\n      var competitor = settings.population[p + 1];\n\n      nextGeneration.push(phenotype);\n      if (doesABeatB(phenotype, competitor)) {\n        if (Math.random() < 0.5) {\n          nextGeneration.push(mutate(phenotype));\n        } else {\n          nextGeneration.push(crossover(phenotype));\n        }\n      } else {\n        nextGeneration.push(competitor);\n      }\n    }\n\n    settings.population = nextGeneration;\n  }\n\n  function randomizePopulationOrder() {\n    for (var index = 0; index < settings.population.length; index++) {\n      var otherIndex = Math.floor(Math.random() * settings.population.length);\n      var temp = settings.population[otherIndex];\n      settings.population[otherIndex] = settings.population[index];\n      settings.population[index] = temp;\n    }\n  }\n\n  return {\n    evolve: function (options) {\n      if (options) {\n        settings = settingWithDefaults(options, settings);\n      }\n\n      populate();\n      randomizePopulationOrder();\n      compete();\n      return this;\n    },\n    best: function () {\n      var scored = this.scoredPopulation();\n      var result = scored.reduce(function (a, b) {\n        return a.score >= b.score ? a : b;\n      }, scored[0]).phenotype;\n      return cloneJSON(result);\n    },\n    bestScore: function () {\n      return settings.fitnessFunction(this.best());\n    },\n    population: function () {\n      return cloneJSON(this.config().population);\n    },\n    scoredPopulation: function () {\n      return this.population().map(function (phenotype) {\n        return {\n          phenotype: cloneJSON(phenotype),\n          score: settings.fitnessFunction(phenotype),\n        };\n      });\n    },\n    config: function () {\n      return cloneJSON(settings);\n    },\n    clone: function (options) {\n      return geneticAlgorithmConstructor(\n        settingWithDefaults(options, settingWithDefaults(this.config(), settings))\n      );\n    },\n  };\n}\n","import GeneticAlgorithmConstructor, {\n  GeneticAlgorithmConfig,\n  ScoredPhenotype,\n} from '../geneticalgorithm/geneticalgorithm';\nimport {\n  handlePlayerEffect,\n  initialState,\n  makeGameNew,\n  playerActions,\n  previousState,\n  setSelected,\n} from './playGame';\nimport Chance from 'chance';\nimport {\n  Enemies,\n  EnemiesStats,\n  EnemyInfo,\n  Item,\n  MonsterTarget,\n  Play,\n  Player,\n  safeValues,\n  Seed,\n} from './types';\nimport { build } from './data';\nimport { Seq } from 'immutable';\nimport { playerStatsDefault } from './makeGame';\n\nexport type TinkererOptions = typeof defaultTinkererOptions;\n\nexport const defaultTinkererOptions = {\n  playerSeed: 'Miau',\n  weights: { monster: 1000, player: 0, turn: -0.1, stamina: 0 },\n  debug: false,\n};\n\ninterface StartStats {\n  startPlayerHealth: number;\n  startMonsterHealth: number;\n  startPlayerStamina: number;\n}\nconst scorePlay = (\n  options: TinkererOptions,\n  play: Play,\n  { startPlayerHealth, startMonsterHealth, startPlayerStamina }: StartStats\n) => {\n  const latestState = previousState(play);\n  const monsterHealth = latestState.enemies.reduce((acc, monster) => acc + monster.hp.current, 0);\n  const playerHealth = latestState.player.hp.current;\n  const playerStamina = latestState.player.stamina.current;\n\n  const monsterKillingFitness = Math.max(\n    0,\n    (startMonsterHealth - monsterHealth) / startMonsterHealth\n  );\n  const playerAlivenessFitness = playerHealth / startPlayerHealth;\n  const killSpeedFitness = (play.turns - play.states.length) / play.turns;\n  const staminaFitness = playerStamina / startPlayerStamina;\n\n  const fitness =\n    monsterKillingFitness * options.weights.monster +\n    playerAlivenessFitness * options.weights.player +\n    killSpeedFitness * options.weights.turn +\n    staminaFitness * options.weights.stamina;\n\n  if (options.debug || fitness < 0) {\n    console.log(\n      {\n        player: play.player.lore.name,\n        encounter: JSON.stringify(play.enemies.map((e) => e.lore.name)),\n        monsterHealth,\n        playerHealth,\n        turns: play.states.length,\n        fitness,\n        monsterKillingFitness,\n        playerAlivenessFitness,\n        staminaFitness,\n        killSpeedFitness,\n        weights: options.weights,\n      },\n      null,\n      2\n    );\n  }\n\n  return fitness;\n};\n\nconst startStats = (play: Play): StartStats => {\n  const startState = initialState(play);\n  const startPlayerHealth = startState.player.hp.max;\n  const startPlayerStamina = startState.player.stamina.max;\n  const startMonsterHealth = startState.enemies.reduce((acc, monster) => acc + monster.hp.max, 0);\n  return {\n    startPlayerHealth,\n    startMonsterHealth,\n    startPlayerStamina,\n  };\n};\n\nexport function findBestPlay(\n  play: Play,\n  iter: number,\n  population: number,\n  optionsOverride?: Partial<TinkererOptions>\n): ScoredPhenotype<Play>[] {\n  const options: TinkererOptions = {\n    ...defaultTinkererOptions,\n    ...optionsOverride,\n  };\n  const rand = new Chance(options.playerSeed);\n  const initStats = startStats(play);\n  const config: GeneticAlgorithmConfig<Play> = {\n    mutationFunction: (oldPlay) => {\n      const latestState = previousState(oldPlay);\n      const monsterHealth = latestState.enemies.reduce(\n        (acc, monster) => acc + monster.hp.current,\n        0\n      );\n      const playerHealth = latestState.player.hp.current;\n\n      // Won or loss, we bail\n      if (playerHealth === 0 || monsterHealth === 0 || oldPlay.states.length >= oldPlay.turns) {\n        return oldPlay;\n      }\n\n      // Maybe change monster\n      let newPlay = oldPlay;\n      while (rand.d6() === 6 || (latestState.enemies[latestState.target]?.hp.current ?? 0) <= 0) {\n        newPlay = setSelected(\n          newPlay,\n          rand.natural({\n            min: 0,\n            max: latestState.enemies.length - 1,\n          }) as MonsterTarget\n        );\n      }\n\n      // Use an action\n      const latest = previousState(newPlay);\n      const actions = playerActions(play.player, latest.inventory);\n      const unavailable = actions\n        .map((a, idx) => [a, idx] as const)\n        .filter(([a, _]) => a.stamina > latest.player.stamina.current)\n        .map(([_, idx]) => idx);\n      newPlay = handlePlayerEffect(\n        newPlay,\n        rand.natural({ min: 0, max: actions.length - 1, exclude: unavailable })\n      );\n\n      return newPlay;\n    },\n    fitnessFunction: (play) => scorePlay(options, play, initStats),\n    population: [play],\n    populationSize: population,\n  };\n\n  let gen = new GeneticAlgorithmConstructor<Play>(config);\n  for (let i = 0; i < iter; i++) {\n    gen = gen.evolve();\n  }\n\n  return Seq(gen.scoredPopulation())\n    .sortBy((a) => 1000 / a.score)\n    .toArray();\n}\n\nconst nonMutableProperties = new Set(['debug', 'basic']);\nexport const findBestBuild = (\n  players: Player[],\n  enemies: [Seed, EnemyInfo[]][],\n  iter: number,\n  gameIter: number,\n  population: number,\n  gamePopulation: number,\n  optionsOverride?: Partial<TinkererOptions & { turns: number }>\n): ScoredPhenotype<Player>[] => {\n  const options: TinkererOptions = {\n    ...defaultTinkererOptions,\n    ...optionsOverride,\n  };\n  const rng = new Chance(options.playerSeed);\n  const config: GeneticAlgorithmConfig<Player> = {\n    mutationFunction: (player: Player): Player => {\n      const toChange = rng.pickone(\n        Object.keys(player.build).filter((k) => !nonMutableProperties.has(k))\n      ) as keyof typeof build;\n      const newItem = rng.pickone(\n        safeValues<{ [k: string]: Item }, string>(build[toChange]).flatMap((a) =>\n          a.display !== player.build[toChange].display ? a : []\n        )\n      );\n      return {\n        ...player,\n        build: {\n          ...player.build,\n          [toChange]: newItem,\n        },\n      };\n    },\n    fitnessFunction: (player: Player) =>\n      Seq(enemies)\n        .flatMap((g) =>\n          Seq(\n            findBestPlay(\n              makeGameNew(\n                player,\n                playerStatsDefault,\n                g[1].map((a) => a[0]) as Enemies,\n                g[1].map((a) => a[1]) as EnemiesStats,\n                optionsOverride?.turns ?? 50,\n                g[0]\n              ),\n              gameIter,\n              gamePopulation,\n              optionsOverride\n            )\n          ).take(2)\n        )\n        .reduce((acc, v) => acc + v.score, 0),\n    population: players,\n    populationSize: population,\n  };\n\n  let gen = new GeneticAlgorithmConstructor<Player>(config);\n  for (let i = 0; i < iter; i++) {\n    gen = gen.evolve();\n  }\n\n  return Seq(gen.scoredPopulation())\n    .sortBy((a) => 1000 / a.score)\n    .toArray();\n};\n","import React from 'react';\nimport { Card, Button, OverlayTrigger, Popover } from 'react-bootstrap';\nimport { Enemy, Effect, EnemyStats } from '../game/types';\nimport { Seq } from 'immutable';\n\nconst skillPercents = (effects: Effect[]) =>\n  Seq(effects)\n    .countBy((e) => e.display)\n    .toArray()\n    .map(([display, v], idx) => {\n      const { range, priority, tooltip } = effects.find((a) => a.display === display)!!;\n      return (\n        <OverlayTrigger\n          key={idx}\n          placement=\"top\"\n          delay={{ show: 100, hide: 250 }}\n          overlay={(props) => (\n            <Popover {...props}>\n              <Popover.Header as=\"h3\">{display}</Popover.Header>\n              <Popover.Body>\n                {tooltip}\n                <br />\n                ⏱:{priority}\n                <br />\n                🏹:\n                {range.length === 5\n                  ? 'Any'\n                  : range.length === 0\n                  ? 'None'\n                  : range.map((a) => a + 1).join(', ')}\n              </Popover.Body>\n            </Popover>\n          )}\n        >\n          <>\n            [{((v / effects.length) * 100).toFixed(2)}%] {display}\n            <br key={idx} />\n          </>\n        </OverlayTrigger>\n      );\n    });\n\nconst EnemyCard: React.FC<{\n  enemy: Enemy;\n  enemyStats: EnemyStats;\n  latestAttack: string | undefined;\n  isSelected?: boolean;\n  onSelect: () => void;\n  canAct: boolean;\n  hotkey: string;\n}> = ({ enemy, enemyStats, isSelected, onSelect, latestAttack, canAct, hotkey }) => (\n  <Card bg={isSelected ? 'info' : undefined}>\n    <Card.Body>\n      <Card.Title>\n        {enemy.lore.name} {enemyStats.hp.current > 0 ? '' : <b>💀DEAD💀</b>}\n      </Card.Title>\n      <Card.Text>\n        ❤:{enemyStats.hp.current} 🏹:{enemyStats.distance}\n      </Card.Text>\n      <Card.Text>\n        Attack {enemyStats.attack.current}\n        <br />\n        Defence {enemyStats.defence.current}\n        <br />\n        Speed {enemyStats.speed.current}\n      </Card.Text>\n      {enemyStats.status.bleed.turns > 0 && (\n        <Card.Text>{enemyStats.status.bleed.turns} 🩸</Card.Text>\n      )}\n      {latestAttack && <Card.Text>Latest attack: {latestAttack}</Card.Text>}\n      <Card.Text>\n        Next attack prediction:\n        <br />\n        {skillPercents(enemy.rolls[enemyStats.distance].map((idx) => enemy.effects[idx]))}\n        <br />\n      </Card.Text>\n      {canAct && (\n        <Button disabled={isSelected} onClick={onSelect}>\n          [<i>{hotkey.toUpperCase()}</i>] Select\n        </Button>\n      )}\n    </Card.Body>\n  </Card>\n);\n\nexport default EnemyCard;\n","import React from 'react';\nimport {\n  Card,\n  Button,\n  ToggleButton,\n  ButtonGroup,\n  Popover,\n  OverlayTrigger,\n  Container,\n  Row,\n} from 'react-bootstrap';\nimport {\n  BuildRepository,\n  DisabledSkills,\n  InventoryEffect,\n  InventoryStats,\n  Item,\n  Player,\n  PlayerStats,\n  safeEntries,\n} from '../game/types';\nimport { Seq, Set } from 'immutable';\nimport { clamp } from '../game/zFunDump';\nimport { playerItemActions } from '../game/playGame';\n\nconst PlayerCard: React.FC<{\n  selectedButtons: Set<string>;\n  player: Player;\n  playerStats: PlayerStats;\n  inventoryStats: InventoryStats;\n  canAct: boolean;\n  lastAction: string | undefined;\n  onClickEffect: (index: number) => void;\n  disabledSkills: DisabledSkills;\n  hotkeys: string[];\n  setDisabledSkills: (skills: DisabledSkills) => void;\n}> = ({\n  selectedButtons,\n  player,\n  playerStats,\n  inventoryStats,\n  onClickEffect,\n  canAct,\n  lastAction,\n  disabledSkills,\n  setDisabledSkills,\n  hotkeys,\n}) => {\n  const passives = safeEntries(player.build).map(\n    ([k, e]) =>\n      [k, e, [...(e.bot ?? []), ...(e.eot ?? [])]] as [\n        keyof BuildRepository,\n        Item,\n        InventoryEffect[]\n      ]\n  );\n\n  const disabled = Set(disabledSkills);\n\n  const [passiveCount, passiveStamina] = passives.reduce(\n    ([count, sta], [k, _e, p]) => [\n      count + p.length,\n      sta + (disabled.has(k) ? 0 : p.reduce((acc, s) => acc + s.stamina, 0)),\n    ],\n    [0, 0]\n  );\n  const hasPassives = passiveCount > 0;\n  const staminaPerTurn = playerStats.staminaPerTurn.current - passiveStamina;\n\n  return (\n    <Card>\n      <Card.Body>\n        <Card.Title>\n          {player.lore.name}\n          {playerStats.hp.current > 0 ? '' : <b> 💀DEAD💀 </b>}\n        </Card.Title>\n        <Card.Subtitle className=\"mb-2 text-muted\">{player.build.class.display}</Card.Subtitle>\n        <Card.Text>\n          Attack {playerStats.attack.current} | Defence {playerStats.defence.current} | Speed{' '}\n          {playerStats.speed.current}\n        </Card.Text>\n        <Card.Text>{playerStats.hp.current} ❤</Card.Text>\n        <Card.Text>\n          {playerStats.stamina.current}/{playerStats.stamina.max} 💪 ({staminaPerTurn >= 0 && '+'}\n          {staminaPerTurn})\n        </Card.Text>\n        {playerStats.status.bleed.turns > 0 && (\n          <Card.Text>{playerStats.status.bleed.turns} 🩸</Card.Text>\n        )}\n        {lastAction && <Card.Text>Last action: {lastAction}</Card.Text>}\n      </Card.Body>\n      <Container>\n        {canAct && hasPassives && (\n          <Row>\n            <b>Passives</b>\n            <ButtonGroup>\n              {passives.map(\n                ([k, _i, effs]) =>\n                  effs.length > 0 &&\n                  effs.map((e, idx) => (\n                    <OverlayTrigger\n                      key={idx}\n                      placement=\"right\"\n                      delay={{ show: 100, hide: 250 }}\n                      overlay={(props) => (\n                        <Popover {...props}>\n                          <Popover.Header as=\"h3\">{e.display}</Popover.Header>\n                          <Popover.Body>{e.tooltip}</Popover.Body>\n                        </Popover>\n                      )}\n                    >\n                      <ToggleButton\n                        checked={!disabled.has(k)}\n                        value={k}\n                        id={`passive-skill-${k}`}\n                        type=\"checkbox\"\n                        variant=\"outline-primary\"\n                        onChange={(event) =>\n                          setDisabledSkills(\n                            event.currentTarget.checked\n                              ? Set(disabledSkills).delete(k).toArray()\n                              : Set(disabledSkills).add(k).toArray()\n                          )\n                        }\n                      >\n                        {e.display} (💪: {e.stamina})\n                      </ToggleButton>\n                    </OverlayTrigger>\n                  ))\n              )}\n            </ButtonGroup>\n          </Row>\n        )}\n        {canAct &&\n          Seq(playerItemActions(player, inventoryStats))\n            .map((a, idx) => [idx, a] as const)\n            .groupBy(([idx, [i, _e]]) => i.display)\n            .toArray()\n            .map(([k, effects]) => (\n              <Row key={k}>\n                <b>{k}</b>\n                <ButtonGroup>\n                  {effects\n                    .map(([idx, [_i, e]]) => (\n                      <OverlayTrigger\n                        key={e.display}\n                        placement=\"top\"\n                        delay={{ show: 100, hide: 250 }}\n                        overlay={(props) => (\n                          <Popover {...props}>\n                            <Popover.Header as=\"h3\">{e.display}</Popover.Header>\n                            <Popover.Body>{e.tooltip}</Popover.Body>\n                          </Popover>\n                        )}\n                      >\n                        <div>\n                          <Button\n                            active={selectedButtons.has(e.display)}\n                            disabled={playerStats.stamina.current < e.stamina}\n                            onClick={(_) => onClickEffect(idx)}\n                          >\n                            [<i>{hotkeys[idx]}</i>] <b>{e.display}</b>\n                          </Button>\n                          <br />\n                          <Card.Text>\n                            💪:{e.stamina} ⏱:\n                            {clamp(e.priority - playerStats.speed.current, 0, 4)}\n                            <br />\n                            🏹:\n                            {e.range.length === 5 ? 'All' : e.range.join(', ')}\n                          </Card.Text>\n                        </div>\n                      </OverlayTrigger>\n                    ))\n                    .toArray()}\n                </ButtonGroup>\n              </Row>\n            ))}\n      </Container>\n    </Card>\n  );\n};\n\nexport default PlayerCard;\n","import { Container, Row, Col, Card, Modal, ButtonGroup } from 'react-bootstrap';\n\nimport { DisabledSkills, MonsterTarget, Play } from '../game/types';\n\nimport EnemyCard from './Enemy';\nimport PlayerCard from './Player';\nimport usePressedKeys from '../hooks/usePressedKeys';\nimport { playerActions } from '../game/playGame';\nimport { Seq, Set } from 'immutable';\nimport { previousState } from '../game/playGame';\nimport { Button } from 'react-bootstrap';\nimport saveAs from 'file-saver';\nimport { useCallback, useEffect, useState } from 'react';\nimport { updateGlobals } from '../game/modding';\nimport { useForceRerender } from '../hooks/useForceRerender';\n\nexport type GameProps = {\n  game: Play;\n  setSelected: (target: MonsterTarget) => void;\n  setDisabledSkills: (disabled: DisabledSkills) => void;\n  handlePlayerEffect: (index: number) => void;\n  solveGame: (iterations: number, population: number) => void;\n  hint: (iterations: number, population: number) => void;\n  timeTravel: { undo: () => void; redo: (() => void) | undefined } | undefined;\n  onMenu: () => void;\n};\n\nconst playerHotkeys = [\n  'q',\n  'w',\n  'e',\n  'r',\n  't',\n  'y',\n  'u',\n  'i',\n  'o',\n  'p',\n  'z',\n  'x',\n  'c',\n  'v',\n  'b',\n  'n',\n  'm',\n];\n\nconst Game = ({\n  handlePlayerEffect,\n  setSelected,\n  setDisabledSkills,\n  game,\n  solveGame,\n  timeTravel,\n  hint,\n  onMenu,\n}: GameProps): JSX.Element => {\n  const { player, enemies } = game;\n  const {\n    player: playerStats,\n    enemies: enemiesStats,\n    target,\n    lastAttacks,\n    disabledSkills,\n    inventory: inventoryStats,\n  } = previousState(game);\n  const [isLogShown, setShowLog] = useState(false);\n  const forceUpdate = useForceRerender();\n\n  useEffect(() => {\n    updateGlobals({ ingame: { game, forceUpdate } });\n    return () => updateGlobals({ ingame: undefined });\n  }, [game, forceUpdate]);\n\n  const handleCloseLog = () => setShowLog(false);\n  const handleShowLog = () => setShowLog(true);\n\n  const playerSkills = playerActions(player, inventoryStats);\n  const monsterHealth = enemiesStats.reduce((acc, m) => m.hp.current + acc, 0);\n  const isPlayerAlive = playerStats.hp.current > 0;\n  const areMonstersAlive = monsterHealth > 0;\n  const endGame = game.states.length < game.turns;\n  const canAct = isPlayerAlive && areMonstersAlive && endGame;\n\n  const pressed = usePressedKeys((key) => {\n    if (!canAct) return;\n\n    const skillIndex = playerHotkeys.indexOf(key);\n    if (skillIndex !== -1) {\n      const skillNumber = playerHotkeys.indexOf(key);\n      const hasStamina = playerSkills[skillNumber].stamina <= playerStats.stamina.current;\n      if (!hasStamina) return;\n      handlePlayerEffect(skillNumber);\n    }\n\n    if (key === 'Escape') {\n      onMenu();\n    }\n    if (key === 'h') {\n      hint(5, 100);\n    }\n\n    if (key === 'l') {\n      setShowLog(!isLogShown);\n    }\n\n    if (key === 's') {\n      save();\n    }\n\n    if (key === 'a' && game.states.length > 1 && timeTravel) {\n      timeTravel.undo();\n    }\n    if (key === 'd' && timeTravel && timeTravel.redo != null) {\n      timeTravel.redo();\n    }\n\n    const valNum = parseInt(key);\n    if (valNum > 0 && valNum <= enemies.length) {\n      setSelected((valNum - 1) as MonsterTarget);\n    }\n  });\n\n  const selectedButtons = Set<string>(\n    [...pressed].flatMap((key: string) => {\n      const skillIndex = playerHotkeys.indexOf(key);\n      if (skillIndex !== -1) {\n        return [playerSkills[skillIndex].display];\n      } else {\n        return [];\n      }\n    })\n  );\n\n  const save = useCallback(() => {\n    const blob = new Blob([JSON.stringify(game)], {\n      type: 'application/json;charset=utf-8',\n    });\n    saveAs(blob, `buildmancer-${Date.now()}.bmreplay`);\n  }, [game]);\n\n  return (\n    <>\n      <Container fluid>\n        <Row className=\"justify-content-center align-items-flex-start\">\n          <Col sm={12} md={8}>\n            <Button onClick={onMenu}>\n              [<i>Esc</i>] MAIN MENU\n            </Button>\n            <Card.Title>\n              {!isPlayerAlive ? (\n                <b>❌❌DEFEAT❌❌</b>\n              ) : !areMonstersAlive ? (\n                <b>🎉🎉VICTORY🎉🎉</b>\n              ) : (\n                ''\n              )}{' '}\n              Turn {game.states.length} out of {game.turns}\n            </Card.Title>\n            <PlayerCard\n              player={player}\n              playerStats={playerStats}\n              inventoryStats={inventoryStats}\n              disabledSkills={disabledSkills}\n              setDisabledSkills={setDisabledSkills}\n              onClickEffect={(idx) => handlePlayerEffect(idx)}\n              selectedButtons={selectedButtons}\n              hotkeys={playerHotkeys}\n              lastAction={\n                lastAttacks\n                  .filter((a) => a.origin === 'Player' && a.phase !== 'CLEANUP')\n                  .map((a) => `${a.display}`)\n                  .join(' -> ') ?? undefined\n              }\n              canAct={canAct}\n            />\n            {timeTravel != null && (\n              <Row>\n                <ButtonGroup>\n                  {game.states.length > 1 && (\n                    <Button onClick={(_) => timeTravel.undo()}>\n                      [<i>A</i>] Undo ↩\n                    </Button>\n                  )}\n                  {timeTravel.redo && (\n                    <Button onClick={(_) => timeTravel.redo!!()}>\n                      [<i>D</i>] Redo ↪\n                    </Button>\n                  )}\n                </ButtonGroup>\n              </Row>\n            )}\n            <Row>\n              <ButtonGroup>\n                <Button onClick={(_) => hint(5, 100)}>\n                  <i>[H]</i> Hint\n                </Button>\n              </ButtonGroup>\n            </Row>\n            <Row>\n              {Seq(enemies)\n                .zip(Seq(enemiesStats))\n                .map(([enemy, stats], idx) => (\n                  <Col key={idx} xs={6} md={4}>\n                    <EnemyCard\n                      key={idx}\n                      enemyStats={stats}\n                      enemy={enemy}\n                      canAct={canAct}\n                      latestAttack={\n                        Seq(lastAttacks)\n                          .filter(({ origin, phase }) => origin === idx && phase === 'MAIN')\n                          .map((a) => `${a.display}`)\n                          .join(' -> ') ?? undefined\n                      }\n                      isSelected={idx === target}\n                      onSelect={() => setSelected(idx as MonsterTarget)}\n                      hotkey={`${idx + 1}`}\n                    />\n                  </Col>\n                ))}\n            </Row>\n            <Card.Title>Debug</Card.Title>\n            <Row>\n              <ButtonGroup>\n                <Button onClick={handleShowLog}>\n                  [<i>L</i>] Log 🗒\n                </Button>\n                <Button onClick={save}>\n                  [<i>S</i>] Save Replay 📂\n                </Button>\n              </ButtonGroup>\n            </Row>\n            <Card.Title>Cheats</Card.Title>\n            <Row>\n              <ButtonGroup>\n                <Button onClick={(_) => solveGame(5, 100)}>Solve ⌛</Button>\n                <Button onClick={(_) => solveGame(20, 100)}>Solve thoroughly ⌛⌛⌛</Button>\n              </ButtonGroup>\n            </Row>\n          </Col>\n        </Row>\n      </Container>\n      <Modal show={isLogShown} onHide={handleCloseLog} scrollable={true} centered={true}>\n        <Modal.Header closeButton>\n          <Modal.Title>Game Log</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          {game.states.map((s, idx) => (\n            <div key={idx}>\n              <b>Turn {idx}</b>\n              <br />\n              Player: {JSON.stringify(s.player, null, 2)}\n              <br />\n              Enemies: {JSON.stringify(s.enemies, null, 2)}\n              <br />\n              Inventory?: {JSON.stringify(s.inventory, null, 2)}\n              <br />\n              Target [{s.target}]<br />\n              Bot?: {JSON.stringify(s.bot, null, 2)}\n              <br />\n              Eot?: {JSON.stringify(s.eot, null, 2)}\n              <br />\n              Actions:\n              <br />\n              {s.lastAttacks.map((a, idx) => (\n                <div key={idx}>\n                  {'-->'} {JSON.stringify(a, null, 2)}\n                  <br />\n                </div>\n              ))}\n            </div>\n          ))}\n        </Modal.Body>\n        <Modal.Footer>\n          <Button variant=\"primary\" onClick={handleCloseLog}>\n            Close\n          </Button>\n        </Modal.Footer>\n      </Modal>\n    </>\n  );\n};\n\nexport default Game;\n","import React from 'react';\n\nexport function useForceRerender() {\n  const [value, setValue] = React.useState(false);\n  return () => setValue(!value);\n}\n","import { useEffect, useCallback, useState } from 'react';\n\nexport default function usePressedKeys(onUp: (e: string) => void): Set<string> {\n  const [pressedKeys, updatePressedKeys] = useState(new Set<string>());\n\n  const downHandler = ({ key }: { key: string }) => {\n    updatePressedKeys((set) => new Set([...set, key]));\n  };\n\n  const upHandler = useCallback(\n    ({ key }: { key: string }) => {\n      updatePressedKeys((set) => new Set([...set].filter((k) => k !== key)));\n      onUp(key);\n    },\n    [onUp]\n  );\n\n  useEffect(() => {\n    window.addEventListener('keydown', downHandler);\n    window.addEventListener('keyup', upHandler);\n\n    return () => {\n      window.removeEventListener('keydown', downHandler);\n      window.removeEventListener('keyup', upHandler);\n    };\n  }, [upHandler]);\n\n  return pressedKeys;\n}\n","import { Seq } from 'immutable';\nimport React from 'react';\nimport { findBestPlay } from '../../game/tinkerer';\nimport { initialState, previousState } from '../../game/playGame';\nimport {\n  PlayState,\n  playState,\n  setSelected,\n  setDisabledSkills,\n  handlePlayerEffect,\n} from '../../game/playGame';\nimport { Play, Snapshot } from '../../game/types';\nimport Game from '../Game';\n\nconst SingleGame = ({\n  play,\n  timeTravel,\n  onGameEnd,\n  onMenu,\n}: {\n  play: Play;\n  timeTravel: boolean;\n  onGameEnd: (state: PlayState, play: Play) => void;\n  onMenu: () => void;\n}) => {\n  const [game, setGame] = React.useState<Play>(play);\n  const [redo, setRedo] = React.useState<Snapshot[]>([]);\n\n  React.useEffect(() => {\n    setGame(play);\n  }, [play]);\n\n  React.useEffect(() => {\n    const gameState = playState(game);\n    const hasEnded = gameState !== 'playing';\n    if (hasEnded) {\n      onGameEnd(gameState, game);\n    }\n  }, [game]);\n\n  const timeTravelObj = timeTravel\n    ? {\n        redo:\n          redo.length > 0\n            ? () => {\n                const newRedo = [...redo];\n                const latest = newRedo.pop() as Snapshot;\n                setRedo(newRedo);\n                setGame({ ...game, states: [...game.states, latest] });\n              }\n            : undefined,\n        undo: () => {\n          setRedo([...redo, previousState(game)]);\n          setGame({\n            ...game,\n            states: [initialState(game), ...game.states.slice(1, -1)],\n          });\n        },\n      }\n    : undefined;\n\n  return (\n    <Game\n      game={game}\n      timeTravel={timeTravelObj}\n      onMenu={onMenu}\n      setSelected={(idx) => {\n        setRedo([]);\n        setGame(setSelected(game, idx));\n      }}\n      setDisabledSkills={(disabled) => {\n        setRedo([]);\n        setGame(setDisabledSkills(game, disabled));\n      }}\n      handlePlayerEffect={(idx) => {\n        setRedo([]);\n        setGame(handlePlayerEffect(game, idx));\n      }}\n      solveGame={(iterations, population) =>\n        setGame(Seq(findBestPlay(game, iterations, population)).maxBy((a) => a.score)!!.phenotype)\n      }\n      hint={(iterations, population) =>\n        setGame({\n          ...game,\n          states: [\n            ...game.states,\n            Seq(findBestPlay(game, iterations, population)).maxBy((a) => a.score)!!.phenotype\n              .states[game.states.length],\n          ],\n        })\n      }\n    />\n  );\n};\n\nexport default SingleGame;\n","import React from 'react';\nimport { Form, Col, Row, Alert, Button, Container } from 'react-bootstrap';\nimport { Play } from '../../game/types';\nimport { playSchema } from '../../game/typesSchemas';\n\nconst LoadScreen = ({ onLoad, onMenu }: { onLoad: (g: Play) => void; onMenu: () => void }) => {\n  const [loadError, setLoadError] = React.useState<string | undefined>();\n  const load = (data: string) => {\n    try {\n      const playRaw = JSON.parse(data);\n      try {\n        // FIXME update schema\n        //playSchema.parse(playRaw);\n        onLoad(playRaw as Play);\n      } catch (e) {\n        setLoadError('Failed to load Replay - Invalid Data');\n      }\n    } catch (e) {\n      setLoadError('Failed to load Replay - Bad Data');\n    }\n  };\n  const onFormSubmit = (e: any) => {\n    e.preventDefault();\n    if (e.target?.fileData?.files[0] != null) {\n      const reader = new FileReader();\n      reader.onloadend = (ev: ProgressEvent<FileReader>) => {\n        const result = ev.target?.result as string | undefined;\n        if (result != null) {\n          load(result);\n        } else {\n          setLoadError('Failed to load Replay - Bad File');\n        }\n      };\n      reader.readAsText(e.target.fileData.files[0]);\n    } else if (e.target?.rawData?.value != null && e.target?.rawData?.value !== '') {\n      load(e.target.rawData.value);\n    }\n  };\n  return (\n    <Form onSubmit={onFormSubmit}>\n      <Container fluid>\n        <Col>\n          <Row>\n            {loadError && (\n              <>\n                <Alert variant={'danger'}>{loadError}</Alert>\n                <br />\n                <br />\n              </>\n            )}\n          </Row>\n          <Row>\n            <Form.Group>\n              <Form.Label>Load Replay from File</Form.Label>\n              <Form.Control type=\"file\" name=\"fileData\" accept=\".bmreplay\" />\n              <Form.Text muted>Select the Replay file to load</Form.Text>\n            </Form.Group>\n          </Row>\n          <br />\n          <Row>\n            <Form.Group>\n              <Form.Label>Load Replay from Text</Form.Label>\n              <Form.Control name=\"rawData\" as=\"textarea\" rows={3} placeholder=\"Replay text\" />\n              <Form.Text muted>Paste the text of your Replay here</Form.Text>\n            </Form.Group>\n          </Row>\n          <br />\n          <Button variant=\"primary\" type=\"submit\">\n            Load\n          </Button>\n        </Col>\n        <br />\n        <Button onClick={onMenu}>MAIN MENU</Button>\n      </Container>\n    </Form>\n  );\n};\n\nexport default LoadScreen;\n","import './App.css';\n// import { readString } from \"react-papaparse\";\nimport { Snapshot, Play, EnemyStats, Enemy, EnemiesStats, Enemies } from './game/types';\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport PlayerBuilder from './components/PlayerBuilder';\nimport EncounterBuilder from './components/EncounterBuilder';\nimport {\n  initialState,\n  makeGameNew,\n  makeGameNextLevel,\n  PlayState,\n  previousState,\n} from './game/playGame';\nimport { dummyEnemy, randomEnemy, randomPlayer } from './game/makeGame';\nimport { useMachine } from '@xstate/react';\nimport { gameMenuMachine } from './stateMachines/menuStateMachine';\nimport Menu from './components/menus/Menu';\nimport SingleGame from './components/menus/SingleGame';\nimport LoadScreen from './components/menus/LoadScreen';\n\nfunction App() {\n  const [state, send] = useMachine(gameMenuMachine, { devTools: true });\n  const event = state.event;\n  const onMenu = () => {\n    send('MENU');\n  };\n\n  switch (true) {\n    case state.matches('main'):\n      return (\n        <Menu\n          title={'Main Menu'}\n          states={Object.keys(gameMenuMachine.states.main.on)}\n          onClick={send}\n        />\n      );\n    // QUICK\n    case state.matches({ quick: 'play' }): {\n      const player = randomPlayer();\n      const encounter = randomEnemy();\n      return (\n        <SingleGame\n          play={makeGameNew(\n            player[0],\n            player[1],\n            [encounter[0]],\n            [encounter[1]],\n            50,\n            state.context.singleContext.seed\n          )}\n          onMenu={onMenu}\n          timeTravel={true}\n          onGameEnd={(result, game) => {\n            send(result === 'win' ? 'WIN' : 'LOSE', { result, game });\n          }}\n        />\n      );\n    }\n    case state.matches({ quick: 'win' }):\n    case state.matches({ quick: 'lose' }):\n      return (\n        <Menu\n          title={`${event.result} in ${event.game.states.length - 1} turns`}\n          states={['MENU']}\n          onClick={send}\n        />\n      );\n    // SINGLE\n    case state.matches({ single: 'player' }):\n      return (\n        <PlayerBuilder\n          onSave={(player, playerStats) => {\n            send('PLAYER', { player: [player, playerStats] });\n          }}\n        />\n      );\n    case state.matches({ single: 'encounter' }):\n      return (\n        <EncounterBuilder\n          player={event.player[0]}\n          onSave={(enemies, enemiesStats) => {\n            send('ENCOUNTER', {\n              encounter: [enemies, enemiesStats],\n              player: event.player,\n            });\n          }}\n        />\n      );\n    case state.matches({ single: 'play' }): {\n      return (\n        <SingleGame\n          play={makeGameNew(\n            event.player[0],\n            event.player[1],\n            event.encounter[0],\n            event.encounter[1],\n            50,\n            state.context.singleContext.seed\n          )}\n          onMenu={onMenu}\n          timeTravel={true}\n          onGameEnd={(result, game) => {\n            send(result === 'win' ? 'WIN' : 'LOSE', { result, game });\n          }}\n        />\n      );\n    }\n    case state.matches({ single: 'win' }):\n    case state.matches({ single: 'lose' }):\n      return (\n        <Menu\n          title={`${event.result} in ${event.game.states.length - 1} turns`}\n          states={['MENU']}\n          onClick={send}\n        />\n      );\n    // TRAINING\n    case state.matches({ training: 'player' }):\n      return (\n        <PlayerBuilder\n          onSave={(player, playerStats) => {\n            send('PLAYER', { player: [player, playerStats] });\n          }}\n        />\n      );\n    case state.matches({ training: 'play' }): {\n      const player = randomPlayer();\n      const encounter = dummyEnemy();\n      return (\n        <SingleGame\n          play={makeGameNew(\n            player[0],\n            player[1],\n            [encounter[0]],\n            [encounter[1]],\n            50,\n            state.context.singleContext.seed\n          )}\n          onMenu={onMenu}\n          timeTravel={true}\n          onGameEnd={(result, game) => {\n            send(result === 'win' ? 'WIN' : 'LOSE', { result, game });\n          }}\n        />\n      );\n    }\n    case state.matches({ training: 'win' }):\n    case state.matches({ training: 'lose' }):\n      return (\n        <Menu\n          title={`You have dealt a lot of damage! Well done 💯`}\n          states={['MENU']}\n          onClick={send}\n        />\n      );\n    // ARCADE\n    case state.matches({ arcade: 'player' }): {\n      const encounter = randomEnemy();\n      return (\n        <PlayerBuilder\n          onSave={(player, playerStats) => {\n            send('PLAYER', {\n              game: makeGameNew(\n                player,\n                playerStats,\n                [encounter[0]],\n                [encounter[1]],\n                50,\n                state.context.survivalContext.seed\n              ),\n            });\n          }}\n        />\n      );\n    }\n    case state.matches({ arcade: 'play' }): {\n      return (\n        <SingleGame\n          play={event.game}\n          timeTravel={false}\n          onMenu={onMenu}\n          onGameEnd={(result: PlayState, game: Play) => {\n            let encounter = [[], []] as [Enemy[], EnemyStats[]];\n            if (state.context.arcadeContext.victories >= 0) {\n              const otherEnemy = randomEnemy();\n              encounter = [\n                [...encounter[0], otherEnemy[0]],\n                [...encounter[1], otherEnemy[1]],\n              ];\n            }\n            if (state.context.arcadeContext.victories >= 2) {\n              const otherEnemy = randomEnemy();\n              encounter = [\n                [...encounter[0], otherEnemy[0]],\n                [...encounter[1], otherEnemy[1]],\n              ];\n            }\n            if (state.context.arcadeContext.victories >= 5) {\n              const otherEnemy = randomEnemy();\n              encounter = [\n                [...encounter[0], otherEnemy[0]],\n                [...encounter[1], otherEnemy[1]],\n              ];\n            }\n            const firstState: Snapshot = initialState(game);\n            send(result === 'win' ? 'WIN' : 'LOSE', {\n              result,\n              game: makeGameNextLevel(\n                game.player,\n                firstState.player,\n                encounter[0] as Enemies,\n                encounter[1] as EnemiesStats,\n                {},\n                50,\n                state.context.survivalContext.seed\n              ),\n            });\n          }}\n        />\n      );\n    }\n    case state.matches({ arcade: 'victory' }): {\n      return (\n        <Menu\n          title={`🎉🎉VICTORY!🎉🎉 Final score: ${state.context.arcadeContext.score}`}\n          states={['MENU']}\n          onClick={send}\n        />\n      );\n    }\n    case state.matches({ arcade: 'defeat' }): {\n      return (\n        <Menu\n          title={`Failed after ${state.context.arcadeContext.victories} victories`}\n          states={['MENU']}\n          onClick={send}\n        />\n      );\n    }\n    // SURVIVAL\n    case state.matches({ survival: 'player' }): {\n      const encounter = randomEnemy();\n      return (\n        <PlayerBuilder\n          onSave={(player, playerStats) => {\n            send('PLAYER', {\n              game: makeGameNew(\n                player,\n                playerStats,\n                [encounter[0]],\n                [encounter[1]],\n                50,\n                state.context.survivalContext.seed\n              ),\n            });\n          }}\n        />\n      );\n    }\n    case state.matches({ survival: 'play' }): {\n      return (\n        <SingleGame\n          play={event.game}\n          onMenu={onMenu}\n          timeTravel={false}\n          onGameEnd={(result, game) => {\n            const encounter = randomEnemy();\n            const lastState: Snapshot = previousState(game);\n            send(result === 'win' ? 'WIN' : 'LOSE', {\n              result,\n              game: makeGameNextLevel(\n                game.player,\n                lastState.player,\n                [encounter[0]],\n                [encounter[1]],\n                lastState.inventory,\n                50,\n                state.context.survivalContext.seed\n              ),\n            });\n          }}\n        />\n      );\n    }\n    case state.matches({ survival: 'defeat' }): {\n      return (\n        <Menu\n          title={`Completed after ${state.context.survivalContext.victories} victories`}\n          states={['MENU']}\n          onClick={send}\n        />\n      );\n    }\n    // LOAD\n    case state.matches({ replay: 'replay' }): {\n      return <LoadScreen onLoad={(game) => send('REPLAY', { game })} onMenu={onMenu} />;\n    }\n    case state.matches({ replay: 'play' }): {\n      return (\n        <SingleGame\n          play={event.game}\n          onMenu={onMenu}\n          timeTravel={true}\n          onGameEnd={(result, game) => {\n            send(result === 'win' ? 'WIN' : 'LOSE', { result, game });\n          }}\n        />\n      );\n    }\n    case state.matches({ replay: 'win' }):\n    case state.matches({ replay: 'lose' }):\n      return (\n        <Menu\n          title={`${event.result} in ${event.game.states.length - 1} turns`}\n          states={['MENU']}\n          onClick={send}\n        />\n      );\n    default:\n      return <>{JSON.stringify(state.value)}</>;\n  }\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport { createRoot } from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorkerRegistration from './serviceWorkerRegistration';\nimport reportWebVitals from './reportWebVitals';\n\nconst container = document.getElementById('root');\nconst root = createRoot(container!);\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://cra.link/PWA\nserviceWorkerRegistration.register();\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","import { Opaque } from 'type-fest';\nimport { enemies } from './data';\nimport { EnemiesIndex } from './data/enemies';\nimport { allRanges, makeStat } from './makeGame';\nimport { updateGlobals } from './modding';\nimport {\n  callEffectFun,\n  Effect,\n  effectFunCall,\n  EffectTarget,\n  Enemies,\n  EnemiesStats,\n  Enemy,\n  EnemyStats,\n  FunIndex,\n  MonsterTarget,\n  Play,\n  PlayerStats,\n  Snapshot,\n  StatEffectTarget,\n  Status,\n  Target,\n} from './types';\nimport { clamp, pipe } from './zFunDump';\n\n// #region Effect funs\n\nexport function extractFunction({ effects }: Effect): ReduceFun {\n  return (origin, play, startState) =>\n    effects.reduce(\n      (acc, { index, parameters }) =>\n        callEffectFun(effectFunRepo, index, parameters)(origin, ...acc),\n      [play, startState]\n    );\n}\n\nconst effectFun = <T>(fun: ParametrizedFun<T>): EffectFun<T> =>\n  ((params) => (origin, play, oldState) => fun(params)(origin, play, oldState)) as EffectFun<T>;\n\nconst applyPoison = (\n  play: Play,\n  currentState: Snapshot,\n  { target, turns }: ReduceFunctionT['Reduce:PoisonBOT']\n) =>\n  pipe(\n    target === 'Player'\n      ? actions.changeStatPlayer(currentState, ({ hp }) => ({\n          hp: { ...hp, current: Math.max(0, hp.current - 1) },\n        }))\n      : actions.changeStatMonster(currentState, currentState.target, ({ hp }) => ({\n          hp: { ...hp, current: Math.max(0, hp.current - 1) },\n        })),\n    (newState) =>\n      turns > 0\n        ? actions.addBotEffect(newState, 'Player', {\n            display: `Poison ${\n              target === 'Player'\n                ? 'Player'\n                : play.enemies[target]!!.lore.name + ' [' + (target + 1) + ']'\n            }`,\n            tooltip: '',\n            range: allRanges,\n            priority: 4,\n            interruptible: false,\n            effects: [effectFunCall(['Reduce:PoisonBOT', { target: target, turns: turns - 1 }])],\n          })\n        : newState\n  );\n\ntype SystemFunctionT = {\n  'Utility:Cleanup': undefined;\n  'Debug:GGWP': undefined;\n  'Debug:Sudoku': undefined;\n};\ntype BasicFunctionT = {\n  'Basic:Rest': undefined;\n  'Basic:Move': { amount: number };\n  'Basic:Attack': { amount: number };\n  'Basic:Stamina': { amount: number };\n  'Basic:HP': { amount: number };\n};\n\ntype StatusFunctionT = {\n  'Effect:Poison': { target: EffectTarget; turns: number };\n  'Effect:Dodge': undefined;\n  'Effect:Armor': { amount: number };\n  'Effect:Stun': undefined;\n  'Effect:Bleed': { target: EffectTarget; turns: number };\n  'Effect:Stat': StatEffectTarget;\n};\n\ntype MonsterFunctionT = {\n  'Monster:Summon': { enemy: EnemiesIndex };\n  'Monster:Dead': undefined;\n  'Monster:Attack': { amount: number };\n  'Monster:Move': { amount: number };\n};\ntype ItemFunctionT = {\n  'Wand:MagicBolt': undefined;\n  'BootsOfFlight:EOT': undefined;\n};\ntype ReduceFunctionT = {\n  'Reduce:PoisonBOT': { target: Target; turns: number };\n};\n\nconst engineFunctions = {\n  'Debug:GGWP': effectFun(() => (_, play, currentState) => [\n    play,\n    {\n      ...currentState,\n      enemies: currentState.enemies.map((m) => ({\n        ...m,\n        hp: { ...m.hp, current: 0 },\n      })) as EnemiesStats,\n    },\n  ]),\n  'Debug:Sudoku': effectFun(() => (_, play, currentState) => [\n    play,\n    {\n      ...currentState,\n      player: {\n        ...currentState.player,\n        hp: { ...currentState.player.hp, current: 0 },\n      },\n    },\n  ]),\n  'Utility:Cleanup': effectFun(() => (_origin, play, currentState) => [\n    play,\n    pipe(\n      actions.changeStatusPlayer(currentState, (o) => ({\n        ...o,\n        armor: { amount: 0 },\n        bleed: { turns: Math.max(o.bleed.turns - 1, 0) },\n        dodge: { active: false },\n        stun: { active: false },\n      })),\n      (newState) =>\n        newState.enemies.reduce(\n          (acc, v, idx) =>\n            actions.changeStatusMonster(acc, idx as MonsterTarget, (o) => ({\n              ...o,\n              armor: { amount: 0 },\n              bleed: { turns: Math.max(o.bleed.turns - 1, 0) },\n              dodge: { active: false },\n              stun: { active: false },\n            })),\n          currentState\n        )\n    ),\n  ]),\n};\n\nconst effectFunRepo: EffectFunctionRepository = {\n  ...engineFunctions,\n  // #region BASIC\n  'Basic:Rest': effectFun(() => (_origin, play, currentState) => [play, currentState]),\n  'Basic:Move': effectFun(({ amount }) => (_origin, play, currentState) => [\n    play,\n    actions.changeDistance(currentState, currentState.target, amount),\n  ]),\n  'Basic:Attack': effectFun(({ amount }) => (_origin, play, currentState) => [\n    play,\n    actions.attackMonster(currentState, currentState.target, amount),\n  ]),\n  'Basic:Stamina': effectFun(({ amount }) => (_origin, play, currentState) => [\n    play,\n    actions.modifyPlayerStamina(currentState, amount),\n  ]),\n  'Basic:HP': effectFun(({ amount }) => (_origin, play, currentState) => [\n    play,\n    actions.changeStatPlayer(currentState, ({ hp }) => ({\n      hp: { ...hp, current: clamp(hp.current + amount, 0, hp.max) },\n    })),\n  ]),\n  // #endregion BASIC\n  // #region EFFECTS\n  'Effect:Dodge': effectFun(() => (origin, play, currentState) => [\n    play,\n    origin === 'Player'\n      ? actions.changeStatusPlayer(currentState, (o) => ({\n          ...o,\n          dodge: { active: true },\n        }))\n      : actions.changeStatusMonster(currentState, currentState.target, (o) => ({\n          ...o,\n          dodge: { active: true },\n        })),\n  ]),\n  'Effect:Armor': effectFun(({ amount }) => (origin, play, currentState) => [\n    play,\n    origin === 'Player'\n      ? actions.changeStatusPlayer(currentState, (o) => ({\n          ...o,\n          armor: { amount: o.armor.amount + amount },\n        }))\n      : actions.changeStatusMonster(currentState, currentState.target, (o) => ({\n          ...o,\n          armor: { amount: o.armor.amount + amount },\n        })),\n  ]),\n  'Effect:Stun': effectFun(() => (origin, play, currentState) => [\n    play,\n    origin === 'Player'\n      ? actions.changeStatusMonster(currentState, currentState.target, (o) => ({\n          ...o,\n          stun: { active: true },\n        }))\n      : actions.changeStatusPlayer(currentState, (o) => ({\n          ...o,\n          stun: { active: true },\n        })),\n  ]),\n  'Effect:Bleed': effectFun(({ target, turns }) => (_, play, currentState) => [\n    play,\n    target === 'Player'\n      ? actions.changeStatusPlayer(currentState, (o) => ({\n          ...o,\n          bleed: { turns: o.bleed.turns + turns },\n        }))\n      : actions.changeStatusMonster(currentState, currentState.target, (o) => ({\n          ...o,\n          bleed: { turns: o.bleed.turns + turns },\n        })),\n  ]),\n  'Effect:Poison': effectFun(({ target, turns }) => (_, play, currentState) => [\n    play,\n    pipe(target === 'Player' ? ('Player' as Target) : currentState.target, (gameTarget) =>\n      applyPoison(play, currentState, { target: gameTarget, turns })\n    ),\n  ]),\n  'Reduce:PoisonBOT': effectFun((params) => (_, play, currentState) => [\n    play,\n    applyPoison(play, currentState, params),\n  ]),\n  'Effect:Stat': effectFun((stats) => (origin, play, currentState) => [\n    play,\n    stats.target === 'Player'\n      ? actions.changeStatPlayer(currentState, (s) => ({\n          hp: {\n            ...s.hp,\n            current: clamp(s.hp.current + (stats.hp ?? 0), 0, s.hp.max),\n          },\n          stamina: {\n            ...s.stamina,\n            current: clamp(s.stamina.current + (stats.stamina ?? 0), 0, s.stamina.max),\n          },\n          speed: {\n            ...s.speed,\n            current: Math.min(s.speed.max, s.speed.current + (stats.speed ?? 0)),\n          },\n          defence: {\n            ...s.defence,\n            current: Math.min(s.defence.max, s.defence.current + (stats.defence ?? 0)),\n          },\n          attack: {\n            ...s.attack,\n            current: Math.min(s.attack.max, s.attack.current + (stats.attack ?? 0)),\n          },\n          staminaPerTurn: {\n            ...s.staminaPerTurn,\n            current: Math.min(\n              s.staminaPerTurn.max,\n              s.staminaPerTurn.current + (stats.staminaPerTurn ?? 0)\n            ),\n          },\n        }))\n      : actions.changeStatMonster(\n          currentState,\n          origin === 'Player' ? currentState.target : origin,\n          (s) => ({\n            hp: {\n              ...s.hp,\n              current: clamp(s.hp.current + (stats.hp ?? 0), 0, s.hp.max),\n            },\n            speed: {\n              ...s.speed,\n              current: Math.min(s.speed.current + (stats.speed ?? 0), s.speed.max),\n            },\n            defence: {\n              ...s.defence,\n              current: Math.min(s.defence.current + (stats.defence ?? 0), s.defence.max),\n            },\n            attack: {\n              ...s.attack,\n              current: Math.min(s.attack.current + (stats.attack ?? 0), s.attack.max),\n            },\n          })\n        ),\n  ]),\n  // #endregion EFFECTS\n  // #region MONSTERS\n  'Monster:Attack': effectFun(({ amount }) => (_origin, play, currentState) => [\n    play,\n    actions.attackPlayer(currentState, amount),\n  ]),\n  'Monster:Summon': effectFun(\n    ({ enemy }) =>\n      (_origin, play, currentState) =>\n        actions.addEnemy(play, currentState, enemies[enemy][0], enemies[enemy][1])\n  ),\n  'Monster:Dead': effectFun(() => (_origin, play, currentState) => [play, currentState]),\n  'Monster:Move': effectFun(() => (origin, play, currentState) => [\n    play,\n    actions.changeDistance(currentState, origin, -2),\n  ]),\n  // #endregion MONSTERS\n  // #region ITEMS\n  'BootsOfFlight:EOT': effectFun(() => (_, play, currentState) => [\n    play,\n    currentState.enemies.reduce(\n      (s, _m, idx) => actions.changeDistance(s, idx as MonsterTarget, 2),\n      currentState\n    ),\n  ]),\n  'Wand:MagicBolt': effectFun(() => (_, play, currentState) => {\n    let state = currentState;\n    while (state.player.stamina.current) {\n      state = actions.modifyPlayerStamina(state, -2);\n      state = actions.attackMonster(state, currentState.target, 1);\n    }\n    return [play, state];\n  }),\n  // #endregion ITEMS\n};\n\nexport type EffectFunctionT = SystemFunctionT &\n  BasicFunctionT &\n  StatusFunctionT &\n  ReduceFunctionT &\n  MonsterFunctionT &\n  ItemFunctionT;\n\nexport type ReduceFun = (origin: Target, play: Play, newState: Snapshot) => [Play, Snapshot];\nexport type ParametrizedFun<T> = (params: T) => ReduceFun;\nexport type EffectFun<T> = Opaque<ParametrizedFun<T>, ParametrizedFun<T>>;\n\nexport type EffectFunctionRepository = {\n  [k in keyof EffectFunctionT]: (params: EffectFunctionT[k]) => ReduceFun;\n};\nexport type EffectFunRepoIndex = keyof EffectFunctionT & FunIndex;\nexport type EffectFunParams<T extends EffectFunRepoIndex> = Parameters<\n  EffectFunctionRepository[T]\n>[0];\n\n// #endregion\n// #region Modify state\n\nconst updateMonster = (\n  enemies: EnemiesStats,\n  target: Target,\n  override: (stats: EnemyStats) => Partial<EnemyStats>\n): EnemiesStats =>\n  enemies.map((m, idx) => (idx === target ? { ...m, ...override(m) } : m)) as EnemiesStats;\n\nconst updatePlayer = (\n  curr: Snapshot,\n  override: (player: PlayerStats) => Partial<PlayerStats>\n): Snapshot => {\n  return {\n    ...curr,\n    player: { ...curr.player, ...override(curr.player) },\n  };\n};\n\nconst updatePlayerStat = <T extends keyof PlayerStats>(\n  curr: Snapshot,\n  key: T,\n  modify: (player: PlayerStats[T]) => Partial<PlayerStats[T]>\n): Snapshot => {\n  const player = curr.player;\n  player[key] = {\n    ...player[key],\n    ...modify(player[key]),\n  };\n  return {\n    ...curr,\n    player,\n  };\n};\n\nconst actions = {\n  attackPlayer,\n  attackMonster,\n  changeStatPlayer: updatePlayer,\n  changeStatMonster: (\n    curr: Snapshot,\n    target: MonsterTarget,\n    f: (stats: EnemyStats) => Partial<EnemyStats>\n  ): Snapshot => ({\n    ...curr,\n    enemies: updateMonster(curr.enemies, target, f),\n  }),\n  changeStatusPlayer: (curr: Snapshot, updateStatus: (oldStatus: Status) => Status): Snapshot => ({\n    ...curr,\n    player: { ...curr.player, status: updateStatus(curr.player.status) },\n  }),\n  changeStatusMonster: (\n    curr: Snapshot,\n    target: MonsterTarget,\n    updateStatus: (oldStatus: Status) => Status\n  ): Snapshot => ({\n    ...curr,\n    enemies: updateMonster(curr.enemies, target, ({ status }) => ({\n      status: updateStatus(status),\n    })),\n  }),\n  changeDistance: (curr: Snapshot, origin: Target, amount: number): Snapshot => ({\n    ...curr,\n    enemies: updateMonster(curr.enemies, origin, ({ distance }) => ({\n      distance: clamp(distance + amount, 0, 4) as MonsterTarget,\n    })),\n  }),\n  removeMonster: (currPlay: Play, currSnap: Snapshot, target: MonsterTarget): [Play, Snapshot] => [\n    {\n      ...currPlay,\n      enemies: currPlay.enemies.filter((_, idx) => idx === target) as Enemies,\n    },\n    {\n      ...currSnap,\n      target: 0,\n      enemies: currSnap.enemies.filter((_, idx) => idx === target) as EnemiesStats,\n    },\n  ],\n  modifyPlayerStamina: (curr: Snapshot, amount: number): Snapshot =>\n    updatePlayerStat(curr, 'stamina', (stamina) => ({\n      current: clamp(stamina.current + amount, 0, stamina.max),\n    })),\n  addEotEffect: (curr: Snapshot, origin: Target, effect: Effect): Snapshot => ({\n    ...curr,\n    eot: [...(curr.eot ?? []), [origin, effect]],\n  }),\n  addBotEffect: (curr: Snapshot, origin: Target, effect: Effect): Snapshot => ({\n    ...curr,\n    bot: [...(curr.eot ?? []), [origin, effect]],\n  }),\n  addEnemy: (\n    play: Play,\n    curr: Snapshot,\n    enemy: Enemy,\n    enemyStats: EnemyStats\n  ): [Play, Snapshot] => {\n    return play.enemies.length < 5\n      ? [\n          {\n            ...play,\n            enemies: [...play.enemies, enemy] as Enemies,\n          },\n          {\n            ...curr,\n            enemies: [...curr.enemies, enemyStats] as EnemiesStats,\n          },\n        ]\n      : [play, curr];\n  },\n};\n\nfunction attackMonster(curr: Snapshot, target: MonsterTarget, amount: number): Snapshot {\n  const monster = curr.enemies[target]!!;\n  const armor = monster.status.armor.amount;\n  const damage = amount + curr.player.attack.current;\n  const afterDefence = Math.max(damage - monster.defence.current, 0);\n  const afterArmor = Math.max(afterDefence - armor, 0);\n  const armorSpent = armor - (afterDefence - afterArmor);\n  const afterBleed = afterArmor + (monster.status.bleed.turns > 0 ? 1 : 0);\n  return {\n    ...curr,\n    enemies: updateMonster(curr.enemies, target, ({ status, hp }) => ({\n      hp: { ...hp, current: clamp(hp.current - afterBleed, 0, hp.max) },\n      status: { ...status, armor: { amount: armorSpent } },\n    })),\n  };\n}\n\nfunction attackPlayer(curr: Snapshot, amount: number): Snapshot {\n  const armor = curr.player.status.armor.amount;\n  const damage = amount + curr.player.attack.current;\n  const afterDefence = Math.max(damage - curr.player.defence.current, 0);\n  const afterArmor = Math.max(afterDefence - armor, 0);\n  const armorSpent = armor - (afterDefence - afterArmor);\n  const afterBleed = afterArmor + (curr.player.status.bleed.turns > 0 ? 1 : 0);\n  return updatePlayer(curr, ({ hp, status }) => ({\n    hp: { ...hp, current: clamp(hp.current - afterBleed, 0, hp.max) },\n    status: { ...status, armor: { amount: status.armor.amount - armorSpent } },\n  }));\n}\n\n// #endregion\n// #region Stat funs\n\nexport type StatsFunIndex = keyof typeof statsRepository;\nexport const statsRepository = {\n  '+Health': (player: PlayerStats, enemies: EnemiesStats): [PlayerStats, EnemiesStats] => [\n    { ...player, hp: makeStat(player.hp.current + 3) },\n    enemies,\n  ],\n  '+StaPerTurn': (player: PlayerStats, enemies: EnemiesStats): [PlayerStats, EnemiesStats] => [\n    { ...player, staminaPerTurn: makeStat(player.staminaPerTurn.current + 1) },\n    enemies,\n  ],\n  '+Stamina': (player: PlayerStats, enemies: EnemiesStats): [PlayerStats, EnemiesStats] => [\n    {\n      ...player,\n      stamina: makeStat(player.stamina.current + 2, (a) => a),\n    },\n    enemies,\n  ],\n  '+Attack': (player: PlayerStats, enemies: EnemiesStats): [PlayerStats, EnemiesStats] => [\n    { ...player, attack: makeStat(player.attack.current + 1) },\n    enemies,\n  ],\n  '+Speed': (player: PlayerStats, enemies: EnemiesStats): [PlayerStats, EnemiesStats] => [\n    { ...player, speed: makeStat(player.speed.current + 1) },\n    enemies,\n  ],\n  '+Defence': (player: PlayerStats, enemies: EnemiesStats): [PlayerStats, EnemiesStats] => [\n    { ...player, defence: makeStat(player.defence.current + 1) },\n    enemies,\n  ],\n\n  '-Health': (player: PlayerStats, enemies: EnemiesStats): [PlayerStats, EnemiesStats] => [\n    { ...player, hp: makeStat(player.hp.current - 3) },\n    enemies,\n  ],\n  '-StaPerTurn': (player: PlayerStats, enemies: EnemiesStats): [PlayerStats, EnemiesStats] => [\n    { ...player, staminaPerTurn: makeStat(player.staminaPerTurn.current - 1) },\n    enemies,\n  ],\n  '-Stamina': (player: PlayerStats, enemies: EnemiesStats): [PlayerStats, EnemiesStats] => [\n    {\n      ...player,\n      stamina: makeStat(player.stamina.current - 2, (a) => a),\n    },\n    enemies,\n  ],\n  '-Attack': (player: PlayerStats, enemies: EnemiesStats): [PlayerStats, EnemiesStats] => [\n    { ...player, attack: makeStat(player.attack.current - 1) },\n    enemies,\n  ],\n  '-Speed': (player: PlayerStats, enemies: EnemiesStats): [PlayerStats, EnemiesStats] => [\n    { ...player, speed: makeStat(player.speed.current - 1) },\n    enemies,\n  ],\n  '-Defence': (player: PlayerStats, enemies: EnemiesStats): [PlayerStats, EnemiesStats] => [\n    { ...player, defence: makeStat(player.defence.current - 1) },\n    enemies,\n  ],\n};\n\n// #endregion\n\nupdateGlobals({ effects: effectFunRepo });\n","import {\n  Enemies,\n  Player,\n  Snapshot,\n  MonsterTarget,\n  Target,\n  InventoryEffect,\n  EnemiesStats,\n  PlayerStats,\n  Play,\n  RNG,\n  StatsFun,\n  Effect,\n  PlayerTarget,\n  effectFunCall,\n  DisabledSkills,\n  safeEntries,\n  EffectPhase,\n  InventoryStats,\n  Seed,\n  Item,\n} from './types';\nimport { Seq, Set } from 'immutable';\nimport { Chance } from 'chance';\n// @ts-ignore fails on scripts despite having a d.ts file\nimport { toIndexableString } from 'pouchdb-collate';\nimport { extractFunction, statsRepository } from './effectRepository';\nimport { clamp, rangeArr } from './zFunDump';\nimport { allRanges } from './makeGame';\n\nexport const initialState = (play: Play): Snapshot => play.states[0];\nexport const previousState = (play: Play): Snapshot => play.states[play.states.length - 1];\n\n/**\n * @returns min inclusive, max exclusive rand\n */\nfunction turnDeterministicRng(turns: number, randPerTurn: number, monsterSeed: Seed): RNG {\n  const monsterChance = new Chance(monsterSeed);\n  const monsterRng = rangeArr(turns).map((_) =>\n    rangeArr(randPerTurn)\n      // If max === 1, the rng function fails\n      .map((_) => monsterChance.floating({ min: 0, max: 0.9999, fixed: 4 }))\n  );\n  return monsterRng as RNG;\n}\n\nexport const turnRng = (play: Play, turn: number): ((min: number, max: number) => number) => {\n  const turnRng = [...play.rng[turn]];\n  return (min: number, max: number) => Math.floor((max - min) * turnRng.pop()!! + min);\n};\n\nexport const playerPassives = (player: Player): StatsFun[] =>\n  safeEntries(player.build)\n    .flatMap(([_k, s]) => s.passives ?? [])\n    .map((i) => statsRepository[i]);\n\nexport const playerActions = (player: Player, inventoryStats: InventoryStats): InventoryEffect[] =>\n  safeEntries(player.build)\n    .flatMap(([_k, i]) => i.effects ?? [])\n    .filter((e) => (e.amount ?? 999) > (inventoryStats[e.display]?.used ?? 0));\n\nexport const playerItemActions = (\n  player: Player,\n  inventoryStats: InventoryStats\n): [Item, InventoryEffect][] =>\n  safeEntries(player.build)\n    .flatMap(([_k, i]) => (i.effects ?? []).map((e) => [i, e] as [Item, InventoryEffect]))\n    .filter(([i, e]) => (e.amount ?? 999) > (inventoryStats[e.display]?.used ?? 0));\n\nconst enemiesBotEffects = (enemies: Enemies): [MonsterTarget, Effect][] =>\n  enemies\n    .flatMap((e, idx) => (e.bot ?? []).map((eff) => [idx as MonsterTarget, eff] as const))\n    // Sure, typescript\n    .map((a) => [...a]);\n\nconst enemiesEotEffects = (enemies: Enemies): [MonsterTarget, Effect][] =>\n  enemies\n    .flatMap((e, idx) => (e.eot ?? []).map((eff) => [idx as MonsterTarget, eff] as const))\n    // Sure, typescript\n    .map((a) => [...a]);\n\nexport const playerBotEffects = (\n  player: Player,\n  d: DisabledSkills\n): [PlayerTarget, InventoryEffect][] =>\n  safeEntries(player.build)\n    .flatMap(([k, s]) => (!Set(d).has(k) ? s.bot ?? [] : []))\n    .map((a) => ['Player', a]);\n\nexport const playerEotEffects = (\n  player: Player,\n  d: DisabledSkills\n): [PlayerTarget, InventoryEffect][] =>\n  safeEntries(player.build)\n    .flatMap(([k, s]) => (!Set(d).has(k) ? s.eot ?? [] : []))\n    .map((a) => ['Player', a]);\n\nexport const buildPlayer = (\n  player: Player,\n  playerStats: PlayerStats,\n  enemiesStats: EnemiesStats\n): [PlayerStats, EnemiesStats] =>\n  playerPassives(player).reduce(([p, e], fun) => fun(p, e), [playerStats, enemiesStats]);\n\nexport function makeGameNew(\n  player: Player,\n  playerStats: PlayerStats,\n  enemies: Enemies,\n  enemiesStats: EnemiesStats,\n  turns: number,\n  seed: number | string,\n  randPerTurn: number = 20\n): Play {\n  const [playerGameStats, enemyGameStats] = buildPlayer(player, playerStats, enemiesStats);\n  return makeGameNextLevel(\n    player,\n    playerGameStats,\n    enemies,\n    enemyGameStats,\n    {},\n    turns,\n    seed,\n    randPerTurn\n  );\n}\n\nexport function makeGameNextLevel(\n  player: Player,\n  playerStats: PlayerStats,\n  enemies: Enemies,\n  enemiesStats: EnemiesStats,\n  inventoryStats: InventoryStats,\n  turns: number,\n  seed: number | string,\n  randPerTurn: number = 20\n): Play {\n  return {\n    player,\n    enemies,\n    states: [\n      {\n        player: playerStats,\n        enemies: enemiesStats,\n        inventory: inventoryStats,\n        target: 0,\n        lastAttacks: [],\n        disabledSkills: [],\n      },\n    ],\n    rng: turnDeterministicRng(turns, randPerTurn, seed),\n    turns,\n    id: toIndexableString([player, enemies, turns, seed]),\n    seed,\n    version: '1',\n  };\n}\n\nconst reduceFuns = (\n  funs: [Target, Effect][],\n  p: Play,\n  s: Snapshot,\n  phase: EffectPhase\n): [Play, Snapshot] =>\n  Seq(funs)\n    .sortBy(([origin, a]) => {\n      if (a == null) {\n        throw new Error(\n          `Error in ${phase} by ${origin === 'Player' ? 'Player' : p.enemies[origin]?.lore.name}`\n        );\n      }\n      const priorityBonus =\n        origin === 'Player' ? s.player.speed.current : s.enemies[origin]!!.speed.current;\n      return clamp(a.priority - priorityBonus, 0, 4);\n    })\n    .reduce(\n      (acc, value) => {\n        const [origin, effect] = value;\n        const [oldPlay, oldState] = acc;\n        const monsterId = origin === 'Player' ? oldState.target : origin;\n        const targetMonster = oldState.enemies[monsterId]!!;\n\n        const isDeadAttackingMonster = origin !== 'Player' && targetMonster.hp.current <= 0;\n        if (isDeadAttackingMonster) {\n          const newState: Snapshot = {\n            ...oldState,\n            lastAttacks: [\n              ...oldState.lastAttacks,\n              { origin, display: `💀💀DEAD💀💀 ${effect.display}`, phase },\n            ],\n          };\n          return [oldPlay, newState];\n        }\n\n        const isStunnedPlayer =\n          effect.interruptible && origin === 'Player' && oldState.player.status.stun.active;\n        const isStunnedMonster =\n          effect.interruptible && origin !== 'Player' && targetMonster.status.stun.active;\n        const isStunned = isStunnedPlayer || isStunnedMonster;\n        if (isStunned) {\n          const newState: Snapshot = {\n            ...oldState,\n            lastAttacks: [\n              ...oldState.lastAttacks,\n              { origin, display: `💫💫STUNNED💫💫 ${effect.display}`, phase },\n            ],\n          };\n          return [oldPlay, newState];\n        }\n\n        const isInRange = Set([...effect.range]).has(targetMonster.distance);\n        if (!isInRange) {\n          const newState: Snapshot = {\n            ...oldState,\n            lastAttacks: [\n              ...oldState.lastAttacks,\n              { origin, display: `❌❌WHIFFED❌❌ ${effect.display}`, phase },\n            ],\n          };\n          return [oldPlay, newState];\n        }\n\n        const monsterDodged =\n          effect.interruptible && origin === 'Player' && targetMonster.status.dodge.active;\n        if (monsterDodged) {\n          const newState: Snapshot = {\n            ...oldState,\n            enemies: oldState.enemies.map((e, i) =>\n              i === monsterId ? { ...e, status: { ...e.status, dodge: { active: false } } } : e\n            ) as EnemiesStats,\n            lastAttacks: [\n              ...oldState.lastAttacks,\n              { origin, display: `💨💨DODGED💨💨 ${effect.display}`, phase },\n            ],\n          };\n          return [oldPlay, newState];\n        }\n\n        const playerDodged =\n          effect.interruptible && origin !== 'Player' && oldState.player.status.dodge.active;\n        if (playerDodged) {\n          const newState: Snapshot = {\n            ...oldState,\n            player: {\n              ...oldState.player,\n              status: { ...oldState.player.status, dodge: { active: false } },\n            },\n            lastAttacks: [\n              ...oldState.lastAttacks,\n              { origin, display: `💨💨DODGED💨💨 ${effect.display}`, phase },\n            ],\n          };\n          return [oldPlay, newState];\n        }\n\n        const [newPlay, newState] = extractFunction(effect)(origin, oldPlay, oldState);\n        const finalState: Snapshot = {\n          ...newState,\n          lastAttacks: [...newState.lastAttacks, { origin, display: effect.display, phase }],\n        };\n        return [newPlay, finalState];\n      },\n      [p, s]\n    );\n\nconst applyEffectStamina = (amount: number): Effect => ({\n  display: `${amount >= 0 ? '+' : ''}${amount} 💪`,\n  tooltip: `Use ${amount} stamina`,\n  effects: [effectFunCall(['Basic:Stamina', { amount }])],\n  range: allRanges,\n  priority: 0,\n  interruptible: false,\n});\n\nconst effectEotCleanup: Effect = {\n  display: 'Cleanup',\n  tooltip: 'Cleanup',\n  effects: [effectFunCall('Utility:Cleanup')],\n  range: allRanges,\n  priority: 0,\n  interruptible: false,\n};\n\nconst effectDead: Effect = {\n  display: '⚰',\n  tooltip: '⚰',\n  priority: 4,\n  effects: [effectFunCall('Monster:Dead')],\n  range: allRanges,\n  interruptible: false,\n};\n\nexport const handlePlayerEffect = (play: Play, index: number): Play => {\n  const lastTurnState = previousState(play);\n  const usedSkill = playerActions(play.player, lastTurnState.inventory)[index];\n  const bot = lastTurnState.bot ?? [];\n  const eot = lastTurnState.eot ?? [];\n\n  const initialState: Snapshot = {\n    ...lastTurnState,\n    lastAttacks: [],\n    bot: undefined,\n    eot: undefined,\n    inventory: {\n      ...lastTurnState.inventory,\n      [usedSkill.display]: {\n        used: 1 + (lastTurnState.inventory[usedSkill.display]?.used ?? 0),\n      },\n    },\n  };\n\n  // BOT\n  // Lingering effects\n  const [postBotPlay, postBotState] = reduceFuns(bot, play, initialState, 'BOT');\n  // Player & Monster effects\n  const playerBotEffs = playerBotEffects(postBotPlay.player, postBotState.disabledSkills);\n\n  const entitiesBot: [Target, Effect][] = [\n    ...playerBotEffs,\n    ...enemiesBotEffects(postBotPlay.enemies),\n  ];\n  const [postEntitiesBotPlay, postEntitiesBotState] = reduceFuns(\n    entitiesBot,\n    postBotPlay,\n    postBotState,\n    'BOT'\n  );\n\n  // Turn\n  const rand = turnRng(postEntitiesBotPlay, postEntitiesBotPlay.states.length);\n  const turnFunctions: [Target, Effect][] = Seq(postEntitiesBotPlay.enemies)\n    .zip(Seq(postEntitiesBotState.enemies))\n    .map(([e, stats], idx) => {\n      if (stats.hp.current > 0) {\n        const rolls = e.rolls[stats.distance];\n        const roll = rand(0, e.rolls[stats.distance].length);\n        // if (isNaN(roll)) {\n        //   throw new Error('Out of RNG exception');\n        // }\n        const effect = e.effects[rolls[roll]];\n        // if (effect == null) {\n        //   throw new Error(`Rolled outside the table ${JSON.stringify({ roll, rolls, effects: e.effects })}`);\n        // }\n        return [idx as Target, effect] as const;\n      } else {\n        return [idx as Target, effectDead] as const;\n      }\n    })\n    .concat([['Player' as Target, usedSkill] as const])\n    .toArray()\n    // Sure, typescript\n    .map((a) => [...a]);\n\n  const [newPlay, newState] = reduceFuns(\n    turnFunctions,\n    postEntitiesBotPlay,\n    postEntitiesBotState,\n    'MAIN'\n  );\n\n  // EOT\n  // Player & Monster effects\n  const playerEotEffs = playerEotEffects(newPlay.player, newState.disabledSkills);\n  const entitiesEot = [...playerEotEffs, ...enemiesEotEffects(newPlay.enemies)];\n  const [postPlayerEotPlay, postPlayerEotState] = reduceFuns(entitiesEot, newPlay, newState, 'EOT');\n  // Lingering effects\n  const [postEotPlay, postEotState] = reduceFuns(eot, postPlayerEotPlay, postPlayerEotState, 'EOT');\n  // Stamina\n  const passivesStamina = [...playerBotEffs, ...playerEotEffs].reduce(\n    (acc, e) => acc + e[1].stamina,\n    0\n  );\n  const [postStaminaPlay, postStaminaState] = reduceFuns(\n    [\n      [\n        'Player',\n        applyEffectStamina(\n          lastTurnState.player.staminaPerTurn.current - usedSkill.stamina - passivesStamina\n        ),\n      ],\n    ],\n    postEotPlay,\n    postEotState,\n    'EOT'\n  );\n\n  // Cleanup\n  const [postCleanup, postCleanupState] = reduceFuns(\n    [['Player' as Target, effectEotCleanup]],\n    postStaminaPlay,\n    postStaminaState,\n    'CLEANUP'\n  );\n\n  const endOfTurn: Play = {\n    ...postCleanup,\n    states: [...postCleanup.states, postCleanupState],\n  };\n\n  return endOfTurn;\n};\n\nexport const setSelected = (play: Play, target: MonsterTarget): Play => {\n  play.states[play.states.length - 1].target = target;\n  return {\n    ...play,\n    states: [...play.states],\n  };\n};\n\nexport const setDisabledSkills = (play: Play, disabled: DisabledSkills): Play => {\n  play.states[play.states.length - 1].disabledSkills = disabled;\n  return {\n    ...play,\n    states: [...play.states],\n  };\n};\n\nexport type PlayState = 'win' | 'loss' | 'playing';\n\nexport const playState = (play: Play): PlayState => {\n  const state = previousState(play);\n  return state.player.hp.current <= 0\n    ? 'loss'\n    : state.enemies.reduce((acc, monster) => acc + monster.hp.current, 0) <= 0\n    ? 'win'\n    : 'playing';\n};\n\nexport const scoreGame = (play: Play): number => {\n  const firstState = initialState(play);\n  const lastState = previousState(play);\n\n  const turns = play.states.length; // 1-50\n  const hpLoss =\n    Math.max(0, firstState.player.hp.max - lastState.player.hp.current) / firstState.player.hp.max; // 0-1\n  const staminaLoss =\n    Math.max(0, firstState.player.stamina.max - lastState.player.stamina.current) /\n    firstState.player.hp.max; // 0-1\n  const enemies = lastState.enemies.length; // 1-5\n\n  return Math.floor(enemies * (500 * hpLoss + 150 * staminaLoss + (500 - turns * 10)));\n};\n","import { allRanges, defaultStatus, makeRange, makeStat, selfRange } from '../makeGame';\nimport { effectFunCall, EnemyRepository } from '../types';\n\nexport type EnemiesIndex = 'piripuru' | 'toros' | 'purupuri' | 'ninkujorua' | 'tshopuritazios';\nconst enemies = {\n  piripuru: [\n    {\n      lore: {\n        name: 'Piripuru',\n      },\n      rolls: [[1], [1, 1, 1, 0], [1, 0], [0], [0]],\n      effects: [\n        {\n          display: 'Bounce',\n          tooltip: 'Floomp Floomp',\n          priority: 1,\n          interruptible: false,\n          effects: [effectFunCall(['Monster:Move', { amount: -2 }])],\n          range: selfRange,\n        },\n\n        {\n          display: 'Slam',\n          tooltip: 'Throws itself at you',\n          priority: 3,\n          interruptible: true,\n          effects: [effectFunCall(['Monster:Attack', { amount: 5 }])],\n          range: makeRange(0, 1),\n        },\n      ],\n    },\n    {\n      hp: makeStat(7),\n      distance: 4,\n      speed: makeStat(0),\n      attack: makeStat(0),\n      defence: makeStat(0),\n      status: defaultStatus,\n    },\n  ],\n  toros: [\n    {\n      lore: {\n        name: 'Toros',\n        description: 'Big, mean, strong and unclean',\n      },\n      rolls: [\n        [1, 1, 1, 2, 2, 0],\n        [1, 2, 2, 2, 2, 0],\n        [2, 2, 3, 3, 4, 0],\n        [2, 3, 3, 4, 0],\n        [3, 3, 3, 4, 4, 0],\n      ],\n      effects: [\n        {\n          display: 'Rest',\n          tooltip: \"It won't be long until the massacre continues\",\n          priority: 1,\n          interruptible: false,\n          effects: [effectFunCall(['Effect:Stat', { target: 'Monster', hp: 1 }])],\n          range: selfRange,\n        },\n\n        {\n          display: 'Chomp',\n          tooltip: 'Toro attempts to eat you for massive damage!',\n          priority: 4,\n          interruptible: true,\n          effects: [effectFunCall(['Monster:Attack', { amount: 18 }])],\n          range: makeRange(0),\n        },\n\n        {\n          display: 'Swipe',\n          tooltip: 'High damage attack that staggers',\n          priority: 3,\n          interruptible: true,\n          effects: [\n            effectFunCall(['Monster:Attack', { amount: 12 }]),\n            effectFunCall(['Monster:Move', { amount: -1 }]),\n            effectFunCall('Effect:Stun'),\n          ],\n          range: makeRange(0, 1, 2),\n        },\n\n        {\n          display: 'Lunge',\n          tooltip: 'Charges forward for a horn attack',\n          priority: 4,\n          interruptible: true,\n          effects: [\n            effectFunCall(['Monster:Attack', { amount: 10 }]),\n            effectFunCall(['Monster:Move', { amount: -5 }]),\n          ],\n          range: makeRange(3, 4),\n        },\n\n        {\n          display: 'Roar',\n          tooltip: 'A terrifying howl!',\n          priority: 3,\n          interruptible: false,\n          effects: [effectFunCall(['Basic:Stamina', { amount: -5 }])],\n          range: allRanges,\n        },\n      ],\n    },\n    {\n      hp: makeStat(38),\n      distance: 2,\n      speed: makeStat(0),\n      attack: makeStat(0),\n      defence: makeStat(0),\n      status: defaultStatus,\n    },\n  ],\n\n  purupuri: [\n    {\n      lore: {\n        name: 'Mama Purupuri',\n        description: 'Mama can always call one of its little ones to help',\n      },\n      rolls: [\n        [1, 1, 1, 1, 0],\n        [1, 1, 1, 1, 2, 0],\n        [1, 1, 1, 1, 2, 0],\n        [2, 2, 0],\n        [2, 2, 0],\n      ],\n      effects: [\n        {\n          display: 'Recover',\n          tooltip: 'Mama needs its rest',\n          priority: 1,\n          interruptible: false,\n          effects: [effectFunCall(['Effect:Stat', { target: 'Monster', hp: 3 }])],\n          range: selfRange,\n        },\n\n        {\n          display: 'Stomp',\n          tooltip: 'Quickly, out of the way!',\n          priority: 3,\n          interruptible: true,\n          effects: [effectFunCall(['Monster:Attack', { amount: 8 }]), effectFunCall('Effect:Stun')],\n          range: makeRange(0, 1),\n        },\n\n        {\n          display: 'Call for Aid',\n          tooltip: 'Calls for the litter to help',\n          priority: 3,\n          interruptible: false,\n          effects: [\n            effectFunCall(['Monster:Summon', { enemy: 'piripuru' }]),\n            effectFunCall(['Effect:Stat', { target: 'Monster', hp: -5 }]),\n            effectFunCall(['Monster:Move', { amount: -2 }]),\n          ],\n          range: allRanges,\n        },\n      ],\n    },\n    {\n      hp: makeStat(50),\n      distance: 3,\n      speed: makeStat(0),\n      attack: makeStat(0),\n      defence: makeStat(0),\n      status: defaultStatus,\n    },\n  ],\n\n  ninkujorua: [\n    {\n      lore: {\n        name: 'Ninkujorua',\n        description: 'Just...stay...still...for...a...second',\n      },\n      rolls: [\n        [1, 1, 1, 2, 2, 2, 0],\n        [1, 1, 1, 2, 2, 2, 0],\n        [1, 1, 2, 2, 2, 0],\n        [1, 2, 3, 0],\n        [2, 3, 0],\n      ],\n      effects: [\n        {\n          display: 'Meditate',\n          tooltip: 'And not about good vibes',\n          priority: 1,\n          interruptible: false,\n          effects: [\n            effectFunCall(['Effect:Stat', { target: 'Monster', attack: 1 }]),\n            effectFunCall(['Monster:Move', { amount: 999 }]),\n            effectFunCall('Effect:Dodge'),\n          ],\n          range: selfRange,\n        },\n\n        {\n          display: 'Rapid Slash - Retreat!',\n          tooltip: 'Deals several strikes then moves away from the player',\n          priority: 2,\n          interruptible: true,\n          effects: [\n            effectFunCall(['Monster:Move', { amount: -5 }]),\n            effectFunCall(['Monster:Attack', { amount: 2 }]),\n            effectFunCall(['Monster:Attack', { amount: 2 }]),\n            effectFunCall(['Monster:Attack', { amount: 2 }]),\n            effectFunCall('Effect:Dodge'),\n          ],\n          range: allRanges,\n        },\n\n        {\n          display: 'Rapid Slash - Advance!',\n          tooltip: 'Moves close to the player then deals several strikes',\n          priority: 2,\n          interruptible: true,\n          effects: [\n            effectFunCall(['Monster:Move', { amount: -5 }]),\n            effectFunCall(['Monster:Attack', { amount: 2 }]),\n            effectFunCall(['Monster:Attack', { amount: 2 }]),\n            effectFunCall(['Monster:Attack', { amount: 2 }]),\n          ],\n          range: allRanges,\n        },\n\n        {\n          display: 'Back Spikes',\n          tooltip: 'Jumps and shoots several needles that cause bleed',\n          priority: 4,\n          interruptible: true,\n          effects: [\n            effectFunCall(['Monster:Attack', { amount: 1 }]),\n            effectFunCall(['Monster:Attack', { amount: 1 }]),\n            effectFunCall(['Effect:Bleed', { target: 'Player', turns: 3 }]),\n          ],\n          range: makeRange(3, 4),\n        },\n      ],\n    },\n    {\n      hp: makeStat(25),\n      distance: 1,\n      speed: makeStat(0),\n      attack: makeStat(0),\n      defence: makeStat(0),\n      status: defaultStatus,\n    },\n  ],\n\n  tshopuritazios: [\n    {\n      lore: {\n        name: 'Tshopuritazios',\n        description: 'A filth bird whose stench hits a mile away',\n      },\n      rolls: [\n        [1, 1, 1, 2, 2, 2, 0],\n        [1, 1, 1, 2, 2, 2, 0],\n        [1, 1, 2, 2, 2, 0],\n        [1, 2, 3, 0],\n        [2, 3, 0],\n      ],\n      effects: [\n        {\n          display: 'Goad',\n          tooltip: \"Sounds like it's laughing at you\",\n          priority: 1,\n          interruptible: false,\n          effects: [\n            effectFunCall(['Effect:Stat', { target: 'Player', defence: -1, attack: -1 }]),\n            effectFunCall(['Monster:Move', { amount: 999 }]),\n          ],\n          range: selfRange,\n        },\n\n        {\n          display: 'Peck',\n          tooltip: 'What is worse, the force or the texture?',\n          priority: 3,\n          interruptible: true,\n          effects: [\n            effectFunCall(['Monster:Attack', { amount: 10 }]),\n            effectFunCall('Effect:Stun'),\n            effectFunCall(['Monster:Move', { amount: 2 }]),\n          ],\n          range: makeRange(0, 1),\n        },\n\n        {\n          display: 'Fling Mud',\n          tooltip: 'A large chunk coming right at you!',\n          priority: 3,\n          interruptible: true,\n          effects: [\n            effectFunCall(['Monster:Attack', { amount: 2 }]),\n            effectFunCall(['Monster:Attack', { amount: 2 }]),\n            effectFunCall(['Monster:Attack', { amount: 8 }]),\n            effectFunCall(['Monster:Move', { amount: 1 }]),\n          ],\n          range: makeRange(1, 2, 3),\n        },\n\n        {\n          display: 'Spit Bile',\n          tooltip: 'This disgusting liquid corrodes your armor',\n          priority: 3,\n          interruptible: true,\n          effects: [\n            effectFunCall(['Monster:Attack', { amount: 1 }]),\n            effectFunCall(['Monster:Attack', { amount: 1 }]),\n            effectFunCall(['Effect:Poison', { target: 'Player', turns: 3 }]),\n            effectFunCall(['Effect:Stat', { target: 'Player', defence: -1 }]),\n          ],\n          range: makeRange(2, 3, 4),\n        },\n      ],\n    },\n    {\n      hp: makeStat(32),\n      distance: 4,\n      speed: makeStat(0),\n      attack: makeStat(0),\n      defence: makeStat(0),\n      status: defaultStatus,\n    },\n  ],\n};\n\nexport default enemies as EnemyRepository;\n","import { Item } from '../types';\n\nexport type ArmorsIndex = keyof typeof armors;\nexport type Armors = { [k in ArmorsIndex]: Item };\nconst armors = {\n  heavy: {\n    display: 'Heavy',\n    passives: ['+Defence', '+Defence', '+Defence', '+Defence', '-Speed', '-Speed', '-StaPerTurn'],\n  },\n  medium: {\n    display: 'Medium',\n    passives: ['+Defence', '+Defence', '-StaPerTurn'],\n  },\n  light: {\n    display: 'Light',\n    passives: ['+Defence'],\n  },\n  none: {\n    display: 'None',\n    passives: ['+Speed'],\n  },\n};\n\nexport default armors as Armors;\n","import { Item } from '../types';\n\nexport type CharmsIndex = keyof typeof charms;\nexport type Charms = { [k in CharmsIndex]: Item };\nexport const charms = {\n  health: {\n    display: 'of Health',\n    passives: ['+Health', '-Speed'],\n    tooltip: 'Increases your maximum health',\n  },\n  haste: {\n    display: 'of Haste',\n    passives: ['+StaPerTurn', '-Stamina'],\n    tooltip: 'Increases your maximum stamina regeneration',\n  },\n  resilience: {\n    display: 'of Resilience',\n    passives: ['+Stamina', '-StaPerTurn'],\n    tooltip: 'Increases your maximum stamina',\n  },\n  strength: {\n    display: 'of Strength',\n    passives: ['+Attack', '-Health', '-StaPerTurn'],\n    tooltip: 'Increases your maximum attack',\n  },\n  swiftness: {\n    display: 'of Swiftness',\n    passives: ['+Speed', '-Attack'],\n    tooltip: 'Increases your maximum speed',\n  },\n  defence: {\n    display: 'of Defence',\n    passives: ['+Defence', '-Stamina', '-Speed'],\n    tooltip: 'Increases your maximum defence',\n  },\n};\n\nexport default charms as Charms;\n","import { makeRange, selfRange } from '../makeGame';\nimport { Item, effectFunCall } from '../types';\n\nexport type ClassesIndex = keyof typeof classes;\nexport type Classes = { [k in ClassesIndex]: Item };\nconst classes = {\n  warrior: {\n    display: 'Warrior',\n    passives: ['+Attack', '+Defence', '+Stamina'],\n    effects: [\n      {\n        display: 'Well placed kick',\n        tooltip: 'Last resource attack',\n        effects: [effectFunCall(['Basic:Attack', { amount: 2 }])],\n        priority: 2,\n        interruptible: true,\n        stamina: 1,\n        range: makeRange(0, 1),\n      },\n    ],\n  },\n  rogue: {\n    display: 'Rogue',\n    passives: ['+Speed', '+Speed', '-Attack', '-Stamina'],\n    effects: [\n      {\n        display: 'Strategic Retreat',\n        tooltip: 'Jump backwards',\n        effects: [effectFunCall(['Basic:Move', { amount: 999 }])],\n        priority: 2,\n        interruptible: false,\n        stamina: 1,\n        range: selfRange,\n      },\n    ],\n  },\n  berserk: {\n    display: 'Berserk',\n    passives: ['+Attack', '+Attack', '+Attack', '-Defence', '-Defence', '-Health'],\n    effects: [\n      {\n        display: 'All or Nothing!',\n        tooltip: 'Deals massive damage and leaves you weakened',\n        priority: 2,\n        interruptible: true,\n        stamina: 0,\n        range: makeRange(0, 1, 2),\n        amount: 1,\n        effects: [\n          effectFunCall(['Basic:Move', { amount: -5 }]),\n          effectFunCall(['Basic:Attack', { amount: 2 }]),\n          effectFunCall(['Basic:Attack', { amount: 2 }]),\n          effectFunCall(['Basic:Attack', { amount: 2 }]),\n          effectFunCall(['Basic:Attack', { amount: 2 }]),\n          effectFunCall(['Effect:Stat', { target: 'Player', defence: -3, speed: -1 }]),\n        ],\n      },\n    ],\n  },\n  mage: {\n    display: 'Mage',\n    passives: ['+StaPerTurn', '+Stamina', '-Health', '-Speed'],\n    effects: [\n      {\n        display: 'Just having a thought',\n        tooltip: 'Restores stamina for the next action',\n        priority: 4,\n        interruptible: false,\n        amount: 2,\n        stamina: 0,\n        range: selfRange,\n        effects: [effectFunCall(['Basic:Stamina', { amount: 999 }])],\n      },\n    ],\n  },\n  cleric: {\n    display: 'Cleric',\n    passives: ['+Defence', '+Stamina'],\n    effects: [\n      {\n        display: 'Minor Healing',\n        tooltip: 'Restores some HP',\n        amount: 3,\n        effects: [effectFunCall(['Basic:HP', { amount: 5 }])],\n        priority: 3,\n        interruptible: false,\n        stamina: 3,\n        range: selfRange,\n      },\n    ],\n  },\n};\n\nexport default classes as Classes;\n","import { selfRange } from '../makeGame';\nimport { Item, effectFunCall } from '../types';\n\nexport type ConsumablesIndex = keyof typeof consumables;\nexport type Consumables = { [k in ConsumablesIndex]: Item };\nexport const consumables = {\n  healing: {\n    display: 'Healing Potion',\n    effects: [\n      {\n        display: 'Healing!',\n        tooltip: 'Restores some HP',\n        effects: [effectFunCall(['Basic:HP', { amount: 4 }])],\n        priority: 4,\n        interruptible: false,\n        stamina: 5,\n        amount: 3,\n        range: selfRange,\n      },\n    ],\n  },\n  razors: {\n    display: 'Pot of Razors',\n    effects: [\n      {\n        display: 'Throw pot',\n        tooltip: 'Causes bleeding',\n        amount: 2,\n        effects: [effectFunCall(['Effect:Bleed', { target: 'Monster', turns: 3 }])],\n        priority: 4,\n        interruptible: true,\n        stamina: 5,\n        range: selfRange,\n      },\n    ],\n  },\n  bubble: {\n    display: 'Life Bubble',\n    effects: [\n      {\n        display: 'Activate Bubble',\n        tooltip: 'Protects against a single source of damage this turn',\n        effects: [effectFunCall('Effect:Dodge')],\n        priority: 1,\n        interruptible: false,\n        stamina: 1,\n        amount: 1,\n        range: selfRange,\n      },\n    ],\n  },\n  rock: {\n    display: 'Pet Rock',\n    effects: [\n      {\n        display: 'Rock, to me!',\n        tooltip: 'Reduces damage',\n        effects: [effectFunCall(['Effect:Armor', { amount: 3 }])],\n        priority: 2,\n        interruptible: false,\n        stamina: 3,\n        amount: 3,\n        range: selfRange,\n      },\n    ],\n  },\n};\n\nexport default consumables as Consumables;\n","import { selfRange, allRanges } from '../makeGame';\nimport { Item, effectFunCall } from '../types';\n\nexport type FootwearsIndex = keyof typeof footwears;\nexport type Footwears = { [k in FootwearsIndex]: Item };\nexport const footwears = {\n  slippers: {\n    display: 'Slippers of Dooooodge!',\n    tooltip: 'Allows you to dodge attacks',\n    passives: ['-Stamina'],\n    effects: [\n      {\n        display: 'Advanced Dodge',\n        tooltip: 'Avoid 1 attack',\n        effects: [effectFunCall('Effect:Dodge')],\n        priority: 1,\n        interruptible: false,\n        stamina: 3,\n        range: selfRange,\n      },\n    ],\n  },\n  boots: {\n    display: 'Boots of Flight',\n    tooltip: 'Avoid your enemies',\n    passives: ['-Defence'],\n    eot: [\n      {\n        display: 'Flight!',\n        tooltip: 'Increases distance at the end of the turn',\n        priority: 0,\n        interruptible: false,\n        range: allRanges,\n        stamina: 2,\n        effects: [effectFunCall('BootsOfFlight:EOT')],\n      },\n    ],\n  },\n  greaves: {\n    display: 'Greaves of Stability',\n    tooltip: 'Extra resilient',\n    passives: ['+Defence', '-Speed'],\n    effects: [\n      {\n        display: 'Dig your heels',\n        tooltip: 'Resists damage',\n        effects: [effectFunCall(['Effect:Armor', { amount: 3 }])],\n        priority: 1,\n        interruptible: false,\n        stamina: 4,\n        range: selfRange,\n      },\n    ],\n  },\n};\n\nexport default footwears as Footwears;\n","import { makeRange } from '../makeGame';\nimport { Item, effectFunCall } from '../types';\n\nexport type HeadgearsIndex = keyof typeof headgears;\nexport type Headgears = { [k in HeadgearsIndex]: Item };\nexport const headgears = {\n  helm: {\n    display: 'Helm',\n    passives: ['+Defence', '+Defence', '-Speed', '-StaPerTurn'],\n    tooltip: 'Big protection for slow combatants',\n  },\n  cap: {\n    display: 'Feather Cap',\n    passives: ['+StaPerTurn', '+Stamina'],\n    tooltip: \"Makes you feel energized, doesn't it?\",\n  },\n  magehat: {\n    display: 'Mage Hat',\n    passives: ['-StaPerTurn'],\n    tooltip: 'Small tricks for big plays',\n    effects: [\n      {\n        display: 'Flash!',\n        tooltip: 'Blinks you to a better position',\n        effects: [\n          effectFunCall(['Basic:Attack', { amount: 1 }]),\n          effectFunCall(['Basic:Move', { amount: 2 }]),\n        ],\n        priority: 3,\n        interruptible: true,\n        stamina: 4,\n        range: makeRange(1, 2),\n      },\n    ],\n  },\n};\n\nexport default headgears as Headgears;\n","import { makeRange, selfRange } from '../makeGame';\nimport { Item, effectFunCall } from '../types';\n\nexport type OffhandsIndex = keyof typeof offhands;\nexport type Offhands = { [k in OffhandsIndex]: Item };\nconst offhands = {\n  hook: {\n    display: 'Hook',\n    passives: ['-Stamina'],\n    effects: [\n      {\n        display: 'Get over here!',\n        tooltip: 'Moves enemy closer',\n        effects: [\n          effectFunCall(['Basic:Attack', { amount: 3 }]),\n          effectFunCall(['Basic:Move', { amount: -2 }]),\n        ],\n        priority: 4,\n        interruptible: true,\n        stamina: 3,\n        range: makeRange(2, 3, 4),\n      },\n    ],\n  },\n  parry: {\n    display: 'Parry Dagger',\n    passives: ['-Defence'],\n    effects: [\n      {\n        display: 'Get over here!',\n        tooltip: 'Avoids a melee attack',\n        effects: [effectFunCall('Effect:Dodge')],\n        priority: 2,\n        interruptible: false,\n        stamina: 2,\n        range: makeRange(1),\n      },\n    ],\n  },\n  shield: {\n    display: 'Shield',\n    passives: ['+Defence', '-Speed'],\n    effects: [\n      {\n        display: 'Not today!',\n        tooltip: 'Blocks a lot of damage',\n        effects: [effectFunCall(['Effect:Armor', { amount: 5 }])],\n        priority: 2,\n        interruptible: false,\n        stamina: 4,\n        range: selfRange,\n      },\n    ],\n  },\n  focus: {\n    display: 'Focus',\n    passives: ['+Speed', '+StaPerTurn'],\n  },\n  wand: {\n    display: 'Wand',\n    passives: ['-Defence', '-StaPerTurn'],\n    effects: [\n      {\n        display: 'Magic Bolt',\n        tooltip: 'Shoots mana bolts until the caster faints',\n        effects: [effectFunCall('Wand:MagicBolt')],\n        priority: 3,\n        interruptible: true,\n        stamina: 1,\n        range: makeRange(3, 4),\n      },\n    ],\n  },\n};\n\nexport default offhands as Offhands;\n","import { selfRange, makeRange } from '../makeGame';\nimport { Item, effectFunCall } from '../types';\n\nexport type SkillsIndex = keyof typeof skills;\nexport type Skills = { [k in SkillsIndex]: Item };\nconst skills = {\n  sturdy: {\n    display: 'Sturdy',\n    bot: [\n      {\n        display: 'Endure the pain',\n        tooltip: 'Blocks some damage each turn at the cost of stamina',\n        stamina: 2,\n        effects: [effectFunCall(['Effect:Armor', { amount: 4 }])],\n        priority: 1,\n        interruptible: false,\n        range: selfRange,\n      },\n    ],\n  },\n  nimble: {\n    display: 'Nimble',\n    effects: [\n      {\n        display: 'Dodge',\n        tooltip: 'Avoid one enemy attack',\n        effects: [effectFunCall('Effect:Dodge')],\n        priority: 2,\n        interruptible: false,\n        stamina: 4,\n        range: selfRange,\n      },\n    ],\n  },\n  resourceful: {\n    display: 'Resourceful',\n    effects: [\n      {\n        display: 'Dodge this!',\n        tooltip: 'Throws a stone',\n        effects: [effectFunCall(['Basic:Attack', { amount: 2 }])],\n        priority: 3,\n        interruptible: true,\n        stamina: 3,\n        range: makeRange(3, 4),\n      },\n    ],\n  },\n};\n\nexport default skills as Skills;\n","import { makeRange, allRanges } from '../makeGame';\nimport { Item, effectFunCall } from '../types';\n\nexport type WeaponsIndex = keyof typeof weapons;\nexport type Weapons = { [k in WeaponsIndex]: Item };\nconst weapons = {\n  sword: {\n    display: 'Sword',\n    tooltip: 'All-rounder',\n    effects: [\n      {\n        display: 'Slash',\n        tooltip: 'Swings at the enemy',\n        effects: [effectFunCall(['Basic:Attack', { amount: 2 }])],\n        priority: 3,\n        interruptible: true,\n        stamina: 2,\n        range: makeRange(0, 1),\n      },\n      {\n        display: 'Pommel Hit',\n        tooltip: 'Deals a quick blow',\n        effects: [effectFunCall(['Basic:Attack', { amount: 2 }])],\n        priority: 2,\n        interruptible: true,\n        stamina: 2,\n        range: makeRange(0),\n      },\n      {\n        display: 'Overhead Slice',\n        tooltip: 'Moves into melee and deals a heavy blow',\n        effects: [\n          effectFunCall(['Basic:Move', { amount: -1 }]),\n          effectFunCall(['Basic:Attack', { amount: 4 }]),\n        ],\n        priority: 4,\n        interruptible: true,\n        stamina: 3,\n        range: makeRange(1),\n      },\n    ],\n  },\n  greatsword: {\n    display: 'Greatsword',\n    tooltip: 'Specialized in big damage',\n    effects: [\n      {\n        display: 'Rend',\n        tooltip: 'Swings at the enemy',\n        effects: [effectFunCall(['Basic:Attack', { amount: 3 }])],\n        priority: 4,\n        interruptible: true,\n        stamina: 4,\n        range: makeRange(0, 1),\n      },\n      {\n        display: 'Feint',\n        tooltip: 'Quick step backwards',\n        effects: [effectFunCall(['Basic:Move', { amount: 1 }])],\n        priority: 1,\n        interruptible: false,\n        stamina: 1,\n        range: makeRange(0, 1),\n      },\n      {\n        display: 'Earth Flattener',\n        tooltip: 'Charges a monstruous stunning blow',\n        effects: [effectFunCall(['Basic:Move', { amount: 5 }]), effectFunCall('Effect:Stun')],\n        priority: 4,\n        interruptible: true,\n        stamina: 6,\n        range: makeRange(1),\n      },\n    ],\n  },\n  twinblades: {\n    display: 'Twinblades',\n    tooltip: 'Specialized in mobility',\n    effects: [\n      {\n        display: 'Swoosh',\n        tooltip: 'Deals a strike and moves back',\n        effects: [\n          effectFunCall(['Basic:Attack', { amount: 2 }]),\n          effectFunCall(['Basic:Move', { amount: 1 }]),\n        ],\n        priority: 2,\n        interruptible: true,\n        stamina: 2,\n        range: makeRange(0, 1),\n      },\n      {\n        display: 'Fiuuum',\n        tooltip: 'Jump attack',\n        effects: [\n          effectFunCall(['Basic:Move', { amount: -2 }]),\n          effectFunCall(['Basic:Attack', { amount: 3 }]),\n        ],\n        priority: 4,\n        interruptible: true,\n        stamina: 3,\n        range: makeRange(2, 3),\n      },\n      {\n        display: 'SwishSwishSwishSwish',\n        tooltip: 'Deals multiple low damage hits',\n        effects: [\n          effectFunCall(['Basic:Attack', { amount: 1 }]),\n          effectFunCall(['Basic:Attack', { amount: 1 }]),\n          effectFunCall(['Basic:Attack', { amount: 1 }]),\n          effectFunCall(['Basic:Attack', { amount: 1 }]),\n        ],\n        priority: 3,\n        interruptible: true,\n        stamina: 4,\n        range: makeRange(0),\n      },\n    ],\n  },\n  katana: {\n    display: 'Katana',\n    tooltip: 'Specialized in bleeding',\n    effects: [\n      {\n        display: 'Slice & Dice',\n        tooltip: 'Deals two swift strikes',\n        effects: [\n          effectFunCall(['Basic:Attack', { amount: 1 }]),\n          effectFunCall(['Basic:Attack', { amount: 1 }]),\n        ],\n        priority: 3,\n        interruptible: true,\n        stamina: 2,\n        range: makeRange(0, 1),\n      },\n      {\n        display: 'Wakizashi',\n        tooltip: 'Short sword with a quick attack causing bleeding',\n        effects: [\n          effectFunCall(['Basic:Attack', { amount: 1 }]),\n          effectFunCall(['Effect:Bleed', { target: 'Monster', turns: 2 }]),\n        ],\n        priority: 2,\n        interruptible: true,\n        stamina: 4,\n        range: makeRange(0, 1),\n      },\n      {\n        display: 'Unsheathe',\n        tooltip: 'Dodges the next attack and deals damage',\n        effects: [effectFunCall('Effect:Dodge'), effectFunCall(['Basic:Attack', { amount: 3 }])],\n        priority: 1,\n        interruptible: true,\n        stamina: 4,\n        range: makeRange(0),\n      },\n    ],\n  },\n  axe: {\n    display: 'Axe',\n    tooltip: 'Specialized in debuffs',\n    effects: [\n      {\n        display: 'Chop',\n        tooltip: 'A slow but reliable attack',\n        effects: [effectFunCall(['Basic:Attack', { amount: 2 }])],\n        priority: 4,\n        interruptible: true,\n        stamina: 3,\n        range: makeRange(0, 1),\n      },\n      {\n        display: 'Aim for the head!',\n        tooltip: 'Cripples the monster',\n        effects: [\n          effectFunCall(['Effect:Stat', { target: 'Monster', defence: -1 }]),\n          effectFunCall(['Effect:Bleed', { target: 'Player', turns: 2 }]),\n        ],\n        priority: 4,\n        interruptible: true,\n        stamina: 5,\n        range: makeRange(1),\n      },\n      {\n        display: 'Target the limbs!',\n        tooltip: 'Weakens the monster',\n        effects: [\n          effectFunCall(['Effect:Stat', { target: 'Monster', attack: -1 }]),\n          effectFunCall(['Effect:Bleed', { target: 'Player', turns: 2 }]),\n        ],\n        priority: 4,\n        interruptible: true,\n        stamina: 5,\n        range: makeRange(1),\n      },\n    ],\n  },\n  lance: {\n    display: 'Lance',\n    tooltip: 'Specialized in mid-range attacks',\n    effects: [\n      {\n        display: 'Pierce',\n        tooltip: 'Pokes the enemy',\n        effects: [effectFunCall(['Basic:Attack', { amount: 2 }])],\n        priority: 3,\n        interruptible: true,\n        stamina: 2,\n        range: makeRange(0, 1, 2),\n      },\n      {\n        display: 'Charge!!',\n        tooltip: 'Runs towards the enemy to deal a massive blow',\n        effects: [\n          effectFunCall(['Basic:Move', { amount: -5 }]),\n          effectFunCall(['Basic:Attack', { amount: 4 }]),\n        ],\n        priority: 1,\n        interruptible: true,\n        stamina: 3,\n        range: makeRange(4),\n      },\n    ],\n  },\n  hammer: {\n    display: 'Hammer',\n    tooltip: 'Specialized in stunning',\n    effects: [\n      {\n        display: 'Head Banger',\n        tooltip: 'Hits the enemy in the head',\n        effects: [effectFunCall(['Basic:Attack', { amount: 2 }]), effectFunCall('Effect:Stun')],\n        priority: 4,\n        interruptible: true,\n        stamina: 4,\n        range: makeRange(0),\n      },\n      {\n        display: 'Large swing',\n        tooltip: 'Uses the inertia of the hammer to safely advance',\n        effects: [effectFunCall(['Basic:Move', { amount: -3 }]), effectFunCall('Effect:Stun')],\n        priority: 3,\n        interruptible: true,\n        stamina: 3,\n        range: makeRange(1, 2, 3),\n      },\n      {\n        display: 'Go for the ankles',\n        tooltip: 'Slows down the enemy',\n        effects: [\n          effectFunCall(['Effect:Stat', { target: 'Monster', speed: -1 }]),\n          effectFunCall('Effect:Stun'),\n        ],\n        priority: 4,\n        interruptible: true,\n        stamina: 6,\n        range: makeRange(1),\n      },\n    ],\n  },\n  claw: {\n    display: 'Finger Claw',\n    tooltip: 'Specialized in poison',\n    effects: [\n      {\n        display: 'Caress',\n        tooltip: 'Applies poison to the monster',\n        effects: [effectFunCall(['Effect:Poison', { target: 'Monster', turns: 2 }])],\n        priority: 3,\n        interruptible: false,\n        stamina: 2,\n        range: makeRange(0),\n      },\n      {\n        display: 'Backflip',\n        tooltip: 'Dodges an attack and moves backward',\n        effects: [effectFunCall('Effect:Dodge'), effectFunCall(['Basic:Move', { amount: 2 }])],\n        priority: 1,\n        interruptible: false,\n        stamina: 4,\n        range: makeRange(0, 1),\n      },\n    ],\n  },\n  bow: {\n    display: 'Bow',\n    tooltip: 'Specialized in ranged attacks',\n    effects: [\n      {\n        display: 'Relaxed Shot',\n        tooltip: 'Shoots an arrow',\n        effects: [effectFunCall(['Basic:Attack', { amount: 2 }])],\n        priority: 3,\n        interruptible: true,\n        stamina: 2,\n        range: makeRange(3, 4),\n      },\n      {\n        display: 'Power Draw',\n        tooltip: 'Shoots your strongest arrow and makes you weaker',\n        effects: [\n          effectFunCall(['Basic:Attack', { amount: 6 }]),\n          effectFunCall(['Effect:Stat', { target: 'Player', attack: -1 }]),\n        ],\n        priority: 3,\n        interruptible: true,\n        stamina: 4,\n        range: makeRange(4),\n      },\n    ],\n  },\n  staff: {\n    display: 'Magic Staff',\n    tooltip: 'Specialized in multiple attacks',\n    effects: [\n      {\n        display: 'Bolt',\n        tooltip: 'Shoots a low damage bolt',\n        effects: [effectFunCall(['Basic:Attack', { amount: 1 }])],\n        priority: 3,\n        interruptible: true,\n        stamina: 3,\n        range: allRanges,\n      },\n      {\n        display: 'Pew Pew Pew',\n        tooltip: 'Shoots a barrage of bolts',\n        effects: [\n          effectFunCall(['Basic:Attack', { amount: 1 }]),\n          effectFunCall(['Basic:Attack', { amount: 1 }]),\n          effectFunCall(['Basic:Attack', { amount: 1 }]),\n          effectFunCall(['Basic:Attack', { amount: 1 }]),\n        ],\n        priority: 4,\n        interruptible: true,\n        stamina: 8,\n        range: makeRange(2, 3, 4),\n      },\n    ],\n  },\n};\n\nexport default weapons as Weapons;\n","import { allRanges, selfRange } from '../makeGame';\nimport { BuildRepository, effectFunCall } from '../types';\nimport armors from './armors';\nimport charms from './charms';\nimport classes from './classes';\nimport consumables from './consumables';\nimport footwears from './footwears';\nimport headgears from './headgears';\nimport offhands from './offhand';\nimport skills from './skills';\nimport weapons from './weapons';\n\nconst build: BuildRepository = {\n  debug: {\n    disabled: {\n      display: 'None',\n    },\n    enabled: {\n      display: 'Debug',\n      effects: [\n        {\n          display: 'GGWP',\n          tooltip: 'Wins the game',\n          priority: 1,\n          interruptible: false,\n          stamina: 0,\n          range: allRanges,\n          effects: [effectFunCall('Debug:GGWP')],\n        },\n        {\n          display: 'SUDOKU',\n          tooltip: 'Loses the game',\n          priority: 1,\n          interruptible: false,\n          stamina: 0,\n          range: allRanges,\n          effects: [effectFunCall('Debug:Sudoku')],\n        },\n      ],\n    },\n  },\n  basic: {\n    basic: {\n      display: 'Basic',\n      effects: [\n        {\n          display: 'Rest',\n          tooltip: 'Skip the turn and restore stamina',\n          priority: 4,\n          interruptible: false,\n          stamina: 0,\n          range: selfRange,\n          effects: [effectFunCall('Basic:Rest')],\n        },\n        {\n          display: 'Advance',\n          tooltip: 'Move closer',\n          priority: 4,\n          interruptible: false,\n          stamina: 1,\n          range: selfRange,\n          effects: [effectFunCall(['Basic:Move', { amount: -1 }])],\n        },\n        {\n          display: 'Retreat',\n          tooltip: 'Move farther',\n          effects: [effectFunCall(['Basic:Move', { amount: 1 }])],\n          priority: 4,\n          interruptible: false,\n          stamina: 1,\n          range: selfRange,\n        },\n      ],\n    },\n  },\n  class: classes,\n  skill: skills,\n  weapon: weapons,\n  offhand: offhands,\n  armor: armors,\n  headgear: headgears,\n  footwear: footwears,\n  charm: charms,\n  consumable: consumables,\n};\n\nexport default build;\n","import { updateGlobals } from './modding';\nimport { BuildRepository, EnemyRepository } from './types';\nimport enemyRepository from './data/enemies';\nimport buildRepository from './data/build';\n\nexport const enemies: EnemyRepository = enemyRepository;\nexport const build: BuildRepository = buildRepository;\n\nupdateGlobals({ build, enemies });\n","export const rangeArr = (max: number, min: number = 0) => {\n  let range = [...Array(max).keys()];\n  if (min >= 0) {\n    range.filter((i) => i < min);\n  }\n  return range;\n};\n\nexport const clamp = (num: number, min: number, max: number = Infinity) =>\n  Math.min(Math.max(num, min), max);\n\nexport const pipe = <T, U>(t: T, f: (t: T) => U): U => f(t);\n\nexport const pipe2 = <T, U, A>(t: T, u: U, f: (t: T, u: U) => A): A => f(t, u);\n\nexport const pipe3 = <T, U, V, A>(t: T, u: U, v: V, f: (t: T, u: U, v: V) => A): A => f(t, u, v);\n","import { EffectFunctionRepository } from './effectRepository';\nimport { BuildRepository, effectFunCall, EnemyInfo, EnemyRepository, Play } from './types';\n\nexport type Globals = {\n  debug: boolean;\n  trainingEnemy: EnemyInfo;\n  build?: BuildRepository;\n  effects?: EffectFunctionRepository;\n  enemies?: EnemyRepository;\n  ingame?: {\n    game: Play;\n    forceUpdate: () => void;\n  };\n};\n\nconst globalsDefault: Globals = {\n  debug: false,\n  trainingEnemy: [\n    {\n      lore: {\n        name: '🤖 Dummy 🤖',\n      },\n      effects: [\n        {\n          display: 'Approve of your life choices',\n          tooltip: \"You're doing great!\",\n          priority: 4,\n          effects: [effectFunCall(['Monster:Attack', { amount: 0 }])],\n          interruptible: true,\n          range: [0, 1, 2, 3, 4],\n        },\n      ],\n      rolls: [[0], [0], [0], [0], [0]],\n    },\n    {\n      hp: { current: 300, starting: 300, max: 300 },\n      distance: 0,\n      speed: { current: 0, starting: 0, max: 0 },\n      attack: { current: 0, starting: 0, max: 0 },\n      defence: { current: 0, starting: 0, max: 0 },\n      status: {\n        dodge: { active: false },\n        armor: { amount: 0 },\n        bleed: { turns: 0 },\n        stun: { active: false },\n      },\n    },\n  ],\n};\n\nexport const globals = (): Globals =>\n  // @ts-ignore\n  globalThis.__buildmancer;\n\nexport const updateGlobals = (p: Partial<Globals>) => {\n  const theThis = globalThis as unknown as { __buildmancer: Globals };\n  theThis.__buildmancer = {\n    ...globalsDefault,\n    ...(theThis.__buildmancer ?? {}),\n    ...p,\n  };\n};\n\nupdateGlobals({});\n","import { Opaque } from 'type-fest';\nimport { Armors } from './data/armors';\nimport { Charms } from './data/charms';\nimport { Classes } from './data/classes';\nimport { Consumables } from './data/consumables';\nimport { EnemiesIndex } from './data/enemies';\nimport { Footwears } from './data/footwears';\nimport { Headgears } from './data/headgears';\nimport { Offhands } from './data/offhand';\nimport { Skills } from './data/skills';\nimport { Weapons } from './data/weapons';\nimport {\n  EffectFunParams,\n  EffectFunctionRepository,\n  EffectFunRepoIndex,\n  StatsFunIndex,\n} from './effectRepository';\n\nexport type Tuple<T, N extends number> = N extends N\n  ? number extends N\n    ? T[]\n    : _TupleOf<T, N, []>\n  : never;\ntype _TupleOf<T, N extends number, R extends unknown[]> = R['length'] extends N\n  ? R\n  : _TupleOf<T, N, [T, ...R]>;\n\nexport type Nel<T> = [T, ...T[]];\n\ntype Length<T extends any[]> = T extends { length: infer L } ? L : never;\ntype BuildTuple<L extends number, T extends any[] = []> = T extends {\n  length: L;\n}\n  ? T\n  : BuildTuple<L, [...T, any]>;\nexport type Subtract<A extends number, B extends number> = BuildTuple<A> extends [\n  ...infer U,\n  ...BuildTuple<B>\n]\n  ? Length<U>\n  : never;\ntype EQ<A, B> = A extends B ? (B extends A ? true : false) : false;\ntype AtTerminus<A extends number, B extends number> = A extends 0\n  ? true\n  : B extends 0\n  ? true\n  : false;\ntype LT<A extends number, B extends number> = AtTerminus<A, B> extends true\n  ? EQ<A, B> extends true\n    ? false\n    : A extends 0\n    ? true\n    : false\n  : LT<Subtract<A, 1>, Subtract<B, 1>>;\n\nexport type TupleUpTo<T, N extends number> = EQ<N, 1> extends true\n  ? [T]\n  : TupleUpTo<T, Subtract<N, 1>> | Tuple<T, N>;\n\nexport type UpTo<N extends number> = EQ<N, 0> extends true ? 0 : UpTo<Subtract<N, 1>> | N;\n\nexport interface Stat {\n  max: number;\n  starting: number;\n  current: UpTo<Stat['max']>;\n}\n\nexport interface Status {\n  dodge: { active: boolean };\n  stun: { active: boolean };\n  armor: { amount: number };\n  bleed: { turns: number };\n}\nexport interface PlayerStats {\n  hp: Stat;\n  stamina: Stat;\n  staminaPerTurn: Stat;\n  speed: Stat;\n  attack: Stat;\n  defence: Stat;\n  status: Status;\n}\nexport interface EnemyStats {\n  hp: Stat;\n  speed: Stat;\n  attack: Stat;\n  defence: Stat;\n  distance: UpTo<Subtract<Distances, 1>>;\n  status: Status;\n}\nexport type InventoryStats = {\n  [k in Item['display']]: { used: number };\n};\n\nexport type Priorities = 5;\nexport type Distances = 5;\nexport type MonsterCount = 5;\nexport type Staminas = 10;\n\nexport type EffectPhase = 'MAIN' | 'BOT' | 'EOT' | 'CLEANUP';\nexport interface EffectSummary {\n  origin: Target;\n  display: string;\n  phase: EffectPhase;\n}\n\nexport type DisabledSkills = (keyof BuildRepository)[];\nexport interface Snapshot {\n  player: PlayerStats;\n  enemies: EnemiesStats;\n  inventory: InventoryStats;\n  target: MonsterTarget;\n  lastAttacks: EffectSummary[];\n  bot?: Nel<[Target, Effect]>;\n  eot?: Nel<[Target, Effect]>;\n  disabledSkills: DisabledSkills;\n}\n\nexport type RNG = Opaque<number[][], 'RNG'>;\n\nexport type VersionString = '1';\nexport type Seed = number | string;\nexport interface Play {\n  states: Nel<Snapshot>;\n  player: Player;\n  enemies: Enemies;\n  rng: RNG;\n  turns: number;\n  id: string;\n  seed: Seed;\n  version: VersionString;\n}\n\ntype ItemOrMonster = string /* TODO all items */ | 'Monster';\nexport type FunIndex = `${ItemOrMonster}:${string}`;\n\nexport type StatsFunRepo = { [key in StatsFunIndex]: StatsFun };\nexport type StatsFun = (player: PlayerStats, enemies: EnemiesStats) => [PlayerStats, EnemiesStats];\n\nexport type Ranges = UpTo<Subtract<Distances, 1>>[];\n\ninterface EffectFunCallT {\n  index: EffectFunRepoIndex;\n  parameters: EffectFunParams<EffectFunRepoIndex>;\n}\nexport type EffectFunCall = Opaque<EffectFunCallT, EffectFunCallT>;\nexport const effectFunCall = <T extends EffectFunRepoIndex>(\n  t: EffectFunParams<T> extends undefined ? T : [T, EffectFunParams<T>]\n): EffectFunCall =>\n  (Array.isArray(t)\n    ? { index: t[0], parameters: t[1] }\n    : { index: t, parameters: undefined }) as EffectFunCall;\nexport const callEffectFun = <T extends EffectFunRepoIndex>(\n  repo: EffectFunctionRepository,\n  t: T,\n  p: EffectFunParams<T>\n) => {\n  const f = repo[t];\n  // @ts-expect-error: index and parameters are enforced to be compatible at construction and the runtime check above ^^^^\n  return f(p);\n};\n\nexport interface Effect {\n  display: string;\n  tooltip: string;\n  effects: Nel<EffectFunCall>;\n  priority: UpTo<Subtract<Priorities, 1>>;\n  range: Ranges;\n  interruptible: boolean;\n}\nexport interface InventoryEffect extends Effect {\n  stamina: UpTo<Subtract<Staminas, 1>>;\n  amount?: number;\n}\n\nexport type MonsterTarget = UpTo<Subtract<MonsterCount, 1>>;\nexport type PlayerTarget = 'Player';\nexport type Target = MonsterTarget | PlayerTarget;\n\nexport type EffectTarget = 'Player' | 'Monster';\nexport type PlayerStatParameter = Partial<{\n  [k in keyof Omit<PlayerStats, 'status'>]: number;\n}>;\nexport type MonsterStatParameter = Partial<{\n  [k in keyof Omit<EnemyStats, 'status'>]: number;\n}>;\nexport type StatEffectTarget =\n  | (PlayerStatParameter & { target: 'Player' })\n  | (MonsterStatParameter & { target: 'Monster' });\n\nexport interface BuildRepository {\n  debug: { enabled: Item; disabled: Item };\n  basic: { basic: Item };\n  class: Classes;\n  skill: Skills;\n  weapon: Weapons;\n  offhand: Offhands;\n  consumable: Consumables;\n  armor: Armors;\n  headgear: Headgears;\n  footwear: Footwears;\n  charm: Charms;\n}\nexport type Build = {\n  [k in keyof BuildRepository]: Item;\n};\n\nexport type EnemyInfo = [Enemy, EnemyStats];\nexport type EnemyRepository = { [k in EnemiesIndex]: EnemyInfo };\n\nexport interface Item {\n  display: string;\n  tooltip?: string;\n  passives?: StatsFunIndex[];\n  bot?: Nel<InventoryEffect>;\n  eot?: Nel<InventoryEffect>;\n  effects?: Nel<InventoryEffect>;\n}\n\nexport interface Player {\n  id: string;\n  lore: Record<string, string | number>;\n  build: Build;\n}\n\n// Place in the array for now\ntype EffectIdentity = number;\nexport interface Enemy {\n  lore: Record<string, string | number>;\n  effects: Nel<Effect>;\n  rolls: Tuple<EffectIdentity[], Distances>;\n  bot?: Nel<Effect>;\n  eot?: Nel<Effect>;\n}\n\nexport type Enemies = TupleUpTo<Enemy, MonsterCount>;\nexport type EnemiesStats = TupleUpTo<EnemyStats, MonsterCount>;\n\nexport const safeEntries = <T, K extends keyof T>(o: {\n  [s in K]: T[s];\n}): [K, T[K]][] => Object.entries(o).map(([k, v]) => [k as K, v as T[K]]);\n\nexport const safeValues = <T, K extends keyof T>(o: {\n  [s in K]: T[s];\n}): T[K][] => safeEntries(o).map((a) => a[1]);\n\nexport const safeKeys = <T, K extends keyof T>(o: {\n  [s in K]: T[s];\n}): K[] => safeEntries(o).map((a) => a[0]);\n","const names = [\n  'Lydan',\n  'Syrin',\n  'Ptorik',\n  'Joz',\n  'Varog',\n  'Gethrod',\n  'Hezra',\n  'Feron',\n  'Ophni',\n  'Colborn',\n  'Fintis',\n  'Gatlin',\n  'Jinto',\n  'Hagalbar',\n  'Krinn',\n  'Lenox',\n  'Revvyn',\n  'Hodus',\n  'Dimian',\n  'Paskel',\n  'Kontas',\n  'Weston',\n  'Azamarr',\n  'Jather',\n  'Tekren',\n  'Jareth',\n  'Adon',\n  'Zaden',\n  'Eune',\n  'Graff',\n  'Tez',\n  'Jessop',\n  'Gunnar',\n  'Pike',\n  'Domnhar',\n  'Baske',\n  'Jerrick',\n  'Mavrek',\n  'Riordan',\n  'Wulfe',\n  'Straus',\n  'Tyvrik',\n  'Henndar',\n  'Favroe',\n  'Whit',\n  'Jaris',\n  'Renham',\n  'Kagran',\n  'Lassrin',\n  'Vadim',\n  'Arlo',\n  'Quintis',\n  'Vale',\n  'Caelan',\n  'Yorjan',\n  'Khron',\n  'Ishmael',\n  'Jakrin',\n  'Fangar',\n  'Roux',\n  'Baxar',\n  'Hawke',\n  'Gatlen',\n  'Barak',\n  'Nazim',\n  'Kadric',\n  'Paquin',\n  'Kent',\n  'Moki',\n  'Rankar',\n  'Lothe',\n  'Ryven',\n  'Clawsen',\n  'Pakker',\n  'Embre',\n  'Cassian',\n  'Verssek',\n  'Dagfinn',\n  'Ebraheim',\n  'Nesso',\n  'Eldermar',\n  'Rivik',\n  'Rourke',\n  'Barton',\n  'Hemm',\n  'Sarkin',\n  'Blaiz',\n  'Talon',\n  'Agro',\n  'Zagaroth',\n  'Turrek',\n  'Esdel',\n  'Lustros',\n  'Zenner',\n  'Baashar',\n  'Dagrod',\n  'Gentar',\n  'Feston',\n  'Syrana',\n  'Resha',\n  'Varin',\n  'Wren',\n  'Yuni',\n  'Talis',\n  'Kessa',\n  'Magaltie',\n  'Aeris',\n  'Desmina',\n  'Krynna',\n  'Asralyn',\n  'Herra',\n  'Pret',\n  'Kory',\n  'Afia',\n  'Tessel',\n  'Rhiannon',\n  'Zara',\n  'Jesi',\n  'Belen',\n  'Rei',\n  'Ciscra',\n  'Temy',\n  'Renalee',\n  'Estyn',\n  'Maarika',\n  'Lynorr',\n  'Tiv',\n  'Annihya',\n  'Semet',\n  'Tamrin',\n  'Antia',\n  'Reslyn',\n  'Basak',\n  'Vixra',\n  'Pekka',\n  'Xavia',\n  'Beatha',\n  'Yarri',\n  'Liris',\n  'Sonali',\n  'Razra',\n  'Soko',\n  'Maeve',\n  'Everen',\n  'Yelina',\n  'Morwena',\n  'Hagar',\n  'Palra',\n  'Elysa',\n  'Sage',\n  'Ketra',\n  'Lynx',\n  'Agama',\n  'Thesra',\n  'Tezani',\n  'Ralia',\n  'Esmee',\n  'Heron',\n  'Naima',\n  'Rydna',\n  'Sparrow',\n  'Baakshi',\n  'Ibera',\n  'Phlox',\n  'Dessa',\n  'Braithe',\n  'Taewen',\n  'Larke',\n  'Silene',\n  'Phressa',\n  'Esther',\n  'Anika',\n  'Rasy',\n  'Harper',\n  'Indie',\n  'Vita',\n  'Drusila',\n  'Minha',\n  'Surane',\n  'Lassona',\n  'Merula',\n  'Kye',\n  'Jonna',\n  'Lyla',\n  'Zet',\n  'Orett',\n  'Naphtalia',\n  'Turi',\n  'Rhays',\n  'Shike',\n  'Hartie',\n  'Beela',\n  'Leska',\n  'Vemery',\n  'Lunex',\n  'Fidess',\n  'Tisette',\n  'Partha',\n];\n\nexport default names;\n","import { enemies, build } from './data';\nimport { Chance } from 'chance';\nimport names from './data/names';\nimport { globals } from './modding';\nimport {\n  UpTo,\n  Subtract,\n  Distances,\n  Ranges,\n  Stat,\n  Status,\n  EnemyInfo,\n  Build,\n  PlayerStats,\n  Player,\n  safeValues,\n} from './types';\n\nexport const makeRange = (...number: UpTo<Subtract<Distances, 1>>[]) =>\n  [...new Set(number)] as Ranges;\nexport const allRanges = makeRange(0, 1, 2, 3, 4);\nexport const selfRange = allRanges;\n\nexport const makeStat = (\n  amount: number,\n  max: (amt: number) => number = (amt) => amt + 10\n): Stat => ({\n  current: amount,\n  starting: amount,\n  max: max(amount),\n});\nexport const defaultStatus: Status = {\n  dodge: { active: false },\n  armor: { amount: 0 },\n  bleed: { turns: 0 },\n  stun: { active: false },\n};\n\nexport const randomEnemy = (): EnemyInfo => new Chance().pickone(safeValues(enemies));\nexport const dummyEnemy = (): EnemyInfo => globals().trainingEnemy;\n\nexport const randomName = () => names[Math.floor(Math.random() * names.length)];\n\nexport const randomBuild = (rng: Chance.Chance, buildOverride?: Partial<Build>) => ({\n  debug: build.debug[globals().debug ? 'enabled' : 'disabled'],\n  basic: rng.pickone(safeValues(build.basic)),\n  class: rng.pickone(safeValues(build.class)),\n  skill: rng.pickone(safeValues(build.skill)),\n  armor: rng.pickone(safeValues(build.armor)),\n  weapon: rng.pickone(safeValues(build.weapon)),\n  offhand: rng.pickone(safeValues(build.offhand)),\n  footwear: rng.pickone(safeValues(build.footwear)),\n  headgear: rng.pickone(safeValues(build.headgear)),\n  charm: rng.pickone(safeValues(build.charm)),\n  consumable: rng.pickone(safeValues(build.consumable)),\n  ...buildOverride,\n});\n\nexport const playerStatsDefault: PlayerStats = {\n  hp: makeStat(15),\n  stamina: makeStat(6, (a) => a),\n  staminaPerTurn: makeStat(2),\n  speed: makeStat(0),\n  attack: makeStat(0),\n  defence: makeStat(0),\n  status: defaultStatus,\n};\n\nexport const randomPlayer = (\n  statsOverride?: Partial<PlayerStats>,\n  buildOverride?: Partial<Build>\n): [Player, PlayerStats] => {\n  const rng = new Chance();\n  return [\n    {\n      id: rng.string(),\n      lore: {\n        name: randomName(),\n        age: rng.age(),\n      },\n      build: randomBuild(rng, buildOverride),\n    },\n    {\n      ...playerStatsDefault,\n      ...statsOverride,\n    },\n  ];\n};\n","import WebSocket from 'ws';\nimport { assign, createMachine, interpret } from 'xstate';\nimport { inspect } from '@xstate/inspect/lib/server.js';\nimport { scoreGame } from '../game/playGame';\n\nconst isDebug = process && process.env['SMD'] === '1';\n\nif (isDebug) {\n  inspect({\n    server: new WebSocket.Server({\n      port: 8888,\n    }),\n  });\n}\n\nconst toMenu = {\n  on: {\n    MENU: { target: 'main' },\n  },\n};\n\nconst quick = {\n  initial: 'play',\n  states: {\n    play: {\n      entry: ['reset'],\n      on: {\n        WIN: { target: 'win' },\n        LOSE: { target: 'lose' },\n      },\n    },\n    win: { type: 'final' as const },\n    lose: { type: 'final' as const },\n  },\n  ...toMenu,\n};\n\nconst single = {\n  initial: 'player',\n  states: {\n    player: {\n      entry: ['reset'],\n      on: {\n        PLAYER: { target: 'encounter' },\n      },\n    },\n    encounter: {\n      on: {\n        ENCOUNTER: { target: 'play' },\n      },\n    },\n    play: {\n      on: {\n        WIN: { target: 'win' },\n        LOSE: { target: 'lose' },\n      },\n    },\n    win: { type: 'final' as const },\n    lose: { type: 'final' as const },\n  },\n  ...toMenu,\n};\n\nconst arcade = {\n  initial: 'player',\n  states: {\n    player: {\n      entry: ['reset'],\n      on: {\n        PLAYER: { target: 'play' },\n      },\n    },\n    play: {\n      on: {\n        WIN: [\n          { target: 'victory', cond: 'isFinal' },\n          {\n            target: 'play',\n            actions: ['bumpVictories', 'bumpScore'],\n            internal: true,\n          },\n        ],\n        LOSE: { target: 'defeat' },\n      },\n    },\n    victory: {\n      type: 'final' as const,\n    },\n    defeat: {\n      type: 'final' as const,\n    },\n  },\n  ...toMenu,\n};\n\nconst survival = {\n  initial: 'player',\n  states: {\n    player: {\n      entry: ['reset'],\n      on: {\n        PLAYER: { target: 'play' },\n      },\n    },\n    play: {\n      on: {\n        WIN: { target: 'play', actions: ['bumpVictories'] },\n        LOSE: { target: 'defeat' },\n      },\n    },\n    defeat: {\n      type: 'final' as const,\n      on: {\n        // ACK: { target: '#menus.leaderboards' }\n      },\n    },\n  },\n  ...toMenu,\n};\n\nconst puzzle = {\n  initial: 'puzzle',\n  states: {\n    puzzle: {\n      on: {\n        PLAYER: { target: 'player' },\n      },\n    },\n    player: {\n      on: {\n        SELECTED: { target: 'play' },\n      },\n    },\n    play: {\n      on: {\n        COMPLETE: { target: 'complete' },\n      },\n    },\n    complete: {\n      on: {\n        NEXT: { target: 'player' },\n        SELECT: { target: 'puzzle' },\n      },\n    },\n  },\n  ...toMenu,\n};\n\nconst replay = {\n  initial: 'replay',\n  states: {\n    replay: {\n      on: {\n        REPLAY: { target: 'play' },\n      },\n    },\n    play: {\n      on: {\n        WIN: { target: 'win' },\n        LOSE: { target: 'lose' },\n      },\n    },\n    win: { type: 'final' as const },\n    lose: { type: 'final' as const },\n  },\n  ...toMenu,\n};\n\nconst training = {\n  initial: 'player',\n  states: {\n    player: {\n      entry: ['reset'],\n      on: {\n        PLAYER: { target: 'play' },\n      },\n    },\n    play: {\n      on: {\n        WIN: { target: 'win' },\n        LOSE: { target: 'lose' },\n      },\n    },\n    win: { type: 'final' as const },\n    lose: { type: 'final' as const },\n  },\n  ...toMenu,\n};\n\nconst makeArcadeContext = () => ({\n  victories: 0,\n  score: 0,\n  seed: Math.random(),\n});\nconst makeSurvivalContext = () => ({\n  victories: 0,\n  seed: Math.random(),\n});\nconst makeSingleContext = () => ({\n  seed: Math.random(),\n});\nconst makeGameContext = () => ({\n  arcadeContext: makeArcadeContext(),\n  survivalContext: makeSurvivalContext(),\n  singleContext: makeSingleContext(),\n});\n\nexport const gameMenuMachine = createMachine(\n  {\n    tsTypes: {} as import('./menuStateMachine.typegen').Typegen0,\n    id: 'menus',\n    initial: 'main',\n    context: makeGameContext(),\n    states: {\n      main: {\n        on: {\n          QUICK: { target: 'quick' },\n          SINGLE: { target: 'single' },\n          TRAINING: { target: 'training' },\n          ARCADE: { target: 'arcade' },\n          SURVIVAL: { target: 'survival' },\n          REPLAY: { target: 'replay' },\n          // PUZZLE: { target: 'puzzle' },\n          // LEADERBOARDS: { target: 'leaderboards' },\n        },\n      },\n      quick: {\n        ...quick,\n      },\n      single: {\n        ...single,\n      },\n      arcade: {\n        ...arcade,\n      },\n      survival: {\n        ...survival,\n      },\n      replay: {\n        ...replay,\n      },\n      training: {\n        ...training,\n      },\n      // puzzle: {\n      //   ...puzzle,\n      // },\n      // leaderboards: {\n      //   ...toMenu,\n      // }\n    },\n  },\n  {\n    guards: {\n      isFinal: ({ arcadeContext: { victories } }) => victories + 1 >= 7,\n    },\n    actions: {\n      bumpVictories: assign({\n        arcadeContext: ({ arcadeContext }, _event) => ({\n          ...arcadeContext,\n          victories: arcadeContext.victories + 1,\n          seed: Math.random(),\n        }),\n        survivalContext: ({ survivalContext }, _event) => ({\n          ...survivalContext,\n          victories: survivalContext.victories + 1,\n          seed: Math.random(),\n        }),\n      }),\n      bumpScore: assign({\n        arcadeContext: ({ arcadeContext }, { game }) => ({\n          ...arcadeContext,\n          score: arcadeContext.score + scoreGame(game),\n          seed: Math.random(),\n        }),\n      }),\n      reset: assign({\n        survivalContext: (c, e) => makeSurvivalContext(),\n        arcadeContext: (c, e) => makeArcadeContext(),\n        singleContext: (c, e) => makeSingleContext(),\n      }),\n    },\n  }\n);\n\nif (isDebug) {\n  interpret(gameMenuMachine, { devTools: true })\n    .onTransition((state) => console.log(state))\n    .start();\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process && process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://cra.link/PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://cra.link/PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n"],"sourceRoot":""}