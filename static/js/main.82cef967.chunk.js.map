{"version":3,"sources":["components/Enemy.tsx","components/Player.tsx","utils/data.ts","utils/playGame.ts","components/Game.tsx","hooks/usePressedKeys.tsx","components/PlayerBuilder.tsx","hooks/useScroll.tsx","components/EncounterBuilder.tsx","geneticalgorithm/geneticalgorithm.js","tinkerer/tinkerer.ts","App.tsx","serviceWorkerRegistration.ts","reportWebVitals.ts","index.tsx"],"names":["EnemyCard","effects","enemy","enemyStats","isSelected","onSelect","latestAttack","canAct","Card","bg","undefined","Body","Title","lore","name","hp","Text","distance","rolls","map","idx","Seq","countBy","e","display","toArray","v","find","a","range","priority","length","toFixed","join","Button","disabled","onClick","PlayerCard","selectedButtons","player","playerStats","onClickEffect","lastAction","Subtitle","className","build","class","stamina","Stack","direction","gap","Object","values","flatMap","active","has","_","startState","play","states","previousState","chain","funs","reduce","acc","value","origin","newState","makeRange","number","Set","allRanges","selfRange","effectDead","effect","effectRepository","_origin","_play","actions","changeDistance","target","currentState","attackMonster","_p","addEotEffect","parameters","lifespan","attackPlayer","modifyPlayerStamina","enemies","s","_m","multiTurnEffectRepository","params","oldState","newPlay","chain2","addEnemy","statsRepository","staminaPerTurn","basic","skill","weapon","offhand","consumable","armor","headgear","footwear","eot","charm","passive","randomName","names","Math","floor","random","rage","clamp","num","min","max","turnDeterministicRng","turns","randPerTurn","monsterSeed","monsterChance","Chance","Array","keys","floating","fixed","updateMonster","override","m","playerPassives","i","playerActions","start","curr","amount","addBotEffect","bot","reducePlayerFuns","f","reduceMultiTurnFuns","p","snap","handlePlayerEffect","index","usedSkill","playerBot","playerBotEffects","preBotState","postBotPlay","postBotState","postPlayerBotState","rand","turn","turnRng","rng","pop","zip","stats","concat","sortBy","lastAttacks","preEotState","playerEot","playerEotEffects","postPlayerEotState","postEotPlay","postEotState","setSelected","Game","game","solveGame","undo","redo","hint","enemiesStats","playerSkills","monsterHealth","isPlayerAlive","areMonstersAlive","endGame","pressed","onUp","useState","pressedKeys","updatePressedKeys","downHandler","key","set","upHandler","useCallback","filter","k","useEffect","window","addEventListener","removeEventListener","usePressedKeys","valNum","parseInt","Container","fluid","Row","Col","sm","md","Player","xs","Enemy","first","selects","entries","type","options","ElementPicker","section","setField","scrollParams","elRef","useRef","current","scrollIntoView","useScroll","behavior","block","scrollTo","scrollRef","Form","Label","ButtonGroup","size","id","variant","ref","PlayerBuilder","onSave","React","form","setForm","age","setLore","displayType","onSubmit","preventDefault","style","marginBottom","field","Navbar","maxHeight","EncounterBuilder","encounter","setEncounter","found","pickone","geneticAlgorithmConstructor","settingWithDefaults","settings","defaults","mutationFunction","crossoverFunction","fitnessFunction","doesABeatBFunction","population","Error","populationSize","phenotype","b","cloneJSON","object","JSON","parse","stringify","mutate","crossover","mate","evolve","push","populate","otherIndex","temp","randomizePopulationOrder","nextGeneration","competitor","compete","this","best","scored","scoredPopulation","score","bestScore","config","clone","defaultTinkererOptions","playerSeed","weights","monster","debug","tinkerer","iter","optionsOverride","oldPlay","latestState","d6","natural","latest","unavailable","exclude","playerHealth","playerStamina","startPlayerHealth","startPlayerStamina","startMonsterHealth","monsterKillingFitness","playerAlivenessFitness","killSpeedFitness","staminaFitness","fitness","console","log","gen","GeneticAlgorithmConstructor","App","status","setStatus","playerBuild","setPlayerBuild","encounterBuild","setGame","setRedo","seed","fun","playerGameStats","enemyGameStats","toIndexableString","encounterStats","newRedo","slice","iterations","maxBy","isLocalhost","Boolean","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","onUpdate","onSuccess","catch","error","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById","URL","process","href","fetch","headers","response","contentType","get","indexOf","ready","unregister","reload","checkValidServiceWorker","serviceWorkerRegistration"],"mappings":"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","file":"static/js/main.82cef967.chunk.js","sourcesContent":["import React from \"react\";\nimport { Card, Button } from \"react-bootstrap\";\nimport { Enemy, Effect, EnemyStats } from \"../utils/types\";\nimport { Seq } from \"immutable\";\n\nconst skillPercents = (effects: Effect[]) =>\n  Seq(effects).countBy((e) => e.display).toArray().map(([display, v], idx) => {\n    const { range, priority } = effects.find(a => a.display === display)!!;\n    return <>[{(v / effects.length * 100).toFixed(2)}%] {display} ⏱:{priority} 🏹:{range.length === 5 ? 'Any' : range.map(a => a + 1).join(\",\")}<br key={idx} /></>\n  });\n\nconst EnemyCard: React.FC<{\n  enemy: Enemy;\n  enemyStats: EnemyStats;\n  latestAttack: string | undefined;\n  isSelected?: boolean;\n  onSelect: () => void;\n  canAct: boolean;\n}> = ({ enemy, enemyStats, isSelected, onSelect, latestAttack, canAct }) => (\n  <Card bg={isSelected ? \"info\" : undefined}>\n    <Card.Body>\n      <Card.Title>{enemy.lore.name} {enemyStats.hp > 0 ? \"\" : (<b>💀DEAD💀</b>)}</Card.Title>\n      <Card.Text>❤:{enemyStats.hp} 🏹:{enemyStats.distance}</Card.Text>\n      {latestAttack && (<Card.Text>Latest attack: {latestAttack}</Card.Text>)}\n      <Card.Text>\n        Next attack prediction:\n        <br />\n        {skillPercents(enemy.rolls[enemyStats.distance - 1].map((idx) => enemy.effects[idx]))}\n        <br />\n      </Card.Text>\n      {canAct && (<Button disabled={isSelected} onClick={onSelect}>Select</Button>)}\n    </Card.Body>\n  </Card>\n);\n\nexport default EnemyCard;\n","import React from \"react\";\nimport { Card, Button, Stack } from \"react-bootstrap\";\nimport { Player, PlayerStats } from \"../utils/types\";\n\nconst PlayerCard: React.FC<{\n  selectedButtons: Set<string>,\n  player: Player;\n  playerStats: PlayerStats;\n  canAct: boolean;\n  lastAction: string | undefined;\n  onClickEffect: (index: number) => void;\n}> = ({ selectedButtons, player, playerStats, onClickEffect, canAct, lastAction }) => (\n  <Card>\n    <Card.Body>\n      <Card.Title>{player.lore.name}{playerStats.hp > 0 ? \"\" : (<b> 💀DEAD💀 </b>)}</Card.Title>\n      <Card.Subtitle className=\"mb-2 text-muted\">\n        {player.build.class.display}\n      </Card.Subtitle>\n      <Card.Text>{playerStats.hp} ❤ {playerStats.stamina} 💪</Card.Text>\n      {lastAction && (<Card.Text>Last action: {lastAction}</Card.Text>)}\n    </Card.Body>\n    {canAct && (<Card.Body>\n      <Stack direction=\"horizontal\" gap={2}>\n        {Object.values(player.build)\n          .flatMap((a) => a.effects ?? [])\n          .map((e, idx) => (<div>\n            <Button\n              key={e.display}\n              active={selectedButtons.has(e.display)}\n              disabled={playerStats.stamina < e.stamina}\n              onClick={(_) => onClickEffect(idx)}\n            >\n              [<i>{idx + 1}</i>] <b>{e.display}</b>\n            </Button>\n            <Card.Text>💪:{e.stamina} ⏱:{e.priority}<br />🏹:{e.range.length === 5 ? 'Any' : e.range.map(a => a + 1).join(\",\")}</Card.Text>\n          </div>\n          ))}\n      </Stack>\n    </Card.Body>)}\n  </Card>\n);\n\nexport default PlayerCard;\n","import { Chance } from \"chance\";\nimport { Subtract } from \"type-fest/source/internal\";\nimport { actions } from \"./playGame\";\nimport { Build, Distances, Effect, EffectFun, EffectFunRepo, Enemy, EnemyStats, Item, MonsterTarget, Player, PlayerStats, Ranges, Snapshot, StatsFunRepo, UpTo, Play, MultiTurnEffectFunRepo, MultiTurnEffectFun } from \"./types\";\n\nexport const startState = (play: Play): Snapshot => play.states[0];\nexport const previousState = (play: Play): Snapshot => play.states[play.states.length - 1];\n\nexport const chain = (...funs: Array<EffectFun>): EffectFun =>\n  // TODO check direction of the fold\n  funs.reduce((acc, value) => (origin, play, newState) => value(origin, play, acc(origin, play, newState)));\n\nexport const chain2 = (...funs: Array<MultiTurnEffectFun>): MultiTurnEffectFun =>\n  // TODO check direction of the fold\n  funs.reduce((acc, value) => (params) => (origin, play, oldState) => {\n    const [newPlay, newState] = acc(params)(origin, play, oldState);\n    return value(params)(origin, newPlay, newState);\n  });\n\nexport const randomEnemy = (): [Enemy, EnemyStats] => new Chance().pickone(enemies);\n\nexport const randomPlayer = (statsOverride?: PlayerStats, buildOverride?: Build): [Player, PlayerStats] => {\n  const rng = new Chance();\n  return [{\n    id: rng.string(),\n    lore: {\n      name: randomName(),\n      age: rng.age(),\n    },\n    build: {\n      basic: rng.pickone(build.basic),\n      class: rng.pickone(build.class),\n      armor: rng.pickone(build.armor),\n      weapon: rng.pickone(build.weapon),\n      offhand: rng.pickone(build.offhand),\n      footwear: rng.pickone(build.footwear),\n      headwear: rng.pickone(build.headwear),\n      charm: rng.pickone(build.charm),\n      ...buildOverride,\n    }\n  }, {\n    hp: 25,\n    stamina: 8,\n    staminaPerTurn: 2,\n    ...statsOverride,\n  }];\n}\n\nexport const makeRange = (...number: UpTo<Subtract<Distances, 1>>[]) => [...new Set(number)] as Ranges;\nexport const allRanges = makeRange(0, 1, 2, 3, 4);\nexport const selfRange = allRanges;\n\nexport const effectDead: Effect = { display: \"DEAD\", priority: 4, effect: \"Monster:Dead\", range: makeRange() };\nexport const effectRepository: EffectFunRepo = {\n  'Monster:Dead': (_origin, _play, newState) => newState,\n  'Basic:Rest': (_origin, _play, newState) => newState,\n  'Basic:Advance': (_origin, _play, newState) => actions.changeDistance(newState, newState.target, -2),\n  'Basic:Retreat': (_origin, _play, newState) => actions.changeDistance(newState, newState.target, 2),\n  'Axe:Chop': (_, play, currentState) => actions.attackMonster(startState(play), currentState, currentState.target, 3),\n  'Axe:Cut': chain(\n    (_, play, currentState) => actions.attackMonster(startState(play), currentState, currentState.target, 3),\n    (origin, _p, currentState) => actions.addEotEffect(currentState, { effect: 'Target:Bleed', origin, parameters: { lifespan: 3, target: currentState.target } })\n  ),\n  'Hook:GetHere': chain(\n    (_, play, currentState) => actions.attackMonster(startState(play), currentState, currentState.target, 3),\n    (_origin, _play, currentState) => actions.changeDistance(currentState, currentState.target, -1),\n  ),\n  'Monster:Swipe': (_, play, currentState) => actions.attackPlayer(startState(play), currentState, 2),\n  'Monster:Roar': (_, play, currentState) => actions.modifyPlayerStamina(startState(play), currentState, -5),\n  'Monster:Jump': (origin, _, currentState) => actions.changeDistance(currentState, origin, -2),\n  'Monster:SummonToro': (origin, _, currentState) => actions.addEotEffect(currentState, { effect: 'Monster:Summon', origin, parameters: { enemy: 1 } }),\n  'BootsOfFlight:EOT': (_, _p, currentState) => currentState.enemies.reduce((s, _m, idx) => actions.changeDistance(s, idx as MonsterTarget, -2), currentState),\n};\n\nexport const multiTurnEffectRepository: MultiTurnEffectFunRepo = {\n  'Target:Bleed': chain2(\n    ({ target }) => (_origin, play, currentState) => [play, target === 'Player' ? actions.attackPlayer(startState(play), currentState, 1) : actions.attackMonster(startState(play), currentState, target, 3)],\n    (params) => (origin, play, currentState) => [play, params.lifespan > 0 ? actions.addEotEffect(currentState, { effect: 'Target:Bleed', origin, parameters: { ...params, lifespan: params.lifespan - 1 } }) : currentState],\n  ),\n  'Monster:Summon': ({ enemy }) => (_, play, currentState) => actions.addEnemy(play, currentState, enemies[enemy][0], enemies[enemy][1]),\n};\n\nexport const statsRepository: StatsFunRepo = {\n  'Charm:ofHealth': (player, enemies) => [{ ...player, hp: player.hp + 10 }, enemies],\n  'Charm:ofHaste': (player, enemies) => [{ ...player, staminaPerTurn: player.staminaPerTurn + 1 }, enemies],\n  'Charm:ofResilience': (player, enemies) => [{ ...player, stamina: player.stamina + 10 }, enemies],\n}\n\nexport const build: Record<\n  string,\n  Item[]\n> = {\n  basic: [\n    {\n      display: \"Basic\",\n      effects: [\n        {\n          display: \"Rest\",\n          effect: \"Basic:Rest\",\n          priority: 4,\n          stamina: 0,\n          range: selfRange,\n        },\n        {\n          display: \"Advance\",\n          effect: \"Basic:Advance\",\n          priority: 4,\n          stamina: 1,\n          range: selfRange,\n        },\n        {\n          display: \"Retreat\",\n          effect: \"Basic:Retreat\",\n          priority: 4,\n          stamina: 1,\n          range: selfRange,\n        }\n      ]\n    }\n  ],\n  class: [\n    {\n      display: \"Warrior\",\n    },\n    {\n      display: \"Mage\",\n    },\n    {\n      display: \"Rogue\",\n    },\n  ],\n  skill: [\n    {\n      display: \"Sturdy\",\n    },\n    {\n      display: \"Nimble\",\n    },\n  ],\n  weapon: [\n    {\n      display: \"Axe\",\n      effects: [\n        {\n          display: \"Chop\",\n          effect: \"Axe:Chop\",\n          priority: 2,\n          stamina: 2,\n          range: makeRange(0, 1),\n        },\n        {\n          display: \"Cut\",\n          effect: \"Axe:Cut\",\n          priority: 3,\n          stamina: 2,\n          range: makeRange(0),\n        },\n      ],\n    },\n  ],\n  offhand: [\n    {\n      display: \"Hook\",\n      effects: [\n        {\n          display: \"Get over here!\",\n          effect: \"Hook:GetHere\",\n          priority: 4,\n          stamina: 3,\n          range: makeRange(2, 3, 4),\n        },\n      ],\n    },\n  ],\n  consumable: [\n    {\n      display: \"Potion\",\n    },\n  ],\n  armor: [\n    {\n      display: \"Heavy\",\n    },\n  ],\n  headgear: [\n    {\n      display: \"Helm\",\n    },\n  ],\n  footwear: [\n    {\n      display: \"Boots of Flight\",\n      eot: [\"BootsOfFlight:EOT\"],\n    },\n  ],\n  charm: [\n    {\n      display: \"of Health\",\n      passive: \"Charm:ofHealth\",\n    },\n    {\n      display: \"of Haste\",\n      passive: \"Charm:ofHaste\",\n    },\n    {\n      display: \"of Resilience\",\n      passive: \"Charm:ofResilience\",\n    },\n  ],\n};\n\nexport const randomName = () => names[Math.floor(Math.random() * names.length)];\n\nexport const enemies: [Enemy, EnemyStats][] = [\n  [{\n    lore: {\n      name: \"Sacapuntas\",\n    },\n    rolls: [\n      [0, 1, 2, 1, 0],\n      [0, 1, 0, 0, 0],\n      [0, 0, 0, 0, 0],\n      [0, 0, 0, 0, 0],\n      [0, 1, 2, 1, 0, 0],\n    ],\n    effects: [\n      { display: \"Swipe\", priority: 3, effect: \"Monster:Swipe\", range: makeRange(0, 1) },\n      { display: \"Roar\", priority: 1, effect: \"Monster:Roar\", range: allRanges },\n      { display: \"Jump\", priority: 2, effect: \"Monster:Jump\", range: makeRange(2, 3, 4) },\n    ],\n  }, {\n    hp: 25,\n    rage: 0,\n    distance: 4,\n  }],\n  [{\n    lore: {\n      name: \"Toro\",\n    },\n    effects: [\n      { display: \"Swipe\", priority: 3, effect: \"Monster:Swipe\", range: allRanges },\n      { display: \"Jump\", priority: 2, effect: \"Monster:Jump\", range: makeRange(2, 3, 4) },\n    ],\n    rolls: [\n      [0, 0, 0, 0, 0],\n      [0, 0, 0, 0, 0],\n      [1, 1, 0, 0, 0],\n      [1, 1, 1, 0, 0],\n      [1, 1, 1, 1, 0],\n    ]\n  }, {\n    hp: 22,\n    rage: 0,\n    distance: 4,\n  }],\n  [{\n    lore: {\n      name: \"Summoner\",\n    },\n    effects: [\n      { display: \"Swipe\", priority: 3, effect: \"Monster:Swipe\", range: makeRange(0, 1) },\n      { display: \"Jump\", priority: 3, effect: \"Monster:Jump\", range: allRanges },\n      { display: \"Summon Toro\", priority: 4, effect: \"Monster:SummonToro\", range: makeRange(2, 3, 4) },\n    ],\n    rolls: [\n      [0, 0, 0, 0, 0],\n      [1, 0, 0, 0, 0],\n      [1, 1, 2, 0, 0],\n      [1, 1, 2, 0, 0],\n      [1, 2, 2, 0, 0],\n    ]\n  }, {\n    hp: 30,\n    rage: 0,\n    distance: 4,\n  }]\n];\n\nconst names = [\n  \"Lydan\",\n  \"Syrin\",\n  \"Ptorik\",\n  \"Joz\",\n  \"Varog\",\n  \"Gethrod\",\n  \"Hezra\",\n  \"Feron\",\n  \"Ophni\",\n  \"Colborn\",\n  \"Fintis\",\n  \"Gatlin\",\n  \"Jinto\",\n  \"Hagalbar\",\n  \"Krinn\",\n  \"Lenox\",\n  \"Revvyn\",\n  \"Hodus\",\n  \"Dimian\",\n  \"Paskel\",\n  \"Kontas\",\n  \"Weston\",\n  \"Azamarr \",\n  \"Jather \",\n  \"Tekren \",\n  \"Jareth\",\n  \"Adon\",\n  \"Zaden\",\n  \"Eune \",\n  \"Graff\",\n  \"Tez\",\n  \"Jessop\",\n  \"Gunnar\",\n  \"Pike\",\n  \"Domnhar\",\n  \"Baske\",\n  \"Jerrick\",\n  \"Mavrek\",\n  \"Riordan\",\n  \"Wulfe\",\n  \"Straus\",\n  \"Tyvrik \",\n  \"Henndar\",\n  \"Favroe\",\n  \"Whit\",\n  \"Jaris\",\n  \"Renham\",\n  \"Kagran\",\n  \"Lassrin \",\n  \"Vadim\",\n  \"Arlo\",\n  \"Quintis\",\n  \"Vale\",\n  \"Caelan\",\n  \"Yorjan\",\n  \"Khron\",\n  \"Ishmael\",\n  \"Jakrin\",\n  \"Fangar\",\n  \"Roux\",\n  \"Baxar\",\n  \"Hawke\",\n  \"Gatlen\",\n  \"Barak\",\n  \"Nazim\",\n  \"Kadric\",\n  \"Paquin\",\n  \"Kent\",\n  \"Moki\",\n  \"Rankar\",\n  \"Lothe\",\n  \"Ryven\",\n  \"Clawsen\",\n  \"Pakker\",\n  \"Embre\",\n  \"Cassian\",\n  \"Verssek\",\n  \"Dagfinn\",\n  \"Ebraheim\",\n  \"Nesso\",\n  \"Eldermar\",\n  \"Rivik\",\n  \"Rourke\",\n  \"Barton\",\n  \"Hemm\",\n  \"Sarkin\",\n  \"Blaiz \",\n  \"Talon\",\n  \"Agro\",\n  \"Zagaroth\",\n  \"Turrek\",\n  \"Esdel\",\n  \"Lustros\",\n  \"Zenner\",\n  \"Baashar \",\n  \"Dagrod \",\n  \"Gentar\",\n  \"Feston\",\n  \"Syrana\",\n  \"Resha\",\n  \"Varin\",\n  \"Wren\",\n  \"Yuni\",\n  \"Talis\",\n  \"Kessa\",\n  \"Magaltie\",\n  \"Aeris\",\n  \"Desmina\",\n  \"Krynna\",\n  \"Asralyn \",\n  \"Herra\",\n  \"Pret\",\n  \"Kory\",\n  \"Afia\",\n  \"Tessel\",\n  \"Rhiannon\",\n  \"Zara\",\n  \"Jesi\",\n  \"Belen\",\n  \"Rei\",\n  \"Ciscra\",\n  \"Temy\",\n  \"Renalee \",\n  \"Estyn\",\n  \"Maarika\",\n  \"Lynorr\",\n  \"Tiv\",\n  \"Annihya\",\n  \"Semet\",\n  \"Tamrin\",\n  \"Antia\",\n  \"Reslyn\",\n  \"Basak\",\n  \"Vixra\",\n  \"Pekka \",\n  \"Xavia\",\n  \"Beatha \",\n  \"Yarri\",\n  \"Liris\",\n  \"Sonali\",\n  \"Razra \",\n  \"Soko\",\n  \"Maeve\",\n  \"Everen\",\n  \"Yelina\",\n  \"Morwena\",\n  \"Hagar\",\n  \"Palra\",\n  \"Elysa\",\n  \"Sage\",\n  \"Ketra\",\n  \"Lynx\",\n  \"Agama\",\n  \"Thesra \",\n  \"Tezani\",\n  \"Ralia\",\n  \"Esmee\",\n  \"Heron\",\n  \"Naima\",\n  \"Rydna \",\n  \"Sparrow\",\n  \"Baakshi \",\n  \"Ibera\",\n  \"Phlox\",\n  \"Dessa\",\n  \"Braithe\",\n  \"Taewen\",\n  \"Larke\",\n  \"Silene\",\n  \"Phressa\",\n  \"Esther\",\n  \"Anika\",\n  \"Rasy \",\n  \"Harper\",\n  \"Indie\",\n  \"Vita\",\n  \"Drusila\",\n  \"Minha\",\n  \"Surane\",\n  \"Lassona\",\n  \"Merula\",\n  \"Kye\",\n  \"Jonna\",\n  \"Lyla\",\n  \"Zet\",\n  \"Orett\",\n  \"Naphtalia\",\n  \"Turi\",\n  \"Rhays\",\n  \"Shike\",\n  \"Hartie\",\n  \"Beela\",\n  \"Leska\",\n  \"Vemery \",\n  \"Lunex\",\n  \"Fidess\",\n  \"Tisette\",\n  \"Partha\",\n]","import { Enemies, Player, Snapshot, MonsterTarget, Target, EnemyStats, InventoryEffect, EnemiesStats, PlayerStats, Play, RNG, EffectFun, StatsFun, MultiTurnEffect, Enemy } from \"./types\";\nimport { Seq } from \"immutable\";\nimport { effectDead, effectRepository, multiTurnEffectRepository, previousState, statsRepository } from \"./data\";\nimport { Chance } from \"chance\";\n// @ts-ignore fails on scripts despite having a d.ts file\nimport { toIndexableString } from 'pouchdb-collate';\n\nconst clamp = (num: number, min: number, max: number) =>\n  Math.min(Math.max(num, min), max);\n\n/**\n * @returns min inclusive, max exclusive rand\n */\nfunction turnDeterministicRng(turns: number, randPerTurn: number, monsterSeed: string | number): RNG {\n  const monsterChance = new Chance(monsterSeed);\n  const monsterRng =\n    [...Array(turns).keys()]\n      .map(_ => [...Array(randPerTurn).keys()]\n        .map(_ => monsterChance.floating({ min: 0, max: 1, fixed: 2 })));\n  return monsterRng as RNG;\n}\n\nexport const turnRng = (play: Play, turn: number) => (min: number, max: number): number => {\n  const turnRng = [...play.rng[turn]];\n  return Math.floor(((max - min) * turnRng.pop()!!) + min);\n}\n\nconst updateMonster = (enemies: EnemiesStats, target: Target, override: (stats: EnemyStats) => object): EnemiesStats =>\n  enemies.map((m, idx) =>\n    (idx === target)\n      ? { ...m, ...override(m) }\n      : m) as EnemiesStats;\n\nexport const playerPassives = (player: Player): StatsFun[] =>\n  Object.values(player.build).flatMap((s) => s.passive ?? []).map(i => statsRepository[i]);\n\nexport const playerActions = (player: Player): InventoryEffect[] =>\n  Object.values(player.build).flatMap((s) => s.effects ?? []);\n\nexport const playerBotEffects = (player: Player): EffectFun[] =>\n  Object.values(player.build).flatMap((s) => s.bot ?? []).map((i) => effectRepository[i]);\n\nexport const playerEotEffects = (player: Player): EffectFun[] =>\n  Object.values(player.build).flatMap((s) => s.eot ?? []).map((i) => effectRepository[i]);\n\nexport const actions = {\n  attackMonster: (start: Snapshot, curr: Snapshot, target: MonsterTarget, amount: number): Snapshot =>\n  ({\n    ...curr,\n    enemies: updateMonster(curr.enemies, target, ({ hp }) => ({ hp: clamp(hp - amount, 0, start.enemies[target]!!/* enforced by UI */.hp) })),\n  }),\n  changeDistance: (curr: Snapshot, origin: Target, amount: number): Snapshot =>\n  ({\n    ...curr,\n    enemies: updateMonster(curr.enemies, origin, ({ distance }) => ({ distance: clamp(distance + amount, 1, 5) })),\n  }),\n\n  attackPlayer: (start: Snapshot, curr: Snapshot, amount: number): Snapshot =>\n  ({\n    ...curr,\n    player: {\n      ...curr.player,\n      hp: clamp(curr.player.hp - amount, 0, start.player.hp)\n    },\n  }),\n  modifyPlayerStamina: (\n    start: Snapshot,\n    curr: Snapshot,\n    amount: number,\n  ): Snapshot =>\n  ({\n    ...curr,\n    player: {\n      ...curr.player,\n      stamina: clamp(curr.player.stamina + amount, 0, start.player.stamina),\n    },\n  }),\n\n  addEotEffect: (\n    curr: Snapshot,\n    effect: MultiTurnEffect,\n  ): Snapshot => ({\n    ...curr,\n    eot: [...(curr.eot ?? []), effect],\n  }),\n  addBotEffect: (\n    curr: Snapshot,\n    effect: MultiTurnEffect,\n  ): Snapshot => ({\n    ...curr,\n    bot: [...(curr.eot ?? []), effect],\n  }),\n\n  addEnemy: (\n    play: Play,\n    curr: Snapshot,\n    enemy: Enemy,\n    enemyStats: EnemyStats,\n  ): [Play, Snapshot] => {\n    return play.enemies.length < 5\n      ? [{\n        ...play,\n        enemies: [...play.enemies, enemy] as Enemies,\n      }, {\n        ...curr,\n        enemies: [...curr.enemies, enemyStats] as EnemiesStats\n      }]\n      : [play, curr];\n  }\n};\n\nexport default function play(player: Player, playerStats: PlayerStats, enemies: Enemies, enemiesStats: EnemiesStats, turns: number, seed: number | string, randPerTurn: number = 20): Play {\n  const [playerGameStats, enemyGameStats] = playerPassives(player).reduce(([p, e], fun) => fun(p, e), [playerStats, enemiesStats] as const);\n  return {\n    player,\n    enemies,\n    states: [{\n      player: playerGameStats,\n      enemies: enemyGameStats,\n      target: 0,\n      lastAttacks: []\n    }],\n    rng: turnDeterministicRng(turns, randPerTurn, seed),\n    turns,\n    id: toIndexableString([player, enemies, turns, seed]),\n    seed,\n  };\n}\n\nconst reducePlayerFuns = (play: Play, funs: EffectFun[], s: Snapshot): Snapshot =>\n  funs.reduce((acc, f) => f('Player', play, acc), s);\n\nconst reduceMultiTurnFuns = (funs: MultiTurnEffect[], p: Play, s: Snapshot): [Play, Snapshot] =>\n  funs.reduce(\n    ([play, snap], { effect, origin, parameters }) =>\n      multiTurnEffectRepository[effect](parameters)(origin, play, snap),\n    [p, s]);\n\nexport const handlePlayerEffect = (play: Play, index: number): Play => {\n  const { enemies, player, bot, eot } = previousState(play);\n  const playerSkills = playerActions(play.player);\n  const usedSkill = playerSkills[index];\n\n  // BOT\n  const playerBot = playerBotEffects(play.player);\n  const preBotState: Snapshot =\n    actions.modifyPlayerStamina(play.states[0], previousState(play), player.staminaPerTurn - usedSkill.stamina);\n  const [postBotPlay, postBotState] = reduceMultiTurnFuns(bot ?? [], play, preBotState);\n  const postPlayerBotState = reducePlayerFuns(postBotPlay, playerBot, postBotState);\n\n  // Turn\n  const rand = turnRng(play, play.states.length - 1);\n  const functions = Seq(play.enemies).zip(Seq(enemies))\n    .map(([e, stats], idx) =>\n      [idx as Target,\n      stats.hp > 0\n        ? e.effects[e.rolls[stats.distance - 1][rand(0, e.rolls[stats.distance - 1].length)]]\n        : effectDead] as const)\n    .concat([['Player' as Target, usedSkill] as const])\n    .sortBy(([_origin, effect]) => effect.priority);\n\n  const [newState, lastAttacks] =\n    functions.reduce((acc, value) => {\n      const [origin, effect] = value;\n      const [oldState, lastAttacks] = acc;\n      const target = origin === 'Player' ? postPlayerBotState.target : origin;\n      const isInRange = new Set([...effect.range]).has(postPlayerBotState.enemies[target]?.distance!!);\n      return isInRange\n        ? [effectRepository[effect.effect](origin, postBotPlay, oldState), [...lastAttacks, [origin, effect.display] as [Target, string]]]\n        : [oldState, [...lastAttacks, [origin, `${effect.display} ❌❌WHIFF❌❌`] as [Target, string]]];\n    }, [postPlayerBotState, [] as [Target, string][]]);\n\n  // EOT\n  const preEotState = { ...newState, lastAttacks };\n  const playerEot = playerEotEffects(play.player);\n  const postPlayerEotState = reducePlayerFuns(postBotPlay, playerEot, preEotState);\n  const [postEotPlay, postEotState] = reduceMultiTurnFuns(eot ?? [], postBotPlay, postPlayerEotState);\n\n  return {\n    ...postEotPlay,\n    states: [...postEotPlay.states, postEotState],\n  };\n};\n\nexport const setSelected = (play: Play, target: MonsterTarget): Play => {\n  play.states[play.states.length - 1].target = target;\n  return {\n    ...play,\n    states: [...play.states],\n  };\n}\n","import { Container, Row, Col, Card } from \"react-bootstrap\";\n\nimport { MonsterTarget, Play } from \"../utils/types\";\n\nimport EnemyCard from \"./Enemy\";\nimport PlayerCard from \"./Player\";\nimport usePressedKeys from \"../hooks/usePressedKeys\";\nimport { playerActions } from \"../utils/playGame\";\nimport { Seq } from \"immutable\";\nimport { previousState } from \"../utils/data\";\nimport { Button } from \"react-bootstrap\";\n\nexport type GameProps = {\n  game: Play;\n  setSelected: (target: MonsterTarget) => void;\n  handlePlayerEffect: (index: number) => void,\n  solveGame: (iterations: number) => void,\n  hint: (iterations: number) => void,\n  undo: () => void\n  redo: (() => void) | undefined;\n};\n\nconst Game = ({ handlePlayerEffect, setSelected, game, solveGame, undo, redo, hint }: GameProps): JSX.Element => {\n  const { player, enemies } = game;\n  const { player: playerStats, enemies: enemiesStats, target, lastAttacks } = previousState(game);\n\n  const playerSkills = playerActions(player);\n  const monsterHealth = enemiesStats.reduce((acc, m) => m.hp + acc, 0);\n  const isPlayerAlive = playerStats.hp > 0;\n  const areMonstersAlive = monsterHealth > 0;\n  const endGame = game.states.length <= game.turns;\n  const canAct = isPlayerAlive && areMonstersAlive && endGame;\n\n  const pressed = usePressedKeys((key) => {\n    if (!canAct) return;\n    const valNum = parseInt(key);\n    if (valNum > 0 && valNum <= playerSkills.length) {\n      const hasStamina = playerSkills[valNum - 1].stamina <= playerStats.stamina;\n      if (!hasStamina) return;\n      handlePlayerEffect(valNum - 1);\n    }\n  });\n\n  const selectedButtons = new Set<string>([...pressed].flatMap((key: string) => {\n    const valNum = parseInt(key);\n    if (valNum > 0 && valNum <= playerSkills.length) {\n      return [playerSkills[valNum - 1].display];\n    } else {\n      return [];\n    }\n  }));\n\n  return (\n    <Container fluid>\n      <Row className=\"justify-content-center align-items-flex-start\">\n        <Col sm={12} md={8}>\n          <Row>\n            <Card.Title>\n              Turn {game.states.length} out of {game.turns} {!isPlayerAlive ? (<b>❌❌DEFEAT❌❌</b>) : !areMonstersAlive ? (<b>🎉🎉VICTORY🎉🎉</b>) : \"\"}\n            </Card.Title>\n          </Row>\n          <Row>\n            <Col>\n              <PlayerCard\n                player={player}\n                playerStats={playerStats}\n                onClickEffect={handlePlayerEffect}\n                selectedButtons={selectedButtons}\n                lastAction={(lastAttacks.find(a => a[0] === 'Player') ?? [undefined, undefined])[1]}\n                canAct={canAct} />\n            </Col>\n          </Row>\n          <Row className=\"mt-2 g-2\">\n            {Seq(enemies).zip(Seq(enemiesStats)).map(([enemy, stats], idx) => (\n              <Col key={idx} xs={6} md={4}>\n                <EnemyCard\n                  key={idx}\n                  enemyStats={stats}\n                  enemy={enemy}\n                  canAct={canAct}\n                  latestAttack={Seq(lastAttacks).filter(([target, _]) => target === idx).map(v => v[1]).first()}\n                  isSelected={idx === target}\n                  onSelect={() => setSelected(idx as MonsterTarget)}\n                />\n              </Col>\n            ))}\n          </Row>\n          <Row>\n            {game.states.length > 1 && (<Button onClick={(_) => undo()}>Undo ↩</Button>)}\n            {redo && (<Button onClick={(_) => redo()}>Redo ↪</Button>)}\n            <Button onClick={(_) => hint(100)}>Hint</Button>\n            <Button onClick={(_) => solveGame(100)}>Solve ⌛</Button>\n            <Button onClick={(_) => solveGame(1000)}>Solve thoroughly ⌛⌛⌛</Button>\n          </Row>\n        </Col>\n      </Row>\n    </Container>\n  );\n};\n\nexport default Game;\n","import { useEffect, useCallback, useState } from \"react\";\n\nexport default function usePressedKeys(onUp: (e: string) => void): Set<string> {\n\n  const [pressedKeys, updatePressedKeys] = useState(new Set<string>());\n\n  const downHandler = ({ key }: { key: string }) => {\n    updatePressedKeys((set) => new Set([...set, key]));\n  }\n\n  const upHandler = useCallback(({ key }: { key: string }) => {\n    updatePressedKeys((set) => new Set([...set].filter((k) => k !== key)));\n    onUp(key);\n  }, [onUp]);\n\n  useEffect(() => {\n    window.addEventListener(\"keydown\", downHandler);\n    window.addEventListener(\"keyup\", upHandler);\n\n    return () => {\n      window.removeEventListener(\"keydown\", downHandler);\n      window.removeEventListener(\"keyup\", upHandler);\n    };\n  }, [upHandler]);\n\n  return pressedKeys;\n}","import React from \"react\";\nimport { Container, Row, Form, Button, ButtonGroup, Navbar } from \"react-bootstrap\";\nimport useScroll from \"../hooks/useScroll\";\n\nimport { Player, PlayerStats } from \"../utils/types\";\nimport { build, randomName } from \"../utils/data\";\nimport Chance from 'chance';\n\nconst selects = Object.entries(build).map(([type, options]) => ({\n  type,\n  options: options.map(({ display }, value) => ({\n    display,\n    value,\n  })),\n}));\n\nconst PlayerBuilder = ({ onSave }: { onSave: (player: Player, playerStats: PlayerStats) => void }) => {\n  const [form, setForm] = React.useState<Record<string, number>>(\n    selects.reduce(\n      (acc, { type, options }) => ({\n        ...acc,\n        [type]: options[0].value,\n      }),\n      {},\n    ),\n  );\n  const [lore, setLore] = React.useState({\n    name: randomName(),\n    age: new Chance().age(),\n  });\n  const setField = (field: string, value: number) => {\n    setForm({\n      ...form,\n      [field]: value,\n    });\n  };\n  const onFormSubmit = (e: any) => {\n    e.preventDefault();\n    onSave({\n      id: \"p-1\",\n      lore,\n      build: Object.entries(form).reduce((acc, [type, value]) => {\n        return {\n          ...acc,\n          [type]: build[type][value]\n        }\n      }, { basic: build.basic[0] }),\n    }, {\n      hp: 25,\n      stamina: 8,\n      staminaPerTurn: 2,\n    });\n  };\n  const displayType = (type: string) => <b>{build[type][form[type]].display}</b>;\n  return (\n    <Form onSubmit={onFormSubmit}>\n      <Container fluid style={{ marginBottom: '105px' }}>\n        <Row className=\"g-2\">\n          {selects.map(({ type, options }) =>\n            <ElementPicker\n              setField={(value) => setField(type, value)}\n              section={type}\n              options={options}\n              key={type}\n              isSelected={(value) => form[type] === value} />\n          )}\n        </Row>\n        <Navbar fixed=\"bottom\" bg=\"dark\" variant=\"dark\" style={{ maxHeight: '100px' }}>\n          <Container>\n            <Navbar.Text>You are <i onClick={() => setLore((lore) => ({ ...lore, name: randomName() }))}>{lore.name}</i>, the {displayType('skill')} {displayType('class')} {displayType('charm')}<br />who wields a {displayType('weapon')} and a {displayType('offhand')}<br />and wears {displayType('armor')} with {displayType('headgear')} and {displayType('footwear')}</Navbar.Text>\n            <Button type=\"submit\">Pick your foe!</Button>\n          </Container>\n        </ Navbar>\n      </Container >\n    </Form >\n  );\n};\n\nconst ElementPicker = ({ isSelected, section, options, setField }: {\n  options: {\n    display: string;\n    value: number;\n  }[], isSelected: (value: number) => boolean, setField: (value: number) => void, section: string\n}) => {\n  const [scrollTo, scrollRef] = useScroll({\n    behavior: 'smooth',\n    block: 'start',\n  });\n\n  return (\n    <Row>\n      <Form.Label>{section}</Form.Label>\n      <br />\n      <ButtonGroup size=\"lg\" className=\"mb-2\">\n        {options.map(({ display, value }) => (\n          <Button\n            key={value}\n            name={section}\n            id={`${value}`}\n            variant={isSelected(value) ? 'primary' : 'secondary'}\n            onClick={() => { setField(value); scrollTo(); }}\n          >{display}</Button>\n        ))}\n      </ButtonGroup>\n      <div id={`${section}-scroll`} ref={scrollRef} />\n    </Row>\n  );\n}\n\nexport default PlayerBuilder;\n","import { Ref, useRef } from \"react\";\n\ntype ScrollToFn = () => void;\n\nexport default function useScroll<T extends Element>(scrollParams: ScrollIntoViewOptions): [ScrollToFn, Ref<any>] {\n  const elRef = useRef<T>(null);\n  const executeScroll = () => elRef.current!.scrollIntoView(scrollParams);\n\n  return [executeScroll, elRef];\n};\n","import React from \"react\";\nimport { Container, ButtonGroup, Form, Button, Navbar } from \"react-bootstrap\";\n\nimport { Player, Enemies, Enemy, EnemiesStats, EnemyStats } from \"../utils/types\";\nimport { enemies, randomEnemy } from \"../utils/data\";\n\nconst EncounterBuilder = ({ player, onSave }: { player: Player, onSave: (enemies: Enemies, enemiesStats: EnemiesStats) => void }) => {\n  const [encounter, setEncounter] = React.useState<[Enemy, EnemyStats][]>([]);\n  const onFormSubmit = (e: any) => {\n    e.preventDefault();\n    const enemies = encounter.map(a => a[0]);\n    const enemiesStats = encounter.map(a => a[1]);\n    // Size enforced by UI\n    onSave(enemies as Enemies, enemiesStats as EnemiesStats);\n  };\n  const displayType = (type: string) => <b>{player.build[type].display}</b>;\n  return (\n    <Form onSubmit={onFormSubmit}>\n      <Container fluid style={{ marginBottom: encounter.length > 0 ? '205px' : '105px' }}>\n        <ButtonGroup size=\"lg\" className=\"mb-2\">\n          {enemies.map((enemy) =>\n            <Button\n              key={enemy[0].lore.name}\n              disabled={encounter.length > 4}\n              onClick={() => setEncounter((e) => [...e, enemy])}\n            >{enemy[0].lore.name}</Button>\n          )}\n        </ButtonGroup>\n      </Container >\n      {\n        encounter.length > 0 &&\n        <Navbar fixed=\"bottom\" bg=\"dark\" variant=\"dark\" style={{ marginBottom: '100px' }}>\n          <Container fluid>\n            <ButtonGroup size=\"sm\" className=\"mb-2\">\n              {encounter.map((enemy, idx) => <Button key={`${enemy[0].lore.name}-${idx}`} onClick={() => setEncounter((e) => { let found = false; return e.filter((m) => (found || m[0].lore.name !== enemy[0].lore.name) || !(found = true)); })}>{enemy[0].lore.name}</Button>)}\n            </ButtonGroup>\n          </Container>\n        </ Navbar>\n      }\n      <Navbar fixed=\"bottom\" bg=\"dark\" variant=\"dark\" style={{ maxHeight: '100px' }}>\n        <Container>\n          <Navbar.Text>You are <i>{player.lore.name}</i>, the {displayType('skill')} {displayType('class')} {displayType('charm')}<br />who wields a {displayType('weapon')} and a {displayType('offhand')}<br />and wears {displayType('armor')} with {displayType('headgear')} and {displayType('footwear')}</Navbar.Text>\n          <ButtonGroup>\n            <Button\n              disabled={encounter.length < 0 || encounter.length > 5}\n              onClick={(_) => setEncounter((e) => [...e, randomEnemy()])}>\n              Add Random\n            </Button>\n            <Button type=\"submit\" disabled={encounter.length < 1 || encounter.length > 5}>To Battle!</Button>\n          </ButtonGroup>\n        </Container>\n      </ Navbar>\n    </Form >\n  );\n};\n\nexport default EncounterBuilder;\n","export default function geneticAlgorithmConstructor(options) {\n\n    function settingDefaults() {\n        return {\n\n            mutationFunction: function (phenotype) { return phenotype },\n\n            crossoverFunction: function (a, b) { return [a, b] },\n\n            fitnessFunction: function (phenotype) { return 0 },\n\n            doesABeatBFunction: undefined,\n\n            population: [],\n            populationSize: 100,\n        }\n    }\n\n    function settingWithDefaults(settings, defaults) {\n        settings = settings || {}\n\n        settings.mutationFunction = settings.mutationFunction || defaults.mutationFunction\n        settings.crossoverFunction = settings.crossoverFunction || defaults.crossoverFunction\n        settings.fitnessFunction = settings.fitnessFunction || defaults.fitnessFunction\n\n        settings.doesABeatBFunction = settings.doesABeatBFunction || defaults.doesABeatBFunction\n\n        settings.population = settings.population || defaults.population\n        if (settings.population.length <= 0) throw Error(\"population must be an array and contain at least 1 phenotypes\")\n\n        settings.populationSize = settings.populationSize || defaults.populationSize\n        if (settings.populationSize <= 0) throw Error(\"populationSize must be greater than 0\")\n\n        return settings\n    }\n\n    var settings = settingWithDefaults(options, settingDefaults())\n\n    function populate() {\n        var size = settings.population.length\n        while (settings.population.length < settings.populationSize) {\n            const rand = Math.floor(Math.random() * size);\n            settings.population.push(\n                mutate(\n                    cloneJSON(settings.population[Math.floor(rand)])\n                )\n            )\n        }\n    }\n\n    function cloneJSON(object) {\n        return JSON.parse(JSON.stringify(object))\n    }\n\n    function mutate(phenotype) {\n        return settings.mutationFunction(cloneJSON(phenotype))\n    }\n\n    function crossover(phenotype) {\n        phenotype = cloneJSON(phenotype)\n        var mate = settings.population[Math.floor(Math.random() * settings.population.length)]\n        mate = cloneJSON(mate)\n        return settings.crossoverFunction(phenotype, mate)[0]\n    }\n\n    function doesABeatB(a, b) {\n        if (settings.doesABeatBFunction) {\n            return settings.doesABeatBFunction(a, b)\n        } else {\n            return settings.fitnessFunction(a) >= settings.fitnessFunction(b)\n        }\n    }\n\n    function compete() {\n        var nextGeneration = []\n\n        for (var p = 0; p < settings.population.length - 1; p += 2) {\n            var phenotype = settings.population[p];\n            var competitor = settings.population[p + 1];\n\n            nextGeneration.push(phenotype)\n            if (doesABeatB(phenotype, competitor)) {\n                if (Math.random() < 0.5) {\n                    nextGeneration.push(mutate(phenotype))\n                } else {\n                    nextGeneration.push(crossover(phenotype))\n                }\n            } else {\n                nextGeneration.push(competitor)\n            }\n        }\n\n        settings.population = nextGeneration;\n    }\n\n\n\n    function randomizePopulationOrder() {\n\n        for (var index = 0; index < settings.population.length; index++) {\n            var otherIndex = Math.floor(Math.random() * settings.population.length)\n            var temp = settings.population[otherIndex]\n            settings.population[otherIndex] = settings.population[index]\n            settings.population[index] = temp\n        }\n    }\n\n    return {\n        evolve: function (options) {\n\n            if (options) {\n                settings = settingWithDefaults(options, settings)\n            }\n\n            populate()\n            randomizePopulationOrder()\n            compete()\n            return this\n        },\n        best: function () {\n            var scored = this.scoredPopulation()\n            var result = scored.reduce(function (a, b) {\n                return a.score >= b.score ? a : b\n            }, scored[0]).phenotype\n            return cloneJSON(result)\n        },\n        bestScore: function () {\n            return settings.fitnessFunction(this.best())\n        },\n        population: function () {\n            return cloneJSON(this.config().population)\n        },\n        scoredPopulation: function () {\n            return this.population().map(function (phenotype) {\n                return {\n                    phenotype: cloneJSON(phenotype),\n                    score: settings.fitnessFunction(phenotype)\n                }\n            })\n        },\n        config: function () {\n            return cloneJSON(settings)\n        },\n        clone: function (options) {\n            return geneticAlgorithmConstructor(\n                settingWithDefaults(options,\n                    settingWithDefaults(this.config(), settings)\n                )\n            )\n        }\n    }\n}\n","import GeneticAlgorithmConstructor, { GeneticAlgorithmConfig, ScoredPhenotype } from '../geneticalgorithm/geneticalgorithm';\nimport { handlePlayerEffect, playerActions, setSelected } from '../utils/playGame';\nimport Chance from 'chance';\nimport { MonsterTarget, Play } from '../utils/types';\nimport { previousState } from '../utils/data';\nimport prettyjson from 'prettyjson';\nimport { Seq } from 'immutable';\n\nexport type TinkererOptions = typeof defaultTinkererOptions & { turns?: number };\n\nexport const defaultTinkererOptions = {\n  playerSeed: \"Miau\",\n  weights: { monster: 0.70, player: 0.125, turn: 0.05, stamina: 0.075 },\n  debug: false,\n};\n\nexport const gameRender = (results: ScoredPhenotype<Play>[]): string => {\n  const best: ScoredPhenotype<Play> = Seq(results).maxBy(a => a.score)!!;\n  const lastState = previousState(best.phenotype);\n  return `BEST BY ${best.score} in ${best.phenotype.states.length - 1} turns\\n` +\n    prettyjson.render([\n      lastState.lastAttacks.flatMap(([target, id]) => [target === 'Player' ? 'Player' : `[${target}] ${best.phenotype.enemies[target]!!.lore.name}`, id]),\n      Seq(best.phenotype.enemies).zip(Seq(lastState.enemies)).flatMap(([enemy, stats], idx) => [`[${idx}] ${enemy.lore.name}`, stats]).toArray(),\n      lastState.player,\n    ]);\n}\n\nexport default function tinkerer(play: Play, iter: number, optionsOverride?: Partial<TinkererOptions>): ScoredPhenotype<Play>[] {\n  const options: TinkererOptions = { ...defaultTinkererOptions, ...optionsOverride };\n  const range = [...Array(iter).keys()];\n  const rand = new Chance(options.playerSeed);\n  const actions = playerActions(play.player);\n  const config: GeneticAlgorithmConfig<Play> = {\n    mutationFunction: (oldPlay) => {\n      const latestState = previousState(oldPlay);\n      const monsterHealth = latestState.enemies.reduce((acc, monster) => acc + monster.hp, 0);\n      const playerHealth = latestState.player.hp;\n      if (playerHealth === 0 || monsterHealth === 0) {\n        return oldPlay;\n      }\n      let newPlay = oldPlay;\n      while (rand.d6() === 6 || (previousState(newPlay).enemies[previousState(newPlay).target]?.hp ?? 0) <= 0) {\n        newPlay = setSelected(newPlay, rand.natural({ min: 0, max: previousState(newPlay).enemies.length - 1 }) as MonsterTarget);\n      }\n      const latest = previousState(newPlay);\n      const unavailable = actions.map((a, idx) => [a, idx] as const).filter(([a, _]) => a.stamina > latest.player.stamina).map(([_, idx]) => idx);\n      newPlay = handlePlayerEffect(\n        newPlay,\n        rand.natural({ min: 0, max: actions.length - 1, exclude: unavailable })\n      );\n      return newPlay;\n    },\n    fitnessFunction: (play) => {\n      const latestState = previousState(play);\n      const monsterHealth = latestState.enemies.reduce((acc, monster) => acc + monster.hp, 0);\n      const playerHealth = latestState.player.hp;\n      const playerStamina = latestState.player.stamina;\n      const startPlayerHealth = play.states[0].player.hp;\n      const startPlayerStamina = play.states[0].player.hp;\n      const startMonsterHealth = play.states[0].enemies.reduce((acc, monster) => acc + monster.hp, 0);\n\n      const monsterKillingFitness = ((startMonsterHealth - monsterHealth) / startMonsterHealth);\n      const playerAlivenessFitness = (playerHealth / startPlayerHealth);\n      const killSpeedFitness = (play.turns - play.states.length) / play.turns;\n      const staminaFitness = (playerStamina / startPlayerStamina);\n\n      const fitness = (monsterKillingFitness * options.weights.monster) + (playerAlivenessFitness * options.weights.player) + (killSpeedFitness * options.weights.turn) + (staminaFitness * options.weights.stamina);\n      if (options.debug) {\n        console.log(`MH: ${monsterHealth} | PH: ${playerHealth} | TR: ${play.states.length}\\nFitness: ${fitness} | MF: ${monsterKillingFitness} | PF: ${playerAlivenessFitness} | SF: ${staminaFitness} | TF: ${killSpeedFitness}\\nWeights: ${JSON.stringify(options.weights)}`);\n      }\n      return fitness;\n    },\n    population: range.map((_) => play),\n    populationSize: iter,\n  }\n\n  const turns = optionsOverride?.turns ? optionsOverride?.turns : play.turns;\n  let gen = new GeneticAlgorithmConstructor<Play>(config);\n  for (let i = 0; i < turns; i++) {\n    gen = gen.evolve();\n  }\n  return gen.scoredPopulation();\n}\n","import React from \"react\";\nimport \"./App.css\";\n// import { readString } from \"react-papaparse\";\nimport { Enemies, EnemiesStats, Player, PlayerStats, Snapshot, Play } from \"./utils/types\";\n\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport Game from \"./components/Game\";\nimport PlayerBuilder from \"./components/PlayerBuilder\";\nimport EncounterBuilder from \"./components/EncounterBuilder\";\nimport play, { handlePlayerEffect, setSelected } from \"./utils/playGame\";\nimport tinkerer from \"./tinkerer/tinkerer\";\nimport { Seq } from \"immutable\";\nimport { previousState } from \"./utils/data\";\n\ntype AppStatus = \"buildPlayer\" | \"buildEncounter\" | \"game\" | \"endGame\";\n\nfunction App() {\n  const [status, setStatus] = React.useState<AppStatus>(\"buildPlayer\");\n  const [playerBuild, setPlayerBuild] = React.useState<\n    [Player, PlayerStats] | undefined\n  >();\n  const [encounterBuild, setEncounter] = React.useState<[Enemies, EnemiesStats]>();\n  const [game, setGame] = React.useState<Play | undefined>();\n  const [redo, setRedo] = React.useState<Snapshot[]>([]);\n\n  const handleSavePlayer = (player: Player, playerStats: PlayerStats) => {\n    setPlayerBuild([player, playerStats]);\n    setStatus(\"buildEncounter\");\n  };\n  const handleSaveEncounter = (encounter: Enemies, encounterStats: EnemiesStats) => {\n    setEncounter([encounter, encounterStats]);\n    setStatus(\"game\");\n  }\n\n  if (!game && playerBuild && encounterBuild) {\n    const [player, playerStats] = playerBuild;\n    const [encounter, encounterStats] = encounterBuild;\n    const game = play(player, playerStats, encounter, encounterStats, 50, 'PACC');\n    setGame(game);\n  }\n\n  return (\n    <div className=\"App\">\n      {status === \"buildPlayer\" ? (\n        <PlayerBuilder onSave={handleSavePlayer} />\n      ) : null}\n      {status === \"buildEncounter\" && playerBuild ? (\n        <EncounterBuilder\n          player={playerBuild[0]}\n          onSave={handleSaveEncounter}\n        />\n      ) : null}\n      {status === \"game\" && game ? (\n        <Game\n          game={game}\n          redo={redo.length > 0 ? (() => {\n            const newRedo = [...redo];\n            const latest = newRedo.pop() as Snapshot;\n            setRedo(newRedo);\n            setGame({ ...game, states: [...game.states, latest] });\n          }) : undefined}\n          undo={() => {\n            setRedo([...redo, previousState(game)]);\n            setGame({ ...game, states: [game.states[0], ...game.states.slice(1, -1)] });\n          }}\n          setSelected={(idx) => { setRedo([]); setGame(setSelected(game, idx)); }}\n          handlePlayerEffect={(idx) => { setRedo([]); setGame(handlePlayerEffect(game, idx)); }}\n          solveGame={(iterations) => setGame(Seq(tinkerer(game, iterations, { turns: game.turns - game.states.length })).maxBy(a => a.score)!!.phenotype)}\n          hint={(iterations) =>\n            setGame({\n              ...game,\n              states: [...game.states, Seq(tinkerer(game, iterations, { turns: game.turns - game.states.length })).maxBy(a => a.score)!!.phenotype.states[game.states.length]]\n            })\n          }\n        />\n      ) : null}\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://cra.link/PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://cra.link/PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorkerRegistration from './serviceWorkerRegistration';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://cra.link/PWA\nserviceWorkerRegistration.register();\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}