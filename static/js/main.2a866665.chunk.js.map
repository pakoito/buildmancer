{"version":3,"sources":["utils/data.ts","components/Enemy.tsx","components/Player.tsx","components/Game.tsx","hooks/usePressedKeys.tsx","components/PlayerBuilder.tsx","hooks/useScroll.tsx","components/EncounterBuilder.tsx","geneticalgorithm/geneticalgorithm.js","tinkerer/tinkerer.ts","components/menus/Menu.tsx","App.tsx","reportWebVitals.ts","index.tsx","utils/effectRepository.ts","utils/playGame.ts","utils/zFunDump.ts","utils/types.ts","menuStateMachine.ts","serviceWorkerRegistration.ts"],"names":["previousState","play","states","length","randomEnemy","Chance","pickone","enemies","randomBuild","rng","buildOverride","debug","build","basic","class","skill","armor","weapon","offhand","footwear","headgear","charm","consumable","randomPlayer","statsOverride","id","string","lore","name","randomName","age","hp","makeStat","stamina","staminaPerTurn","speed","attack","defence","status","defaultStatus","makeRange","number","Set","allRanges","selfRange","amount","current","max","dodge","active","bleed","turns","stun","weapons","display","tooltip","effects","effectFunCall","priority","range","target","passives","eot","names","Math","floor","random","rolls","distance","enemy","EnemyCard","enemyStats","isSelected","onSelect","latestAttack","canAct","hotkey","Card","bg","undefined","Body","Title","Text","map","idx","Seq","countBy","e","toArray","v","find","a","OverlayTrigger","placement","delay","show","hide","overlay","Popover","Header","as","join","toFixed","Button","disabled","onClick","toUpperCase","PlayerCard","selectedButtons","player","playerStats","onClickEffect","lastAction","disabledSkills","setDisabledSkills","safeEntries","k","bot","hasPassives","reduce","acc","Subtitle","className","ButtonGroup","ToggleButton","checked","has","value","type","variant","onChange","event","currentTarget","delete","add","Stack","direction","gap","Object","values","flatMap","_","clamp","monsterHotkeys","Game","handlePlayerEffect","setSelected","game","solveGame","timeTravel","hint","onMenu","enemiesStats","lastAttacks","useState","isLogShown","setShowLog","handleCloseLog","playerSkills","playerActions","monsterHealth","m","isPlayerAlive","areMonstersAlive","endGame","pressed","onUp","pressedKeys","updatePressedKeys","downHandler","key","set","upHandler","useCallback","filter","useEffect","window","addEventListener","removeEventListener","usePressedKeys","valNum","parseInt","save","undo","redo","blob","Blob","JSON","stringify","saveAs","Date","now","Container","fluid","Row","Col","sm","md","Player","origin","phase","zip","stats","xs","Enemy","Modal","onHide","scrollable","centered","closeButton","s","Footer","systemBuildKeys","ElementPicker","section","options","setField","scrollParams","elRef","useRef","scrollIntoView","useScroll","behavior","block","scrollTo","scrollRef","Form","Label","size","item","ref","PlayerBuilder","onSave","React","form","setForm","setLore","displayType","postBuildPlayerStats","buildPlayer","onSubmit","preventDefault","style","marginBottom","field","Navbar","fixed","maxHeight","EncounterBuilder","encounter","setEncounter","found","geneticAlgorithmConstructor","settingWithDefaults","settings","defaults","mutationFunction","crossoverFunction","fitnessFunction","doesABeatBFunction","population","Error","populationSize","phenotype","b","cloneJSON","object","parse","mutate","crossover","mate","evolve","rand","push","populate","index","otherIndex","temp","randomizePopulationOrder","nextGeneration","p","competitor","compete","this","best","scored","scoredPopulation","score","bestScore","config","clone","defaultTinkererOptions","playerSeed","weights","monster","turn","tinkerer","iter","optionsOverride","rangeArr","actions","oldPlay","latestState","newPlay","d6","natural","min","latest","unavailable","exclude","playerHealth","playerStamina","startPlayerHealth","startPlayerStamina","startMonsterHealth","monsterKillingFitness","playerAlivenessFitness","killSpeedFitness","staminaFitness","fitness","console","log","gen","GeneticAlgorithmConstructor","i","Menu","title","state","SingleGame","onGameEnd","setGame","setRedo","gameState","playState","timeTravelObj","newRedo","pop","slice","iterations","maxBy","App","useMachine","gameMenuMachine","devTools","send","matches","keys","main","on","quick","makeGameNew","context","singleContext","seed","result","single","arcade","survivalContext","arcadeContext","victories","otherEnemy","firstState","makeGameNextLevel","survival","lastState","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","container","document","getElementById","createRoot","render","StrictMode","serviceWorkerRegistration","effectFun","fun","params","oldState","applyPoison","currentState","pipe","changeStatPlayer","changeStatMonster","newState","addBotEffect","engineFunctions","_origin","changeStatusPlayer","o","changeStatusMonster","effectFunRepo","changeDistance","attackMonster","modifyPlayerStamina","gameTarget","attackPlayer","addEnemy","_m","updateMonster","override","updatePlayer","curr","damage","afterDefence","afterArmor","armorSpent","afterBleed","f","updateStatus","removeMonster","currPlay","currSnap","modify","updatePlayerStat","addEotEffect","effect","statsRepository","turnDeterministicRng","randPerTurn","monsterSeed","monsterChance","floating","playerPassives","playerGameStats","enemyGameStats","toIndexableString","reduceFuns","funs","dodgeable","sortBy","priorityBonus","monsterId","targetMonster","isStunnedPlayer","isStunnedMonster","startState","parameters","callEffectFun","extractFunction","effectEotCleanup","effectDead","d","lastTurnState","usedSkill","initialState","preBotPlay","preBotState","postBotPlay","postBotState","entitiesBot","eff","postEntitiesBotPlay","postEntitiesBotState","turnRng","turnFunctions","concat","entitiesEot","playerEotEffects","enemiesEotEffects","postPlayerEotPlay","postPlayerEotState","postEotPlay","postEotState","postCleanup","postCleanupState","scoreGame","hpLoss","staminaLoss","Array","num","Infinity","t","isArray","repo","entries","isDebug","process","inspect","server","WebSocket","Server","port","toMenu","MENU","initial","entry","WIN","LOSE","win","lose","PLAYER","ENCOUNTER","cond","internal","victory","defeat","makeArcadeContext","puzzle","SELECTED","COMPLETE","complete","NEXT","SELECT","makeSurvivalContext","makeSingleContext","createMachine","tsTypes","QUICK","SINGLE","ARCADE","SURVIVAL","guards","isFinal","bumpVictories","assign","_event","bumpScore","reset","c","interpret","onTransition","start","isLocalhost","Boolean","location","hostname","match","register","navigator","URL","href","swUrl","fetch","headers","response","contentType","get","indexOf","serviceWorker","ready","registration","unregister","reload","registerValidSW","catch","checkValidServiceWorker","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","error"],"mappings":"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QAER4B,QAAS,CACP,CAAEF,QAAS,QAASC,QAAS,QAASG,SAAU,EAAGF,QAAS,CAACC,YAAc,CAAC,iBAAkB,CAAEZ,OAAQ,MAAQc,MAAOnB,MAEzH2B,MAAO,CACL,CAAC,GACD,CAAC,GACD,CAAC,GACD,CAAC,GACD,CAAC,KAEF,CACDpC,GAAIC,EAAS,KACboC,SAAU,EACVjC,MAAOH,EAAS,GAChBI,OAAQJ,EAAS,GACjBK,QAASL,EAAS,GAClBM,OAAQC,IAGV,CAAC,CACCZ,KAAM,CACJC,KAAM,QAER4B,QAAS,CACP,CAAEF,QAAS,QAASC,QAAS,QAASG,SAAU,EAAGF,QAAS,CAACC,YAAc,CAAC,iBAAkB,CAAEZ,OAAQ,MAAQc,MAAOnB,MAEzH2B,MAAO,CACL,CAAC,GACD,CAAC,GACD,CAAC,GACD,CAAC,GACD,CAAC,KAEF,CACDpC,GAAIC,EAAS,GACboC,SAAU,EACVjC,MAAOH,EAAS,GAChBI,OAAQJ,EAAS,GACjBK,QAASL,EAAS,GAClBM,OAAQC,KAINwB,EAAQ,CACZ,QACA,QACA,SACA,MACA,QACA,UACA,QACA,QACA,QACA,UACA,SACA,SACA,QACA,WACA,QACA,QACA,SACA,QACA,SACA,SACA,SACA,SACA,UACA,SACA,SACA,SACA,OACA,QACA,OACA,QACA,MACA,SACA,SACA,OACA,UACA,QACA,UACA,SACA,UACA,QACA,SACA,SACA,UACA,SACA,OACA,QACA,SACA,SACA,UACA,QACA,OACA,UACA,OACA,SACA,SACA,QACA,UACA,SACA,SACA,OACA,QACA,QACA,SACA,QACA,QACA,SACA,SACA,OACA,OACA,SACA,QACA,QACA,UACA,SACA,QACA,UACA,UACA,UACA,WACA,QACA,WACA,QACA,SACA,SACA,OACA,SACA,QACA,QACA,OACA,WACA,SACA,QACA,UACA,SACA,UACA,SACA,SACA,SACA,SACA,QACA,QACA,OACA,OACA,QACA,QACA,WACA,QACA,UACA,SACA,UACA,QACA,OACA,OACA,OACA,SACA,WACA,OACA,OACA,QACA,MACA,SACA,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","file":"static/js/main.2a866665.chunk.js","sourcesContent":["import { Chance } from \"chance\";\nimport { Subtract } from \"type-fest/source/internal\";\nimport { Build, Distances, Enemy, EnemyStats, Item, Player, PlayerStats, Ranges, Snapshot, UpTo, Play, effectFunCall, Stat, Status, BuildRepository } from \"./types\";\n\nexport const DEBUG = true;\n\nexport const startState = (play: Play): Snapshot => play.states[0];\nexport const previousState = (play: Play): Snapshot => play.states[play.states.length - 1];\n\nexport const randomEnemy = (): [Enemy, EnemyStats] => new Chance().pickone(enemies);\n\nexport const randomBuild = (rng: Chance.Chance, buildOverride?: Partial<Build>) => ({\n  debug: build.debug[DEBUG ? 1 : 0],\n  basic: rng.pickone(build.basic),\n  class: rng.pickone(build.class),\n  skill: rng.pickone(build.skill),\n  armor: rng.pickone(build.armor),\n  weapon: rng.pickone(build.weapon),\n  offhand: rng.pickone(build.offhand),\n  footwear: rng.pickone(build.footwear),\n  headgear: rng.pickone(build.headgear),\n  charm: rng.pickone(build.charm),\n  consumable: rng.pickone(build.consumable),\n  ...buildOverride,\n});\n\nexport const randomPlayer = (statsOverride?: PlayerStats, buildOverride?: Partial<Build>): [Player, PlayerStats] => {\n  const rng = new Chance();\n  return [{\n    id: rng.string(),\n    lore: {\n      name: randomName(),\n      age: rng.age(),\n    },\n    build: randomBuild(rng, buildOverride)\n  }, {\n    hp: makeStat(10),\n    stamina: makeStat(6),\n    staminaPerTurn: makeStat(2),\n    speed: makeStat(0),\n    attack: makeStat(0),\n    defence: makeStat(0),\n    status: defaultStatus,\n    ...statsOverride,\n  }];\n}\n\nexport const makeRange = (...number: UpTo<Subtract<Distances, 1>>[]) => [...new Set(number)] as Ranges;\nexport const allRanges = makeRange(0, 1, 2, 3, 4);\nexport const selfRange = allRanges;\n\nexport const makeStat = (amount: number): Stat => ({ current: amount, max: amount });\nexport const defaultStatus: Status = {\n  dodge: { active: false },\n  armor: { amount: 0 },\n  bleed: { turns: 0 },\n  stun: { active: false },\n}\n\n\n// TODO\nconst weapons: Item[] = [\n  {\n    display: \"Sword\",\n    tooltip: \"All-rounder\",\n    effects: [\n      {\n        display: \"Slash\",\n        tooltip: \"Swings at the enemy\",\n        effects: [\n          effectFunCall([\"Basic:Attack\", { amount: 2 }])\n        ],\n        priority: 3,\n        stamina: 2,\n        range: makeRange(0, 1),\n      },\n      {\n        display: \"Pommel Hit\",\n        tooltip: \"Deals a quick blow\",\n        effects: [\n          effectFunCall([\"Basic:Attack\", { amount: 2 }])\n        ],\n        priority: 2,\n        stamina: 2,\n        range: makeRange(0),\n      },\n      {\n        display: \"Overhead Slice\",\n        tooltip: \"Moves into melee and deals a heavy blow\",\n        effects: [\n          effectFunCall([\"Basic:Move\", { amount: -1 }]), effectFunCall([\"Basic:Attack\", { amount: 4 }])\n        ],\n        priority: 4,\n        stamina: 3,\n        range: makeRange(1),\n      },\n    ],\n  },\n  {\n    display: \"Greatsword\",\n    tooltip: \"Specialized in big damage\",\n    effects: [\n      {\n        display: \"Rend\",\n        tooltip: \"Swings at the enemy\",\n        effects: [\n          effectFunCall([\"Basic:Attack\", { amount: 3 }])\n        ],\n        priority: 4,\n        stamina: 4,\n        range: makeRange(0, 1),\n      },\n      {\n        display: \"Feint\",\n        tooltip: \"Quick step backwards\",\n        effects: [\n          effectFunCall([\"Basic:Move\", { amount: 1 }])\n        ],\n        priority: 1,\n        stamina: 1,\n        range: makeRange(0, 1),\n      },\n      {\n        display: \"Earth Flattener\",\n        tooltip: \"Charges a monstruous stunning blow\",\n        effects: [\n          effectFunCall([\"Basic:Move\", { amount: 5 }]), effectFunCall(\"Effect:Stun\")\n        ],\n        priority: 4,\n        stamina: 6,\n        range: makeRange(1),\n      },\n    ],\n  },\n  {\n    display: \"Twinblades\",\n    tooltip: \"Specialized in mobility\",\n    effects: [\n      {\n        display: \"Swoosh\",\n        tooltip: \"Deals a strike and moves back\",\n        effects: [\n          effectFunCall([\"Basic:Attack\", { amount: 2 }]),\n          effectFunCall([\"Basic:Move\", { amount: 1 }])\n        ],\n        priority: 2,\n        stamina: 2,\n        range: makeRange(0, 1),\n      },\n      {\n        display: \"Fiuuum\",\n        tooltip: \"Jump attack\",\n        effects: [\n          effectFunCall([\"Basic:Move\", { amount: -2 }]),\n          effectFunCall([\"Basic:Attack\", { amount: 3 }])\n        ],\n        priority: 4,\n        stamina: 3,\n        range: makeRange(2, 3),\n      },\n      {\n        display: \"SwishSwishSwishSwish\",\n        tooltip: \"Deals multiple low damage hits\",\n        effects: [\n          effectFunCall([\"Basic:Attack\", { amount: 1 }]),\n          effectFunCall([\"Basic:Attack\", { amount: 1 }]),\n          effectFunCall([\"Basic:Attack\", { amount: 1 }]),\n          effectFunCall([\"Basic:Attack\", { amount: 1 }])\n        ],\n        priority: 3,\n        stamina: 4,\n        range: makeRange(0),\n      },\n    ],\n  },\n  {\n    display: \"Katana\",\n    tooltip: \"Specialized in bleeding\",\n    effects: [\n      {\n        display: \"Slice & Dice\",\n        tooltip: \"Deals two swift strikes\",\n        effects: [\n          effectFunCall([\"Basic:Attack\", { amount: 1 }]),\n          effectFunCall([\"Basic:Attack\", { amount: 1 }])],\n        priority: 3,\n        stamina: 2,\n        range: makeRange(0, 1),\n      },\n      {\n        display: \"Wakizashi\",\n        tooltip: \"Short sword with a quick attack causing bleeding\",\n        effects: [\n          effectFunCall([\"Basic:Attack\", { amount: 1 }]),\n          effectFunCall([\"Effect:Bleed\", { target: 'Monster', turns: 2 }])\n        ],\n        priority: 2,\n        stamina: 4,\n        range: makeRange(0, 1),\n      },\n      {\n        display: \"Unsheathe\",\n        tooltip: \"Dodges the next attack and deals damage\",\n        effects: [\n          effectFunCall('Effect:Dodge'),\n          effectFunCall([\"Basic:Attack\", { amount: 3 }])\n        ],\n        priority: 1,\n        stamina: 4,\n        range: makeRange(0),\n      },\n    ],\n  },\n  {\n    display: \"Axe\",\n    tooltip: \"Specialized in debuffs\",\n    effects: [\n      {\n        display: \"Chop\",\n        tooltip: \"A slow but reliable attack\",\n        effects: [\n          effectFunCall([\"Basic:Attack\", { amount: 2 }])\n        ],\n        priority: 4,\n        stamina: 3,\n        range: makeRange(0, 1),\n      },\n      {\n        display: \"Aim for the head!\",\n        tooltip: \"Cripples the monster\",\n        effects: [\n          effectFunCall([\"Effect:Defence\", { target: 'Monster', amount: -1 }]),\n          effectFunCall([\"Effect:Bleed\", { target: 'Player', turns: 3 }])\n        ],\n        priority: 4,\n        stamina: 5,\n        range: makeRange(1),\n      },\n      {\n        display: \"Target the limbs!\",\n        tooltip: \"Weakens the monster\",\n        effects: [\n          effectFunCall([\"Effect:Attack\", { target: 'Monster', amount: -1 }]),\n          effectFunCall([\"Effect:Bleed\", { target: 'Player', turns: 3 }])\n        ],\n        priority: 4,\n        stamina: 5,\n        range: makeRange(1),\n      },\n    ],\n  },\n  {\n    display: \"Lance\",\n    tooltip: \"Specialized in mid-range attacks\",\n    effects: [\n      {\n        display: \"Pierce\",\n        tooltip: \"Pokes the enemy\",\n        effects: [\n          effectFunCall([\"Basic:Attack\", { amount: 2 }])\n        ],\n        priority: 3,\n        stamina: 2,\n        range: makeRange(0, 1, 2),\n      },\n      {\n        display: \"Charge!!\",\n        tooltip: \"Runs towards the enemy to deal a massive blow\",\n        effects: [\n          effectFunCall([\"Basic:Move\", { amount: -5 }]), effectFunCall([\"Basic:Attack\", { amount: 4 }])\n        ],\n        priority: 1,\n        stamina: 3,\n        range: makeRange(4),\n      },\n    ],\n  },\n  {\n    display: \"Hammer\",\n    tooltip: \"Specialized in stunning\",\n    effects: [\n      {\n        display: \"Head Banger\",\n        tooltip: \"Hits the enemy in the head\",\n        effects: [\n          effectFunCall([\"Basic:Attack\", { amount: 2 }]),\n          effectFunCall(\"Effect:Stun\")\n        ],\n        priority: 4,\n        stamina: 4,\n        range: makeRange(0),\n      },\n      {\n        display: \"Large swing\",\n        tooltip: \"Uses the inertia of the hammer to safely advance\",\n        effects: [\n          effectFunCall([\"Basic:Move\", { amount: -3 }]),\n          effectFunCall(\"Effect:Stun\")\n        ],\n        priority: 3,\n        stamina: 3,\n        range: makeRange(1, 2, 3),\n      },\n      {\n        display: \"Go for the ankles\",\n        tooltip: \"Slows down the enemy\",\n        effects: [\n          effectFunCall([\"Effect:Speed\", { target: 'Monster', amount: -1 }]),\n          effectFunCall(\"Effect:Stun\"),\n        ],\n        priority: 4,\n        stamina: 6,\n        range: makeRange(1),\n      },\n    ],\n  },\n  {\n    display: \"Finger Claw\",\n    tooltip: \"Specialized in poison\",\n    effects: [\n      {\n        display: \"Caress\",\n        tooltip: \"Applies poison to the monster\",\n        effects: [\n          effectFunCall([\"Effect:Poison\", { target: 'Monster', turns: 2 }])\n        ],\n        priority: 3,\n        stamina: 2,\n        range: makeRange(0),\n      },\n      {\n        display: \"Backflip\",\n        tooltip: \"Dodges an attack and moves backward\",\n        effects: [\n          effectFunCall(\"Effect:Dodge\"),\n          effectFunCall([\"Basic:Move\", { amount: 2 }]),\n        ],\n        priority: 1,\n        stamina: 4,\n        range: makeRange(0, 1),\n      },\n    ],\n  },\n  {\n    display: \"Bow\",\n    tooltip: \"Specialized in ranged attacks\",\n    effects: [\n      {\n        display: \"Relaxed Shot\",\n        tooltip: \"Shoots an arrow\",\n        effects: [\n          effectFunCall([\"Basic:Attack\", { amount: 2 }])\n        ],\n        priority: 3,\n        stamina: 2,\n        range: makeRange(3, 4),\n      },\n      {\n        display: \"Power Draw\",\n        tooltip: \"Shoots your strongest arrow and makes you weaker\",\n        effects: [\n          effectFunCall([\"Basic:Attack\", { amount: 6 }]),\n          effectFunCall([\"Effect:Attack\", { target: 'Player', amount: -1 }]),\n        ],\n        priority: 3,\n        stamina: 4,\n        range: makeRange(4),\n      },\n    ],\n  },\n  {\n    display: \"Magic Staff\",\n    tooltip: \"Specialized in multiple attacks\",\n    effects: [\n      {\n        display: \"Bolt\",\n        tooltip: \"Shoots a low damage bolt\",\n        effects: [\n          effectFunCall([\"Basic:Attack\", { amount: 1 }])\n        ],\n        priority: 3,\n        stamina: 3,\n        range: allRanges,\n      },\n      {\n        display: \"Pew Pew Pew\",\n        tooltip: \"Shoots a barrage of bolts\",\n        effects: [\n          effectFunCall([\"Basic:Attack\", { amount: 1 }]),\n          effectFunCall([\"Basic:Attack\", { amount: 1 }]),\n          effectFunCall([\"Basic:Attack\", { amount: 1 }]),\n          effectFunCall([\"Basic:Attack\", { amount: 1 }])],\n        priority: 4,\n        stamina: 8,\n        range: makeRange(2, 3, 4),\n      },\n    ],\n  },\n];\n\nexport const build: BuildRepository = {\n  debug: [\n    {\n      display: \"None\",\n    },\n    {\n      display: \"Debug\",\n      effects: [\n        {\n          display: \"GGWP\",\n          tooltip: \"Wins the game\",\n          priority: 1,\n          stamina: 0,\n          range: allRanges,\n          effects: [effectFunCall('Debug:GGWP')]\n        },\n        {\n          display: \"SUDOKU\",\n          tooltip: \"Loses the game\",\n          priority: 1,\n          stamina: 0,\n          range: allRanges,\n          effects: [effectFunCall('Debug:Sudoku')]\n        },\n      ]\n    }\n  ],\n  basic: [\n    {\n      display: \"Basic\",\n      effects: [\n        {\n          display: \"Rest\",\n          tooltip: \"Skip the turn and restore stamina\",\n          priority: 4,\n          stamina: 0,\n          range: selfRange,\n          effects: [effectFunCall('Basic:Rest')]\n        },\n        {\n          display: \"Advance\",\n          tooltip: \"Move closer\",\n          priority: 4,\n          stamina: 1,\n          range: selfRange,\n          effects: [effectFunCall(['Basic:Move', { amount: -1 }])]\n        },\n        {\n          display: \"Retreat\",\n          tooltip: \"Move farther\",\n          effects: [effectFunCall([\"Basic:Move\", { amount: 1 }])],\n          priority: 4,\n          stamina: 1,\n          range: selfRange,\n        }\n      ]\n    }\n  ],\n  class: [\n    {\n      display: \"Warrior\",\n      passives: [\"+Attack\", \"+Defence\", \"+Stamina\"],\n      effects: [\n        {\n          display: \"Strategic Kick\",\n          tooltip: \"Last resource attack\",\n          effects: [effectFunCall([\"Basic:Attack\", { amount: 2 }])],\n          priority: 2,\n          stamina: 1,\n          range: makeRange(1),\n        }\n      ]\n\n    },\n    {\n      display: \"Mage\",\n      passives: [\"+StaPerTurn\", \"+Stamina\", \"-Health\"],\n      effects: [\n        {\n          display: \"Just having a thought\",\n          tooltip: \"Restores stamina for the next action\",\n          priority: 4,\n          stamina: 0,\n          range: selfRange,\n          effects: [effectFunCall(['Basic:Stamina', { amount: 999 }])]\n        },\n      ]\n    },\n    {\n      display: \"Rogue\",\n      passives: [\"+Speed\", \"+Speed\", \"-Attack\", \"-Stamina\"],\n      effects: [\n        {\n          display: \"Strategic retreat\",\n          tooltip: \"Jump backwards\",\n          effects: [effectFunCall([\"Basic:Move\", { amount: 4 }])],\n          priority: 4,\n          stamina: 1,\n          range: selfRange,\n        }\n      ]\n    },\n    {\n      display: \"Berserk\",\n      passives: [\"+Attack\", \"+Attack\", \"+Attack\", \"+Attack\", \"-Defence\", \"-Defence\", \"-Health\"],\n    },\n  ],\n  skill: [\n    {\n      display: \"Sturdy\",\n      effects: [\n        {\n          display: \"Endure the pain\",\n          tooltip: \"Blocks some damage\",\n          effects: [effectFunCall([\"Effect:Armor\", { amount: 2 }])],\n          priority: 1,\n          stamina: 2,\n          range: selfRange,\n        },\n      ]\n    },\n    {\n      display: \"Nimble\",\n      effects: [\n        {\n          display: \"Dodge\",\n          tooltip: \"Avoid 1 enemy attack\",\n          effects: [effectFunCall(\"Effect:Dodge\")],\n          priority: 2,\n          stamina: 4,\n          range: selfRange,\n        }\n      ]\n    },\n    {\n      display: \"Resourceful\",\n      effects: [\n        {\n          display: \"Dodge this!\",\n          tooltip: \"Throws a stone\",\n          effects: [effectFunCall([\"Basic:Attack\", { amount: 2 }])],\n          priority: 4,\n          stamina: 3,\n          range: makeRange(3, 4),\n        }\n      ]\n    },\n  ],\n  weapon: weapons,\n  offhand: [\n    {\n      display: \"Hook\",\n      passives: [\"-Stamina\"],\n      effects: [\n        {\n          display: \"Get over here!\",\n          tooltip: \"Moves enemy closer\",\n          effects: [effectFunCall([\"Basic:Attack\", { amount: 3 }]), effectFunCall([\"Basic:Move\", { amount: -2 }])],\n          priority: 4,\n          stamina: 3,\n          range: makeRange(2, 3, 4),\n        },\n      ],\n    },\n    {\n      display: \"Parry Dagger\",\n      passives: [\"-Defence\"],\n      effects: [\n        {\n          display: \"Get over here!\",\n          tooltip: \"Avoids a melee attack\",\n          effects: [effectFunCall(\"Effect:Dodge\")],\n          priority: 2,\n          stamina: 2,\n          range: makeRange(1),\n        },\n      ],\n    },\n    {\n      display: \"Shield\",\n      passives: [\"+Defence\", \"-Speed\"],\n      effects: [\n        {\n          display: \"Not today!\",\n          tooltip: \"Blocks a lot of damage\",\n          effects: [effectFunCall([\"Effect:Armor\", { amount: 5 }])],\n          priority: 2,\n          stamina: 4,\n          range: selfRange,\n        },\n      ],\n    },\n    {\n      display: \"Focus\",\n      passives: [\"+Speed\", \"+StaPerTurn\"]\n    },\n    {\n      display: \"Wand\",\n      passives: [\"-Defence\", \"-StaPerTurn\"],\n      effects: [\n        {\n          display: \"Magic Bolt\",\n          tooltip: \"Shoots mana bolts until the caster faints\",\n          effects: [effectFunCall(\"Wand:MagicBolt\")],\n          priority: 3,\n          stamina: 1,\n          range: makeRange(3, 4),\n        }\n      ]\n    },\n  ],\n  armor: [\n    {\n      display: \"Heavy\",\n      passives: [\"+Defence\", \"+Defence\", \"+Defence\", \"+Defence\", \"-Speed\", \"-Speed\", \"-StaPerTurn\"],\n    },\n    {\n      display: \"Medium\",\n      passives: [\"+Defence\", \"+Defence\", \"-StaPerTurn\"],\n    },\n    {\n      display: \"Light\",\n      passives: [\"+Defence\"],\n    },\n    {\n      display: \"None\",\n      passives: [\"+Speed\"],\n    },\n  ],\n  // TODO\n  headgear: [\n    {\n      display: \"Helm\",\n      passives: [\"+Defence\", \"+Defence\", \"-Speed\", \"-StaPerTurn\"],\n      tooltip: \"Big protection for slow combatants\",\n    },\n    {\n      display: \"Feather Cap\",\n      passives: [\"+StaPerTurn\", \"+Stamina\"],\n      tooltip: \"Makes you feel energized, doesn't it?\",\n    },\n    {\n      display: \"Mage Hat\",\n      passives: [\"-StaPerTurn\"],\n      tooltip: \"Small tricks for big plays\",\n      effects: [\n        {\n          display: \"Flash!\",\n          tooltip: \"Blinks you to a better position\",\n          effects: [\n            effectFunCall([\"Basic:Attack\", { amount: 1 }]),\n            effectFunCall([\"Basic:Move\", { amount: 2 }])\n          ],\n          priority: 3,\n          stamina: 4,\n          range: makeRange(1, 2),\n        }\n      ]\n    },\n  ],\n  footwear: [\n    {\n      display: \"Slippers of Dooooodge!\",\n      tooltip: \"Allows you to dodge attacks\",\n      passives: [\"-Stamina\"],\n      effects: [\n        {\n          display: \"Advanced Dodge\",\n          tooltip: \"Avoid 1 attack\",\n          effects: [effectFunCall(\"Effect:Dodge\")],\n          priority: 1,\n          stamina: 3,\n          range: selfRange,\n        },\n      ],\n    },\n    {\n      display: \"Boots of Flight\",\n      tooltip: \"Avoid your enemies\",\n      passives: [\"-StaPerTurn\", \"-Defence\"],\n      eot: [{\n        display: \"Flight!\",\n        tooltip: \"Increases distance every turn\",\n        priority: 0,\n        range: allRanges,\n        effects: [effectFunCall('BootsOfFlight:EOT')],\n      }],\n    },\n    {\n      display: \"Greaves of Stability\",\n      tooltip: \"Extra resilient\",\n      passives: [\"+Defence\", \"-Speed\"],\n      effects: [\n        {\n          display: \"Dig your heels\",\n          tooltip: \"Resists damage\",\n          effects: [effectFunCall([\"Effect:Armor\", { amount: 3 }])],\n          priority: 1,\n          stamina: 4,\n          range: selfRange,\n        },\n      ],\n    },\n  ],\n  charm: [\n    {\n      display: \"of Health\",\n      passives: [\"+Health\", \"-Speed\"],\n      tooltip: \"Increases your maximum health\",\n    },\n    {\n      display: \"of Haste\",\n      passives: [\"+StaPerTurn\", \"-Stamina\"],\n      tooltip: \"Increases your maximum stamina regeneration\",\n    },\n    {\n      display: \"of Resilience\",\n      passives: [\"+Stamina\", \"-StaPerTurn\"],\n      tooltip: \"Increases your maximum stamina\",\n    },\n    {\n      display: \"of Strength\",\n      passives: [\"+Attack\", \"-Health\", \"-StaPerTurn\"],\n      tooltip: \"Increases your maximum attack\",\n    },\n    {\n      display: \"of Swiftness\",\n      passives: [\"+Speed\", \"-Attack\"],\n      tooltip: \"Increases your maximum speed\",\n    },\n    {\n      display: \"of Defence\",\n      passives: [\"+Defence\", \"-Stamina\", \"-Speed\"],\n      tooltip: \"Increases your maximum defence\",\n    },\n  ],\n  // TODO\n  consumable: [\n    {\n      display: \"Potion\",\n    },\n  ],\n};\n\nexport const randomName = () => names[Math.floor(Math.random() * names.length)];\n\nexport const enemies: [Enemy, EnemyStats][] = [\n  [{\n    lore: {\n      name: \"Sacapuntas\",\n    },\n    rolls: [\n      [0, 1, 2, 1, 0],\n      [0, 1, 0, 0, 0],\n      [0, 0, 0, 0, 0],\n      [0, 0, 0, 0, 0],\n      [0, 1, 2, 1, 0, 0],\n    ],\n    effects: [\n      { display: \"Swipe\", tooltip: \"Swipe\", priority: 3, effects: [effectFunCall([\"Monster:Attack\", { amount: 3 }])], range: makeRange(0, 1) },\n      { display: \"Roar\", tooltip: \"Swipe\", priority: 1, effects: [effectFunCall([\"Basic:Stamina\", { amount: -5 }])], range: allRanges },\n      { display: \"Jump\", tooltip: \"Swipe\", priority: 2, effects: [effectFunCall([\"Monster:Move\", { amount: -4 }])], range: makeRange(2, 3, 4) },\n    ],\n  }, {\n    hp: makeStat(25),\n    distance: 4,\n    speed: makeStat(0),\n    attack: makeStat(0),\n    defence: makeStat(0),\n    status: defaultStatus,\n  }],\n  [{\n    lore: {\n      name: \"Toro\",\n    },\n    effects: [\n      { display: \"Swipe\", tooltip: \"Swipe\", priority: 3, effects: [effectFunCall([\"Monster:Attack\", { amount: 3 }])], range: allRanges },\n      { display: \"Jump\", tooltip: \"Jump\", priority: 2, effects: [effectFunCall([\"Monster:Move\", { amount: -4 }])], range: makeRange(2, 3, 4) },\n    ],\n    rolls: [\n      [0, 0, 0, 0, 0],\n      [0, 0, 0, 0, 0],\n      [1, 1, 0, 0, 0],\n      [1, 1, 1, 0, 0],\n      [1, 1, 1, 1, 0],\n    ]\n  }, {\n    hp: makeStat(22),\n    distance: 4,\n    speed: makeStat(0),\n    attack: makeStat(0),\n    defence: makeStat(0),\n    status: defaultStatus,\n  }],\n  [{\n    lore: {\n      name: \"Summoner\",\n    },\n    effects: [\n      { display: \"Swipe\", tooltip: \"Swipe\", priority: 3, effects: [effectFunCall([\"Monster:Attack\", { amount: 3 }])], range: makeRange(0, 1) },\n      { display: \"Retreat\", tooltip: \"Jump\", priority: 3, effects: [effectFunCall([\"Monster:Move\", { amount: 5 }])], range: allRanges },\n      { display: \"Summon Smol\", tooltip: \"Summon Smol\", priority: 4, effects: [effectFunCall([\"Monster:Summon\", { enemy: 4 }])], range: makeRange(2, 3, 4) },\n      { display: \"Spit\", tooltip: \"Summon Smol\", priority: 4, effects: [effectFunCall([\"Monster:Attack\", { amount: 2 }])], range: makeRange(2, 3, 4) },\n    ],\n    rolls: [\n      [1, 1, 1, 0, 0],\n      [1, 1, 1, 0, 0],\n      [1, 1, 3, 3, 0],\n      [2, 3, 3, 3, 0],\n      [2, 2, 3, 3, 0],\n    ]\n  }, {\n    hp: makeStat(30),\n    distance: 4,\n    speed: makeStat(0),\n    attack: makeStat(0),\n    defence: makeStat(0),\n    status: defaultStatus,\n  }],\n  [{\n    lore: {\n      name: \"Body\",\n    },\n    effects: [\n      { display: \"Swipe\", tooltip: \"Swipe\", priority: 3, effects: [effectFunCall([\"Monster:Attack\", { amount: 3 }])], range: makeRange() },\n    ],\n    rolls: [\n      [0],\n      [0],\n      [0],\n      [0],\n      [0],\n    ]\n  }, {\n    hp: makeStat(300),\n    distance: 0,\n    speed: makeStat(0),\n    attack: makeStat(0),\n    defence: makeStat(0),\n    status: defaultStatus,\n  }],\n\n  [{\n    lore: {\n      name: \"Smol\",\n    },\n    effects: [\n      { display: \"Swipe\", tooltip: \"Swipe\", priority: 3, effects: [effectFunCall([\"Monster:Attack\", { amount: 3 }])], range: makeRange() },\n    ],\n    rolls: [\n      [0],\n      [0],\n      [0],\n      [0],\n      [0],\n    ]\n  }, {\n    hp: makeStat(5),\n    distance: 0,\n    speed: makeStat(0),\n    attack: makeStat(0),\n    defence: makeStat(0),\n    status: defaultStatus,\n  }],\n];\n\nconst names = [\n  \"Lydan\",\n  \"Syrin\",\n  \"Ptorik\",\n  \"Joz\",\n  \"Varog\",\n  \"Gethrod\",\n  \"Hezra\",\n  \"Feron\",\n  \"Ophni\",\n  \"Colborn\",\n  \"Fintis\",\n  \"Gatlin\",\n  \"Jinto\",\n  \"Hagalbar\",\n  \"Krinn\",\n  \"Lenox\",\n  \"Revvyn\",\n  \"Hodus\",\n  \"Dimian\",\n  \"Paskel\",\n  \"Kontas\",\n  \"Weston\",\n  \"Azamarr\",\n  \"Jather\",\n  \"Tekren\",\n  \"Jareth\",\n  \"Adon\",\n  \"Zaden\",\n  \"Eune\",\n  \"Graff\",\n  \"Tez\",\n  \"Jessop\",\n  \"Gunnar\",\n  \"Pike\",\n  \"Domnhar\",\n  \"Baske\",\n  \"Jerrick\",\n  \"Mavrek\",\n  \"Riordan\",\n  \"Wulfe\",\n  \"Straus\",\n  \"Tyvrik\",\n  \"Henndar\",\n  \"Favroe\",\n  \"Whit\",\n  \"Jaris\",\n  \"Renham\",\n  \"Kagran\",\n  \"Lassrin\",\n  \"Vadim\",\n  \"Arlo\",\n  \"Quintis\",\n  \"Vale\",\n  \"Caelan\",\n  \"Yorjan\",\n  \"Khron\",\n  \"Ishmael\",\n  \"Jakrin\",\n  \"Fangar\",\n  \"Roux\",\n  \"Baxar\",\n  \"Hawke\",\n  \"Gatlen\",\n  \"Barak\",\n  \"Nazim\",\n  \"Kadric\",\n  \"Paquin\",\n  \"Kent\",\n  \"Moki\",\n  \"Rankar\",\n  \"Lothe\",\n  \"Ryven\",\n  \"Clawsen\",\n  \"Pakker\",\n  \"Embre\",\n  \"Cassian\",\n  \"Verssek\",\n  \"Dagfinn\",\n  \"Ebraheim\",\n  \"Nesso\",\n  \"Eldermar\",\n  \"Rivik\",\n  \"Rourke\",\n  \"Barton\",\n  \"Hemm\",\n  \"Sarkin\",\n  \"Blaiz\",\n  \"Talon\",\n  \"Agro\",\n  \"Zagaroth\",\n  \"Turrek\",\n  \"Esdel\",\n  \"Lustros\",\n  \"Zenner\",\n  \"Baashar\",\n  \"Dagrod\",\n  \"Gentar\",\n  \"Feston\",\n  \"Syrana\",\n  \"Resha\",\n  \"Varin\",\n  \"Wren\",\n  \"Yuni\",\n  \"Talis\",\n  \"Kessa\",\n  \"Magaltie\",\n  \"Aeris\",\n  \"Desmina\",\n  \"Krynna\",\n  \"Asralyn\",\n  \"Herra\",\n  \"Pret\",\n  \"Kory\",\n  \"Afia\",\n  \"Tessel\",\n  \"Rhiannon\",\n  \"Zara\",\n  \"Jesi\",\n  \"Belen\",\n  \"Rei\",\n  \"Ciscra\",\n  \"Temy\",\n  \"Renalee\",\n  \"Estyn\",\n  \"Maarika\",\n  \"Lynorr\",\n  \"Tiv\",\n  \"Annihya\",\n  \"Semet\",\n  \"Tamrin\",\n  \"Antia\",\n  \"Reslyn\",\n  \"Basak\",\n  \"Vixra\",\n  \"Pekka\",\n  \"Xavia\",\n  \"Beatha\",\n  \"Yarri\",\n  \"Liris\",\n  \"Sonali\",\n  \"Razra\",\n  \"Soko\",\n  \"Maeve\",\n  \"Everen\",\n  \"Yelina\",\n  \"Morwena\",\n  \"Hagar\",\n  \"Palra\",\n  \"Elysa\",\n  \"Sage\",\n  \"Ketra\",\n  \"Lynx\",\n  \"Agama\",\n  \"Thesra\",\n  \"Tezani\",\n  \"Ralia\",\n  \"Esmee\",\n  \"Heron\",\n  \"Naima\",\n  \"Rydna\",\n  \"Sparrow\",\n  \"Baakshi\",\n  \"Ibera\",\n  \"Phlox\",\n  \"Dessa\",\n  \"Braithe\",\n  \"Taewen\",\n  \"Larke\",\n  \"Silene\",\n  \"Phressa\",\n  \"Esther\",\n  \"Anika\",\n  \"Rasy\",\n  \"Harper\",\n  \"Indie\",\n  \"Vita\",\n  \"Drusila\",\n  \"Minha\",\n  \"Surane\",\n  \"Lassona\",\n  \"Merula\",\n  \"Kye\",\n  \"Jonna\",\n  \"Lyla\",\n  \"Zet\",\n  \"Orett\",\n  \"Naphtalia\",\n  \"Turi\",\n  \"Rhays\",\n  \"Shike\",\n  \"Hartie\",\n  \"Beela\",\n  \"Leska\",\n  \"Vemery\",\n  \"Lunex\",\n  \"Fidess\",\n  \"Tisette\",\n  \"Partha\",\n]","import React from \"react\";\nimport { Card, Button, OverlayTrigger, Popover } from \"react-bootstrap\";\nimport { Enemy, Effect, EnemyStats } from \"../utils/types\";\nimport { Seq } from \"immutable\";\n\nconst skillPercents = (effects: Effect[]) =>\n  Seq(effects).countBy((e) => e.display).toArray().map(([display, v], idx) => {\n    const { range, priority, tooltip } = effects.find(a => a.display === display)!!;\n    return <OverlayTrigger\n      key={idx}\n      placement=\"right\"\n      delay={{ show: 100, hide: 250 }}\n      overlay={<Popover>\n        <Popover.Header as=\"h3\">{display}</Popover.Header>\n        <Popover.Body>\n          {tooltip}<br />⏱:{priority}<br />🏹:{range.length === 5 ? 'Any' : range.length === 0 ? 'None' : range.map(a => a + 1).join(\", \")}\n        </Popover.Body>\n      </Popover>}\n    ><>[{(v / effects.length * 100).toFixed(2)}%] {display}<br key={idx} /></>\n    </OverlayTrigger>\n  });\n\nconst EnemyCard: React.FC<{\n  enemy: Enemy;\n  enemyStats: EnemyStats;\n  latestAttack: string | undefined;\n  isSelected?: boolean;\n  onSelect: () => void;\n  canAct: boolean;\n  hotkey: string;\n}> = ({ enemy, enemyStats, isSelected, onSelect, latestAttack, canAct, hotkey }) => (\n  <Card bg={isSelected ? \"info\" : undefined}>\n    <Card.Body>\n      <Card.Title>{enemy.lore.name} {enemyStats.hp.current > 0 ? \"\" : (<b>💀DEAD💀</b>)}</Card.Title>\n      <Card.Text>❤:{enemyStats.hp.current} 🏹:{enemyStats.distance + 1}</Card.Text>\n      <Card.Text>Attack {enemyStats.attack.current}<br />Defence {enemyStats.defence.current}<br />Speed {enemyStats.speed.current}</Card.Text>\n      {enemyStats.status.bleed.turns > 0 && ` ${enemyStats.status.bleed.turns} 🩸`}\n      {latestAttack && (<Card.Text>Latest attack: {latestAttack}</Card.Text>)}\n      <Card.Text>\n        Next attack prediction:\n        <br />\n        {skillPercents(enemy.rolls[enemyStats.distance].map((idx) => enemy.effects[idx]))}\n        <br />\n      </Card.Text>\n      {canAct && (<Button disabled={isSelected} onClick={onSelect}>[<i>{hotkey.toUpperCase()}</i>] Select</Button>)}\n    </Card.Body>\n  </Card>\n);\n\nexport default EnemyCard;\n","import React from \"react\";\nimport { Card, Button, Stack, ToggleButton, ButtonGroup, Popover, OverlayTrigger } from \"react-bootstrap\";\nimport { DisabledSkills, Player, PlayerStats, safeEntries } from \"../utils/types\";\nimport { Set } from 'immutable';\nimport { clamp } from \"../utils/zFunDump\";\n\nconst PlayerCard: React.FC<{\n  selectedButtons: Set<string>,\n  player: Player;\n  playerStats: PlayerStats;\n  canAct: boolean;\n  lastAction: string | undefined;\n  onClickEffect: (index: number) => void;\n  disabledSkills: DisabledSkills;\n  setDisabledSkills: (skills: DisabledSkills) => void;\n}> = ({ selectedButtons, player, playerStats, onClickEffect, canAct, lastAction, disabledSkills, setDisabledSkills }) => {\n  const passives = safeEntries(player.build)\n    .map(([k, e]) => [k, e, [...(e.bot ?? []), ...(e.eot ?? [])]] as const);\n\n  const hasPassives = passives.reduce((acc, [k, e, passives]) => passives.length > 0, false);\n  return <Card>\n    <Card.Body>\n      <Card.Title>{player.lore.name}{playerStats.hp.current > 0 ? \"\" : (<b> 💀DEAD💀 </b>)}</Card.Title>\n      <Card.Subtitle className=\"mb-2 text-muted\">\n        {player.build.class.display}\n      </Card.Subtitle>\n      <Card.Text>Attack {playerStats.attack.current} | Defence {playerStats.defence.current} | Speed {playerStats.speed.current}</Card.Text>\n      <Card.Text>{playerStats.hp.current}/{playerStats.hp.max} ❤</Card.Text>\n      <Card.Text>{playerStats.stamina.current}/{playerStats.stamina.max} 💪 ({playerStats.staminaPerTurn.current >= 0 && \"+\"}{playerStats.staminaPerTurn.current})</Card.Text>\n      {playerStats.status.bleed.turns > 0 && <Card.Text>` ${playerStats.status.bleed.turns} 🩸`</Card.Text>}\n      {lastAction && (<Card.Text>Last action: {lastAction}</Card.Text>)}\n    </Card.Body>\n    {canAct && hasPassives && (<>\n      <b>Passives</b>\n      <ButtonGroup>\n        {passives\n          .map(([k, e, passives], idx) => passives.length > 0 && (<OverlayTrigger\n            key={idx}\n            placement=\"right\"\n            delay={{ show: 100, hide: 250 }}\n            overlay={<Popover>\n              <Popover.Header as=\"h3\">{e.display}</Popover.Header>\n              <Popover.Body>\n                {e.tooltip}\n              </Popover.Body>\n            </Popover>}\n          >\n            <ToggleButton\n              checked={!Set(disabledSkills).has(k)}\n              value={k}\n              id={`passive-skill-${k}`}\n              type=\"checkbox\"\n              variant=\"outline-primary\"\n              onChange={(event) => setDisabledSkills(\n                event.currentTarget.checked\n                  ? Set(disabledSkills).delete(k).toArray()\n                  : Set(disabledSkills).add(k).toArray())}>\n              {e.display}\n            </ToggleButton>\n          </OverlayTrigger>\n          ))}\n      </ButtonGroup>\n    </>)}\n    {canAct && (<Card.Body>\n      <Stack direction=\"horizontal\" gap={2}>\n        {Object.values(player.build)\n          .flatMap((a) => a.effects ?? [])\n          .map((e, idx) => (<OverlayTrigger\n            key={e.display}\n            placement=\"top\"\n            delay={{ show: 100, hide: 250 }}\n            overlay={<Popover>\n              <Popover.Header as=\"h3\">{e.display}</Popover.Header>\n              <Popover.Body>\n                {e.tooltip}\n              </Popover.Body>\n            </Popover>}\n          >\n            <div>\n              <Button\n                active={selectedButtons.has(e.display)}\n                disabled={playerStats.stamina.current < e.stamina}\n                onClick={(_) => onClickEffect(idx)}\n              >\n                [<i>{idx + 1}</i>] <b>{e.display}</b>\n              </Button>\n              <br />\n              <Card.Text>💪:{e.stamina} ⏱:{clamp(e.priority - playerStats.speed.current, 0, 4)}<br />🏹:{e.range.length === 5 ? 'Any' : e.range.map(a => a + 1).join(\", \")}</Card.Text>\n            </div>\n          </OverlayTrigger>\n          ))}\n      </Stack>\n    </Card.Body>)}\n  </Card>\n}\n\nexport default PlayerCard;\n","import { Container, Row, Col, Card, Modal, ButtonGroup } from \"react-bootstrap\";\n\nimport { DisabledSkills, MonsterTarget, Play } from \"../utils/types\";\n\nimport EnemyCard from \"./Enemy\";\nimport PlayerCard from \"./Player\";\nimport usePressedKeys from \"../hooks/usePressedKeys\";\nimport { playerActions } from \"../utils/playGame\";\nimport { Seq, Set } from \"immutable\";\nimport { previousState } from \"../utils/data\";\nimport { Button } from \"react-bootstrap\";\nimport saveAs from 'file-saver';\nimport { useCallback, useState } from \"react\";\n\nexport type GameProps = {\n  game: Play;\n  setSelected: (target: MonsterTarget) => void;\n  setDisabledSkills: (disabled: DisabledSkills) => void;\n  handlePlayerEffect: (index: number) => void,\n  solveGame: (iterations: number) => void,\n  hint: (iterations: number) => void,\n  timeTravel: { undo: () => void; redo: (() => void) | undefined } | undefined,\n  onMenu: () => void,\n};\n\nconst monsterHotkeys = [\"q\", \"w\", \"e\", \"r\", \"t\", \"y\"];\n\nconst Game = ({ handlePlayerEffect, setSelected, setDisabledSkills, game, solveGame, timeTravel, hint, onMenu }: GameProps): JSX.Element => {\n  const { player, enemies } = game;\n  const { player: playerStats, enemies: enemiesStats, target, lastAttacks, disabledSkills } = previousState(game);\n  const [isLogShown, setShowLog] = useState(false);\n\n  const handleCloseLog = () => setShowLog(false);\n  const handleShowLog = () => setShowLog(true);\n\n  const playerSkills = playerActions(player);\n  const monsterHealth = enemiesStats.reduce((acc, m) => m.hp.current + acc, 0);\n  const isPlayerAlive = playerStats.hp.current > 0;\n  const areMonstersAlive = monsterHealth > 0;\n  const endGame = game.states.length < game.turns;\n  const canAct = isPlayerAlive && areMonstersAlive && endGame;\n\n  const pressed = usePressedKeys((key) => {\n    if (!canAct) return;\n    const valNum = parseInt(key);\n    if (valNum > 0 && valNum <= playerSkills.length) {\n      const hasStamina = playerSkills[valNum - 1].stamina <= playerStats.stamina.current;\n      if (!hasStamina) return;\n      handlePlayerEffect(valNum - 1);\n    }\n\n    if (key === \"Escape\") {\n      onMenu();\n    }\n    if (key === \"h\") {\n      hint(100);\n    }\n\n    if (key === \"l\") {\n      setShowLog(!isLogShown);\n    }\n\n    if (key === \"s\") {\n      save();\n    }\n\n    if (key === \"a\" && game.states.length > 1 && timeTravel) {\n      timeTravel.undo();\n    }\n    if (key === \"d\" && timeTravel && timeTravel.redo != null) {\n      timeTravel.redo();\n    }\n\n    if (key === monsterHotkeys[0] && enemies.length > 0) {\n      setSelected(0 as MonsterTarget);\n    }\n    if (key === monsterHotkeys[1] && enemies.length > 1) {\n      setSelected(1 as MonsterTarget);\n    }\n    if (key === monsterHotkeys[2] && enemies.length > 2) {\n      setSelected(2 as MonsterTarget);\n    }\n    if (key === monsterHotkeys[3] && enemies.length > 3) {\n      setSelected(3 as MonsterTarget);\n    }\n    if (key === monsterHotkeys[4] && enemies.length > 4) {\n      setSelected(4 as MonsterTarget);\n    }\n  });\n\n  const selectedButtons = Set<string>([...pressed].flatMap((key: string) => {\n    const valNum = parseInt(key);\n    if (valNum > 0 && valNum <= playerSkills.length) {\n      return [playerSkills[valNum - 1].display];\n    } else {\n      return [];\n    }\n  }));\n\n  const save = useCallback(() => {\n    const blob = new Blob([JSON.stringify(game)], { type: \"application/json;charset=utf-8\" });\n    saveAs(blob, `buildmancer-${Date.now()}.json`);\n  }, [game]);\n\n  return (\n    <>\n      <Container fluid>\n        <Row className=\"justify-content-center align-items-flex-start\">\n          <Col sm={12} md={8}>\n            <Button onClick={onMenu}>[<i>Esc</i>] MAIN MENU</Button>\n            <Card.Title>\n              {!isPlayerAlive ? (<b>❌❌DEFEAT❌❌</b>) : !areMonstersAlive ? (<b>🎉🎉VICTORY🎉🎉</b>) : \"\"} Turn {game.states.length} out of {game.turns}\n            </Card.Title>\n            <PlayerCard\n              player={player}\n              playerStats={playerStats}\n              disabledSkills={disabledSkills}\n              setDisabledSkills={setDisabledSkills}\n              onClickEffect={(idx) => handlePlayerEffect(idx)}\n              selectedButtons={selectedButtons}\n              lastAction={lastAttacks.filter(a => a.origin === 'Player' && a.phase === 'MAIN').map(a => `${a.display}`).join(\" -> \") ?? undefined}\n              canAct={canAct} />\n            {timeTravel != null && (<Row>\n              <ButtonGroup>\n                {game.states.length > 1 && (<Button onClick={(_) => timeTravel.undo()}>[<i>A</i>] Undo ↩</Button>)}\n                {timeTravel.redo && (<Button onClick={(_) => timeTravel.redo!!()}>[<i>D</i>] Redo ↪</Button>)}\n              </ButtonGroup>\n            </Row>)}\n            <Row>\n              <ButtonGroup>\n                <Button onClick={(_) => hint(100)}><i>[H]</i> Hint</Button>\n              </ButtonGroup>\n            </Row>\n            <Row>\n              {Seq(enemies).zip(Seq(enemiesStats)).map(([enemy, stats], idx) => (\n                <Col key={idx} xs={6} md={4}>\n                  <EnemyCard\n                    key={idx}\n                    enemyStats={stats}\n                    enemy={enemy}\n                    canAct={canAct}\n                    latestAttack={Seq(lastAttacks).filter(({ origin, phase }) => origin === idx && phase === 'MAIN').map(a => `${a.display}`).join(\" -> \") ?? undefined}\n                    isSelected={idx === target}\n                    onSelect={() => setSelected(idx as MonsterTarget)}\n                    hotkey={monsterHotkeys[idx]}\n                  />\n                </Col>\n              ))}\n            </Row>\n            <Card.Title>\n              Debug\n            </Card.Title>\n            <Row>\n              <ButtonGroup>\n                <Button onClick={handleShowLog}>[<i>L</i>] Log 🗒</Button>\n                <Button onClick={save}>[<i>S</i>] Dump to file 📂</Button>\n              </ButtonGroup>\n            </Row>\n            <Card.Title>\n              Cheats\n            </Card.Title>\n            <Row>\n              <ButtonGroup>\n                <Button onClick={(_) => solveGame(100)}>Solve ⌛</Button>\n                <Button onClick={(_) => solveGame(1000)}>Solve thoroughly ⌛⌛⌛</Button>\n              </ButtonGroup>\n            </Row>\n          </Col>\n        </Row>\n      </Container>\n      <Modal show={isLogShown} onHide={handleCloseLog} scrollable={true} centered={true}>\n        <Modal.Header closeButton>\n          <Modal.Title>Game Log</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          {game.states.map((s, idx) => (\n            <div key={idx}>\n              <b>Turn {idx}</b><br />\n              Player: {JSON.stringify(s.player, null, 2)}<br />\n              Enemies: {JSON.stringify(s.enemies, null, 2)}<br />\n              Target [{s.target}]<br />\n              Bot?: {JSON.stringify(s.bot, null, 2)}<br />\n              Eot?: {JSON.stringify(s.eot, null, 2)}<br />\n              Actions:<br />\n              {s.lastAttacks.map((a, idx) => (<div key={idx}>{\"-->\"} {JSON.stringify(a, null, 2)}<br /></div>))}\n            </div>\n          ))}\n        </Modal.Body>\n        <Modal.Footer>\n          <Button variant=\"primary\" onClick={handleCloseLog}>\n            Close\n          </Button>\n        </Modal.Footer>\n      </Modal >\n    </>\n  );\n};\n\nexport default Game;\n","import { useEffect, useCallback, useState } from \"react\";\n\nexport default function usePressedKeys(onUp: (e: string) => void): Set<string> {\n\n  const [pressedKeys, updatePressedKeys] = useState(new Set<string>());\n\n  const downHandler = ({ key }: { key: string }) => {\n    updatePressedKeys((set) => new Set([...set, key]));\n  }\n\n  const upHandler = useCallback(({ key }: { key: string }) => {\n    updatePressedKeys((set) => new Set([...set].filter((k) => k !== key)));\n    onUp(key);\n  }, [onUp]);\n\n  useEffect(() => {\n    window.addEventListener(\"keydown\", downHandler);\n    window.addEventListener(\"keyup\", upHandler);\n\n    return () => {\n      window.removeEventListener(\"keydown\", downHandler);\n      window.removeEventListener(\"keyup\", upHandler);\n    };\n  }, [upHandler]);\n\n  return pressedKeys;\n}","import React from \"react\";\nimport { Container, Row, Form, Button, ButtonGroup, Navbar } from \"react-bootstrap\";\nimport useScroll from \"../hooks/useScroll\";\n\nimport { Build, Item, Player, PlayerStats, safeEntries } from \"../utils/types\";\nimport { build, randomEnemy, randomName, randomPlayer } from \"../utils/data\";\nimport { Set } from 'immutable';\nimport { buildPlayer } from \"../utils/playGame\";\n\nconst systemBuildKeys: Set<keyof Build> = Set(['debug', 'basic']);\n\nconst PlayerBuilder = ({ onSave }: { onSave: (player: Player, playerStats: PlayerStats) => void }) => {\n  const [player, playerStats] = randomPlayer();\n  const [form, setForm] = React.useState<Build>(player.build);\n  const [lore, setLore] = React.useState(player.lore);\n  const setField = <T extends keyof Build>(field: T, value: Build[T]) => {\n    setForm({\n      ...form,\n      [field]: value,\n    });\n  };\n  const onFormSubmit = (e: any) => {\n    e.preventDefault();\n    onSave({\n      id: \"p-1\",\n      lore,\n      build: form,\n    }, playerStats);\n  };\n  const displayType = (type: keyof Build) => <b>{form[type].display}</b>;\n\n  const postBuildPlayerStats = buildPlayer({ ...player, build: form }, playerStats, [randomEnemy()[1]])[0];\n\n  return (\n    <Form onSubmit={onFormSubmit}>\n      <Container fluid style={{ marginBottom: '105px' }}>\n        <Row className=\"g-2\">\n          {safeEntries(build)\n            .filter(([type, _]) => !systemBuildKeys.has(type))\n            .map(([type, values]) =>\n              <ElementPicker\n                setField={(value) => setField(type, value)}\n                section={type}\n                options={(values as Item[])}\n                key={type}\n                isSelected={(value) => form[type].display === value.display} />)\n          }\n        </Row>\n        <Navbar fixed=\"bottom\" bg=\"dark\" variant=\"dark\" style={{ maxHeight: '100px' }}>\n          <Container>\n            <Navbar.Text>You are <i onClick={() => setLore((lore) => ({ ...lore, name: randomName() }))}>{lore.name}</i>, the {displayType('skill')} {displayType('class')} {displayType('charm')}<br />who wields a {displayType('weapon')} and a {displayType('offhand')}<br />and wears {displayType('armor')} with {displayType('headgear')} and {displayType('footwear')}</Navbar.Text>\n            <Navbar.Text>\n              {postBuildPlayerStats.hp.current}/{postBuildPlayerStats.hp.max} ❤<br />\n              {postBuildPlayerStats.stamina.current}/{postBuildPlayerStats.stamina.max} 💪 ({postBuildPlayerStats.staminaPerTurn.current >= 0 && \"+\"}{postBuildPlayerStats.staminaPerTurn.current})<br />\n              Attack {postBuildPlayerStats.attack.current} | Defence {postBuildPlayerStats.defence.current} | Speed {postBuildPlayerStats.speed.current}\n            </Navbar.Text>\n            <Button type=\"submit\">This is me!</Button>\n          </Container>\n        </ Navbar>\n      </Container >\n    </Form >\n  );\n};\n\nconst ElementPicker = ({ isSelected, section, options, setField }: {\n  options: Item[], isSelected: (value: Item) => boolean, setField: (value: Item) => void, section: string\n}) => {\n  const [scrollTo, scrollRef] = useScroll({\n    behavior: 'smooth',\n    block: 'start',\n  });\n\n  return (\n    <Row>\n      <Form.Label>{section}</Form.Label>\n      <br />\n      <ButtonGroup size=\"lg\" className=\"mb-2\">\n        {options.map((item) => (\n          <Button\n            key={item.display}\n            name={section}\n            id={`${item.display}`}\n            variant={isSelected(item) ? 'primary' : 'secondary'}\n            onClick={() => { setField(item); scrollTo(); }}\n          >{item.display}</Button>\n        ))}\n      </ButtonGroup>\n      <div id={`${section}-scroll`} ref={scrollRef} />\n    </Row>\n  );\n}\n\nexport default PlayerBuilder;\n","import { Ref, useRef } from \"react\";\n\ntype ScrollToFn = () => void;\n\nexport default function useScroll<T extends Element>(scrollParams: ScrollIntoViewOptions): [ScrollToFn, Ref<any>] {\n  const elRef = useRef<T>(null);\n  const executeScroll = () => elRef.current!.scrollIntoView(scrollParams);\n\n  return [executeScroll, elRef];\n};\n","import React from \"react\";\nimport { Container, ButtonGroup, Form, Button, Navbar } from \"react-bootstrap\";\n\nimport { Player, Enemies, Enemy, EnemiesStats, EnemyStats, Build } from \"../utils/types\";\nimport { enemies, randomEnemy } from \"../utils/data\";\n\nconst EncounterBuilder = ({ player, onSave }: { player: Player, onSave: (enemies: Enemies, enemiesStats: EnemiesStats) => void }) => {\n  const [encounter, setEncounter] = React.useState<[Enemy, EnemyStats][]>([]);\n  const onFormSubmit = (e: any) => {\n    e.preventDefault();\n    const enemies = encounter.map(a => a[0]);\n    const enemiesStats = encounter.map(a => a[1]);\n    // Size enforced by UI\n    onSave(enemies as Enemies, enemiesStats as EnemiesStats);\n  };\n  const displayType = (type: keyof Build) => <b>{player.build[type].display}</b>;\n  return (\n    <Form onSubmit={onFormSubmit}>\n      <Container fluid style={{ marginBottom: encounter.length > 0 ? '205px' : '105px' }}>\n        <ButtonGroup size=\"lg\" className=\"mb-2\">\n          {enemies.map((enemy) =>\n            <Button\n              key={enemy[0].lore.name}\n              disabled={encounter.length > 4}\n              onClick={() => setEncounter((e) => [...e, enemy])}\n            >{enemy[0].lore.name}</Button>\n          )}\n        </ButtonGroup>\n      </Container >\n      {\n        encounter.length > 0 &&\n        <Navbar fixed=\"bottom\" bg=\"dark\" variant=\"dark\" style={{ marginBottom: '100px' }}>\n          <Container fluid>\n            <ButtonGroup size=\"sm\" className=\"mb-2\">\n              {encounter.map((enemy, idx) => <Button key={`${enemy[0].lore.name}-${idx}`} onClick={() => setEncounter((e) => { let found = false; return e.filter((m) => (found || m[0].lore.name !== enemy[0].lore.name) || !(found = true)); })}>{enemy[0].lore.name}</Button>)}\n            </ButtonGroup>\n          </Container>\n        </ Navbar>\n      }\n      <Navbar fixed=\"bottom\" bg=\"dark\" variant=\"dark\" style={{ maxHeight: '100px' }}>\n        <Container>\n          <Navbar.Text>You are <i>{player.lore.name}</i>, the {displayType('skill')} {displayType('class')} {displayType('charm')}<br />who wields a {displayType('weapon')} and a {displayType('offhand')}<br />and wears {displayType('armor')} with {displayType('headgear')} and {displayType('footwear')}</Navbar.Text>\n          <ButtonGroup>\n            <Button\n              disabled={encounter.length < 0 || encounter.length > 4}\n              onClick={(_) => setEncounter((e) => [...e, randomEnemy()])}>\n              Add Random\n            </Button>\n            <Button type=\"submit\" disabled={encounter.length < 1 || encounter.length > 5}>To Battle!</Button>\n          </ButtonGroup>\n        </Container>\n      </ Navbar>\n    </Form >\n  );\n};\n\nexport default EncounterBuilder;\n","export default function geneticAlgorithmConstructor(options) {\n\n    function settingDefaults() {\n        return {\n\n            mutationFunction: function (phenotype) { return phenotype },\n\n            crossoverFunction: function (a, b) { return [a, b] },\n\n            fitnessFunction: function (phenotype) { return 0 },\n\n            doesABeatBFunction: undefined,\n\n            population: [],\n            populationSize: 100,\n        }\n    }\n\n    function settingWithDefaults(settings, defaults) {\n        settings = settings || {}\n\n        settings.mutationFunction = settings.mutationFunction || defaults.mutationFunction\n        settings.crossoverFunction = settings.crossoverFunction || defaults.crossoverFunction\n        settings.fitnessFunction = settings.fitnessFunction || defaults.fitnessFunction\n\n        settings.doesABeatBFunction = settings.doesABeatBFunction || defaults.doesABeatBFunction\n\n        settings.population = settings.population || defaults.population\n        if (settings.population.length <= 0) throw Error(\"population must be an array and contain at least 1 phenotypes\")\n\n        settings.populationSize = settings.populationSize || defaults.populationSize\n        if (settings.populationSize <= 0) throw Error(\"populationSize must be greater than 0\")\n\n        return settings\n    }\n\n    var settings = settingWithDefaults(options, settingDefaults())\n\n    function populate() {\n        var size = settings.population.length\n        while (settings.population.length < settings.populationSize) {\n            const rand = Math.floor(Math.random() * size);\n            settings.population.push(\n                mutate(\n                    cloneJSON(settings.population[Math.floor(rand)])\n                )\n            )\n        }\n    }\n\n    function cloneJSON(object) {\n        return JSON.parse(JSON.stringify(object))\n    }\n\n    function mutate(phenotype) {\n        return settings.mutationFunction(cloneJSON(phenotype))\n    }\n\n    function crossover(phenotype) {\n        phenotype = cloneJSON(phenotype)\n        var mate = settings.population[Math.floor(Math.random() * settings.population.length)]\n        mate = cloneJSON(mate)\n        return settings.crossoverFunction(phenotype, mate)[0]\n    }\n\n    function doesABeatB(a, b) {\n        if (settings.doesABeatBFunction) {\n            return settings.doesABeatBFunction(a, b)\n        } else {\n            return settings.fitnessFunction(a) >= settings.fitnessFunction(b)\n        }\n    }\n\n    function compete() {\n        var nextGeneration = []\n\n        for (var p = 0; p < settings.population.length - 1; p += 2) {\n            var phenotype = settings.population[p];\n            var competitor = settings.population[p + 1];\n\n            nextGeneration.push(phenotype)\n            if (doesABeatB(phenotype, competitor)) {\n                if (Math.random() < 0.5) {\n                    nextGeneration.push(mutate(phenotype))\n                } else {\n                    nextGeneration.push(crossover(phenotype))\n                }\n            } else {\n                nextGeneration.push(competitor)\n            }\n        }\n\n        settings.population = nextGeneration;\n    }\n\n\n\n    function randomizePopulationOrder() {\n\n        for (var index = 0; index < settings.population.length; index++) {\n            var otherIndex = Math.floor(Math.random() * settings.population.length)\n            var temp = settings.population[otherIndex]\n            settings.population[otherIndex] = settings.population[index]\n            settings.population[index] = temp\n        }\n    }\n\n    return {\n        evolve: function (options) {\n\n            if (options) {\n                settings = settingWithDefaults(options, settings)\n            }\n\n            populate()\n            randomizePopulationOrder()\n            compete()\n            return this\n        },\n        best: function () {\n            var scored = this.scoredPopulation()\n            var result = scored.reduce(function (a, b) {\n                return a.score >= b.score ? a : b\n            }, scored[0]).phenotype\n            return cloneJSON(result)\n        },\n        bestScore: function () {\n            return settings.fitnessFunction(this.best())\n        },\n        population: function () {\n            return cloneJSON(this.config().population)\n        },\n        scoredPopulation: function () {\n            return this.population().map(function (phenotype) {\n                return {\n                    phenotype: cloneJSON(phenotype),\n                    score: settings.fitnessFunction(phenotype)\n                }\n            })\n        },\n        config: function () {\n            return cloneJSON(settings)\n        },\n        clone: function (options) {\n            return geneticAlgorithmConstructor(\n                settingWithDefaults(options,\n                    settingWithDefaults(this.config(), settings)\n                )\n            )\n        }\n    }\n}\n","import GeneticAlgorithmConstructor, { GeneticAlgorithmConfig, ScoredPhenotype } from '../geneticalgorithm/geneticalgorithm';\nimport { handlePlayerEffect, playerActions, setSelected } from '../utils/playGame';\nimport Chance from 'chance';\nimport { MonsterTarget, Play } from '../utils/types';\nimport { previousState } from '../utils/data';\nimport prettyjson from 'prettyjson';\nimport { Seq } from 'immutable';\nimport { rangeArr } from '../utils/zFunDump';\n\nexport type TinkererOptions = typeof defaultTinkererOptions & { turns?: number };\n\nexport const defaultTinkererOptions = {\n  playerSeed: \"Miau\",\n  weights: { monster: 0.70, player: 0.125, turn: 0.1, stamina: 0.075 },\n  debug: false,\n};\n\nexport const gameRender = (results: ScoredPhenotype<Play>[]): string => {\n  const best: ScoredPhenotype<Play> = Seq(results).maxBy(a => a.score)!!;\n  const lastState = previousState(best.phenotype);\n  return `BEST BY ${best.score} in ${best.phenotype.states.length - 1} turns\\n` +\n    prettyjson.render([\n      lastState.lastAttacks.map(({ origin, display, phase }) => [origin === 'Player' ? 'Player' : `${best.phenotype.enemies[origin]!!.lore.name} [${origin}]`, display, phase]),\n      Seq(best.phenotype.enemies).zip(Seq(lastState.enemies)).flatMap(([enemy, stats], idx) => [`[${idx}] ${enemy.lore.name}`, stats]).toArray(),\n      lastState.player,\n    ]);\n}\n\nexport default function tinkerer(play: Play, iter: number, optionsOverride?: Partial<TinkererOptions>): ScoredPhenotype<Play>[] {\n  const options: TinkererOptions = { ...defaultTinkererOptions, ...optionsOverride };\n  const range = rangeArr(iter);\n  const rand = new Chance(options.playerSeed);\n  const actions = playerActions(play.player);\n  const config: GeneticAlgorithmConfig<Play> = {\n    mutationFunction: (oldPlay) => {\n      const latestState = previousState(oldPlay);\n      const monsterHealth = latestState.enemies.reduce((acc, monster) => acc + monster.hp.current, 0);\n      const playerHealth = latestState.player.hp.current;\n      if (playerHealth === 0 || monsterHealth === 0) {\n        return oldPlay;\n      }\n      let newPlay = oldPlay;\n      while (rand.d6() === 6 || (previousState(newPlay).enemies[previousState(newPlay).target]?.hp ?? 0) <= 0) {\n        newPlay = setSelected(newPlay, rand.natural({ min: 0, max: previousState(newPlay).enemies.length - 1 }) as MonsterTarget);\n      }\n      const latest = previousState(newPlay);\n      const unavailable = actions.map((a, idx) => [a, idx] as const).filter(([a, _]) => a.stamina > latest.player.stamina.current).map(([_, idx]) => idx);\n      newPlay = handlePlayerEffect(\n        newPlay,\n        rand.natural({ min: 0, max: actions.length - 1, exclude: unavailable })\n      );\n      return newPlay;\n    },\n    fitnessFunction: (play) => {\n      const latestState = previousState(play);\n      const monsterHealth = latestState.enemies.reduce((acc, monster) => acc + monster.hp.current, 0);\n      const playerHealth = latestState.player.hp.current;\n      const playerStamina = latestState.player.stamina.current;\n      const startPlayerHealth = play.states[0].player.hp.max;\n      const startPlayerStamina = play.states[0].player.stamina.max;\n      const startMonsterHealth = play.states[0].enemies.reduce((acc, monster) => acc + monster.hp.current, 0);\n\n      const monsterKillingFitness = ((startMonsterHealth - monsterHealth) / startMonsterHealth);\n      const playerAlivenessFitness = (playerHealth / startPlayerHealth);\n      const killSpeedFitness = (play.turns - play.states.length) / play.turns;\n      const staminaFitness = (playerStamina / startPlayerStamina);\n\n      const fitness = (monsterKillingFitness * options.weights.monster) + (playerAlivenessFitness * options.weights.player) + (killSpeedFitness * options.weights.turn) + (staminaFitness * options.weights.stamina);\n      if (options.debug) {\n        console.log(`MH: ${monsterHealth} | PH: ${playerHealth} | TR: ${play.states.length}\\nFitness: ${fitness} | MF: ${monsterKillingFitness} | PF: ${playerAlivenessFitness} | SF: ${staminaFitness} | TF: ${killSpeedFitness}\\nWeights: ${JSON.stringify(options.weights)}`);\n      }\n      return fitness;\n    },\n    population: range.map((_) => play),\n    populationSize: iter,\n  }\n\n  const turns = optionsOverride?.turns ? optionsOverride?.turns : play.turns;\n  let gen = new GeneticAlgorithmConstructor<Play>(config);\n  for (let i = 0; i < turns; i++) {\n    gen = gen.evolve();\n  }\n  return gen.scoredPopulation();\n}\n","import React from \"react\";\nimport { Container, Card, Row, Button } from \"react-bootstrap\";\n\nconst Menu: React.FC<{\n  title: string;\n  states: string[];\n  onClick: (value: string) => void\n}> = ({ title, states, onClick }) =>\n    <Container fluid style={{ marginBottom: '105px' }}>\n      <Row className=\"g-2\">\n        <Card.Title>\n          {title}\n        </Card.Title>\n      </Row>\n      {states.map(state =>\n        <Row className=\"g-2\" key={state}>\n          <Button size=\"lg\" className=\"mb-2\"\n            key={state}\n            variant={'primary'}\n            onClick={() => { onClick(state); }}\n          >{state}</Button>\n        </Row>\n      )}</Container >;\n\nexport default Menu;\n","import React from \"react\";\nimport \"./App.css\";\n// import { readString } from \"react-papaparse\";\nimport { Snapshot, Play, EnemyStats, Enemy, EnemiesStats, Enemies } from \"./utils/types\";\n\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport Game from \"./components/Game\";\nimport PlayerBuilder from \"./components/PlayerBuilder\";\nimport EncounterBuilder from \"./components/EncounterBuilder\";\nimport { makeGameNew, makeGameNextLevel, handlePlayerEffect, PlayState, playState, setDisabledSkills, setSelected } from \"./utils/playGame\";\nimport tinkerer from \"./tinkerer/tinkerer\";\nimport { Seq } from \"immutable\";\nimport { previousState, randomEnemy, randomPlayer } from \"./utils/data\";\nimport { useMachine } from '@xstate/react';\nimport { gameMenuMachine } from \"./menuStateMachine\";\nimport Menu from \"./components/menus/Menu\";\n\nfunction App() {\n  const [state, send] = useMachine(gameMenuMachine, { devTools: true });\n  const event = state.event;\n  const onMenu = () => {\n    send('MENU');\n  }\n\n  switch (true) {\n    case state.matches('main'):\n      return <Menu\n        title={\"Main Menu\"}\n        states={Object.keys(gameMenuMachine.states.main.on)}\n        onClick={send}\n      />;\n    // QUICK\n    case state.matches({ quick: 'play' }): {\n      const player = randomPlayer();\n      const encounter = randomEnemy();\n      return <SingleGame\n        play={makeGameNew(player[0], player[1], [encounter[0]], [encounter[1]], 50, state.context.singleContext.seed)}\n        onMenu={onMenu}\n        timeTravel={true}\n        onGameEnd={(result, game) => { send(result === 'win' ? 'WIN' : 'LOSE', { result, game }) }}\n      />;\n    }\n    case state.matches({ quick: 'win' }):\n    case state.matches({ quick: 'lose' }):\n      return <Menu\n        title={`${event.result} in ${event.game.states.length - 1} turns`}\n        states={[\"MENU\"]}\n        onClick={send}\n      />;\n    // SINGLE\n    case state.matches({ single: 'player' }):\n      return <PlayerBuilder onSave={(player, playerStats) => { send('PLAYER', { player: [player, playerStats] }); }} />;\n    case state.matches({ single: 'encounter' }):\n      return <EncounterBuilder\n        player={event.player[0]}\n        onSave={(enemies, enemiesStats) => { send('ENCOUNTER', { encounter: [enemies, enemiesStats], player: event.player }) }}\n      />;\n    case state.matches({ single: 'play' }): {\n      return <SingleGame\n        play={makeGameNew(event.player[0], event.player[1], event.encounter[0], event.encounter[1], 50, state.context.singleContext.seed)}\n        onMenu={onMenu}\n        timeTravel={true}\n        onGameEnd={(result, game) => { send(result === 'win' ? 'WIN' : 'LOSE', { result, game }) }}\n      />;\n    }\n    case state.matches({ single: 'win' }):\n    case state.matches({ single: 'lose' }):\n      return <Menu\n        title={`${event.result} in ${event.game.states.length - 1} turns`}\n        states={[\"MENU\"]}\n        onClick={send}\n      />;\n    // ARCADE\n    case state.matches({ arcade: 'player' }): {\n      const encounter = randomEnemy();\n      return <PlayerBuilder onSave={(player, playerStats) => { send('PLAYER', { game: makeGameNew(player, playerStats, [encounter[0]], [encounter[1]], 50, state.context.survivalContext.seed) }); }} />;\n    }\n    case state.matches({ arcade: 'play' }): {\n      return <SingleGame\n        play={event.game}\n        timeTravel={false}\n        onMenu={onMenu}\n        onGameEnd={(result: PlayState, game: Play) => {\n          let encounter = [[], []] as [Enemy[], EnemyStats[]];\n          if (state.context.arcadeContext.victories >= 0) {\n            const otherEnemy = randomEnemy();\n            encounter = [[...encounter[0], otherEnemy[0]], [...encounter[1], otherEnemy[1]]];\n          }\n          if (state.context.arcadeContext.victories >= 2) {\n            const otherEnemy = randomEnemy();\n            encounter = [[...encounter[0], otherEnemy[0]], [...encounter[1], otherEnemy[1]]];\n          }\n          if (state.context.arcadeContext.victories >= 5) {\n            const otherEnemy = randomEnemy();\n            encounter = [[...encounter[0], otherEnemy[0]], [...encounter[1], otherEnemy[1]]];\n          }\n          const firstState: Snapshot = game.states[0];\n          send(result === 'win' ? 'WIN' : 'LOSE', { result, game: makeGameNextLevel(game.player, firstState.player, encounter[0] as Enemies, encounter[1] as EnemiesStats, 50, state.context.survivalContext.seed) });\n        }}\n      />;\n    }\n    case state.matches({ arcade: 'victory' }): {\n      return <Menu\n        title={`🎉🎉VICTORY!🎉🎉 Final score: ${state.context.arcadeContext.score}`}\n        states={[\"MENU\"]}\n        onClick={send}\n      />;\n    }\n    case state.matches({ arcade: 'defeat' }): {\n      return <Menu\n        title={`Failed after ${state.context.arcadeContext.victories} victories`}\n        states={[\"MENU\"]}\n        onClick={send}\n      />;\n    }\n    // SURVIVAL\n    case state.matches({ survival: 'player' }): {\n      const encounter = randomEnemy();\n      return <PlayerBuilder onSave={(player, playerStats) => { send('PLAYER', { game: makeGameNew(player, playerStats, [encounter[0]], [encounter[1]], 50, state.context.survivalContext.seed) }); }} />;\n    }\n    case state.matches({ survival: 'play' }): {\n      return <SingleGame\n        play={event.game}\n        onMenu={onMenu}\n        timeTravel={false}\n        onGameEnd={(result, game) => {\n          const encounter = randomEnemy();\n          const lastState: Snapshot = game.states[event.game.states.length - 1];\n          send(result === 'win' ? 'WIN' : 'LOSE', { result, game: makeGameNextLevel(game.player, lastState.player, [encounter[0]], [encounter[1]], 50, state.context.survivalContext.seed) });\n        }}\n      />;\n    }\n    case state.matches({ survival: 'defeat' }): {\n      return <Menu\n        title={`Completed after ${state.context.survivalContext.victories} victories`}\n        states={[\"MENU\"]}\n        onClick={send}\n      />;\n    }\n    default:\n      return <>{JSON.stringify(state.value)}</>;\n  }\n}\n\nconst SingleGame = ({ play, timeTravel, onGameEnd, onMenu }: { play: Play; timeTravel: boolean, onGameEnd: (state: PlayState, play: Play) => void, onMenu: () => void }) => {\n  const [game, setGame] = React.useState<Play>(play);\n  const [redo, setRedo] = React.useState<Snapshot[]>([]);\n\n  React.useEffect(() => {\n    setGame(play);\n  }, [play]);\n\n  React.useEffect(() => {\n    const gameState = playState(game);\n    const hasEnded = gameState !== 'playing';\n    if (hasEnded) {\n      onGameEnd(gameState, game);\n    }\n  }, [game]);\n\n  const timeTravelObj = timeTravel ? {\n    redo: redo.length > 0 ? (() => {\n      const newRedo = [...redo];\n      const latest = newRedo.pop() as Snapshot;\n      setRedo(newRedo);\n      setGame({ ...game, states: [...game.states, latest] });\n    }) : undefined,\n    undo: () => {\n      setRedo([...redo, previousState(game)]);\n      setGame({ ...game, states: [game.states[0], ...game.states.slice(1, -1)] });\n    }\n  } : undefined;\n\n  return (<Game\n    game={game}\n    timeTravel={timeTravelObj}\n    onMenu={onMenu}\n    setSelected={(idx) => { setRedo([]); setGame(setSelected(game, idx)); }}\n    setDisabledSkills={(disabled) => { setRedo([]); setGame(setDisabledSkills(game, disabled)) }}\n    handlePlayerEffect={(idx) => { setRedo([]); setGame(handlePlayerEffect(game, idx)); }}\n    solveGame={(iterations) => setGame(Seq(tinkerer(game, iterations, { turns: game.turns - game.states.length })).maxBy(a => a.score)!!.phenotype)}\n    hint={(iterations) =>\n      setGame({\n        ...game,\n        states: [...game.states, Seq(tinkerer(game, iterations, { turns: game.turns - game.states.length })).maxBy(a => a.score)!!.phenotype.states[game.states.length]]\n      })\n    }\n  />\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport { createRoot } from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorkerRegistration from './serviceWorkerRegistration';\nimport reportWebVitals from './reportWebVitals';\n\nconst container = document.getElementById('root');\nconst root = createRoot(container!);\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://cra.link/PWA\nserviceWorkerRegistration.register();\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","import { Opaque } from \"type-fest\";\nimport { allRanges, enemies, makeStat } from \"./data\";\nimport { callEffectFun, Effect, effectFunCall, Enemies, EnemiesStats, Enemy, EnemyStats, FunIndex, MonsterTarget, Play, PlayerStats, Snapshot, Status, Target } from \"./types\";\nimport { clamp, pipe } from \"./zFunDump\";\n\n// #region Effect funs\n\nexport function extractFunction({ effects }: Effect): ReduceFun {\n  return (origin, play, startState) => effects.reduce((acc, { index, parameters }) =>\n    callEffectFun(effectFunRepo, index, parameters)(origin, ...acc), [play, startState]);\n}\n\nconst effectFun = <T>(fun: ParametrizedFun<T>): EffectFun<T> =>\n  ((params) => (origin, play, oldState) => fun(params)(origin, play, oldState)) as EffectFun<T>;\n\nconst applyPoison = (play: Play, currentState: Snapshot, { target, turns }: ReduceFunctionT['Reduce:PoisonBOT']) =>\n  pipe(\n    target === 'Player'\n      ? actions.changeStatPlayer(currentState, ({ hp }) => ({ hp: { ...hp, current: Math.max(0, hp.current - 1) } }))\n      : actions.changeStatMonster(currentState, currentState.target, ({ hp }) => ({ hp: { ...hp, current: Math.max(0, hp.current - 1) } })),\n    (newState) =>\n      turns > 0\n        ? actions.addBotEffect(newState, 'Player', { display: `Poison ${target === 'Player' ? 'Player' : play.enemies[target]!!.lore.name + \"[\" + (target + 1)} + \"]\"`, tooltip: '', range: allRanges, priority: 4, effects: [effectFunCall(['Reduce:PoisonBOT', { target: target, turns: turns - 1 }])] })\n        : newState\n  )\n\ntype SystemFunctionT = {\n  'Utility:Cleanup': undefined;\n  'Debug:GGWP': undefined;\n  'Debug:Sudoku': undefined;\n}\ntype BasicFunctionT = {\n  'Basic:Rest': undefined;\n  'Basic:Move': { amount: number };\n  'Basic:Attack': { amount: number };\n  'Basic:Stamina': { amount: number };\n}\nexport type EffectTarget = 'Player' | 'Monster';\ntype StatusFunctionT = {\n  'Effect:Poison': { target: EffectTarget; turns: number };\n  'Effect:Dodge': undefined;\n  'Effect:Armor': { amount: number };\n  'Effect:Stun': undefined;\n  'Effect:Bleed': { target: EffectTarget; turns: number };\n  'Effect:Defence': { target: EffectTarget; amount: number };\n  'Effect:Speed': { target: EffectTarget; amount: number };\n  'Effect:Attack': { target: EffectTarget; amount: number };\n}\ntype MonsterFunctionT = {\n  'Monster:Summon': { enemy: number };\n  'Monster:Dead': undefined;\n  'Monster:Attack': { amount: number };\n  'Monster:Move': { amount: number };\n}\ntype ItemFunctionT = {\n  'Wand:MagicBolt': undefined;\n  'BootsOfFlight:EOT': undefined;\n}\ntype ReduceFunctionT = {\n  'Reduce:PoisonBOT': { target: Target; turns: number };\n}\n\nconst engineFunctions = {\n  'Debug:GGWP': effectFun(\n    () => (_, play, currentState) => [play, { ...currentState, enemies: currentState.enemies.map(m => ({ ...m, hp: { ...m.hp, current: 0 } })) as EnemiesStats }]\n  ),\n  'Debug:Sudoku': effectFun(\n    () => (_, play, currentState) => [play, { ...currentState, player: { ...currentState.player, hp: { ...currentState.player.hp, current: 0 } } }]\n  ),\n  'Utility:Cleanup': effectFun(\n    () => (_origin, play, currentState) => [play,\n      pipe(\n        actions.changeStatusPlayer(currentState, (o) => ({ ...o, armor: { amount: 0 }, bleed: { turns: Math.max(o.bleed.turns - 1, 0) }, dodge: { active: false }, stun: { active: false } })),\n        (newState) =>\n          newState.enemies.reduce((acc, v, idx) => actions.changeStatusMonster(acc, idx as MonsterTarget, (o) => ({ ...o, armor: { amount: 0 }, bleed: { turns: Math.max(o.bleed.turns - 1, 0) }, dodge: { active: false }, stun: { active: false } })), currentState)\n      )\n    ],\n  ),\n}\n\nconst effectFunRepo: EffectFunctionRepository = {\n  ...engineFunctions,\n  // #region BASIC\n  'Basic:Rest': effectFun(\n    () => (_origin, play, currentState) => [play, currentState]\n  ),\n  'Basic:Move': effectFun(\n    ({ amount }) => (_origin, play, currentState) => [play, actions.changeDistance(currentState, currentState.target, amount)]\n  ),\n  'Basic:Attack': effectFun(\n    ({ amount }) => (_origin, play, currentState) => [play, actions.attackMonster(currentState, currentState.target, amount)]\n  ),\n  'Basic:Stamina': effectFun(\n    ({ amount }) => (_origin, play, currentState) => [play, actions.modifyPlayerStamina(currentState, amount)]\n  ),\n  // #endregion BASIC\n  // #region EFFECTS\n  'Effect:Dodge': effectFun(\n    () => (origin, play, currentState) => [play,\n      origin === 'Player'\n        ? actions.changeStatusPlayer(currentState, (o) => ({ ...o, dodge: { active: true } }))\n        : actions.changeStatusMonster(currentState, currentState.target, (o) => ({ ...o, dodge: { active: true } }))\n    ]\n  ),\n  'Effect:Armor': effectFun(\n    ({ amount }) => (origin, play, currentState) => [play,\n      origin === 'Player'\n        ? actions.changeStatusPlayer(currentState, (o) => ({ ...o, armor: { amount: amount } }))\n        : actions.changeStatusMonster(currentState, currentState.target, (o) => ({ ...o, armor: { amount: amount } }))\n    ]\n  ),\n  'Effect:Stun': effectFun(\n    () => (origin, play, currentState) => [play,\n      origin === 'Player'\n        ? actions.changeStatusMonster(currentState, currentState.target, (o) => ({ ...o, stun: { active: true } }))\n        : actions.changeStatusPlayer(currentState, (o) => ({ ...o, stun: { active: true } }))\n    ]\n  ),\n  'Effect:Bleed': effectFun(\n    ({ target, turns }) => (_, play, currentState) => [play,\n      target !== 'Player'\n        ? actions.changeStatusPlayer(currentState, (o) => ({ ...o, bleed: { turns: turns } }))\n        : actions.changeStatusMonster(currentState, currentState.target, (o) => ({ ...o, bleed: { turns: turns } }))\n    ]\n  ),\n  'Effect:Poison': effectFun(\n    ({ target, turns }) => (_, play, currentState) => [play,\n      pipe(target === 'Player' ? 'Player' as Target : currentState.target, (gameTarget) =>\n        applyPoison(play, currentState, { target: gameTarget, turns })\n      )\n    ],\n  ),\n  'Reduce:PoisonBOT': effectFun(\n    (params) => (_, play, currentState) =>\n      [play, applyPoison(play, currentState, params)],\n  ),\n  'Effect:Attack': effectFun(\n    ({ target, amount }) => (_, play, currentState) => [play,\n      target === 'Player'\n        ? actions.changeStatPlayer(currentState, ({ attack }) => ({ attack: { ...attack, current: Math.min(attack.current + amount, attack.max) } }))\n        : actions.changeStatMonster(currentState, currentState.target, ({ attack }) => ({ attack: { ...attack, current: Math.min(attack.current + amount, attack.max) } }))\n    ]\n  ),\n  'Effect:Speed': effectFun(\n    ({ target, amount }) => (_, play, currentState) => [play,\n      target === 'Player'\n        ? actions.changeStatPlayer(currentState, ({ speed }) => ({ speed: { ...speed, current: Math.min(speed.current + amount, speed.max) } }))\n        : actions.changeStatMonster(currentState, currentState.target, ({ speed }) => ({ speed: { ...speed, current: Math.min(speed.current + amount, speed.max) } }))\n    ]\n  ),\n  'Effect:Defence': effectFun(\n    ({ target, amount }) => (_, play, currentState) => [play,\n      target === 'Player'\n        ? actions.changeStatPlayer(currentState, ({ defence }) => ({ defence: { ...defence, current: Math.min(defence.current + amount, defence.max) } }))\n        : actions.changeStatMonster(currentState, currentState.target, ({ defence }) => ({ defence: { ...defence, current: Math.min(defence.current + amount, defence.max) } }))\n    ]\n  ),\n  // #endregion EFFECTS\n  // #region MONSTERS\n  'Monster:Attack': effectFun(\n    ({ amount }) => (_origin, play, currentState) => [play, actions.attackPlayer(currentState, amount)]\n  ),\n  'Monster:Summon': effectFun(\n    ({ enemy }) => (_origin, play, currentState) => actions.addEnemy(play, currentState, enemies[enemy][0], enemies[enemy][1])\n  ),\n  'Monster:Dead': effectFun(\n    () => (_origin, play, currentState) => [play, currentState]\n  ),\n  'Monster:Move': effectFun(\n    () => (origin, play, currentState) => [play, actions.changeDistance(currentState, origin, -2)]\n  ),\n  // #endregion MONSTERS\n  // #region ITEMS\n  'BootsOfFlight:EOT': effectFun(\n    () => (_, play, currentState) => [play, currentState.enemies.reduce((s, _m, idx) => actions.changeDistance(s, idx as MonsterTarget, 2), currentState)]\n  ),\n  'Wand:MagicBolt': effectFun(\n    () => (_, play, currentState) => {\n      let state = currentState;\n      while (state.player.stamina.current) {\n        state = actions.modifyPlayerStamina(state, -2);\n        state = actions.attackMonster(state, currentState.target, 1)\n      }\n      return [play, state];\n    }\n  ),\n  // #endregion ITEMS\n};\n\nexport type EffectFunctionT = SystemFunctionT & BasicFunctionT & StatusFunctionT & ReduceFunctionT & MonsterFunctionT & ItemFunctionT;\n\nexport type ReduceFun = (origin: Target, play: Play, newState: Snapshot) => [Play, Snapshot];\nexport type ParametrizedFun<T> = (params: T) => ReduceFun;\nexport type EffectFun<T> = Opaque<ParametrizedFun<T>, ParametrizedFun<T>>;\n\nexport type EffectFunctionRepository = { [k in keyof EffectFunctionT]: (params: EffectFunctionT[k]) => ReduceFun };\nexport type EffectFunRepoIndex = keyof EffectFunctionT & FunIndex;\nexport type EffectFunParams<T extends EffectFunRepoIndex> = Parameters<EffectFunctionRepository[T]>[0];\n\n// #endregion\n// #region Modify state\n\nconst updateMonster = (enemies: EnemiesStats, target: Target, override: (stats: EnemyStats) => Partial<EnemyStats>): EnemiesStats =>\n  enemies.map((m, idx) =>\n    (idx === target)\n      ? { ...m, ...override(m) }\n      : m) as EnemiesStats;\n\nconst updatePlayer = (curr: Snapshot, override: (player: PlayerStats) => Partial<PlayerStats>): Snapshot => {\n  return {\n    ...curr,\n    player: { ...curr.player, ...override(curr.player) }\n  };\n}\n\nconst updatePlayerStat = <T extends keyof PlayerStats>(curr: Snapshot, key: T, modify: (player: PlayerStats[T]) => Partial<PlayerStats[T]>): Snapshot => {\n  const player = curr.player;\n  player[key] = {\n    ...player[key],\n    ...modify(player[key])\n  }\n  return {\n    ...curr,\n    player\n  };\n}\n\nconst actions = {\n  attackPlayer,\n  attackMonster,\n  changeStatPlayer: updatePlayer,\n  changeStatMonster: (curr: Snapshot, target: MonsterTarget, f: (stats: EnemyStats) => Partial<EnemyStats>): Snapshot => ({\n    ...curr,\n    enemies: updateMonster(curr.enemies, target, f),\n  }),\n  changeStatusPlayer: (curr: Snapshot, updateStatus: (oldStatus: Status) => Status): Snapshot => ({\n    ...curr,\n    player: { ...curr.player, status: updateStatus(curr.player.status) }\n  }),\n  changeStatusMonster: (curr: Snapshot, target: MonsterTarget, updateStatus: (oldStatus: Status) => Status): Snapshot => ({\n    ...curr,\n    enemies: updateMonster(curr.enemies, target, ({ status }) => ({ status: updateStatus(status) })),\n  }),\n  changeDistance: (curr: Snapshot, origin: Target, amount: number): Snapshot =>\n  ({\n    ...curr,\n    enemies: updateMonster(curr.enemies, origin, ({ distance }) => ({ distance: clamp(distance + amount, 0, 4) as MonsterTarget })),\n  }),\n  removeMonster: (currPlay: Play, currSnap: Snapshot, target: MonsterTarget): [Play, Snapshot] =>\n    [\n      { ...currPlay, enemies: currPlay.enemies.filter((_, idx) => idx === target) as Enemies },\n      { ...currSnap, target: 0, enemies: currSnap.enemies.filter((_, idx) => idx === target) as EnemiesStats }\n    ],\n  modifyPlayerStamina: (\n    curr: Snapshot,\n    amount: number,\n  ): Snapshot =>\n    updatePlayerStat(curr, 'stamina', stamina => ({\n      current: clamp(stamina.current + amount, 0, stamina.max)\n    })),\n  addEotEffect: (\n    curr: Snapshot,\n    origin: Target,\n    effect: Effect,\n  ): Snapshot => ({\n    ...curr,\n    eot: [...(curr.eot ?? []), [origin, effect]],\n  }),\n  addBotEffect: (\n    curr: Snapshot,\n    origin: Target,\n    effect: Effect,\n  ): Snapshot => ({\n    ...curr,\n    bot: [...(curr.eot ?? []), [origin, effect]],\n  }),\n  addEnemy: (\n    play: Play,\n    curr: Snapshot,\n    enemy: Enemy,\n    enemyStats: EnemyStats,\n  ): [Play, Snapshot] => {\n    return play.enemies.length < 5\n      ? [{\n        ...play,\n        enemies: [...play.enemies, enemy] as Enemies,\n      }, {\n        ...curr,\n        enemies: [...curr.enemies, enemyStats] as EnemiesStats,\n      }]\n      : [play, curr];\n  }\n};\n\nfunction attackMonster(curr: Snapshot, target: MonsterTarget, amount: number): Snapshot {\n  const monster = curr.enemies[target]!!;\n  const armor = monster.status.armor.amount;\n  const damage = amount + curr.player.attack.current;\n  const afterDefence = Math.max(damage - monster.defence.current, 0);\n  const afterArmor = Math.max(afterDefence - armor, 0);\n  const armorSpent = armor - (afterDefence - afterArmor);\n  const afterBleed = afterArmor + (monster.status.bleed.turns > 0 ? 1 : 0);\n  return ({\n    ...curr,\n    enemies: updateMonster(curr.enemies, target, ({ status, hp }) => ({\n      hp: { max: hp.max, current: clamp(hp.current - afterBleed, 0, hp.max) },\n      status:\n        { ...status, armor: { amount: armorSpent } }\n    })),\n  });\n}\n\nfunction attackPlayer(curr: Snapshot, amount: number): Snapshot {\n  const armor = curr.player.status.armor.amount;\n  const damage = amount + curr.player.attack.current;\n  const afterDefence = Math.max(damage - curr.player.defence.current, 0);\n  const afterArmor = Math.max(afterDefence - armor, 0);\n  const armorSpent = armor - (afterDefence - afterArmor);\n  const afterBleed = afterArmor + (curr.player.status.bleed.turns > 0 ? 1 : 0);\n  return updatePlayer(curr, ({ hp, status }) => ({\n    hp: { max: hp.max, current: clamp(hp.current - afterBleed, 0, hp.max) },\n    status: { ...status, armor: { amount: status.armor.amount - armorSpent } }\n  }));\n}\n\n// #endregion\n// #region Stat funs\n\nexport type StatsFunIndex = keyof typeof statsRepository;\nexport const statsRepository = {\n  '+Health': (player: PlayerStats, enemies: EnemiesStats): [PlayerStats, EnemiesStats] => [{ ...player, hp: makeStat(player.hp.current + 3) }, enemies],\n  '+StaPerTurn': (player: PlayerStats, enemies: EnemiesStats): [PlayerStats, EnemiesStats] => [{ ...player, staminaPerTurn: makeStat(player.staminaPerTurn.current + 1) }, enemies],\n  '+Stamina': (player: PlayerStats, enemies: EnemiesStats): [PlayerStats, EnemiesStats] => [{ ...player, stamina: makeStat(player.stamina.current + 2) }, enemies],\n  '+Attack': (player: PlayerStats, enemies: EnemiesStats): [PlayerStats, EnemiesStats] => [{ ...player, attack: makeStat(player.attack.current + 1) }, enemies],\n  '+Speed': (player: PlayerStats, enemies: EnemiesStats): [PlayerStats, EnemiesStats] => [{ ...player, speed: makeStat(player.speed.current + 1) }, enemies],\n  '+Defence': (player: PlayerStats, enemies: EnemiesStats): [PlayerStats, EnemiesStats] => [{ ...player, defence: makeStat(player.defence.current + 1) }, enemies],\n\n  '-Health': (player: PlayerStats, enemies: EnemiesStats): [PlayerStats, EnemiesStats] => [{ ...player, hp: makeStat(player.hp.current - 3) }, enemies],\n  '-StaPerTurn': (player: PlayerStats, enemies: EnemiesStats): [PlayerStats, EnemiesStats] => [{ ...player, staminaPerTurn: makeStat(player.staminaPerTurn.current - 1) }, enemies],\n  '-Stamina': (player: PlayerStats, enemies: EnemiesStats): [PlayerStats, EnemiesStats] => [{ ...player, stamina: makeStat(player.stamina.current - 2) }, enemies],\n  '-Attack': (player: PlayerStats, enemies: EnemiesStats): [PlayerStats, EnemiesStats] => [{ ...player, attack: makeStat(player.attack.current - 1) }, enemies],\n  '-Speed': (player: PlayerStats, enemies: EnemiesStats): [PlayerStats, EnemiesStats] => [{ ...player, speed: makeStat(player.speed.current - 1) }, enemies],\n  '-Defence': (player: PlayerStats, enemies: EnemiesStats): [PlayerStats, EnemiesStats] => [{ ...player, defence: makeStat(player.defence.current - 1) }, enemies],\n}\n\n// #endregion","import { Enemies, Player, Snapshot, MonsterTarget, Target, InventoryEffect, EnemiesStats, PlayerStats, Play, RNG, StatsFun, Effect, PlayerTarget, effectFunCall, DisabledSkills, safeEntries, EffectPhase } from \"./types\";\nimport { Seq, Set } from \"immutable\";\nimport { allRanges, previousState } from \"./data\";\nimport { Chance } from \"chance\";\n// @ts-ignore fails on scripts despite having a d.ts file\nimport { toIndexableString } from 'pouchdb-collate';\nimport { extractFunction, statsRepository } from \"./effectRepository\";\nimport { clamp, rangeArr } from \"./zFunDump\";\n\n/**\n * @returns min inclusive, max exclusive rand\n */\nfunction turnDeterministicRng(turns: number, randPerTurn: number, monsterSeed: string | number): RNG {\n  const monsterChance = new Chance(monsterSeed);\n  const monsterRng =\n    rangeArr(turns)\n      .map(_ => rangeArr(randPerTurn)\n        .map(_ => monsterChance.floating({ min: 0, max: 1, fixed: 2 })));\n  return monsterRng as RNG;\n}\n\nexport const turnRng = (play: Play, turn: number): ((min: number, max: number) => number) => {\n  const turnRng = [...play.rng[turn]];\n  return (min: number, max: number) => Math.floor(((max - min) * turnRng.pop()!!) + min);\n}\n\nexport const playerPassives = (player: Player): StatsFun[] =>\n  Object.values(player.build).flatMap((s) => s.passives ?? []).map(i => statsRepository[i]);\n\nexport const playerActions = (player: Player): InventoryEffect[] =>\n  Object.values(player.build).flatMap((s) => s.effects ?? []);\n\nconst enemiesBotEffects = (enemies: Enemies): [MonsterTarget, Effect][] =>\n  enemies.flatMap((e, idx) => (e.bot ?? []).map(eff => [idx as MonsterTarget, eff] as const))\n    // Sure, typescript\n    .map(a => [...a]);\n\nconst enemiesEotEffects = (enemies: Enemies): [MonsterTarget, Effect][] =>\n  enemies.flatMap((e, idx) => (e.eot ?? []).map(eff => [idx as MonsterTarget, eff] as const))\n    // Sure, typescript\n    .map(a => [...a]);\n\nexport const playerBotEffects = (player: Player, d: DisabledSkills): [PlayerTarget, Effect][] =>\n  safeEntries(player.build).flatMap(([k, s]) => !Set(d).has(k) ? s.bot ?? [] : []).map(a => ['Player', a]);\n\nexport const playerEotEffects = (player: Player, d: DisabledSkills): [PlayerTarget, Effect][] =>\n  safeEntries(player.build).flatMap(([k, s]) => !Set(d).has(k) ? s.eot ?? [] : []).map(a => ['Player', a]);\n\nexport const buildPlayer = (player: Player, playerStats: PlayerStats, enemiesStats: EnemiesStats): [PlayerStats, EnemiesStats] =>\n  playerPassives(player).reduce(([p, e], fun) => fun(p, e), [playerStats, enemiesStats]);\n\nexport function makeGameNew(player: Player, playerStats: PlayerStats, enemies: Enemies, enemiesStats: EnemiesStats, turns: number, seed: number | string, randPerTurn: number = 20): Play {\n  const [playerGameStats, enemyGameStats] = buildPlayer(player, playerStats, enemiesStats);\n  return makeGameNextLevel(player, playerGameStats, enemies, enemyGameStats, turns, seed, randPerTurn);\n}\n\nexport function makeGameNextLevel(player: Player, playerStats: PlayerStats, enemies: Enemies, enemiesStats: EnemiesStats, turns: number, seed: number | string, randPerTurn: number = 20): Play {\n  return {\n    player,\n    enemies,\n    states: [{\n      player: playerStats,\n      enemies: enemiesStats,\n      target: 0,\n      lastAttacks: [],\n      disabledSkills: []\n    }],\n    rng: turnDeterministicRng(turns, randPerTurn, seed),\n    turns,\n    id: toIndexableString([player, enemies, turns, seed]),\n    seed,\n  };\n}\n\nconst reduceFuns = (funs: [Target, Effect][], p: Play, s: Snapshot, dodgeable: boolean, phase: EffectPhase): [Play, Snapshot] =>\n  Seq(funs)\n    .sortBy(([origin, a]) => {\n      const priorityBonus = origin === 'Player' ? s.player.speed.current : s.enemies[origin]!!.speed.current;\n      return clamp(a.priority - priorityBonus, 0, 4);\n    })\n    .reduce((acc, value) => {\n      const [origin, effect] = value;\n      const [oldPlay, oldState] = acc;\n      const monsterId = origin === 'Player' ? oldState.target : origin;\n      const targetMonster = oldState.enemies[monsterId]!!;\n\n      const isDeadAttackingMonster = origin !== 'Player' && targetMonster.hp.current <= 0;\n      if (isDeadAttackingMonster) {\n        const newState: Snapshot = {\n          ...oldState,\n          lastAttacks: [...oldState.lastAttacks, { origin, display: `💀💀DEAD💀💀 ${effect.display}`, phase }]\n        };\n        return [oldPlay, newState];\n      }\n\n      const isStunnedPlayer = origin === 'Player' && oldState.player.status.stun.active;\n      const isStunnedMonster = origin !== 'Player' && targetMonster.status.stun.active;\n      const isStunned = isStunnedPlayer || isStunnedMonster;\n      if (isStunned) {\n        const newState: Snapshot = {\n          ...oldState,\n          lastAttacks: [...oldState.lastAttacks, { origin, display: `💫💫STUNNED💫💫 ${effect.display}`, phase }]\n        };\n        return [oldPlay, newState];\n      }\n\n\n      const isInRange = Set([...effect.range]).has(targetMonster.distance);\n      if (!isInRange) {\n        const newState: Snapshot = {\n          ...oldState,\n          lastAttacks: [...oldState.lastAttacks, { origin, display: `❌❌WHIFFED❌❌ ${effect.display}`, phase }]\n        };\n        return [oldPlay, newState];\n      }\n\n      const monsterDodged = dodgeable && origin === 'Player' && targetMonster.status.dodge.active;\n      if (monsterDodged) {\n        const newState: Snapshot = {\n          ...oldState,\n          enemies: oldState.enemies.map((e, i) => i === monsterId ? { ...e, status: { ...e.status, dodge: { active: false } } } : e) as EnemiesStats,\n          lastAttacks: [...oldState.lastAttacks, { origin, display: `💨💨DODGED💨💨 ${effect.display}`, phase }]\n        };\n        return [oldPlay, newState];\n      }\n\n      const playerDodged = dodgeable && origin !== 'Player' && oldState.player.status.dodge.active;\n      if (playerDodged) {\n        const newState: Snapshot = {\n          ...oldState,\n          player: { ...oldState.player, status: { ...oldState.player.status, dodge: { active: false } } },\n          lastAttacks: [...oldState.lastAttacks, { origin, display: `💨💨DODGED💨💨 ${effect.display}`, phase }]\n        };\n        return [oldPlay, newState];\n      }\n\n      const [newPlay, newState] = extractFunction(effect)(origin, oldPlay, oldState);\n      const finalState: Snapshot = { ...newState, lastAttacks: [...newState.lastAttacks, { origin, display: effect.display, phase }] };\n      return [newPlay, finalState];\n    }, [p, s]);\n\nconst applyEffectStamina = (amount: number): Effect =>\n  ({ display: `${amount >= 0 ? '+' : ''}${amount} 💪`, tooltip: `Use ${amount} stamina`, effects: [effectFunCall(['Basic:Stamina', { amount }])], range: allRanges, priority: 0 });\n\nconst effectEotCleanup: Effect =\n  ({ display: 'Cleanup', tooltip: 'Cleanup', effects: [effectFunCall('Utility:Cleanup')], range: allRanges, priority: 0 });\n\nconst effectDead: Effect =\n  { display: \"⚰\", tooltip: \"⚰\", priority: 4, effects: [effectFunCall(\"Monster:Dead\")], range: allRanges };\n\nexport const handlePlayerEffect = (play: Play, index: number): Play => {\n\n  const lastTurnState = previousState(play);\n  const usedSkill = playerActions(play.player)[index];\n  const bot = lastTurnState.bot ?? [];\n  const eot = lastTurnState.eot ?? [];\n\n  const initialState: Snapshot = {\n    ...lastTurnState,\n    lastAttacks: [],\n    bot: undefined,\n    eot: undefined,\n  };\n\n  // Stamina\n  const [preBotPlay, preBotState] =\n    reduceFuns([['Player', applyEffectStamina(lastTurnState.player.staminaPerTurn.current - usedSkill.stamina)]], play, initialState, false, 'MAIN');\n\n  // BOT\n  // Lingering effects\n  const [postBotPlay, postBotState] = reduceFuns(bot, preBotPlay, preBotState, false, 'BOT');\n  // Player & Monster effects\n  const entitiesBot: [Target, Effect][] = [...playerBotEffects(postBotPlay.player, postBotState.disabledSkills), ...enemiesBotEffects(postBotPlay.enemies)];\n  const [postEntitiesBotPlay, postEntitiesBotState] = reduceFuns(entitiesBot, postBotPlay, postBotState, false, 'BOT');\n\n  // Turn\n  const rand = turnRng(postEntitiesBotPlay, postEntitiesBotPlay.states.length);\n  const turnFunctions: [Target, Effect][] = Seq(postEntitiesBotPlay.enemies).zip(Seq(postEntitiesBotState.enemies))\n    .map(([e, stats], idx) =>\n      [idx as Target,\n      stats.hp.current > 0\n        ? e.effects[e.rolls[stats.distance][rand(0, e.rolls[stats.distance].length)]]\n        : effectDead] as const)\n    .concat([['Player' as Target, usedSkill] as const])\n    .toArray()\n    // Sure, typescript\n    .map(a => [...a]);\n\n  const [newPlay, newState] =\n    reduceFuns(turnFunctions, postEntitiesBotPlay, postEntitiesBotState, true, 'MAIN');\n\n  // EOT\n  // Player & Monster effects\n  const entitiesEot = [...playerEotEffects(newPlay.player, newState.disabledSkills), ...enemiesEotEffects(newPlay.enemies)];\n  const [postPlayerEotPlay, postPlayerEotState] = reduceFuns(entitiesEot, newPlay, newState, false, 'EOT');\n  // Lingering effects\n  const [postEotPlay, postEotState] = reduceFuns(eot, postPlayerEotPlay, postPlayerEotState, false, 'EOT');\n  // Cleanup\n  const [postCleanup, postCleanupState] = reduceFuns([['Player' as Target, effectEotCleanup]], postEotPlay, postEotState, false, 'EOT');\n\n  return {\n    ...postCleanup,\n    states: [...postCleanup.states, postCleanupState],\n  };\n};\n\nexport const setSelected = (play: Play, target: MonsterTarget): Play => {\n  play.states[play.states.length - 1].target = target;\n  return {\n    ...play,\n    states: [...play.states],\n  };\n}\n\nexport const setDisabledSkills = (play: Play, disabled: DisabledSkills): Play => {\n  play.states[play.states.length - 1].disabledSkills = disabled;\n  return {\n    ...play,\n    states: [...play.states],\n  };\n}\n\nexport type PlayState = 'win' | 'loss' | 'playing'\n\nexport const playState = (play: Play): PlayState => {\n  const state = play.states[play.states.length - 1];\n  return state.player.hp.current <= 0\n    ? 'loss'\n    : state.enemies.reduce((acc, monster) => acc + monster.hp.current, 0) <= 0\n      ? 'win'\n      : 'playing';\n}\n\nexport const scoreGame = (play: Play): number => {\n  const firstState = play.states[0];\n  const lastState = play.states[play.states.length - 1];\n\n  const turns = play.states.length; // 1-50\n  const hpLoss = Math.max(0, firstState.player.hp.max - lastState.player.hp.current) / firstState.player.hp.max; // 0-1\n  const staminaLoss = Math.max(0, firstState.player.stamina.max - lastState.player.stamina.current) / firstState.player.hp.max; // 0-1\n  const enemies = lastState.enemies.length; // 1-5\n\n  return enemies * ((500 * hpLoss) + (150 * staminaLoss) + (500 - (turns * 10)));\n}\n","export const rangeArr = (max: number, min: number = 0) => {\n  let range = [...Array(max).keys()];\n  if (min >= 0) {\n    range.filter(i => i < min)\n  }\n  return range;\n}\n\nexport const clamp = (num: number, min: number, max: number = Infinity) =>\n  Math.min(Math.max(num, min), max);\n\nexport const pipe = <T, U>(t: T, f: (t: T) => U): U =>\n  f(t)\n\nexport const pipe2 = <T, U, A>(t: T, u: U, f: (t: T, u: U) => A): A =>\n  f(t, u)\n\nexport const pipe3 = <T, U, V, A>(t: T, u: U, v: V, f: (t: T, u: U, v: V) => A): A =>\n  f(t, u, v)","import { Opaque } from \"type-fest\";\nimport { EffectFunParams, EffectFunctionRepository, EffectFunRepoIndex, StatsFunIndex } from \"./effectRepository\";\n\nexport type Tuple<T, N extends number> = N extends N ? number extends N ? T[] : _TupleOf<T, N, []> : never;\ntype _TupleOf<T, N extends number, R extends unknown[]> = R['length'] extends N ? R : _TupleOf<T, N, [T, ...R]>;\n\nexport type Nel<T> = [T, ...T[]];\n\ntype Length<T extends any[]> =\n  T extends { length: infer L } ? L : never;\ntype BuildTuple<L extends number, T extends any[] = []> =\n  T extends { length: L } ? T : BuildTuple<L, [...T, any]>;\nexport type Subtract<A extends number, B extends number> =\n  BuildTuple<A> extends [...(infer U), ...BuildTuple<B>]\n  ? Length<U>\n  : never;\ntype EQ<A, B> =\n  A extends B\n  ? (B extends A ? true : false)\n  : false;\ntype AtTerminus<A extends number, B extends number> =\n  A extends 0\n  ? true\n  : (B extends 0 ? true : false);\ntype LT<A extends number, B extends number> =\n  AtTerminus<A, B> extends true\n  ? EQ<A, B> extends true\n  ? false\n  : (A extends 0 ? true : false)\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  : LT<Subtract<A, 1>, Subtract<B, 1>>;\n\nexport type TupleUpTo<T, N extends number> =\n  EQ<N, 1> extends true ? [T] : TupleUpTo<T, Subtract<N, 1>> | Tuple<T, N>;\n\nexport type UpTo<N extends number> =\n  EQ<N, 0> extends true ? 0 : UpTo<Subtract<N, 1>> | N;\n\nexport interface Stat {\n  max: number,\n  current: UpTo<Stat['max']>,\n}\n\nexport type Status = {\n  dodge: { active: boolean },\n  stun: { active: boolean },\n  armor: { amount: number },\n  bleed: { turns: number }\n};\nexport interface PlayerStats {\n  hp: Stat,\n  stamina: Stat,\n  staminaPerTurn: Stat,\n  speed: Stat,\n  attack: Stat,\n  defence: Stat,\n  status: Status\n};\nexport interface EnemyStats {\n  hp: Stat,\n  speed: Stat,\n  attack: Stat,\n  defence: Stat,\n  distance: UpTo<Subtract<Distances, 1>>,\n  status: Status\n};\n\nexport type Priorities = 5;\nexport type Distances = 5;\nexport type MonsterCount = 5;\nexport type Staminas = 10;\n\nexport type EffectPhase = 'MAIN' | 'EOT' | 'BOT';\nexport interface EffectSummary {\n  origin: Target;\n  display: string;\n  phase: EffectPhase;\n}\n\nexport type DisabledSkills = (keyof BuildRepository)[];\nexport interface Snapshot {\n  player: PlayerStats;\n  enemies: EnemiesStats;\n  target: MonsterTarget;\n  lastAttacks: EffectSummary[];\n  bot?: Nel<[Target, Effect]>;\n  eot?: Nel<[Target, Effect]>;\n  disabledSkills: DisabledSkills;\n};\n\nexport type RNG = Opaque<number[][], 'RNG'>;\n\nexport interface Play {\n  states: Nel<Snapshot>;\n  player: Player;\n  enemies: Enemies,\n  rng: RNG;\n  turns: number;\n  id: string;\n  seed: string | number;\n};\n\ntype ItemOrMonster = string /* TODO all items */ | 'Monster';\nexport type FunIndex = `${ItemOrMonster}:${string}`;\n\nexport type StatsFunRepo = { [key in StatsFunIndex]: StatsFun; }\nexport type StatsFun = (player: PlayerStats, enemies: EnemiesStats) => [PlayerStats, EnemiesStats];\n\nexport type Ranges = UpTo<Subtract<Distances, 1>>[];\n\ninterface EffectFunCallT {\n  index: EffectFunRepoIndex;\n  parameters: EffectFunParams<EffectFunRepoIndex>;\n};\nexport type EffectFunCall = Opaque<EffectFunCallT, EffectFunCallT>;\nexport const effectFunCall = <T extends EffectFunRepoIndex>(t: EffectFunParams<T> extends undefined ? T : [T, EffectFunParams<T>]): EffectFunCall =>\n  (Array.isArray(t) ? { index: t[0], parameters: t[1] } : { index: t, parameters: undefined }) as EffectFunCall;\nexport const callEffectFun = <T extends EffectFunRepoIndex>(repo: EffectFunctionRepository, t: T, p: EffectFunParams<T>) => {\n  const f = repo[t];\n  // @ts-expect-error: index and parameters are enforced to be compatible at construction and the runtime check above ^^^^\n  return f(p);\n}\n\nexport interface Effect {\n  display: string;\n  tooltip: string;\n  effects: Nel<EffectFunCall>;\n  priority: UpTo<Subtract<Priorities, 1>>;\n  range: Ranges;\n};\nexport interface InventoryEffect extends Effect {\n  stamina: UpTo<Subtract<Staminas, 1>>;\n};\n\nexport type MonsterTarget = UpTo<Subtract<MonsterCount, 1>>;\nexport type PlayerTarget = 'Player';\nexport type Target = MonsterTarget | PlayerTarget;\n\nexport interface BuildRepository {\n  debug: Item[];\n  basic: Item[];\n  class: Item[];\n  skill: Item[];\n  weapon: Item[];\n  offhand: Item[];\n  consumable: Item[];\n  armor: Item[];\n  headgear: Item[];\n  footwear: Item[];\n  charm: Item[];\n}\nexport type Build = {\n  [k in keyof BuildRepository]: Item\n};\n\nexport interface Item {\n  display: string;\n  tooltip?: string;\n  passives?: StatsFunIndex[];\n  bot?: Nel<Effect>;\n  eot?: Nel<Effect>;\n  effects?: Nel<InventoryEffect>;\n  //[key: string]: any;\n};\n\nexport interface Player {\n  id: string;\n  lore: Record<string, string | number>;\n  build: Build;\n};\n\n// Place in the array for now\ntype EffectIdentity = number;\nexport interface Enemy {\n  lore: Record<string, string | number>;\n  effects: Nel<Effect>;\n  rolls: Tuple<EffectIdentity[], Distances>;\n  bot?: Nel<Effect>;\n  eot?: Nel<Effect>;\n}\n\nexport type Enemies = TupleUpTo<Enemy, MonsterCount>;\nexport type EnemiesStats = TupleUpTo<EnemyStats, MonsterCount>;\n\nexport function safeEntries<T, K extends keyof T>(o: {\n  [s in K]: T[s];\n}): [K, T[K]][] {\n  return Object.entries(o).map(([k, v]) => [k as K, v as T[K]]);\n}\n","import WebSocket from 'ws';\nimport { assign, createMachine, interpret } from 'xstate';\nimport { inspect } from '@xstate/inspect/lib/server.js';\nimport { scoreGame } from './utils/playGame';\n\nconst isDebug = process && process.env['SMD'] === '1';\n\nif (isDebug) {\n  inspect({\n    server: new WebSocket.Server({\n      port: 8888\n    })\n  });\n}\n\nconst toMenu = {\n  on: {\n    MENU: { target: 'main' },\n  }\n}\n\nconst quick = {\n  initial: 'play',\n  states: {\n    play: {\n      entry: ['reset'],\n      on: {\n        WIN: { target: 'win' },\n        LOSE: { target: 'lose' }\n      }\n    },\n    win: { type: 'final' as const },\n    lose: { type: 'final' as const },\n  },\n  ...toMenu,\n};\n\nconst single = {\n  initial: 'player',\n  states: {\n    player: {\n      entry: ['reset'],\n      on: {\n        PLAYER: { target: 'encounter' }\n      }\n    },\n    encounter: {\n      on: {\n        ENCOUNTER: { target: 'play' }\n      }\n    },\n    play: {\n      on: {\n        WIN: { target: 'win' },\n        LOSE: { target: 'lose' }\n      }\n    },\n    win: { type: 'final' as const },\n    lose: { type: 'final' as const },\n  },\n  ...toMenu,\n};\n\nconst arcade = {\n  initial: 'player',\n  states: {\n    player: {\n      entry: ['reset'],\n      on: {\n        PLAYER: { target: 'play' }\n      }\n    },\n    play: {\n      on: {\n        WIN: [\n          { target: 'victory', cond: 'isFinal' },\n          { target: 'play', actions: ['bumpVictories', 'bumpScore'], internal: true },\n        ],\n        LOSE: { target: 'defeat' }\n      }\n    },\n    victory: {\n      type: 'final' as const,\n    },\n    defeat: {\n      type: 'final' as const,\n    },\n  },\n  ...toMenu,\n};\n\nconst survival = {\n  initial: 'player',\n  states: {\n    player: {\n      entry: ['reset'],\n      on: {\n        PLAYER: { target: 'play' }\n      }\n    },\n    play: {\n      on: {\n        WIN: { target: 'play', actions: ['bumpVictories'] },\n        LOSE: { target: 'defeat' }\n      }\n    },\n    defeat: {\n      type: 'final' as const,\n      on: {\n        // ACK: { target: '#menus.leaderboards' }\n      }\n    },\n  },\n  ...toMenu,\n};\n\nconst puzzle = {\n  initial: 'puzzle',\n  states: {\n    puzzle: {\n      on: {\n        PLAYER: { target: 'player' }\n      }\n    },\n    player: {\n      on: {\n        SELECTED: { target: 'play' }\n      }\n    },\n    play: {\n      on: {\n        COMPLETE: { target: 'complete' },\n      }\n    },\n    complete: {\n      on: {\n        NEXT: { target: 'player' },\n        SELECT: { target: 'puzzle' },\n      }\n    },\n  },\n  ...toMenu,\n};\n\nconst makeArcadeContext = () => ({\n  victories: 0,\n  score: 0,\n  seed: Math.random(),\n});\nconst makeSurvivalContext = () => ({\n  victories: 0,\n  seed: Math.random(),\n});\nconst makeSingleContext = () => ({\n  seed: Math.random(),\n});\nconst makeGameContext = () => ({\n  arcadeContext: makeArcadeContext(),\n  survivalContext: makeSurvivalContext(),\n  singleContext: makeSingleContext(),\n});\n\nexport const gameMenuMachine = createMachine({\n  tsTypes: {} as import(\"./menuStateMachine.typegen\").Typegen0,\n  id: 'menus',\n  initial: 'main',\n  context: makeGameContext(),\n  states: {\n    main: {\n      on: {\n        QUICK: { target: 'quick' },\n        SINGLE: { target: 'single' },\n        ARCADE: { target: 'arcade' },\n        SURVIVAL: { target: 'survival' },\n        // PUZZLE: { target: 'puzzle' },\n        // LEADERBOARDS: { target: 'leaderboards' },\n      }\n    },\n    quick: {\n      ...quick,\n    },\n    single: {\n      ...single,\n    },\n    arcade: {\n      ...arcade,\n    },\n    survival: {\n      ...survival,\n    },\n    // puzzle: {\n    //   ...puzzle,\n    // },\n    // leaderboards: {\n    //   ...toMenu,\n    // }\n  },\n}, {\n  guards: {\n    isFinal: ({ arcadeContext: { victories } }) => victories + 1 >= 7,\n  },\n  actions: {\n    bumpVictories: assign({\n      arcadeContext: ({ arcadeContext }, _event) => ({ ...arcadeContext, victories: arcadeContext.victories + 1, seed: Math.random() }),\n      survivalContext: ({ survivalContext }, _event) => ({ ...survivalContext, victories: survivalContext.victories + 1, seed: Math.random() }),\n    }),\n    bumpScore: assign({\n      arcadeContext: ({ arcadeContext }, { game }) => ({ ...arcadeContext, score: arcadeContext.score + scoreGame(game), seed: Math.random() }),\n    }),\n    reset: assign({\n      survivalContext: (c, e) => makeSurvivalContext(),\n      arcadeContext: (c, e) => makeArcadeContext(),\n      singleContext: (c, e) => makeSingleContext(),\n    }),\n  }\n});\n\nif (isDebug) {\n  interpret(gameMenuMachine, { devTools: true })\n    .onTransition((state) => console.log(state))\n    .start();\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n  // [::1] is the IPv6 localhost address.\n  window.location.hostname === '[::1]' ||\n  // 127.0.0.0/8 are considered localhost for IPv4.\n  window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process && process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n            'worker. To learn more, visit https://cra.link/PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                'tabs for this page are closed. See https://cra.link/PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n"],"sourceRoot":""}