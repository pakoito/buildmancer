{"version":3,"sources":["components/PlayerBuilder.tsx","hooks/useScroll.tsx","components/EncounterBuilder.tsx","components/menus/Menu.tsx","geneticalgorithm/geneticalgorithm.js","game/tinkerer.ts","components/Enemy.tsx","components/Player.tsx","components/Game.tsx","hooks/useForceRerender.tsx","hooks/usePressedKeys.tsx","components/menus/SingleGame.tsx","components/menus/LoadScreen.tsx","App.tsx","reportWebVitals.ts","index.tsx","game/effectRepository.ts","game/playGame.ts","game/data/enemies.ts","game/data/armors.ts","game/data/charms.ts","game/data/classes.ts","game/data/consumables.ts","game/data/footwears.ts","game/data/headgears.ts","game/data/offhand.ts","game/data/skills.ts","game/data/weapons.ts","game/data/build.ts","game/data.ts","game/zFunDump.ts","game/modding.ts","game/types.ts","game/data/names.ts","game/makeGame.ts","stateMachines/menuStateMachine.ts","serviceWorkerRegistration.ts"],"names":["systemBuildKeys","Set","ElementPicker","isSelected","section","options","setField","scrollParams","elRef","useRef","current","scrollIntoView","useScroll","behavior","block","scrollTo","scrollRef","Row","Form","Label","ButtonGroup","size","className","map","item","Button","name","id","display","variant","onClick","ref","PlayerBuilder","onSave","randomPlayer","player","playerStats","React","useState","build","form","setForm","lore","setLore","displayType","type","postBuildPlayerStats","buildPlayer","randomEnemy","onSubmit","e","preventDefault","Container","fluid","style","marginBottom","safeEntries","filter","has","values","value","field","safeValues","Navbar","fixed","bg","maxHeight","Text","randomName","hp","max","stamina","staminaPerTurn","attack","defence","speed","EncounterBuilder","encounter","setEncounter","enemies","a","enemiesStats","length","enemy","disabled","idx","found","m","_","Menu","title","states","Card","Title","state","geneticAlgorithmConstructor","settingWithDefaults","settings","defaults","mutationFunction","crossoverFunction","fitnessFunction","doesABeatBFunction","population","Error","populationSize","phenotype","b","undefined","cloneJSON","object","JSON","parse","stringify","mutate","crossover","mate","Math","floor","random","evolve","rand","push","populate","index","otherIndex","temp","randomizePopulationOrder","nextGeneration","p","competitor","compete","this","best","scored","scoredPopulation","reduce","score","bestScore","config","clone","defaultTinkererOptions","playerSeed","weights","monster","turn","debug","findBestPlay","play","iter","optionsOverride","Chance","initStats","startState","initialState","startPlayerHealth","startPlayerStamina","startMonsterHealth","acc","startStats","oldPlay","latestState","previousState","monsterHealth","turns","newPlay","d6","target","setSelected","natural","min","latest","actions","playerActions","inventory","unavailable","handlePlayerEffect","exclude","playerHealth","playerStamina","monsterKillingFitness","playerAlivenessFitness","killSpeedFitness","staminaFitness","fitness","console","log","prettyjson","render","scorePlay","gen","GeneticAlgorithmConstructor","i","Seq","sortBy","toArray","EnemyCard","effects","enemyStats","onSelect","latestAttack","canAct","hotkey","Body","distance","status","bleed","rolls","countBy","v","find","range","priority","tooltip","OverlayTrigger","placement","delay","show","hide","overlay","Popover","Header","as","join","toFixed","toUpperCase","PlayerCard","selectedButtons","inventoryStats","onClickEffect","lastAction","disabledSkills","setDisabledSkills","hotkeys","passives","k","bot","eot","hasPassives","Subtitle","class","starting","ToggleButton","checked","onChange","event","currentTarget","delete","add","Stack","direction","gap","active","clamp","playerHotkeys","Game","game","solveGame","timeTravel","hint","onMenu","lastAttacks","isLogShown","setShowLog","forceUpdate","setValue","useForceRerender","useEffect","updateGlobals","ingame","handleCloseLog","playerSkills","isPlayerAlive","areMonstersAlive","endGame","pressed","onUp","pressedKeys","updatePressedKeys","downHandler","key","set","upHandler","useCallback","window","addEventListener","removeEventListener","usePressedKeys","indexOf","skillNumber","save","undo","redo","valNum","parseInt","flatMap","skillIndex","blob","Blob","saveAs","Date","now","Col","sm","md","Player","origin","phase","zip","stats","xs","Enemy","Modal","onHide","scrollable","centered","closeButton","s","Footer","SingleGame","onGameEnd","setGame","setRedo","gameState","playState","timeTravelObj","newRedo","pop","slice","iterations","maxBy","LoadScreen","onLoad","loadError","setLoadError","load","data","playRaw","fileData","files","reader","FileReader","onloadend","ev","result","readAsText","rawData","Alert","Group","Control","accept","muted","rows","placeholder","App","useMachine","gameMenuMachine","devTools","send","matches","Object","keys","main","on","quick","makeGameNew","context","singleContext","seed","single","training","dummyEnemy","arcade","survivalContext","arcadeContext","victories","otherEnemy","firstState","makeGameNextLevel","survival","lastState","replay","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","container","document","getElementById","createRoot","StrictMode","serviceWorkerRegistration","effectFun","fun","params","oldState","applyPoison","currentState","pipe","changeStatPlayer","changeStatMonster","newState","addBotEffect","allRanges","dodgeable","effectFunCall","engineFunctions","_origin","changeStatusPlayer","o","armor","amount","dodge","stun","changeStatusMonster","effectFunRepo","changeDistance","attackMonster","modifyPlayerStamina","gameTarget","attackPlayer","addEnemy","_m","updateMonster","override","updatePlayer","curr","damage","afterDefence","afterArmor","armorSpent","afterBleed","f","updateStatus","removeMonster","currPlay","currSnap","modify","updatePlayerStat","addEotEffect","effect","statsRepository","makeStat","turnDeterministicRng","randPerTurn","monsterSeed","monsterChance","rangeArr","floating","used","playerPassives","playerGameStats","enemyGameStats","rng","toIndexableString","version","reduceFuns","funs","priorityBonus","monsterId","targetMonster","isStunnedPlayer","isStunnedMonster","parameters","callEffectFun","extractFunction","effectEotCleanup","effectDead","d","lastTurnState","usedSkill","preBotPlay","preBotState","postBotPlay","postBotState","entitiesBot","eff","postEntitiesBotPlay","postEntitiesBotState","turnRng","turnFunctions","roll","concat","entitiesEot","playerEotEffects","enemiesEotEffects","postPlayerEotPlay","postPlayerEotState","postEotPlay","postEotState","postCleanup","postCleanupState","scoreGame","hpLoss","staminaLoss","piripuru","selfRange","makeRange","defaultStatus","toros","description","purupuri","ninkujorua","tshopuritazios","armors","heavy","medium","light","none","charms","health","haste","resilience","strength","swiftness","classes","warrior","rogue","berserk","mage","cleric","consumables","healing","razors","bubble","rock","footwears","slippers","boots","greaves","headgears","helm","cap","magehat","offhands","hook","parry","shield","focus","wand","skills","sturdy","nimble","resourceful","weapons","sword","greatsword","twinblades","katana","axe","lance","hammer","claw","bow","staff","enabled","basic","skill","weapon","offhand","headgear","footwear","charm","consumable","enemyRepository","Array","num","Infinity","t","globalsDefault","trainingEnemy","globals","globalThis","theThis","__buildmancer","isArray","repo","entries","names","number","pickone","randomBuild","buildOverride","playerStatsDefault","statsOverride","string","age","isDebug","process","inspect","server","WebSocket","Server","port","toMenu","MENU","initial","entry","WIN","LOSE","win","lose","PLAYER","ENCOUNTER","cond","internal","victory","defeat","puzzle","SELECTED","COMPLETE","complete","NEXT","SELECT","REPLAY","makeArcadeContext","makeSurvivalContext","makeSingleContext","createMachine","tsTypes","QUICK","SINGLE","TRAINING","ARCADE","SURVIVAL","guards","isFinal","bumpVictories","assign","_event","bumpScore","reset","c","interpret","onTransition","start","isLocalhost","Boolean","location","hostname","match","register","navigator","URL","href","swUrl","fetch","headers","response","contentType","get","serviceWorker","ready","registration","unregister","reload","registerValidSW","catch","checkValidServiceWorker","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","error"],"mappings":"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CgFD8I,EAAgB,SAC3BmK,GAD2B,OAG1BH,MAAMU,QAAQP,GACX,CAAEjc,MAAOic,EAAE,GAAIzG,WAAYyG,EAAE,IAC7B,CAAEjc,MAAOic,EAAGzG,gBAAYxW,IACjByW,EAAgB,SAC3BgH,EACAR,EACA5b,GAIA,OAAOoT,EAFGgJ,EAAKR,IAEN5b,IAgFEzE,EAAc,SAAuBsW,GAAvB,OAERtD,OAAO8N,QAAQxK,GAAGvY,KAAI,yCAAY,CAAZ,eAE5BuC,EAAa,SAAuBgW,GAAvB,OAEZtW,EAAYsW,GAAGvY,KAAI,SAACyD,GAAD,OAAOA,EAAE,Q,sZC/C3Buf,EAzMD,CACZ,QACA,QACA,SACA,MACA,QACA,UACA,QACA,QACA,QACA,UACA,SACA,SACA,QACA,WACA,QACA,QACA,SACA,QACA,SACA,SACA,SACA,SACA,UACA,SACA,SACA,SACA,OACA,QACA,OACA,QACA,MACA,SACA,SACA,OACA,UACA,QACA,UACA,SACA,UACA,QACA,SACA,SACA,UACA,SACA,OACA,QACA,SACA,SACA,UACA,QACA,OACA,UACA,OACA,SACA,SACA,QACA,UACA,SACA,SACA,OACA,QACA,QACA,SACA,QACA,QACA,SACA,SACA,OACA,OACA,SACA,QACA,QACA,UACA,SACA,QACA,UACA,UACA,UACA,WACA,QACA,WACA,QACA,SACA,SACA,OACA,SACA,QACA,QACA,OACA,WACA,SACA,QACA,UACA,SACA,UACA,SACA,SACA,SACA,SACA,QACA,QACA,OACA,OACA,QACA,QACA,WACA,QACA,UACA,SACA,UACA,QACA,OACA,OACA,OACA,SACA,WACA,OACA,OACA,QACA,MACA,SACA,OACA,UACA,QACA,UACA,SACA,MACA,UACA,QACA,SACA,QACA,SACA,QACA,QACA,QACA,QACA,SACA,QACA,QACA,SACA,QACA,OACA,QACA,SACA,SACA,UACA,QACA,QACA,QACA,OACA,QACA,OACA,QACA,SACA,SACA,QACA,QACA,QACA,QACA,QACA,UACA,UACA,QACA,QACA,QACA,UACA,SACA,QACA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","file":"static/js/main.9285a558.chunk.js","sourcesContent":["import React from 'react';\nimport {\n  Container,\n  Row,\n  Form,\n  Button,\n  ButtonGroup,\n  Navbar,\n} from 'react-bootstrap';\nimport useScroll from '../hooks/useScroll';\nimport {\n  Build,\n  Item,\n  Player,\n  PlayerStats,\n  safeEntries,\n  safeValues,\n} from '../game/types';\nimport { build } from '../game/data';\nimport { Set } from 'immutable';\nimport { buildPlayer } from '../game/playGame';\nimport { randomPlayer, randomEnemy, randomName } from '../game/makeGame';\n\nconst systemBuildKeys: Set<keyof Build> = Set(['debug', 'basic']);\n\nconst PlayerBuilder = ({\n  onSave,\n}: {\n  onSave: (player: Player, playerStats: PlayerStats) => void;\n}) => {\n  const [player, playerStats] = randomPlayer();\n  const [form, setForm] = React.useState<Build>(player.build);\n  const [lore, setLore] = React.useState(player.lore);\n  const setField = <T extends keyof Build>(field: T, value: Build[T]) => {\n    setForm({\n      ...form,\n      [field]: value,\n    });\n  };\n  const onFormSubmit = (e: any) => {\n    e.preventDefault();\n    onSave(\n      {\n        id: 'p-1',\n        lore,\n        build: form,\n      },\n      playerStats\n    );\n  };\n  const displayType = (type: keyof Build) => <b>{form[type].display}</b>;\n\n  const postBuildPlayerStats = buildPlayer(\n    { ...player, build: form },\n    playerStats,\n    [randomEnemy()[1]]\n  )[0];\n\n  return (\n    <Form onSubmit={onFormSubmit}>\n      <Container fluid style={{ marginBottom: '105px' }}>\n        <Row className=\"g-2\">\n          {safeEntries(build)\n            .filter(([type, _]) => !systemBuildKeys.has(type))\n            .map(([type, values]) => (\n              <ElementPicker\n                setField={(value) => setField(type, value)}\n                section={type}\n                options={safeValues(values)}\n                key={type}\n                isSelected={(value) => form[type].display === value.display}\n              />\n            ))}\n        </Row>\n        <Navbar\n          fixed=\"bottom\"\n          bg=\"dark\"\n          variant=\"dark\"\n          style={{ maxHeight: '100px' }}\n        >\n          <Container>\n            <Navbar.Text>\n              You are{' '}\n              <i\n                onClick={() =>\n                  setLore((lore) => ({ ...lore, name: randomName() }))\n                }\n              >\n                {lore.name}\n              </i>\n              , the {displayType('skill')} {displayType('class')}{' '}\n              {displayType('charm')}\n              <br />\n              who wields a {displayType('weapon')} and a{' '}\n              {displayType('offhand')}\n              <br />\n              and wears {displayType('armor')} with {displayType('headgear')}{' '}\n              and {displayType('footwear')}\n            </Navbar.Text>\n            <Navbar.Text>\n              {postBuildPlayerStats.hp.current}/{postBuildPlayerStats.hp.max} ❤\n              <br />\n              {postBuildPlayerStats.stamina.current}/\n              {postBuildPlayerStats.stamina.max} 💪 (\n              {postBuildPlayerStats.staminaPerTurn.current >= 0 && '+'}\n              {postBuildPlayerStats.staminaPerTurn.current})<br />\n              Attack {postBuildPlayerStats.attack.current} | Defence{' '}\n              {postBuildPlayerStats.defence.current} | Speed{' '}\n              {postBuildPlayerStats.speed.current}\n            </Navbar.Text>\n            <Button type=\"submit\">This is me!</Button>\n          </Container>\n        </Navbar>\n      </Container>\n    </Form>\n  );\n};\n\nconst ElementPicker = ({\n  isSelected,\n  section,\n  options,\n  setField,\n}: {\n  options: Item[];\n  isSelected: (value: Item) => boolean;\n  setField: (value: Item) => void;\n  section: string;\n}) => {\n  const [scrollTo, scrollRef] = useScroll({\n    behavior: 'smooth',\n    block: 'start',\n  });\n\n  return (\n    <Row>\n      <Form.Label>{section}</Form.Label>\n      <br />\n      <ButtonGroup size=\"lg\" className=\"mb-2\">\n        {options.map((item) => (\n          <Button\n            key={item.display}\n            name={section}\n            id={`${item.display}`}\n            variant={isSelected(item) ? 'primary' : 'secondary'}\n            onClick={() => {\n              setField(item);\n              scrollTo();\n            }}\n          >\n            {item.display}\n          </Button>\n        ))}\n      </ButtonGroup>\n      <div id={`${section}-scroll`} ref={scrollRef} />\n    </Row>\n  );\n};\n\nexport default PlayerBuilder;\n","import { Ref, useRef } from 'react';\n\ntype ScrollToFn = () => void;\n\nexport default function useScroll<T extends Element>(\n  scrollParams: ScrollIntoViewOptions\n): [ScrollToFn, Ref<any>] {\n  const elRef = useRef<T>(null);\n  const executeScroll = () => elRef.current!.scrollIntoView(scrollParams);\n\n  return [executeScroll, elRef];\n}\n","import React from 'react';\nimport { Container, ButtonGroup, Form, Button, Navbar } from 'react-bootstrap';\n\nimport {\n  Player,\n  Enemies,\n  EnemiesStats,\n  Build,\n  EnemyInfo,\n  safeValues,\n} from '../game/types';\nimport { enemies } from '../game/data';\nimport { randomEnemy } from '../game/makeGame';\n\nconst EncounterBuilder = ({\n  player,\n  onSave,\n}: {\n  player: Player;\n  onSave: (enemies: Enemies, enemiesStats: EnemiesStats) => void;\n}) => {\n  const [encounter, setEncounter] = React.useState<EnemyInfo[]>([]);\n  const onFormSubmit = (e: any) => {\n    e.preventDefault();\n    const enemies = encounter.map((a) => a[0]);\n    const enemiesStats = encounter.map((a) => a[1]);\n    // Size enforced by UI\n    onSave(enemies as Enemies, enemiesStats as EnemiesStats);\n  };\n  const displayType = (type: keyof Build) => (\n    <b>{player.build[type].display}</b>\n  );\n  return (\n    <Form onSubmit={onFormSubmit}>\n      <Container\n        fluid\n        style={{ marginBottom: encounter.length > 0 ? '205px' : '105px' }}\n      >\n        <ButtonGroup size=\"lg\" className=\"mb-2\">\n          {safeValues(enemies).map((enemy) => (\n            <Button\n              key={enemy[0].lore.name}\n              disabled={encounter.length > 4}\n              onClick={() => setEncounter((e) => [...e, enemy])}\n            >\n              {enemy[0].lore.name}\n            </Button>\n          ))}\n        </ButtonGroup>\n      </Container>\n      {encounter.length > 0 && (\n        <Navbar\n          fixed=\"bottom\"\n          bg=\"dark\"\n          variant=\"dark\"\n          style={{ marginBottom: '100px' }}\n        >\n          <Container fluid>\n            <ButtonGroup size=\"sm\" className=\"mb-2\">\n              {encounter.map((enemy, idx) => (\n                <Button\n                  key={`${enemy[0].lore.name}-${idx}`}\n                  onClick={() =>\n                    setEncounter((e) => {\n                      let found = false;\n                      return e.filter(\n                        (m) =>\n                          found ||\n                          m[0].lore.name !== enemy[0].lore.name ||\n                          !(found = true)\n                      );\n                    })\n                  }\n                >\n                  {enemy[0].lore.name}\n                </Button>\n              ))}\n            </ButtonGroup>\n          </Container>\n        </Navbar>\n      )}\n      <Navbar\n        fixed=\"bottom\"\n        bg=\"dark\"\n        variant=\"dark\"\n        style={{ maxHeight: '100px' }}\n      >\n        <Container>\n          <Navbar.Text>\n            You are <i>{player.lore.name}</i>, the {displayType('skill')}{' '}\n            {displayType('class')} {displayType('charm')}\n            <br />\n            who wields a {displayType('weapon')} and a {displayType('offhand')}\n            <br />\n            and wears {displayType('armor')} with {displayType('headgear')} and{' '}\n            {displayType('footwear')}\n          </Navbar.Text>\n          <ButtonGroup>\n            <Button\n              disabled={encounter.length < 0 || encounter.length > 4}\n              onClick={(_) => setEncounter((e) => [...e, randomEnemy()])}\n            >\n              Add Random\n            </Button>\n            <Button\n              type=\"submit\"\n              disabled={encounter.length < 1 || encounter.length > 5}\n            >\n              To Battle!\n            </Button>\n          </ButtonGroup>\n        </Container>\n      </Navbar>\n    </Form>\n  );\n};\n\nexport default EncounterBuilder;\n","import React from 'react';\nimport { Container, Card, Row, Button } from 'react-bootstrap';\n\nconst Menu: React.FC<{\n  title: string;\n  states: string[];\n  onClick: (value: string) => void;\n}> = ({ title, states, onClick }) => (\n  <Container fluid style={{ marginBottom: '105px' }}>\n    <Row className=\"g-2\">\n      <Card.Title>{title}</Card.Title>\n    </Row>\n    {states.map((state) => (\n      <Row className=\"g-2\" key={state}>\n        <Button\n          size=\"lg\"\n          className=\"mb-2\"\n          key={state}\n          variant={'primary'}\n          onClick={() => {\n            onClick(state);\n          }}\n        >\n          {state}\n        </Button>\n      </Row>\n    ))}\n  </Container>\n);\n\nexport default Menu;\n","export default function geneticAlgorithmConstructor(options) {\n  function settingDefaults() {\n    return {\n      mutationFunction: function (phenotype) {\n        return phenotype;\n      },\n\n      crossoverFunction: function (a, b) {\n        return [a, b];\n      },\n\n      fitnessFunction: function (phenotype) {\n        return 0;\n      },\n\n      doesABeatBFunction: undefined,\n\n      population: [],\n      populationSize: 100,\n    };\n  }\n\n  function settingWithDefaults(settings, defaults) {\n    settings = settings || {};\n\n    settings.mutationFunction =\n      settings.mutationFunction || defaults.mutationFunction;\n    settings.crossoverFunction =\n      settings.crossoverFunction || defaults.crossoverFunction;\n    settings.fitnessFunction =\n      settings.fitnessFunction || defaults.fitnessFunction;\n\n    settings.doesABeatBFunction =\n      settings.doesABeatBFunction || defaults.doesABeatBFunction;\n\n    settings.population = settings.population || defaults.population;\n    if (settings.population.length <= 0)\n      throw Error(\n        'population must be an array and contain at least 1 phenotypes'\n      );\n\n    settings.populationSize =\n      settings.populationSize || defaults.populationSize;\n    if (settings.populationSize <= 0)\n      throw Error('populationSize must be greater than 0');\n\n    return settings;\n  }\n\n  var settings = settingWithDefaults(options, settingDefaults());\n\n  function populate() {\n    var size = settings.population.length;\n    while (settings.population.length < settings.populationSize) {\n      const rand = Math.floor(Math.random() * size);\n      settings.population.push(\n        mutate(cloneJSON(settings.population[Math.floor(rand)]))\n      );\n    }\n  }\n\n  function cloneJSON(object) {\n    return JSON.parse(JSON.stringify(object));\n  }\n\n  function mutate(phenotype) {\n    return settings.mutationFunction(cloneJSON(phenotype));\n  }\n\n  function crossover(phenotype) {\n    phenotype = cloneJSON(phenotype);\n    var mate =\n      settings.population[\n        Math.floor(Math.random() * settings.population.length)\n      ];\n    mate = cloneJSON(mate);\n    return settings.crossoverFunction(phenotype, mate)[0];\n  }\n\n  function doesABeatB(a, b) {\n    if (settings.doesABeatBFunction) {\n      return settings.doesABeatBFunction(a, b);\n    } else {\n      return settings.fitnessFunction(a) >= settings.fitnessFunction(b);\n    }\n  }\n\n  function compete() {\n    var nextGeneration = [];\n\n    for (var p = 0; p < settings.population.length - 1; p += 2) {\n      var phenotype = settings.population[p];\n      var competitor = settings.population[p + 1];\n\n      nextGeneration.push(phenotype);\n      if (doesABeatB(phenotype, competitor)) {\n        if (Math.random() < 0.5) {\n          nextGeneration.push(mutate(phenotype));\n        } else {\n          nextGeneration.push(crossover(phenotype));\n        }\n      } else {\n        nextGeneration.push(competitor);\n      }\n    }\n\n    settings.population = nextGeneration;\n  }\n\n  function randomizePopulationOrder() {\n    for (var index = 0; index < settings.population.length; index++) {\n      var otherIndex = Math.floor(Math.random() * settings.population.length);\n      var temp = settings.population[otherIndex];\n      settings.population[otherIndex] = settings.population[index];\n      settings.population[index] = temp;\n    }\n  }\n\n  return {\n    evolve: function (options) {\n      if (options) {\n        settings = settingWithDefaults(options, settings);\n      }\n\n      populate();\n      randomizePopulationOrder();\n      compete();\n      return this;\n    },\n    best: function () {\n      var scored = this.scoredPopulation();\n      var result = scored.reduce(function (a, b) {\n        return a.score >= b.score ? a : b;\n      }, scored[0]).phenotype;\n      return cloneJSON(result);\n    },\n    bestScore: function () {\n      return settings.fitnessFunction(this.best());\n    },\n    population: function () {\n      return cloneJSON(this.config().population);\n    },\n    scoredPopulation: function () {\n      return this.population().map(function (phenotype) {\n        return {\n          phenotype: cloneJSON(phenotype),\n          score: settings.fitnessFunction(phenotype),\n        };\n      });\n    },\n    config: function () {\n      return cloneJSON(settings);\n    },\n    clone: function (options) {\n      return geneticAlgorithmConstructor(\n        settingWithDefaults(\n          options,\n          settingWithDefaults(this.config(), settings)\n        )\n      );\n    },\n  };\n}\n","import GeneticAlgorithmConstructor, {\n  GeneticAlgorithmConfig,\n  ScoredPhenotype,\n} from '../geneticalgorithm/geneticalgorithm';\nimport prettyjson from 'prettyjson';\nimport {\n  handlePlayerEffect,\n  initialState,\n  makeGameNew,\n  playerActions,\n  previousState,\n  setSelected,\n} from './playGame';\nimport Chance from 'chance';\nimport {\n  Enemies,\n  EnemiesStats,\n  EnemyInfo,\n  MonsterTarget,\n  Play,\n  Player,\n  safeValues,\n  Seed,\n} from './types';\nimport { build } from './data';\nimport { Seq } from 'immutable';\nimport { playerStatsDefault } from './makeGame';\n\nexport type TinkererOptions = typeof defaultTinkererOptions;\n\nexport const defaultTinkererOptions = {\n  playerSeed: 'Miau',\n  weights: { monster: 1000, player: 0, turn: -0.1, stamina: 0 },\n  debug: false,\n};\n\ninterface StartStats {\n  startPlayerHealth: number;\n  startMonsterHealth: number;\n  startPlayerStamina: number;\n}\nconst scorePlay = (\n  options: TinkererOptions,\n  play: Play,\n  { startPlayerHealth, startMonsterHealth, startPlayerStamina }: StartStats\n) => {\n  const latestState = previousState(play);\n  const monsterHealth = latestState.enemies.reduce(\n    (acc, monster) => acc + monster.hp.current,\n    0\n  );\n  const playerHealth = latestState.player.hp.current;\n  const playerStamina = latestState.player.stamina.current;\n\n  const monsterKillingFitness = Math.max(\n    0,\n    (startMonsterHealth - monsterHealth) / startMonsterHealth\n  );\n  const playerAlivenessFitness = playerHealth / startPlayerHealth;\n  const killSpeedFitness = (play.turns - play.states.length) / play.turns;\n  const staminaFitness = playerStamina / startPlayerStamina;\n\n  const fitness =\n    monsterKillingFitness * options.weights.monster +\n    playerAlivenessFitness * options.weights.player +\n    killSpeedFitness * options.weights.turn +\n    staminaFitness * options.weights.stamina;\n\n  if (options.debug || fitness < 0) {\n    console.log(\n      prettyjson.render({\n        player: play.player.lore.name,\n        encounter: JSON.stringify(play.enemies.map((e) => e.lore.name)),\n        monsterHealth,\n        playerHealth,\n        turns: play.states.length,\n        fitness,\n        monsterKillingFitness,\n        playerAlivenessFitness,\n        staminaFitness,\n        killSpeedFitness,\n        weights: options.weights,\n      })\n    );\n  }\n\n  return fitness;\n};\n\nconst startStats = (play: Play): StartStats => {\n  const startState = initialState(play);\n  const startPlayerHealth = startState.player.hp.max;\n  const startPlayerStamina = startState.player.stamina.max;\n  const startMonsterHealth = startState.enemies.reduce(\n    (acc, monster) => acc + monster.hp.max,\n    0\n  );\n  return {\n    startPlayerHealth,\n    startMonsterHealth,\n    startPlayerStamina,\n  };\n};\n\nexport function findBestPlay(\n  play: Play,\n  iter: number,\n  population: number,\n  optionsOverride?: Partial<TinkererOptions>\n): ScoredPhenotype<Play>[] {\n  const options: TinkererOptions = {\n    ...defaultTinkererOptions,\n    ...optionsOverride,\n  };\n  const rand = new Chance(options.playerSeed);\n  const initStats = startStats(play);\n  const config: GeneticAlgorithmConfig<Play> = {\n    mutationFunction: (oldPlay) => {\n      const latestState = previousState(oldPlay);\n      const monsterHealth = latestState.enemies.reduce(\n        (acc, monster) => acc + monster.hp.current,\n        0\n      );\n      const playerHealth = latestState.player.hp.current;\n\n      // Won or loss, we bail\n      if (\n        playerHealth === 0 ||\n        monsterHealth === 0 ||\n        oldPlay.states.length >= oldPlay.turns\n      ) {\n        return oldPlay;\n      }\n\n      // Maybe change monster\n      let newPlay = oldPlay;\n      while (\n        rand.d6() === 6 ||\n        (latestState.enemies[latestState.target]?.hp.current ?? 0) <= 0\n      ) {\n        newPlay = setSelected(\n          newPlay,\n          rand.natural({\n            min: 0,\n            max: latestState.enemies.length - 1,\n          }) as MonsterTarget\n        );\n      }\n\n      // Use an action\n      const latest = previousState(newPlay);\n      const actions = playerActions(play.player, latest.inventory);\n      const unavailable = actions\n        .map((a, idx) => [a, idx] as const)\n        .filter(([a, _]) => a.stamina > latest.player.stamina.current)\n        .map(([_, idx]) => idx);\n      newPlay = handlePlayerEffect(\n        newPlay,\n        rand.natural({ min: 0, max: actions.length - 1, exclude: unavailable })\n      );\n\n      return newPlay;\n    },\n    fitnessFunction: (play) => scorePlay(options, play, initStats),\n    population: [play],\n    populationSize: population,\n  };\n\n  let gen = new GeneticAlgorithmConstructor<Play>(config);\n  for (let i = 0; i < iter; i++) {\n    gen = gen.evolve();\n  }\n\n  return Seq(gen.scoredPopulation())\n    .sortBy((a) => 1000 / a.score)\n    .toArray();\n}\n\nconst nonMutableProperties = new Set(['debug', 'basic']);\nexport const findBestBuild = (\n  players: Player[],\n  enemies: [Seed, EnemyInfo[]][],\n  iter: number,\n  gameIter: number,\n  population: number,\n  gamePopulation: number,\n  optionsOverride?: Partial<TinkererOptions & { turns: number }>\n): ScoredPhenotype<Player>[] => {\n  const options: TinkererOptions = {\n    ...defaultTinkererOptions,\n    ...optionsOverride,\n  };\n  const rng = new Chance(options.playerSeed);\n  const config: GeneticAlgorithmConfig<Player> = {\n    mutationFunction: (player: Player) => {\n      const toChange = rng.pickone(\n        Object.keys(player.build).filter((k) => !nonMutableProperties.has(k))\n      ) as keyof typeof build;\n      const newItem = rng.pickone(\n        safeValues(build[toChange]).flatMap((a) =>\n          a.display !== player.build[toChange].display ? a : []\n        )\n      );\n      return {\n        ...player,\n        build: {\n          ...player.build,\n          [toChange]: newItem,\n        },\n      };\n    },\n    fitnessFunction: (player: Player) =>\n      Seq(enemies)\n        .flatMap((g) =>\n          Seq(\n            findBestPlay(\n              makeGameNew(\n                player,\n                playerStatsDefault,\n                g[1].map((a) => a[0]) as Enemies,\n                g[1].map((a) => a[1]) as EnemiesStats,\n                optionsOverride?.turns ?? 50,\n                g[0]\n              ),\n              gameIter,\n              gamePopulation,\n              optionsOverride\n            )\n          ).take(2)\n        )\n        .reduce((acc, v) => acc + v.score, 0),\n    population: players,\n    populationSize: population,\n  };\n\n  let gen = new GeneticAlgorithmConstructor<Player>(config);\n  for (let i = 0; i < iter; i++) {\n    gen = gen.evolve();\n  }\n\n  return Seq(gen.scoredPopulation())\n    .sortBy((a) => 1000 / a.score)\n    .toArray();\n};\n","import React from 'react';\nimport { Card, Button, OverlayTrigger, Popover } from 'react-bootstrap';\nimport { Enemy, Effect, EnemyStats } from '../game/types';\nimport { Seq } from 'immutable';\n\nconst skillPercents = (effects: Effect[]) =>\n  Seq(effects)\n    .countBy((e) => e.display)\n    .toArray()\n    .map(([display, v], idx) => {\n      const { range, priority, tooltip } = effects.find(\n        (a) => a.display === display\n      )!!;\n      return (\n        <OverlayTrigger\n          key={idx}\n          placement=\"right\"\n          delay={{ show: 100, hide: 250 }}\n          overlay={\n            <Popover>\n              <Popover.Header as=\"h3\">{display}</Popover.Header>\n              <Popover.Body>\n                {tooltip}\n                <br />\n                ⏱:{priority}\n                <br />\n                🏹:\n                {range.length === 5\n                  ? 'Any'\n                  : range.length === 0\n                  ? 'None'\n                  : range.map((a) => a + 1).join(', ')}\n              </Popover.Body>\n            </Popover>\n          }\n        >\n          <>\n            [{((v / effects.length) * 100).toFixed(2)}%] {display}\n            <br key={idx} />\n          </>\n        </OverlayTrigger>\n      );\n    });\n\nconst EnemyCard: React.FC<{\n  enemy: Enemy;\n  enemyStats: EnemyStats;\n  latestAttack: string | undefined;\n  isSelected?: boolean;\n  onSelect: () => void;\n  canAct: boolean;\n  hotkey: string;\n}> = ({\n  enemy,\n  enemyStats,\n  isSelected,\n  onSelect,\n  latestAttack,\n  canAct,\n  hotkey,\n}) => (\n  <Card bg={isSelected ? 'info' : undefined}>\n    <Card.Body>\n      <Card.Title>\n        {enemy.lore.name} {enemyStats.hp.current > 0 ? '' : <b>💀DEAD💀</b>}\n      </Card.Title>\n      <Card.Text>\n        ❤:{enemyStats.hp.current} 🏹:{enemyStats.distance}\n      </Card.Text>\n      <Card.Text>\n        Attack {enemyStats.attack.current}\n        <br />\n        Defence {enemyStats.defence.current}\n        <br />\n        Speed {enemyStats.speed.current}\n      </Card.Text>\n      {enemyStats.status.bleed.turns > 0 && (\n        <Card.Text>{enemyStats.status.bleed.turns} 🩸</Card.Text>\n      )}\n      {latestAttack && <Card.Text>Latest attack: {latestAttack}</Card.Text>}\n      <Card.Text>\n        Next attack prediction:\n        <br />\n        {skillPercents(\n          enemy.rolls[enemyStats.distance].map((idx) => enemy.effects[idx])\n        )}\n        <br />\n      </Card.Text>\n      {canAct && (\n        <Button disabled={isSelected} onClick={onSelect}>\n          [<i>{hotkey.toUpperCase()}</i>] Select\n        </Button>\n      )}\n    </Card.Body>\n  </Card>\n);\n\nexport default EnemyCard;\n","import React from 'react';\nimport {\n  Card,\n  Button,\n  Stack,\n  ToggleButton,\n  ButtonGroup,\n  Popover,\n  OverlayTrigger,\n} from 'react-bootstrap';\nimport {\n  DisabledSkills,\n  InventoryStats,\n  Player,\n  PlayerStats,\n  safeEntries,\n} from '../game/types';\nimport { Set } from 'immutable';\nimport { clamp } from '../game/zFunDump';\nimport { playerActions } from '../game/playGame';\n\nconst PlayerCard: React.FC<{\n  selectedButtons: Set<string>;\n  player: Player;\n  playerStats: PlayerStats;\n  inventoryStats: InventoryStats;\n  canAct: boolean;\n  lastAction: string | undefined;\n  onClickEffect: (index: number) => void;\n  disabledSkills: DisabledSkills;\n  hotkeys: string[];\n  setDisabledSkills: (skills: DisabledSkills) => void;\n}> = ({\n  selectedButtons,\n  player,\n  playerStats,\n  inventoryStats,\n  onClickEffect,\n  canAct,\n  lastAction,\n  disabledSkills,\n  setDisabledSkills,\n  hotkeys,\n}) => {\n  const passives = safeEntries(player.build).map(\n    ([k, e]) => [k, e, [...(e.bot ?? []), ...(e.eot ?? [])]] as const\n  );\n\n  const hasPassives = passives.reduce(\n    (acc, [k, e, passives]) => passives.length > 0,\n    false\n  );\n  return (\n    <Card>\n      <Card.Body>\n        <Card.Title>\n          {player.lore.name}\n          {playerStats.hp.current > 0 ? '' : <b> 💀DEAD💀 </b>}\n        </Card.Title>\n        <Card.Subtitle className=\"mb-2 text-muted\">\n          {player.build.class.display}\n        </Card.Subtitle>\n        <Card.Text>\n          Attack {playerStats.attack.current} | Defence{' '}\n          {playerStats.defence.current} | Speed {playerStats.speed.current}\n        </Card.Text>\n        <Card.Text>\n          {playerStats.hp.current}/\n          {Math.min(playerStats.hp.starting, playerStats.hp.max)} ❤\n        </Card.Text>\n        <Card.Text>\n          {playerStats.stamina.current}/\n          {Math.min(playerStats.stamina.starting, playerStats.stamina.max)} 💪 (\n          {playerStats.staminaPerTurn.current >= 0 && '+'}\n          {playerStats.staminaPerTurn.current})\n        </Card.Text>\n        {playerStats.status.bleed.turns > 0 && (\n          <Card.Text>{playerStats.status.bleed.turns} 🩸</Card.Text>\n        )}\n        {lastAction && <Card.Text>Last action: {lastAction}</Card.Text>}\n      </Card.Body>\n      {canAct && hasPassives && (\n        <>\n          <b>Passives</b>\n          <ButtonGroup>\n            {passives.map(\n              ([k, e, passives], idx) =>\n                passives.length > 0 && (\n                  <OverlayTrigger\n                    key={idx}\n                    placement=\"right\"\n                    delay={{ show: 100, hide: 250 }}\n                    overlay={\n                      <Popover>\n                        <Popover.Header as=\"h3\">{e.display}</Popover.Header>\n                        <Popover.Body>{e.tooltip}</Popover.Body>\n                      </Popover>\n                    }\n                  >\n                    <ToggleButton\n                      checked={!Set(disabledSkills).has(k)}\n                      value={k}\n                      id={`passive-skill-${k}`}\n                      type=\"checkbox\"\n                      variant=\"outline-primary\"\n                      onChange={(event) =>\n                        setDisabledSkills(\n                          event.currentTarget.checked\n                            ? Set(disabledSkills).delete(k).toArray()\n                            : Set(disabledSkills).add(k).toArray()\n                        )\n                      }\n                    >\n                      {e.display}\n                    </ToggleButton>\n                  </OverlayTrigger>\n                )\n            )}\n          </ButtonGroup>\n        </>\n      )}\n      {canAct && (\n        <Card.Body>\n          <Stack direction=\"horizontal\" gap={2}>\n            {playerActions(player, inventoryStats).map((e, idx) => (\n              <OverlayTrigger\n                key={e.display}\n                placement=\"top\"\n                delay={{ show: 100, hide: 250 }}\n                overlay={\n                  <Popover>\n                    <Popover.Header as=\"h3\">{e.display}</Popover.Header>\n                    <Popover.Body>{e.tooltip}</Popover.Body>\n                  </Popover>\n                }\n              >\n                <div>\n                  <Button\n                    active={selectedButtons.has(e.display)}\n                    disabled={playerStats.stamina.current < e.stamina}\n                    onClick={(_) => onClickEffect(idx)}\n                  >\n                    [<i>{hotkeys[idx]}</i>] <b>{e.display}</b>\n                  </Button>\n                  <br />\n                  <Card.Text>\n                    💪:{e.stamina} ⏱:\n                    {clamp(e.priority - playerStats.speed.current, 0, 4)}\n                    <br />\n                    🏹:\n                    {e.range.length === 5 ? 'All' : e.range.join(', ')}\n                  </Card.Text>\n                </div>\n              </OverlayTrigger>\n            ))}\n          </Stack>\n        </Card.Body>\n      )}\n    </Card>\n  );\n};\n\nexport default PlayerCard;\n","import { Container, Row, Col, Card, Modal, ButtonGroup } from 'react-bootstrap';\n\nimport { DisabledSkills, MonsterTarget, Play } from '../game/types';\n\nimport EnemyCard from './Enemy';\nimport PlayerCard from './Player';\nimport usePressedKeys from '../hooks/usePressedKeys';\nimport { playerActions } from '../game/playGame';\nimport { Seq, Set } from 'immutable';\nimport { previousState } from '../game/playGame';\nimport { Button } from 'react-bootstrap';\nimport saveAs from 'file-saver';\nimport { useCallback, useEffect, useState } from 'react';\nimport { updateGlobals } from '../game/modding';\nimport { useForceRerender } from '../hooks/useForceRerender';\n\nexport type GameProps = {\n  game: Play;\n  setSelected: (target: MonsterTarget) => void;\n  setDisabledSkills: (disabled: DisabledSkills) => void;\n  handlePlayerEffect: (index: number) => void;\n  solveGame: (iterations: number, population: number) => void;\n  hint: (iterations: number, population: number) => void;\n  timeTravel: { undo: () => void; redo: (() => void) | undefined } | undefined;\n  onMenu: () => void;\n};\n\nconst playerHotkeys = [\n  'q',\n  'w',\n  'e',\n  'r',\n  't',\n  'y',\n  'u',\n  'i',\n  'o',\n  'p',\n  'z',\n  'x',\n  'c',\n  'v',\n  'b',\n  'n',\n  'm',\n];\n\nconst Game = ({\n  handlePlayerEffect,\n  setSelected,\n  setDisabledSkills,\n  game,\n  solveGame,\n  timeTravel,\n  hint,\n  onMenu,\n}: GameProps): JSX.Element => {\n  const { player, enemies } = game;\n  const {\n    player: playerStats,\n    enemies: enemiesStats,\n    target,\n    lastAttacks,\n    disabledSkills,\n    inventory: inventoryStats,\n  } = previousState(game);\n  const [isLogShown, setShowLog] = useState(false);\n  const forceUpdate = useForceRerender();\n\n  useEffect(() => {\n    updateGlobals({ ingame: { game, forceUpdate } });\n    return () => updateGlobals({ ingame: undefined });\n  }, [game, forceUpdate]);\n\n  const handleCloseLog = () => setShowLog(false);\n  const handleShowLog = () => setShowLog(true);\n\n  const playerSkills = playerActions(player, inventoryStats);\n  const monsterHealth = enemiesStats.reduce((acc, m) => m.hp.current + acc, 0);\n  const isPlayerAlive = playerStats.hp.current > 0;\n  const areMonstersAlive = monsterHealth > 0;\n  const endGame = game.states.length < game.turns;\n  const canAct = isPlayerAlive && areMonstersAlive && endGame;\n\n  const pressed = usePressedKeys((key) => {\n    if (!canAct) return;\n\n    const skillIndex = playerHotkeys.indexOf(key);\n    if (skillIndex !== -1) {\n      const skillNumber = playerHotkeys.indexOf(key);\n      const hasStamina =\n        playerSkills[skillNumber].stamina <= playerStats.stamina.current;\n      if (!hasStamina) return;\n      handlePlayerEffect(skillNumber);\n    }\n\n    if (key === 'Escape') {\n      onMenu();\n    }\n    if (key === 'h') {\n      hint(5, 100);\n    }\n\n    if (key === 'l') {\n      setShowLog(!isLogShown);\n    }\n\n    if (key === 's') {\n      save();\n    }\n\n    if (key === 'a' && game.states.length > 1 && timeTravel) {\n      timeTravel.undo();\n    }\n    if (key === 'd' && timeTravel && timeTravel.redo != null) {\n      timeTravel.redo();\n    }\n\n    const valNum = parseInt(key);\n    if (valNum > 0 && valNum <= enemies.length) {\n      setSelected((valNum - 1) as MonsterTarget);\n    }\n  });\n\n  const selectedButtons = Set<string>(\n    [...pressed].flatMap((key: string) => {\n      const skillIndex = playerHotkeys.indexOf(key);\n      if (skillIndex !== -1) {\n        return [playerSkills[skillIndex].display];\n      } else {\n        return [];\n      }\n    })\n  );\n\n  const save = useCallback(() => {\n    const blob = new Blob([JSON.stringify(game)], {\n      type: 'application/json;charset=utf-8',\n    });\n    saveAs(blob, `buildmancer-${Date.now()}.bmreplay`);\n  }, [game]);\n\n  return (\n    <>\n      <Container fluid>\n        <Row className=\"justify-content-center align-items-flex-start\">\n          <Col sm={12} md={8}>\n            <Button onClick={onMenu}>\n              [<i>Esc</i>] MAIN MENU\n            </Button>\n            <Card.Title>\n              {!isPlayerAlive ? (\n                <b>❌❌DEFEAT❌❌</b>\n              ) : !areMonstersAlive ? (\n                <b>🎉🎉VICTORY🎉🎉</b>\n              ) : (\n                ''\n              )}{' '}\n              Turn {game.states.length} out of {game.turns}\n            </Card.Title>\n            <PlayerCard\n              player={player}\n              playerStats={playerStats}\n              inventoryStats={inventoryStats}\n              disabledSkills={disabledSkills}\n              setDisabledSkills={setDisabledSkills}\n              onClickEffect={(idx) => handlePlayerEffect(idx)}\n              selectedButtons={selectedButtons}\n              hotkeys={playerHotkeys}\n              lastAction={\n                lastAttacks\n                  .filter((a) => a.origin === 'Player' && a.phase === 'MAIN')\n                  .map((a) => `${a.display}`)\n                  .join(' -> ') ?? undefined\n              }\n              canAct={canAct}\n            />\n            {timeTravel != null && (\n              <Row>\n                <ButtonGroup>\n                  {game.states.length > 1 && (\n                    <Button onClick={(_) => timeTravel.undo()}>\n                      [<i>A</i>] Undo ↩\n                    </Button>\n                  )}\n                  {timeTravel.redo && (\n                    <Button onClick={(_) => timeTravel.redo!!()}>\n                      [<i>D</i>] Redo ↪\n                    </Button>\n                  )}\n                </ButtonGroup>\n              </Row>\n            )}\n            <Row>\n              <ButtonGroup>\n                <Button onClick={(_) => hint(5, 100)}>\n                  <i>[H]</i> Hint\n                </Button>\n              </ButtonGroup>\n            </Row>\n            <Row>\n              {Seq(enemies)\n                .zip(Seq(enemiesStats))\n                .map(([enemy, stats], idx) => (\n                  <Col key={idx} xs={6} md={4}>\n                    <EnemyCard\n                      key={idx}\n                      enemyStats={stats}\n                      enemy={enemy}\n                      canAct={canAct}\n                      latestAttack={\n                        Seq(lastAttacks)\n                          .filter(\n                            ({ origin, phase }) =>\n                              origin === idx && phase === 'MAIN'\n                          )\n                          .map((a) => `${a.display}`)\n                          .join(' -> ') ?? undefined\n                      }\n                      isSelected={idx === target}\n                      onSelect={() => setSelected(idx as MonsterTarget)}\n                      hotkey={`${idx + 1}`}\n                    />\n                  </Col>\n                ))}\n            </Row>\n            <Card.Title>Debug</Card.Title>\n            <Row>\n              <ButtonGroup>\n                <Button onClick={handleShowLog}>\n                  [<i>L</i>] Log 🗒\n                </Button>\n                <Button onClick={save}>\n                  [<i>S</i>] Save Replay 📂\n                </Button>\n              </ButtonGroup>\n            </Row>\n            <Card.Title>Cheats</Card.Title>\n            <Row>\n              <ButtonGroup>\n                <Button onClick={(_) => solveGame(5, 100)}>Solve ⌛</Button>\n                <Button onClick={(_) => solveGame(20, 100)}>\n                  Solve thoroughly ⌛⌛⌛\n                </Button>\n              </ButtonGroup>\n            </Row>\n          </Col>\n        </Row>\n      </Container>\n      <Modal\n        show={isLogShown}\n        onHide={handleCloseLog}\n        scrollable={true}\n        centered={true}\n      >\n        <Modal.Header closeButton>\n          <Modal.Title>Game Log</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          {game.states.map((s, idx) => (\n            <div key={idx}>\n              <b>Turn {idx}</b>\n              <br />\n              Player: {JSON.stringify(s.player, null, 2)}\n              <br />\n              Enemies: {JSON.stringify(s.enemies, null, 2)}\n              <br />\n              Inventory?: {JSON.stringify(s.inventory, null, 2)}\n              <br />\n              Target [{s.target}]<br />\n              Bot?: {JSON.stringify(s.bot, null, 2)}\n              <br />\n              Eot?: {JSON.stringify(s.eot, null, 2)}\n              <br />\n              Actions:\n              <br />\n              {s.lastAttacks.map((a, idx) => (\n                <div key={idx}>\n                  {'-->'} {JSON.stringify(a, null, 2)}\n                  <br />\n                </div>\n              ))}\n            </div>\n          ))}\n        </Modal.Body>\n        <Modal.Footer>\n          <Button variant=\"primary\" onClick={handleCloseLog}>\n            Close\n          </Button>\n        </Modal.Footer>\n      </Modal>\n    </>\n  );\n};\n\nexport default Game;\n","import React from 'react';\n\nexport function useForceRerender() {\n  const [value, setValue] = React.useState(false);\n  return () => setValue(!value);\n}\n","import { useEffect, useCallback, useState } from 'react';\n\nexport default function usePressedKeys(onUp: (e: string) => void): Set<string> {\n  const [pressedKeys, updatePressedKeys] = useState(new Set<string>());\n\n  const downHandler = ({ key }: { key: string }) => {\n    updatePressedKeys((set) => new Set([...set, key]));\n  };\n\n  const upHandler = useCallback(\n    ({ key }: { key: string }) => {\n      updatePressedKeys((set) => new Set([...set].filter((k) => k !== key)));\n      onUp(key);\n    },\n    [onUp]\n  );\n\n  useEffect(() => {\n    window.addEventListener('keydown', downHandler);\n    window.addEventListener('keyup', upHandler);\n\n    return () => {\n      window.removeEventListener('keydown', downHandler);\n      window.removeEventListener('keyup', upHandler);\n    };\n  }, [upHandler]);\n\n  return pressedKeys;\n}\n","import { Seq } from 'immutable';\nimport React from 'react';\nimport { findBestPlay } from '../../game/tinkerer';\nimport { initialState, previousState } from '../../game/playGame';\nimport {\n  PlayState,\n  playState,\n  setSelected,\n  setDisabledSkills,\n  handlePlayerEffect,\n} from '../../game/playGame';\nimport { Play, Snapshot } from '../../game/types';\nimport Game from '../Game';\n\nconst SingleGame = ({\n  play,\n  timeTravel,\n  onGameEnd,\n  onMenu,\n}: {\n  play: Play;\n  timeTravel: boolean;\n  onGameEnd: (state: PlayState, play: Play) => void;\n  onMenu: () => void;\n}) => {\n  const [game, setGame] = React.useState<Play>(play);\n  const [redo, setRedo] = React.useState<Snapshot[]>([]);\n\n  React.useEffect(() => {\n    setGame(play);\n  }, [play]);\n\n  React.useEffect(() => {\n    const gameState = playState(game);\n    const hasEnded = gameState !== 'playing';\n    if (hasEnded) {\n      onGameEnd(gameState, game);\n    }\n  }, [game]);\n\n  const timeTravelObj = timeTravel\n    ? {\n        redo:\n          redo.length > 0\n            ? () => {\n                const newRedo = [...redo];\n                const latest = newRedo.pop() as Snapshot;\n                setRedo(newRedo);\n                setGame({ ...game, states: [...game.states, latest] });\n              }\n            : undefined,\n        undo: () => {\n          setRedo([...redo, previousState(game)]);\n          setGame({\n            ...game,\n            states: [initialState(game), ...game.states.slice(1, -1)],\n          });\n        },\n      }\n    : undefined;\n\n  return (\n    <Game\n      game={game}\n      timeTravel={timeTravelObj}\n      onMenu={onMenu}\n      setSelected={(idx) => {\n        setRedo([]);\n        setGame(setSelected(game, idx));\n      }}\n      setDisabledSkills={(disabled) => {\n        setRedo([]);\n        setGame(setDisabledSkills(game, disabled));\n      }}\n      handlePlayerEffect={(idx) => {\n        setRedo([]);\n        setGame(handlePlayerEffect(game, idx));\n      }}\n      solveGame={(iterations, population) =>\n        setGame(\n          Seq(findBestPlay(game, iterations, population)).maxBy(\n            (a) => a.score\n          )!!.phenotype\n        )\n      }\n      hint={(iterations, population) =>\n        setGame({\n          ...game,\n          states: [\n            ...game.states,\n            Seq(findBestPlay(game, iterations, population)).maxBy(\n              (a) => a.score\n            )!!.phenotype.states[game.states.length],\n          ],\n        })\n      }\n    />\n  );\n};\n\nexport default SingleGame;\n","import React from 'react';\nimport { Form, Col, Row, Alert, Button, Container } from 'react-bootstrap';\nimport { Play } from '../../game/types';\nimport { playSchema } from '../../game/typesSchemas';\n\nconst LoadScreen = ({\n  onLoad,\n  onMenu,\n}: {\n  onLoad: (g: Play) => void;\n  onMenu: () => void;\n}) => {\n  const [loadError, setLoadError] = React.useState<string | undefined>();\n  const load = (data: string) => {\n    try {\n      const playRaw = JSON.parse(data);\n      try {\n        // FIXME update schema\n        //playSchema.parse(playRaw);\n        onLoad(playRaw as Play);\n      } catch (e) {\n        setLoadError('Failed to load Replay - Invalid Data');\n      }\n    } catch (e) {\n      setLoadError('Failed to load Replay - Bad Data');\n    }\n  };\n  const onFormSubmit = (e: any) => {\n    e.preventDefault();\n    if (e.target?.fileData?.files[0] != null) {\n      const reader = new FileReader();\n      reader.onloadend = (ev: ProgressEvent<FileReader>) => {\n        const result = ev.target?.result as string | undefined;\n        if (result != null) {\n          load(result);\n        } else {\n          setLoadError('Failed to load Replay - Bad File');\n        }\n      };\n      reader.readAsText(e.target.fileData.files[0]);\n    } else if (\n      e.target?.rawData?.value != null &&\n      e.target?.rawData?.value != ''\n    ) {\n      load(e.target.rawData.value);\n    }\n  };\n  return (\n    <Form onSubmit={onFormSubmit}>\n      <Container fluid>\n        <Col>\n          <Row>\n            {loadError && (\n              <>\n                <Alert variant={'danger'}>{loadError}</Alert>\n                <br />\n                <br />\n              </>\n            )}\n          </Row>\n          <Row>\n            <Form.Group>\n              <Form.Label>Load Replay from File</Form.Label>\n              <Form.Control type=\"file\" name=\"fileData\" accept=\".bmreplay\" />\n              <Form.Text muted>Select the Replay file to load</Form.Text>\n            </Form.Group>\n          </Row>\n          <br />\n          <Row>\n            <Form.Group>\n              <Form.Label>Load Replay from Text</Form.Label>\n              <Form.Control\n                name=\"rawData\"\n                as=\"textarea\"\n                rows={3}\n                placeholder=\"Replay text\"\n              />\n              <Form.Text muted>Paste the text of your Replay here</Form.Text>\n            </Form.Group>\n          </Row>\n          <br />\n          <Button variant=\"primary\" type=\"submit\">\n            Load\n          </Button>\n        </Col>\n        <br />\n        <Button onClick={onMenu}>MAIN MENU</Button>\n      </Container>\n    </Form>\n  );\n};\n\nexport default LoadScreen;\n","import './App.css';\n// import { readString } from \"react-papaparse\";\nimport {\n  Snapshot,\n  Play,\n  EnemyStats,\n  Enemy,\n  EnemiesStats,\n  Enemies,\n} from './game/types';\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport PlayerBuilder from './components/PlayerBuilder';\nimport EncounterBuilder from './components/EncounterBuilder';\nimport {\n  initialState,\n  makeGameNew,\n  makeGameNextLevel,\n  PlayState,\n  previousState,\n} from './game/playGame';\nimport { dummyEnemy, randomEnemy, randomPlayer } from './game/makeGame';\nimport { useMachine } from '@xstate/react';\nimport { gameMenuMachine } from './stateMachines/menuStateMachine';\nimport Menu from './components/menus/Menu';\nimport SingleGame from './components/menus/SingleGame';\nimport LoadScreen from './components/menus/LoadScreen';\n\nfunction App() {\n  const [state, send] = useMachine(gameMenuMachine, { devTools: true });\n  const event = state.event;\n  const onMenu = () => {\n    send('MENU');\n  };\n\n  switch (true) {\n    case state.matches('main'):\n      return (\n        <Menu\n          title={'Main Menu'}\n          states={Object.keys(gameMenuMachine.states.main.on)}\n          onClick={send}\n        />\n      );\n    // QUICK\n    case state.matches({ quick: 'play' }): {\n      const player = randomPlayer();\n      const encounter = randomEnemy();\n      return (\n        <SingleGame\n          play={makeGameNew(\n            player[0],\n            player[1],\n            [encounter[0]],\n            [encounter[1]],\n            50,\n            state.context.singleContext.seed\n          )}\n          onMenu={onMenu}\n          timeTravel={true}\n          onGameEnd={(result, game) => {\n            send(result === 'win' ? 'WIN' : 'LOSE', { result, game });\n          }}\n        />\n      );\n    }\n    case state.matches({ quick: 'win' }):\n    case state.matches({ quick: 'lose' }):\n      return (\n        <Menu\n          title={`${event.result} in ${event.game.states.length - 1} turns`}\n          states={['MENU']}\n          onClick={send}\n        />\n      );\n    // SINGLE\n    case state.matches({ single: 'player' }):\n      return (\n        <PlayerBuilder\n          onSave={(player, playerStats) => {\n            send('PLAYER', { player: [player, playerStats] });\n          }}\n        />\n      );\n    case state.matches({ single: 'encounter' }):\n      return (\n        <EncounterBuilder\n          player={event.player[0]}\n          onSave={(enemies, enemiesStats) => {\n            send('ENCOUNTER', {\n              encounter: [enemies, enemiesStats],\n              player: event.player,\n            });\n          }}\n        />\n      );\n    case state.matches({ single: 'play' }): {\n      return (\n        <SingleGame\n          play={makeGameNew(\n            event.player[0],\n            event.player[1],\n            event.encounter[0],\n            event.encounter[1],\n            50,\n            state.context.singleContext.seed\n          )}\n          onMenu={onMenu}\n          timeTravel={true}\n          onGameEnd={(result, game) => {\n            send(result === 'win' ? 'WIN' : 'LOSE', { result, game });\n          }}\n        />\n      );\n    }\n    case state.matches({ single: 'win' }):\n    case state.matches({ single: 'lose' }):\n      return (\n        <Menu\n          title={`${event.result} in ${event.game.states.length - 1} turns`}\n          states={['MENU']}\n          onClick={send}\n        />\n      );\n    // TRAINING\n    case state.matches({ training: 'player' }):\n      return (\n        <PlayerBuilder\n          onSave={(player, playerStats) => {\n            send('PLAYER', { player: [player, playerStats] });\n          }}\n        />\n      );\n    case state.matches({ training: 'play' }): {\n      const player = randomPlayer();\n      const encounter = dummyEnemy();\n      return (\n        <SingleGame\n          play={makeGameNew(\n            player[0],\n            player[1],\n            [encounter[0]],\n            [encounter[1]],\n            50,\n            state.context.singleContext.seed\n          )}\n          onMenu={onMenu}\n          timeTravel={true}\n          onGameEnd={(result, game) => {\n            send(result === 'win' ? 'WIN' : 'LOSE', { result, game });\n          }}\n        />\n      );\n    }\n    case state.matches({ training: 'win' }):\n    case state.matches({ training: 'lose' }):\n      return (\n        <Menu\n          title={`You have dealt a lot of damage! Well done 💯`}\n          states={['MENU']}\n          onClick={send}\n        />\n      );\n    // ARCADE\n    case state.matches({ arcade: 'player' }): {\n      const encounter = randomEnemy();\n      return (\n        <PlayerBuilder\n          onSave={(player, playerStats) => {\n            send('PLAYER', {\n              game: makeGameNew(\n                player,\n                playerStats,\n                [encounter[0]],\n                [encounter[1]],\n                50,\n                state.context.survivalContext.seed\n              ),\n            });\n          }}\n        />\n      );\n    }\n    case state.matches({ arcade: 'play' }): {\n      return (\n        <SingleGame\n          play={event.game}\n          timeTravel={false}\n          onMenu={onMenu}\n          onGameEnd={(result: PlayState, game: Play) => {\n            let encounter = [[], []] as [Enemy[], EnemyStats[]];\n            if (state.context.arcadeContext.victories >= 0) {\n              const otherEnemy = randomEnemy();\n              encounter = [\n                [...encounter[0], otherEnemy[0]],\n                [...encounter[1], otherEnemy[1]],\n              ];\n            }\n            if (state.context.arcadeContext.victories >= 2) {\n              const otherEnemy = randomEnemy();\n              encounter = [\n                [...encounter[0], otherEnemy[0]],\n                [...encounter[1], otherEnemy[1]],\n              ];\n            }\n            if (state.context.arcadeContext.victories >= 5) {\n              const otherEnemy = randomEnemy();\n              encounter = [\n                [...encounter[0], otherEnemy[0]],\n                [...encounter[1], otherEnemy[1]],\n              ];\n            }\n            const firstState: Snapshot = initialState(game);\n            send(result === 'win' ? 'WIN' : 'LOSE', {\n              result,\n              game: makeGameNextLevel(\n                game.player,\n                firstState.player,\n                encounter[0] as Enemies,\n                encounter[1] as EnemiesStats,\n                {},\n                50,\n                state.context.survivalContext.seed\n              ),\n            });\n          }}\n        />\n      );\n    }\n    case state.matches({ arcade: 'victory' }): {\n      return (\n        <Menu\n          title={`🎉🎉VICTORY!🎉🎉 Final score: ${state.context.arcadeContext.score}`}\n          states={['MENU']}\n          onClick={send}\n        />\n      );\n    }\n    case state.matches({ arcade: 'defeat' }): {\n      return (\n        <Menu\n          title={`Failed after ${state.context.arcadeContext.victories} victories`}\n          states={['MENU']}\n          onClick={send}\n        />\n      );\n    }\n    // SURVIVAL\n    case state.matches({ survival: 'player' }): {\n      const encounter = randomEnemy();\n      return (\n        <PlayerBuilder\n          onSave={(player, playerStats) => {\n            send('PLAYER', {\n              game: makeGameNew(\n                player,\n                playerStats,\n                [encounter[0]],\n                [encounter[1]],\n                50,\n                state.context.survivalContext.seed\n              ),\n            });\n          }}\n        />\n      );\n    }\n    case state.matches({ survival: 'play' }): {\n      return (\n        <SingleGame\n          play={event.game}\n          onMenu={onMenu}\n          timeTravel={false}\n          onGameEnd={(result, game) => {\n            const encounter = randomEnemy();\n            const lastState: Snapshot = previousState(game);\n            send(result === 'win' ? 'WIN' : 'LOSE', {\n              result,\n              game: makeGameNextLevel(\n                game.player,\n                lastState.player,\n                [encounter[0]],\n                [encounter[1]],\n                lastState.inventory,\n                50,\n                state.context.survivalContext.seed\n              ),\n            });\n          }}\n        />\n      );\n    }\n    case state.matches({ survival: 'defeat' }): {\n      return (\n        <Menu\n          title={`Completed after ${state.context.survivalContext.victories} victories`}\n          states={['MENU']}\n          onClick={send}\n        />\n      );\n    }\n    // LOAD\n    case state.matches({ replay: 'replay' }): {\n      return (\n        <LoadScreen\n          onLoad={(game) => send('REPLAY', { game })}\n          onMenu={onMenu}\n        />\n      );\n    }\n    case state.matches({ replay: 'play' }): {\n      return (\n        <SingleGame\n          play={event.game}\n          onMenu={onMenu}\n          timeTravel={true}\n          onGameEnd={(result, game) => {\n            send(result === 'win' ? 'WIN' : 'LOSE', { result, game });\n          }}\n        />\n      );\n    }\n    case state.matches({ replay: 'win' }):\n    case state.matches({ replay: 'lose' }):\n      return (\n        <Menu\n          title={`${event.result} in ${event.game.states.length - 1} turns`}\n          states={['MENU']}\n          onClick={send}\n        />\n      );\n    default:\n      return <>{JSON.stringify(state.value)}</>;\n  }\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport { createRoot } from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorkerRegistration from './serviceWorkerRegistration';\nimport reportWebVitals from './reportWebVitals';\n\nconst container = document.getElementById('root');\nconst root = createRoot(container!);\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://cra.link/PWA\nserviceWorkerRegistration.register();\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","import { Opaque } from 'type-fest';\nimport { enemies } from './data';\nimport { EnemiesIndex } from './data/enemies';\nimport { allRanges, makeStat } from './makeGame';\nimport { updateGlobals } from './modding';\nimport {\n  callEffectFun,\n  Effect,\n  effectFunCall,\n  EffectTarget,\n  Enemies,\n  EnemiesStats,\n  Enemy,\n  EnemyStats,\n  FunIndex,\n  MonsterTarget,\n  Play,\n  PlayerStats,\n  Snapshot,\n  StatEffectTarget,\n  Status,\n  Target,\n} from './types';\nimport { clamp, pipe } from './zFunDump';\n\n// #region Effect funs\n\nexport function extractFunction({ effects }: Effect): ReduceFun {\n  return (origin, play, startState) =>\n    effects.reduce(\n      (acc, { index, parameters }) =>\n        callEffectFun(effectFunRepo, index, parameters)(origin, ...acc),\n      [play, startState]\n    );\n}\n\nconst effectFun = <T>(fun: ParametrizedFun<T>): EffectFun<T> =>\n  ((params) => (origin, play, oldState) =>\n    fun(params)(origin, play, oldState)) as EffectFun<T>;\n\nconst applyPoison = (\n  play: Play,\n  currentState: Snapshot,\n  { target, turns }: ReduceFunctionT['Reduce:PoisonBOT']\n) =>\n  pipe(\n    target === 'Player'\n      ? actions.changeStatPlayer(currentState, ({ hp }) => ({\n          hp: { ...hp, current: Math.max(0, hp.current - 1) },\n        }))\n      : actions.changeStatMonster(\n          currentState,\n          currentState.target,\n          ({ hp }) => ({ hp: { ...hp, current: Math.max(0, hp.current - 1) } })\n        ),\n    (newState) =>\n      turns > 0\n        ? actions.addBotEffect(newState, 'Player', {\n            display: `Poison ${\n              target === 'Player'\n                ? 'Player'\n                : play.enemies[target]!!.lore.name + '[' + (target + 1)\n            } + \"]\"`,\n            tooltip: '',\n            range: allRanges,\n            priority: 4,\n            dodgeable: false,\n            effects: [\n              effectFunCall([\n                'Reduce:PoisonBOT',\n                { target: target, turns: turns - 1 },\n              ]),\n            ],\n          })\n        : newState\n  );\n\ntype SystemFunctionT = {\n  'Utility:Cleanup': undefined;\n  'Debug:GGWP': undefined;\n  'Debug:Sudoku': undefined;\n};\ntype BasicFunctionT = {\n  'Basic:Rest': undefined;\n  'Basic:Move': { amount: number };\n  'Basic:Attack': { amount: number };\n  'Basic:Stamina': { amount: number };\n  'Basic:HP': { amount: number };\n};\n\ntype StatusFunctionT = {\n  'Effect:Poison': { target: EffectTarget; turns: number };\n  'Effect:Dodge': undefined;\n  'Effect:Armor': { amount: number };\n  'Effect:Stun': undefined;\n  'Effect:Bleed': { target: EffectTarget; turns: number };\n  'Effect:Stat': StatEffectTarget;\n};\n\ntype MonsterFunctionT = {\n  'Monster:Summon': { enemy: EnemiesIndex };\n  'Monster:Dead': undefined;\n  'Monster:Attack': { amount: number };\n  'Monster:Move': { amount: number };\n};\ntype ItemFunctionT = {\n  'Wand:MagicBolt': undefined;\n  'BootsOfFlight:EOT': undefined;\n};\ntype ReduceFunctionT = {\n  'Reduce:PoisonBOT': { target: Target; turns: number };\n};\n\nconst engineFunctions = {\n  'Debug:GGWP': effectFun(() => (_, play, currentState) => [\n    play,\n    {\n      ...currentState,\n      enemies: currentState.enemies.map((m) => ({\n        ...m,\n        hp: { ...m.hp, current: 0 },\n      })) as EnemiesStats,\n    },\n  ]),\n  'Debug:Sudoku': effectFun(() => (_, play, currentState) => [\n    play,\n    {\n      ...currentState,\n      player: {\n        ...currentState.player,\n        hp: { ...currentState.player.hp, current: 0 },\n      },\n    },\n  ]),\n  'Utility:Cleanup': effectFun(() => (_origin, play, currentState) => [\n    play,\n    pipe(\n      actions.changeStatusPlayer(currentState, (o) => ({\n        ...o,\n        armor: { amount: 0 },\n        bleed: { turns: Math.max(o.bleed.turns - 1, 0) },\n        dodge: { active: false },\n        stun: { active: false },\n      })),\n      (newState) =>\n        newState.enemies.reduce(\n          (acc, v, idx) =>\n            actions.changeStatusMonster(acc, idx as MonsterTarget, (o) => ({\n              ...o,\n              armor: { amount: 0 },\n              bleed: { turns: Math.max(o.bleed.turns - 1, 0) },\n              dodge: { active: false },\n              stun: { active: false },\n            })),\n          currentState\n        )\n    ),\n  ]),\n};\n\nconst effectFunRepo: EffectFunctionRepository = {\n  ...engineFunctions,\n  // #region BASIC\n  'Basic:Rest': effectFun(() => (_origin, play, currentState) => [\n    play,\n    currentState,\n  ]),\n  'Basic:Move': effectFun(({ amount }) => (_origin, play, currentState) => [\n    play,\n    actions.changeDistance(currentState, currentState.target, amount),\n  ]),\n  'Basic:Attack': effectFun(({ amount }) => (_origin, play, currentState) => [\n    play,\n    actions.attackMonster(currentState, currentState.target, amount),\n  ]),\n  'Basic:Stamina': effectFun(({ amount }) => (_origin, play, currentState) => [\n    play,\n    actions.modifyPlayerStamina(currentState, amount),\n  ]),\n  'Basic:HP': effectFun(({ amount }) => (_origin, play, currentState) => [\n    play,\n    actions.changeStatPlayer(currentState, ({ hp }) => ({\n      hp: { ...hp, current: clamp(hp.current + amount, 0, hp.max) },\n    })),\n  ]),\n  // #endregion BASIC\n  // #region EFFECTS\n  'Effect:Dodge': effectFun(() => (origin, play, currentState) => [\n    play,\n    origin === 'Player'\n      ? actions.changeStatusPlayer(currentState, (o) => ({\n          ...o,\n          dodge: { active: true },\n        }))\n      : actions.changeStatusMonster(currentState, currentState.target, (o) => ({\n          ...o,\n          dodge: { active: true },\n        })),\n  ]),\n  'Effect:Armor': effectFun(({ amount }) => (origin, play, currentState) => [\n    play,\n    origin === 'Player'\n      ? actions.changeStatusPlayer(currentState, (o) => ({\n          ...o,\n          armor: { amount: o.armor.amount + amount },\n        }))\n      : actions.changeStatusMonster(currentState, currentState.target, (o) => ({\n          ...o,\n          armor: { amount: o.armor.amount + amount },\n        })),\n  ]),\n  'Effect:Stun': effectFun(() => (origin, play, currentState) => [\n    play,\n    origin === 'Player'\n      ? actions.changeStatusMonster(currentState, currentState.target, (o) => ({\n          ...o,\n          stun: { active: true },\n        }))\n      : actions.changeStatusPlayer(currentState, (o) => ({\n          ...o,\n          stun: { active: true },\n        })),\n  ]),\n  'Effect:Bleed': effectFun(({ target, turns }) => (_, play, currentState) => [\n    play,\n    target === 'Player'\n      ? actions.changeStatusPlayer(currentState, (o) => ({\n          ...o,\n          bleed: { turns: o.bleed.turns + turns },\n        }))\n      : actions.changeStatusMonster(currentState, currentState.target, (o) => ({\n          ...o,\n          bleed: { turns: o.bleed.turns + turns },\n        })),\n  ]),\n  'Effect:Poison': effectFun(({ target, turns }) => (_, play, currentState) => [\n    play,\n    pipe(\n      target === 'Player' ? ('Player' as Target) : currentState.target,\n      (gameTarget) =>\n        applyPoison(play, currentState, { target: gameTarget, turns })\n    ),\n  ]),\n  'Reduce:PoisonBOT': effectFun((params) => (_, play, currentState) => [\n    play,\n    applyPoison(play, currentState, params),\n  ]),\n  'Effect:Stat': effectFun((stats) => (origin, play, currentState) => [\n    play,\n    stats.target === 'Player'\n      ? actions.changeStatPlayer(currentState, (s) => ({\n          hp: {\n            ...s.hp,\n            current: clamp(s.hp.current + (stats.hp ?? 0), 0, s.hp.max),\n          },\n          stamina: {\n            ...s.stamina,\n            current: clamp(\n              s.stamina.current + (stats.stamina ?? 0),\n              0,\n              s.stamina.max\n            ),\n          },\n          speed: {\n            ...s.speed,\n            current: Math.min(\n              s.speed.max,\n              s.speed.current + (stats.speed ?? 0)\n            ),\n          },\n          defence: {\n            ...s.defence,\n            current: Math.min(\n              s.defence.max,\n              s.defence.current + (stats.defence ?? 0)\n            ),\n          },\n          attack: {\n            ...s.attack,\n            current: Math.min(\n              s.attack.max,\n              s.attack.current + (stats.attack ?? 0)\n            ),\n          },\n          staminaPerTurn: {\n            ...s.staminaPerTurn,\n            current: Math.min(\n              s.staminaPerTurn.max,\n              s.staminaPerTurn.current + (stats.staminaPerTurn ?? 0)\n            ),\n          },\n        }))\n      : actions.changeStatMonster(\n          currentState,\n          origin === 'Player' ? currentState.target : origin,\n          (s) => ({\n            hp: {\n              ...s.hp,\n              current: clamp(s.hp.current + (stats.hp ?? 0), 0, s.hp.max),\n            },\n            speed: {\n              ...s.speed,\n              current: Math.min(\n                s.speed.current + (stats.speed ?? 0),\n                s.speed.max\n              ),\n            },\n            defence: {\n              ...s.defence,\n              current: Math.min(\n                s.defence.current + (stats.defence ?? 0),\n                s.defence.max\n              ),\n            },\n            attack: {\n              ...s.attack,\n              current: Math.min(\n                s.attack.current + (stats.attack ?? 0),\n                s.attack.max\n              ),\n            },\n          })\n        ),\n  ]),\n  // #endregion EFFECTS\n  // #region MONSTERS\n  'Monster:Attack': effectFun(({ amount }) => (_origin, play, currentState) => [\n    play,\n    actions.attackPlayer(currentState, amount),\n  ]),\n  'Monster:Summon': effectFun(\n    ({ enemy }) =>\n      (_origin, play, currentState) =>\n        actions.addEnemy(\n          play,\n          currentState,\n          enemies[enemy][0],\n          enemies[enemy][1]\n        )\n  ),\n  'Monster:Dead': effectFun(() => (_origin, play, currentState) => [\n    play,\n    currentState,\n  ]),\n  'Monster:Move': effectFun(() => (origin, play, currentState) => [\n    play,\n    actions.changeDistance(currentState, origin, -2),\n  ]),\n  // #endregion MONSTERS\n  // #region ITEMS\n  'BootsOfFlight:EOT': effectFun(() => (_, play, currentState) => [\n    play,\n    currentState.enemies.reduce(\n      (s, _m, idx) => actions.changeDistance(s, idx as MonsterTarget, 2),\n      currentState\n    ),\n  ]),\n  'Wand:MagicBolt': effectFun(() => (_, play, currentState) => {\n    let state = currentState;\n    while (state.player.stamina.current) {\n      state = actions.modifyPlayerStamina(state, -2);\n      state = actions.attackMonster(state, currentState.target, 1);\n    }\n    return [play, state];\n  }),\n  // #endregion ITEMS\n};\n\nexport type EffectFunctionT = SystemFunctionT &\n  BasicFunctionT &\n  StatusFunctionT &\n  ReduceFunctionT &\n  MonsterFunctionT &\n  ItemFunctionT;\n\nexport type ReduceFun = (\n  origin: Target,\n  play: Play,\n  newState: Snapshot\n) => [Play, Snapshot];\nexport type ParametrizedFun<T> = (params: T) => ReduceFun;\nexport type EffectFun<T> = Opaque<ParametrizedFun<T>, ParametrizedFun<T>>;\n\nexport type EffectFunctionRepository = {\n  [k in keyof EffectFunctionT]: (params: EffectFunctionT[k]) => ReduceFun;\n};\nexport type EffectFunRepoIndex = keyof EffectFunctionT & FunIndex;\nexport type EffectFunParams<T extends EffectFunRepoIndex> = Parameters<\n  EffectFunctionRepository[T]\n>[0];\n\n// #endregion\n// #region Modify state\n\nconst updateMonster = (\n  enemies: EnemiesStats,\n  target: Target,\n  override: (stats: EnemyStats) => Partial<EnemyStats>\n): EnemiesStats =>\n  enemies.map((m, idx) =>\n    idx === target ? { ...m, ...override(m) } : m\n  ) as EnemiesStats;\n\nconst updatePlayer = (\n  curr: Snapshot,\n  override: (player: PlayerStats) => Partial<PlayerStats>\n): Snapshot => {\n  return {\n    ...curr,\n    player: { ...curr.player, ...override(curr.player) },\n  };\n};\n\nconst updatePlayerStat = <T extends keyof PlayerStats>(\n  curr: Snapshot,\n  key: T,\n  modify: (player: PlayerStats[T]) => Partial<PlayerStats[T]>\n): Snapshot => {\n  const player = curr.player;\n  player[key] = {\n    ...player[key],\n    ...modify(player[key]),\n  };\n  return {\n    ...curr,\n    player,\n  };\n};\n\nconst actions = {\n  attackPlayer,\n  attackMonster,\n  changeStatPlayer: updatePlayer,\n  changeStatMonster: (\n    curr: Snapshot,\n    target: MonsterTarget,\n    f: (stats: EnemyStats) => Partial<EnemyStats>\n  ): Snapshot => ({\n    ...curr,\n    enemies: updateMonster(curr.enemies, target, f),\n  }),\n  changeStatusPlayer: (\n    curr: Snapshot,\n    updateStatus: (oldStatus: Status) => Status\n  ): Snapshot => ({\n    ...curr,\n    player: { ...curr.player, status: updateStatus(curr.player.status) },\n  }),\n  changeStatusMonster: (\n    curr: Snapshot,\n    target: MonsterTarget,\n    updateStatus: (oldStatus: Status) => Status\n  ): Snapshot => ({\n    ...curr,\n    enemies: updateMonster(curr.enemies, target, ({ status }) => ({\n      status: updateStatus(status),\n    })),\n  }),\n  changeDistance: (\n    curr: Snapshot,\n    origin: Target,\n    amount: number\n  ): Snapshot => ({\n    ...curr,\n    enemies: updateMonster(curr.enemies, origin, ({ distance }) => ({\n      distance: clamp(distance + amount, 0, 4) as MonsterTarget,\n    })),\n  }),\n  removeMonster: (\n    currPlay: Play,\n    currSnap: Snapshot,\n    target: MonsterTarget\n  ): [Play, Snapshot] => [\n    {\n      ...currPlay,\n      enemies: currPlay.enemies.filter((_, idx) => idx === target) as Enemies,\n    },\n    {\n      ...currSnap,\n      target: 0,\n      enemies: currSnap.enemies.filter(\n        (_, idx) => idx === target\n      ) as EnemiesStats,\n    },\n  ],\n  modifyPlayerStamina: (curr: Snapshot, amount: number): Snapshot =>\n    updatePlayerStat(curr, 'stamina', (stamina) => ({\n      current: clamp(stamina.current + amount, 0, stamina.max),\n    })),\n  addEotEffect: (curr: Snapshot, origin: Target, effect: Effect): Snapshot => ({\n    ...curr,\n    eot: [...(curr.eot ?? []), [origin, effect]],\n  }),\n  addBotEffect: (curr: Snapshot, origin: Target, effect: Effect): Snapshot => ({\n    ...curr,\n    bot: [...(curr.eot ?? []), [origin, effect]],\n  }),\n  addEnemy: (\n    play: Play,\n    curr: Snapshot,\n    enemy: Enemy,\n    enemyStats: EnemyStats\n  ): [Play, Snapshot] => {\n    return play.enemies.length < 5\n      ? [\n          {\n            ...play,\n            enemies: [...play.enemies, enemy] as Enemies,\n          },\n          {\n            ...curr,\n            enemies: [...curr.enemies, enemyStats] as EnemiesStats,\n          },\n        ]\n      : [play, curr];\n  },\n};\n\nfunction attackMonster(\n  curr: Snapshot,\n  target: MonsterTarget,\n  amount: number\n): Snapshot {\n  const monster = curr.enemies[target]!!;\n  const armor = monster.status.armor.amount;\n  const damage = amount + curr.player.attack.current;\n  const afterDefence = Math.max(damage - monster.defence.current, 0);\n  const afterArmor = Math.max(afterDefence - armor, 0);\n  const armorSpent = armor - (afterDefence - afterArmor);\n  const afterBleed = afterArmor + (monster.status.bleed.turns > 0 ? 1 : 0);\n  return {\n    ...curr,\n    enemies: updateMonster(curr.enemies, target, ({ status, hp }) => ({\n      hp: { ...hp, current: clamp(hp.current - afterBleed, 0, hp.max) },\n      status: { ...status, armor: { amount: armorSpent } },\n    })),\n  };\n}\n\nfunction attackPlayer(curr: Snapshot, amount: number): Snapshot {\n  const armor = curr.player.status.armor.amount;\n  const damage = amount + curr.player.attack.current;\n  const afterDefence = Math.max(damage - curr.player.defence.current, 0);\n  const afterArmor = Math.max(afterDefence - armor, 0);\n  const armorSpent = armor - (afterDefence - afterArmor);\n  const afterBleed = afterArmor + (curr.player.status.bleed.turns > 0 ? 1 : 0);\n  return updatePlayer(curr, ({ hp, status }) => ({\n    hp: { ...hp, current: clamp(hp.current - afterBleed, 0, hp.max) },\n    status: { ...status, armor: { amount: status.armor.amount - armorSpent } },\n  }));\n}\n\n// #endregion\n// #region Stat funs\n\nexport type StatsFunIndex = keyof typeof statsRepository;\nexport const statsRepository = {\n  '+Health': (\n    player: PlayerStats,\n    enemies: EnemiesStats\n  ): [PlayerStats, EnemiesStats] => [\n    { ...player, hp: makeStat(player.hp.current + 3) },\n    enemies,\n  ],\n  '+StaPerTurn': (\n    player: PlayerStats,\n    enemies: EnemiesStats\n  ): [PlayerStats, EnemiesStats] => [\n    { ...player, staminaPerTurn: makeStat(player.staminaPerTurn.current + 1) },\n    enemies,\n  ],\n  '+Stamina': (\n    player: PlayerStats,\n    enemies: EnemiesStats\n  ): [PlayerStats, EnemiesStats] => [\n    { ...player, stamina: makeStat(player.stamina.current + 2) },\n    enemies,\n  ],\n  '+Attack': (\n    player: PlayerStats,\n    enemies: EnemiesStats\n  ): [PlayerStats, EnemiesStats] => [\n    { ...player, attack: makeStat(player.attack.current + 1) },\n    enemies,\n  ],\n  '+Speed': (\n    player: PlayerStats,\n    enemies: EnemiesStats\n  ): [PlayerStats, EnemiesStats] => [\n    { ...player, speed: makeStat(player.speed.current + 1) },\n    enemies,\n  ],\n  '+Defence': (\n    player: PlayerStats,\n    enemies: EnemiesStats\n  ): [PlayerStats, EnemiesStats] => [\n    { ...player, defence: makeStat(player.defence.current + 1) },\n    enemies,\n  ],\n\n  '-Health': (\n    player: PlayerStats,\n    enemies: EnemiesStats\n  ): [PlayerStats, EnemiesStats] => [\n    { ...player, hp: makeStat(player.hp.current - 3) },\n    enemies,\n  ],\n  '-StaPerTurn': (\n    player: PlayerStats,\n    enemies: EnemiesStats\n  ): [PlayerStats, EnemiesStats] => [\n    { ...player, staminaPerTurn: makeStat(player.staminaPerTurn.current - 1) },\n    enemies,\n  ],\n  '-Stamina': (\n    player: PlayerStats,\n    enemies: EnemiesStats\n  ): [PlayerStats, EnemiesStats] => [\n    { ...player, stamina: makeStat(player.stamina.current - 2) },\n    enemies,\n  ],\n  '-Attack': (\n    player: PlayerStats,\n    enemies: EnemiesStats\n  ): [PlayerStats, EnemiesStats] => [\n    { ...player, attack: makeStat(player.attack.current - 1) },\n    enemies,\n  ],\n  '-Speed': (\n    player: PlayerStats,\n    enemies: EnemiesStats\n  ): [PlayerStats, EnemiesStats] => [\n    { ...player, speed: makeStat(player.speed.current - 1) },\n    enemies,\n  ],\n  '-Defence': (\n    player: PlayerStats,\n    enemies: EnemiesStats\n  ): [PlayerStats, EnemiesStats] => [\n    { ...player, defence: makeStat(player.defence.current - 1) },\n    enemies,\n  ],\n};\n\n// #endregion\n\nupdateGlobals({ effects: effectFunRepo });\n","import {\n  Enemies,\n  Player,\n  Snapshot,\n  MonsterTarget,\n  Target,\n  InventoryEffect,\n  EnemiesStats,\n  PlayerStats,\n  Play,\n  RNG,\n  StatsFun,\n  Effect,\n  PlayerTarget,\n  effectFunCall,\n  DisabledSkills,\n  safeEntries,\n  EffectPhase,\n  InventoryStats,\n  Seed,\n} from './types';\nimport { Seq, Set } from 'immutable';\nimport { Chance } from 'chance';\n// @ts-ignore fails on scripts despite having a d.ts file\nimport { toIndexableString } from 'pouchdb-collate';\nimport { extractFunction, statsRepository } from './effectRepository';\nimport { clamp, rangeArr } from './zFunDump';\nimport { allRanges } from './makeGame';\n\nexport const initialState = (play: Play): Snapshot => play.states[0];\nexport const previousState = (play: Play): Snapshot =>\n  play.states[play.states.length - 1];\n\n/**\n * @returns min inclusive, max exclusive rand\n */\nfunction turnDeterministicRng(\n  turns: number,\n  randPerTurn: number,\n  monsterSeed: Seed\n): RNG {\n  const monsterChance = new Chance(monsterSeed);\n  const monsterRng = rangeArr(turns).map((_) =>\n    rangeArr(randPerTurn)\n      // If max === 1, the rng function fails\n      .map((_) => monsterChance.floating({ min: 0, max: 0.9999, fixed: 4 }))\n  );\n  return monsterRng as RNG;\n}\n\nexport const turnRng = (\n  play: Play,\n  turn: number\n): ((min: number, max: number) => number) => {\n  const turnRng = [...play.rng[turn]];\n  return (min: number, max: number) =>\n    Math.floor((max - min) * turnRng.pop()!! + min);\n};\n\nexport const playerPassives = (player: Player): StatsFun[] =>\n  safeEntries(player.build)\n    .flatMap(([_k, s]) => s.passives ?? [])\n    .map((i) => statsRepository[i]);\n\nexport const playerActions = (\n  player: Player,\n  inventoryStats: InventoryStats\n): InventoryEffect[] =>\n  safeEntries(player.build)\n    .flatMap(([_k, i]) => i.effects ?? [])\n    .filter((e) => (e.amount ?? 999) > (inventoryStats[e.display]?.used ?? 0));\n\nconst enemiesBotEffects = (enemies: Enemies): [MonsterTarget, Effect][] =>\n  enemies\n    .flatMap((e, idx) =>\n      (e.bot ?? []).map((eff) => [idx as MonsterTarget, eff] as const)\n    )\n    // Sure, typescript\n    .map((a) => [...a]);\n\nconst enemiesEotEffects = (enemies: Enemies): [MonsterTarget, Effect][] =>\n  enemies\n    .flatMap((e, idx) =>\n      (e.eot ?? []).map((eff) => [idx as MonsterTarget, eff] as const)\n    )\n    // Sure, typescript\n    .map((a) => [...a]);\n\nexport const playerBotEffects = (\n  player: Player,\n  d: DisabledSkills\n): [PlayerTarget, Effect][] =>\n  safeEntries(player.build)\n    .flatMap(([k, s]) => (!Set(d).has(k) ? s.bot ?? [] : []))\n    .map((a) => ['Player', a]);\n\nexport const playerEotEffects = (\n  player: Player,\n  d: DisabledSkills\n): [PlayerTarget, Effect][] =>\n  safeEntries(player.build)\n    .flatMap(([k, s]) => (!Set(d).has(k) ? s.eot ?? [] : []))\n    .map((a) => ['Player', a]);\n\nexport const buildPlayer = (\n  player: Player,\n  playerStats: PlayerStats,\n  enemiesStats: EnemiesStats\n): [PlayerStats, EnemiesStats] =>\n  playerPassives(player).reduce(\n    ([p, e], fun) => fun(p, e),\n    [playerStats, enemiesStats]\n  );\n\nexport function makeGameNew(\n  player: Player,\n  playerStats: PlayerStats,\n  enemies: Enemies,\n  enemiesStats: EnemiesStats,\n  turns: number,\n  seed: number | string,\n  randPerTurn: number = 20\n): Play {\n  const [playerGameStats, enemyGameStats] = buildPlayer(\n    player,\n    playerStats,\n    enemiesStats\n  );\n  return makeGameNextLevel(\n    player,\n    playerGameStats,\n    enemies,\n    enemyGameStats,\n    {},\n    turns,\n    seed,\n    randPerTurn\n  );\n}\n\nexport function makeGameNextLevel(\n  player: Player,\n  playerStats: PlayerStats,\n  enemies: Enemies,\n  enemiesStats: EnemiesStats,\n  inventoryStats: InventoryStats,\n  turns: number,\n  seed: number | string,\n  randPerTurn: number = 20\n): Play {\n  return {\n    player,\n    enemies,\n    states: [\n      {\n        player: playerStats,\n        enemies: enemiesStats,\n        inventory: inventoryStats,\n        target: 0,\n        lastAttacks: [],\n        disabledSkills: [],\n      },\n    ],\n    rng: turnDeterministicRng(turns, randPerTurn, seed),\n    turns,\n    id: toIndexableString([player, enemies, turns, seed]),\n    seed,\n    version: '1',\n  };\n}\n\nconst reduceFuns = (\n  funs: [Target, Effect][],\n  p: Play,\n  s: Snapshot,\n  phase: EffectPhase\n): [Play, Snapshot] =>\n  Seq(funs)\n    .sortBy(([origin, a]) => {\n      if (a == null) {\n        throw new Error(\n          `Error in ${phase} by ${\n            origin === 'Player' ? 'Player' : p.enemies[origin]?.lore.name\n          }`\n        );\n      }\n      const priorityBonus =\n        origin === 'Player'\n          ? s.player.speed.current\n          : s.enemies[origin]!!.speed.current;\n      return clamp(a.priority - priorityBonus, 0, 4);\n    })\n    .reduce(\n      (acc, value) => {\n        const [origin, effect] = value;\n        const [oldPlay, oldState] = acc;\n        const monsterId = origin === 'Player' ? oldState.target : origin;\n        const targetMonster = oldState.enemies[monsterId]!!;\n\n        const isDeadAttackingMonster =\n          origin !== 'Player' && targetMonster.hp.current <= 0;\n        if (isDeadAttackingMonster) {\n          const newState: Snapshot = {\n            ...oldState,\n            lastAttacks: [\n              ...oldState.lastAttacks,\n              { origin, display: `💀💀DEAD💀💀 ${effect.display}`, phase },\n            ],\n          };\n          return [oldPlay, newState];\n        }\n\n        const isStunnedPlayer =\n          origin === 'Player' && oldState.player.status.stun.active;\n        const isStunnedMonster =\n          origin !== 'Player' && targetMonster.status.stun.active;\n        const isStunned = isStunnedPlayer || isStunnedMonster;\n        if (isStunned) {\n          const newState: Snapshot = {\n            ...oldState,\n            lastAttacks: [\n              ...oldState.lastAttacks,\n              { origin, display: `💫💫STUNNED💫💫 ${effect.display}`, phase },\n            ],\n          };\n          return [oldPlay, newState];\n        }\n\n        const isInRange = Set([...effect.range]).has(targetMonster.distance);\n        if (!isInRange) {\n          const newState: Snapshot = {\n            ...oldState,\n            lastAttacks: [\n              ...oldState.lastAttacks,\n              { origin, display: `❌❌WHIFFED❌❌ ${effect.display}`, phase },\n            ],\n          };\n          return [oldPlay, newState];\n        }\n\n        const monsterDodged =\n          effect.dodgeable &&\n          origin === 'Player' &&\n          targetMonster.status.dodge.active;\n        if (monsterDodged) {\n          const newState: Snapshot = {\n            ...oldState,\n            enemies: oldState.enemies.map((e, i) =>\n              i === monsterId\n                ? { ...e, status: { ...e.status, dodge: { active: false } } }\n                : e\n            ) as EnemiesStats,\n            lastAttacks: [\n              ...oldState.lastAttacks,\n              { origin, display: `💨💨DODGED💨💨 ${effect.display}`, phase },\n            ],\n          };\n          return [oldPlay, newState];\n        }\n\n        const playerDodged =\n          effect.dodgeable &&\n          origin !== 'Player' &&\n          oldState.player.status.dodge.active;\n        if (playerDodged) {\n          const newState: Snapshot = {\n            ...oldState,\n            player: {\n              ...oldState.player,\n              status: { ...oldState.player.status, dodge: { active: false } },\n            },\n            lastAttacks: [\n              ...oldState.lastAttacks,\n              { origin, display: `💨💨DODGED💨💨 ${effect.display}`, phase },\n            ],\n          };\n          return [oldPlay, newState];\n        }\n\n        const [newPlay, newState] = extractFunction(effect)(\n          origin,\n          oldPlay,\n          oldState\n        );\n        const finalState: Snapshot = {\n          ...newState,\n          lastAttacks: [\n            ...newState.lastAttacks,\n            { origin, display: effect.display, phase },\n          ],\n        };\n        return [newPlay, finalState];\n      },\n      [p, s]\n    );\n\nconst applyEffectStamina = (amount: number): Effect => ({\n  display: `${amount >= 0 ? '+' : ''}${amount} 💪`,\n  tooltip: `Use ${amount} stamina`,\n  effects: [effectFunCall(['Basic:Stamina', { amount }])],\n  range: allRanges,\n  priority: 0,\n  dodgeable: false,\n});\n\nconst effectEotCleanup: Effect = {\n  display: 'Cleanup',\n  tooltip: 'Cleanup',\n  effects: [effectFunCall('Utility:Cleanup')],\n  range: allRanges,\n  priority: 0,\n  dodgeable: false,\n};\n\nconst effectDead: Effect = {\n  display: '⚰',\n  tooltip: '⚰',\n  priority: 4,\n  effects: [effectFunCall('Monster:Dead')],\n  range: allRanges,\n  dodgeable: false,\n};\n\nexport const handlePlayerEffect = (play: Play, index: number): Play => {\n  const lastTurnState = previousState(play);\n  const usedSkill = playerActions(play.player, lastTurnState.inventory)[index];\n  const bot = lastTurnState.bot ?? [];\n  const eot = lastTurnState.eot ?? [];\n\n  const initialState: Snapshot = {\n    ...lastTurnState,\n    lastAttacks: [],\n    bot: undefined,\n    eot: undefined,\n    inventory: {\n      ...lastTurnState.inventory,\n      [usedSkill.display]: {\n        used: 1 + (lastTurnState.inventory[usedSkill.display]?.used ?? 0),\n      },\n    },\n  };\n\n  // Stamina\n  const [preBotPlay, preBotState] = reduceFuns(\n    [\n      [\n        'Player',\n        applyEffectStamina(\n          lastTurnState.player.staminaPerTurn.current - usedSkill.stamina\n        ),\n      ],\n    ],\n    play,\n    initialState,\n    'MAIN'\n  );\n\n  // BOT\n  // Lingering effects\n  const [postBotPlay, postBotState] = reduceFuns(\n    bot,\n    preBotPlay,\n    preBotState,\n    'BOT'\n  );\n  // Player & Monster effects\n  const entitiesBot: [Target, Effect][] = [\n    ...playerBotEffects(postBotPlay.player, postBotState.disabledSkills),\n    ...enemiesBotEffects(postBotPlay.enemies),\n  ];\n  const [postEntitiesBotPlay, postEntitiesBotState] = reduceFuns(\n    entitiesBot,\n    postBotPlay,\n    postBotState,\n    'BOT'\n  );\n\n  // Turn\n  const rand = turnRng(postEntitiesBotPlay, postEntitiesBotPlay.states.length);\n  const turnFunctions: [Target, Effect][] = Seq(postEntitiesBotPlay.enemies)\n    .zip(Seq(postEntitiesBotState.enemies))\n    .map(([e, stats], idx) => {\n      if (stats.hp.current > 0) {\n        const rolls = e.rolls[stats.distance];\n        const roll = rand(0, e.rolls[stats.distance].length);\n        // if (isNaN(roll)) {\n        //   throw new Error('Out of RNG exception');\n        // }\n        const effect = e.effects[rolls[roll]];\n        // if (effect == null) {\n        //   throw new Error(`Rolled outside the table ${JSON.stringify({ roll, rolls, effects: e.effects })}`);\n        // }\n        return [idx as Target, effect] as const;\n      } else {\n        return [idx as Target, effectDead] as const;\n      }\n    })\n    .concat([['Player' as Target, usedSkill] as const])\n    .toArray()\n    // Sure, typescript\n    .map((a) => [...a]);\n\n  const [newPlay, newState] = reduceFuns(\n    turnFunctions,\n    postEntitiesBotPlay,\n    postEntitiesBotState,\n    'MAIN'\n  );\n\n  // EOT\n  // Player & Monster effects\n  const entitiesEot = [\n    ...playerEotEffects(newPlay.player, newState.disabledSkills),\n    ...enemiesEotEffects(newPlay.enemies),\n  ];\n  const [postPlayerEotPlay, postPlayerEotState] = reduceFuns(\n    entitiesEot,\n    newPlay,\n    newState,\n    'EOT'\n  );\n  // Lingering effects\n  const [postEotPlay, postEotState] = reduceFuns(\n    eot,\n    postPlayerEotPlay,\n    postPlayerEotState,\n    'EOT'\n  );\n  // Cleanup\n  const [postCleanup, postCleanupState] = reduceFuns(\n    [['Player' as Target, effectEotCleanup]],\n    postEotPlay,\n    postEotState,\n    'EOT'\n  );\n\n  const endOfTurn: Play = {\n    ...postCleanup,\n    states: [...postCleanup.states, postCleanupState],\n  };\n\n  return endOfTurn;\n};\n\nexport const setSelected = (play: Play, target: MonsterTarget): Play => {\n  play.states[play.states.length - 1].target = target;\n  return {\n    ...play,\n    states: [...play.states],\n  };\n};\n\nexport const setDisabledSkills = (\n  play: Play,\n  disabled: DisabledSkills\n): Play => {\n  play.states[play.states.length - 1].disabledSkills = disabled;\n  return {\n    ...play,\n    states: [...play.states],\n  };\n};\n\nexport type PlayState = 'win' | 'loss' | 'playing';\n\nexport const playState = (play: Play): PlayState => {\n  const state = previousState(play);\n  return state.player.hp.current <= 0\n    ? 'loss'\n    : state.enemies.reduce((acc, monster) => acc + monster.hp.current, 0) <= 0\n    ? 'win'\n    : 'playing';\n};\n\nexport const scoreGame = (play: Play): number => {\n  const firstState = initialState(play);\n  const lastState = previousState(play);\n\n  const turns = play.states.length; // 1-50\n  const hpLoss =\n    Math.max(0, firstState.player.hp.max - lastState.player.hp.current) /\n    firstState.player.hp.max; // 0-1\n  const staminaLoss =\n    Math.max(\n      0,\n      firstState.player.stamina.max - lastState.player.stamina.current\n    ) / firstState.player.hp.max; // 0-1\n  const enemies = lastState.enemies.length; // 1-5\n\n  return Math.floor(\n    enemies * (500 * hpLoss + 150 * staminaLoss + (500 - turns * 10))\n  );\n};\n","import {\n  allRanges,\n  defaultStatus,\n  makeRange,\n  makeStat,\n  selfRange,\n} from '../makeGame';\nimport { effectFunCall, EnemyRepository } from '../types';\n\nexport type EnemiesIndex =\n  | 'piripuru'\n  | 'toros'\n  | 'purupuri'\n  | 'ninkujorua'\n  | 'tshopuritazios';\nconst enemies = {\n  piripuru: [\n    {\n      lore: {\n        name: 'Piripuru',\n      },\n      rolls: [[1], [1, 1, 1, 0], [1, 0], [0], [0]],\n      effects: [\n        {\n          display: 'Bounce',\n          tooltip: 'Floomp Floomp',\n          priority: 1,\n          dodgeable: false,\n          effects: [effectFunCall(['Monster:Move', { amount: -2 }])],\n          range: selfRange,\n        },\n\n        {\n          display: 'Slam',\n          tooltip: 'Throws itself at you',\n          priority: 3,\n          dodgeable: true,\n          effects: [effectFunCall(['Monster:Attack', { amount: 5 }])],\n          range: makeRange(0, 1),\n        },\n      ],\n    },\n    {\n      hp: makeStat(7),\n      distance: 4,\n      speed: makeStat(0),\n      attack: makeStat(0),\n      defence: makeStat(0),\n      status: defaultStatus,\n    },\n  ],\n  toros: [\n    {\n      lore: {\n        name: 'Toros',\n        description: 'Big, mean, strong and unclean',\n      },\n      rolls: [\n        [1, 1, 1, 2, 2, 0],\n        [1, 2, 2, 2, 2, 0],\n        [2, 2, 3, 3, 4, 0],\n        [2, 3, 3, 4, 0],\n        [3, 3, 3, 4, 4, 0],\n      ],\n      effects: [\n        {\n          display: 'Rest',\n          tooltip: \"It won't be long until the massacre continues\",\n          priority: 1,\n          dodgeable: false,\n          effects: [\n            effectFunCall(['Effect:Stat', { target: 'Monster', hp: 1 }]),\n          ],\n          range: selfRange,\n        },\n\n        {\n          display: 'Chomp',\n          tooltip: 'Toro attempts to eat you for massive damage!',\n          priority: 4,\n          dodgeable: true,\n          effects: [effectFunCall(['Monster:Attack', { amount: 18 }])],\n          range: makeRange(0),\n        },\n\n        {\n          display: 'Swipe',\n          tooltip: 'High damage attack that staggers',\n          priority: 3,\n          dodgeable: true,\n          effects: [\n            effectFunCall(['Monster:Attack', { amount: 12 }]),\n            effectFunCall(['Monster:Move', { amount: -1 }]),\n            effectFunCall('Effect:Stun'),\n          ],\n          range: makeRange(0, 1, 2),\n        },\n\n        {\n          display: 'Lunge',\n          tooltip: 'Charges forward for a horn attack',\n          priority: 4,\n          dodgeable: true,\n          effects: [\n            effectFunCall(['Monster:Attack', { amount: 10 }]),\n            effectFunCall(['Monster:Move', { amount: -5 }]),\n          ],\n          range: makeRange(3, 4),\n        },\n\n        {\n          display: 'Roar',\n          tooltip: 'A terrifying howl!',\n          priority: 3,\n          dodgeable: false,\n          effects: [effectFunCall(['Basic:Stamina', { amount: -5 }])],\n          range: allRanges,\n        },\n      ],\n    },\n    {\n      hp: makeStat(38),\n      distance: 2,\n      speed: makeStat(0),\n      attack: makeStat(0),\n      defence: makeStat(0),\n      status: defaultStatus,\n    },\n  ],\n\n  purupuri: [\n    {\n      lore: {\n        name: 'Mama Purupuri',\n        description: 'Mama can always call one of its little ones to help',\n      },\n      rolls: [\n        [1, 1, 1, 1, 0],\n        [1, 1, 1, 1, 2, 0],\n        [1, 1, 1, 1, 2, 0],\n        [2, 2, 0],\n        [2, 2, 0],\n      ],\n      effects: [\n        {\n          display: 'Recover',\n          tooltip: 'Mama needs its rest',\n          priority: 1,\n          dodgeable: false,\n          effects: [\n            effectFunCall(['Effect:Stat', { target: 'Monster', hp: 3 }]),\n          ],\n          range: selfRange,\n        },\n\n        {\n          display: 'Stomp',\n          tooltip: 'Quickly, out of the way!',\n          priority: 3,\n          dodgeable: true,\n          effects: [\n            effectFunCall(['Monster:Attack', { amount: 8 }]),\n            effectFunCall('Effect:Stun'),\n          ],\n          range: makeRange(0, 1),\n        },\n\n        {\n          display: 'Call for Aid',\n          tooltip: 'Calls for the litter to help',\n          priority: 3,\n          dodgeable: false,\n          effects: [\n            effectFunCall(['Monster:Summon', { enemy: 'piripuru' }]),\n            effectFunCall(['Effect:Stat', { target: 'Monster', hp: -5 }]),\n            effectFunCall(['Monster:Move', { amount: -2 }]),\n          ],\n          range: allRanges,\n        },\n      ],\n    },\n    {\n      hp: makeStat(50),\n      distance: 3,\n      speed: makeStat(0),\n      attack: makeStat(0),\n      defence: makeStat(0),\n      status: defaultStatus,\n    },\n  ],\n\n  ninkujorua: [\n    {\n      lore: {\n        name: 'Ninkujorua',\n        description: 'Just...stay...still...for...a...second',\n      },\n      rolls: [\n        [1, 1, 1, 2, 2, 2, 0],\n        [1, 1, 1, 2, 2, 2, 0],\n        [1, 1, 2, 2, 2, 0],\n        [1, 2, 3, 0],\n        [2, 3, 0],\n      ],\n      effects: [\n        {\n          display: 'Meditate',\n          tooltip: 'And not about good vibes',\n          priority: 1,\n          dodgeable: false,\n          effects: [\n            effectFunCall(['Effect:Stat', { target: 'Monster', attack: 1 }]),\n            effectFunCall(['Monster:Move', { amount: 999 }]),\n            effectFunCall('Effect:Dodge'),\n          ],\n          range: selfRange,\n        },\n\n        {\n          display: 'Rapid Slash - Retreat!',\n          tooltip: 'Deals several strikes then moves away from the player',\n          priority: 2,\n          dodgeable: true,\n          effects: [\n            effectFunCall(['Monster:Move', { amount: -5 }]),\n            effectFunCall(['Monster:Attack', { amount: 2 }]),\n            effectFunCall(['Monster:Attack', { amount: 2 }]),\n            effectFunCall(['Monster:Attack', { amount: 2 }]),\n            effectFunCall('Effect:Dodge'),\n          ],\n          range: allRanges,\n        },\n\n        {\n          display: 'Rapid Slash - Advance!',\n          tooltip: 'Moves close to the player then deals several strikes',\n          priority: 2,\n          dodgeable: true,\n          effects: [\n            effectFunCall(['Monster:Move', { amount: -5 }]),\n            effectFunCall(['Monster:Attack', { amount: 2 }]),\n            effectFunCall(['Monster:Attack', { amount: 2 }]),\n            effectFunCall(['Monster:Attack', { amount: 2 }]),\n          ],\n          range: allRanges,\n        },\n\n        {\n          display: 'Back Spikes',\n          tooltip: 'Jumps and shoots several needles that cause bleed',\n          priority: 4,\n          dodgeable: true,\n          effects: [\n            effectFunCall(['Monster:Attack', { amount: 1 }]),\n            effectFunCall(['Monster:Attack', { amount: 1 }]),\n            effectFunCall(['Effect:Bleed', { target: 'Player', turns: 3 }]),\n          ],\n          range: makeRange(3, 4),\n        },\n      ],\n    },\n    {\n      hp: makeStat(25),\n      distance: 1,\n      speed: makeStat(0),\n      attack: makeStat(0),\n      defence: makeStat(0),\n      status: defaultStatus,\n    },\n  ],\n\n  tshopuritazios: [\n    {\n      lore: {\n        name: 'Tshopuritazios',\n        description: 'A filth bird whose stench hits a mile away',\n      },\n      rolls: [\n        [1, 1, 1, 2, 2, 2, 0],\n        [1, 1, 1, 2, 2, 2, 0],\n        [1, 1, 2, 2, 2, 0],\n        [1, 2, 3, 0],\n        [2, 3, 0],\n      ],\n      effects: [\n        {\n          display: 'Goad',\n          tooltip: \"Sounds like it's laughing at you\",\n          priority: 1,\n          dodgeable: false,\n          effects: [\n            effectFunCall([\n              'Effect:Stat',\n              { target: 'Player', defence: -1, attack: -1 },\n            ]),\n            effectFunCall(['Monster:Move', { amount: 999 }]),\n          ],\n          range: selfRange,\n        },\n\n        {\n          display: 'Peck',\n          tooltip: 'What is worse, the force or the texture?',\n          priority: 3,\n          dodgeable: true,\n          effects: [\n            effectFunCall(['Monster:Attack', { amount: 10 }]),\n            effectFunCall('Effect:Stun'),\n            effectFunCall(['Monster:Move', { amount: 2 }]),\n          ],\n          range: makeRange(0, 1),\n        },\n\n        {\n          display: 'Fling Mud',\n          tooltip: 'A large chunk coming right at you!',\n          priority: 3,\n          dodgeable: true,\n          effects: [\n            effectFunCall(['Monster:Attack', { amount: 2 }]),\n            effectFunCall(['Monster:Attack', { amount: 2 }]),\n            effectFunCall(['Monster:Attack', { amount: 8 }]),\n            effectFunCall(['Monster:Move', { amount: 1 }]),\n          ],\n          range: makeRange(1, 2, 3),\n        },\n\n        {\n          display: 'Spit Bile',\n          tooltip: 'This disgusting liquid corrodes your armor',\n          priority: 3,\n          dodgeable: true,\n          effects: [\n            effectFunCall(['Monster:Attack', { amount: 1 }]),\n            effectFunCall(['Monster:Attack', { amount: 1 }]),\n            effectFunCall(['Effect:Poison', { target: 'Player', turns: 3 }]),\n            effectFunCall(['Effect:Stat', { target: 'Player', defence: -1 }]),\n          ],\n          range: makeRange(2, 3, 4),\n        },\n      ],\n    },\n    {\n      hp: makeStat(32),\n      distance: 4,\n      speed: makeStat(0),\n      attack: makeStat(0),\n      defence: makeStat(0),\n      status: defaultStatus,\n    },\n  ],\n};\n\nexport default enemies as EnemyRepository;\n","import { Item } from '../types';\n\nexport type ArmorsIndex = keyof typeof armors;\nexport type Armors = { [k in ArmorsIndex]: Item };\nconst armors = {\n  heavy: {\n    display: 'Heavy',\n    passives: [\n      '+Defence',\n      '+Defence',\n      '+Defence',\n      '+Defence',\n      '-Speed',\n      '-Speed',\n      '-StaPerTurn',\n    ],\n  },\n  medium: {\n    display: 'Medium',\n    passives: ['+Defence', '+Defence', '-StaPerTurn'],\n  },\n  light: {\n    display: 'Light',\n    passives: ['+Defence'],\n  },\n  none: {\n    display: 'None',\n    passives: ['+Speed'],\n  },\n};\n\nexport default armors as Armors;\n","import { Item } from '../types';\n\nexport type CharmsIndex = keyof typeof charms;\nexport type Charms = { [k in CharmsIndex]: Item };\nexport const charms = {\n  health: {\n    display: 'of Health',\n    passives: ['+Health', '-Speed'],\n    tooltip: 'Increases your maximum health',\n  },\n  haste: {\n    display: 'of Haste',\n    passives: ['+StaPerTurn', '-Stamina'],\n    tooltip: 'Increases your maximum stamina regeneration',\n  },\n  resilience: {\n    display: 'of Resilience',\n    passives: ['+Stamina', '-StaPerTurn'],\n    tooltip: 'Increases your maximum stamina',\n  },\n  strength: {\n    display: 'of Strength',\n    passives: ['+Attack', '-Health', '-StaPerTurn'],\n    tooltip: 'Increases your maximum attack',\n  },\n  swiftness: {\n    display: 'of Swiftness',\n    passives: ['+Speed', '-Attack'],\n    tooltip: 'Increases your maximum speed',\n  },\n  defence: {\n    display: 'of Defence',\n    passives: ['+Defence', '-Stamina', '-Speed'],\n    tooltip: 'Increases your maximum defence',\n  },\n};\n\nexport default charms as Charms;\n","import { makeRange, selfRange } from '../makeGame';\nimport { Item, effectFunCall } from '../types';\n\nexport type ClassesIndex = keyof typeof classes;\nexport type Classes = { [k in ClassesIndex]: Item };\nconst classes = {\n  warrior: {\n    display: 'Warrior',\n    passives: ['+Attack', '+Defence', '+Stamina'],\n    effects: [\n      {\n        display: 'Well placed kick',\n        tooltip: 'Last resource attack',\n        effects: [effectFunCall(['Basic:Attack', { amount: 2 }])],\n        priority: 2,\n        dodgeable: true,\n        stamina: 1,\n        range: makeRange(0, 1),\n      },\n    ],\n  },\n  rogue: {\n    display: 'Rogue',\n    passives: ['+Speed', '+Speed', '-Attack', '-Stamina'],\n    effects: [\n      {\n        display: 'Strategic Retreat',\n        tooltip: 'Jump backwards',\n        effects: [effectFunCall(['Basic:Move', { amount: 999 }])],\n        priority: 2,\n        dodgeable: false,\n        stamina: 1,\n        range: selfRange,\n      },\n    ],\n  },\n  berserk: {\n    display: 'Berserk',\n    passives: [\n      '+Attack',\n      '+Attack',\n      '+Attack',\n      '-Defence',\n      '-Defence',\n      '-Health',\n    ],\n    effects: [\n      {\n        display: 'All or Nothing!',\n        tooltip: 'Deals massive damage and leaves you weakened',\n        priority: 2,\n        dodgeable: true,\n        stamina: 0,\n        range: makeRange(0, 1, 2),\n        amount: 1,\n        effects: [\n          effectFunCall(['Basic:Move', { amount: -5 }]),\n          effectFunCall(['Basic:Attack', { amount: 2 }]),\n          effectFunCall(['Basic:Attack', { amount: 2 }]),\n          effectFunCall(['Basic:Attack', { amount: 2 }]),\n          effectFunCall(['Basic:Attack', { amount: 2 }]),\n          effectFunCall([\n            'Effect:Stat',\n            { target: 'Player', defence: -3, speed: -1 },\n          ]),\n        ],\n      },\n    ],\n  },\n  mage: {\n    display: 'Mage',\n    passives: ['+StaPerTurn', '+Stamina', '-Health', '-Speed'],\n    effects: [\n      {\n        display: 'Just having a thought',\n        tooltip: 'Restores stamina for the next action',\n        priority: 4,\n        dodgeable: false,\n        amount: 2,\n        stamina: 0,\n        range: selfRange,\n        effects: [effectFunCall(['Basic:Stamina', { amount: 999 }])],\n      },\n    ],\n  },\n  cleric: {\n    display: 'Cleric',\n    passives: ['+Defence', '+Stamina'],\n    effects: [\n      {\n        display: 'Minor Healing',\n        tooltip: 'Restores some HP',\n        amount: 3,\n        effects: [effectFunCall(['Basic:HP', { amount: 5 }])],\n        priority: 3,\n        dodgeable: false,\n        stamina: 3,\n        range: selfRange,\n      },\n    ],\n  },\n};\n\nexport default classes as Classes;\n","import { selfRange } from '../makeGame';\nimport { Item, effectFunCall } from '../types';\n\nexport type ConsumablesIndex = keyof typeof consumables;\nexport type Consumables = { [k in ConsumablesIndex]: Item };\nexport const consumables = {\n  healing: {\n    display: 'Healing Potion',\n    effects: [\n      {\n        display: 'Healing!',\n        tooltip: 'Restores some HP',\n        effects: [effectFunCall(['Basic:HP', { amount: 4 }])],\n        priority: 4,\n        dodgeable: false,\n        stamina: 5,\n        amount: 3,\n        range: selfRange,\n      },\n    ],\n  },\n  razors: {\n    display: 'Pot of Razors',\n    effects: [\n      {\n        display: 'Throw pot',\n        tooltip: 'Causes bleeding',\n        amount: 2,\n        effects: [\n          effectFunCall(['Effect:Bleed', { target: 'Monster', turns: 3 }]),\n        ],\n        priority: 4,\n        dodgeable: true,\n        stamina: 5,\n        range: selfRange,\n      },\n    ],\n  },\n  bubble: {\n    display: 'Life Bubble',\n    effects: [\n      {\n        display: 'Activate Bubble',\n        tooltip: 'Protects against a single source of damage this turn',\n        effects: [effectFunCall('Effect:Dodge')],\n        priority: 1,\n        dodgeable: false,\n        stamina: 1,\n        amount: 1,\n        range: selfRange,\n      },\n    ],\n  },\n  rock: {\n    display: 'Pet Rock',\n    effects: [\n      {\n        display: 'Rock, to me!',\n        tooltip: 'Reduces damage',\n        effects: [effectFunCall(['Effect:Armor', { amount: 3 }])],\n        priority: 2,\n        dodgeable: false,\n        stamina: 3,\n        amount: 3,\n        range: selfRange,\n      },\n    ],\n  },\n};\n\nexport default consumables as Consumables;\n","import { selfRange, allRanges } from '../makeGame';\nimport { Item, effectFunCall } from '../types';\n\nexport type FootwearsIndex = keyof typeof footwears;\nexport type Footwears = { [k in FootwearsIndex]: Item };\nexport const footwears = {\n  slippers: {\n    display: 'Slippers of Dooooodge!',\n    tooltip: 'Allows you to dodge attacks',\n    passives: ['-Stamina'],\n    effects: [\n      {\n        display: 'Advanced Dodge',\n        tooltip: 'Avoid 1 attack',\n        effects: [effectFunCall('Effect:Dodge')],\n        priority: 1,\n        dodgeable: false,\n        stamina: 3,\n        range: selfRange,\n      },\n    ],\n  },\n  boots: {\n    display: 'Boots of Flight',\n    tooltip: 'Avoid your enemies',\n    passives: ['-Defence'],\n    eot: [\n      {\n        display: 'Flight!',\n        tooltip: 'Increases distance at the end of the turn',\n        priority: 0,\n        dodgeable: false,\n        range: allRanges,\n        effects: [\n          effectFunCall('BootsOfFlight:EOT'),\n          effectFunCall(['Effect:Stat', { target: 'Player', stamina: -2 }]),\n        ],\n      },\n    ],\n  },\n  greaves: {\n    display: 'Greaves of Stability',\n    tooltip: 'Extra resilient',\n    passives: ['+Defence', '-Speed'],\n    effects: [\n      {\n        display: 'Dig your heels',\n        tooltip: 'Resists damage',\n        effects: [effectFunCall(['Effect:Armor', { amount: 3 }])],\n        priority: 1,\n        dodgeable: false,\n        stamina: 4,\n        range: selfRange,\n      },\n    ],\n  },\n};\n\nexport default footwears as Footwears;\n","import { makeRange } from '../makeGame';\nimport { Item, effectFunCall } from '../types';\n\nexport type HeadgearsIndex = keyof typeof headgears;\nexport type Headgears = { [k in HeadgearsIndex]: Item };\nexport const headgears = {\n  helm: {\n    display: 'Helm',\n    passives: ['+Defence', '+Defence', '-Speed', '-StaPerTurn'],\n    tooltip: 'Big protection for slow combatants',\n  },\n  cap: {\n    display: 'Feather Cap',\n    passives: ['+StaPerTurn', '+Stamina'],\n    tooltip: \"Makes you feel energized, doesn't it?\",\n  },\n  magehat: {\n    display: 'Mage Hat',\n    passives: ['-StaPerTurn'],\n    tooltip: 'Small tricks for big plays',\n    effects: [\n      {\n        display: 'Flash!',\n        tooltip: 'Blinks you to a better position',\n        effects: [\n          effectFunCall(['Basic:Attack', { amount: 1 }]),\n          effectFunCall(['Basic:Move', { amount: 2 }]),\n        ],\n        priority: 3,\n        dodgeable: true,\n        stamina: 4,\n        range: makeRange(1, 2),\n      },\n    ],\n  },\n};\n\nexport default headgears as Headgears;\n","import { makeRange, selfRange } from '../makeGame';\nimport { Item, effectFunCall } from '../types';\n\nexport type OffhandsIndex = keyof typeof offhands;\nexport type Offhands = { [k in OffhandsIndex]: Item };\nconst offhands = {\n  hook: {\n    display: 'Hook',\n    passives: ['-Stamina'],\n    effects: [\n      {\n        display: 'Get over here!',\n        tooltip: 'Moves enemy closer',\n        effects: [\n          effectFunCall(['Basic:Attack', { amount: 3 }]),\n          effectFunCall(['Basic:Move', { amount: -2 }]),\n        ],\n        priority: 4,\n        dodgeable: true,\n        stamina: 3,\n        range: makeRange(2, 3, 4),\n      },\n    ],\n  },\n  parry: {\n    display: 'Parry Dagger',\n    passives: ['-Defence'],\n    effects: [\n      {\n        display: 'Get over here!',\n        tooltip: 'Avoids a melee attack',\n        effects: [effectFunCall('Effect:Dodge')],\n        priority: 2,\n        dodgeable: false,\n        stamina: 2,\n        range: makeRange(1),\n      },\n    ],\n  },\n  shield: {\n    display: 'Shield',\n    passives: ['+Defence', '-Speed'],\n    effects: [\n      {\n        display: 'Not today!',\n        tooltip: 'Blocks a lot of damage',\n        effects: [effectFunCall(['Effect:Armor', { amount: 5 }])],\n        priority: 2,\n        dodgeable: false,\n        stamina: 4,\n        range: selfRange,\n      },\n    ],\n  },\n  focus: {\n    display: 'Focus',\n    passives: ['+Speed', '+StaPerTurn'],\n  },\n  wand: {\n    display: 'Wand',\n    passives: ['-Defence', '-StaPerTurn'],\n    effects: [\n      {\n        display: 'Magic Bolt',\n        tooltip: 'Shoots mana bolts until the caster faints',\n        effects: [effectFunCall('Wand:MagicBolt')],\n        priority: 3,\n        dodgeable: true,\n        stamina: 1,\n        range: makeRange(3, 4),\n      },\n    ],\n  },\n};\n\nexport default offhands as Offhands;\n","import { selfRange, makeRange } from '../makeGame';\nimport { Item, effectFunCall } from '../types';\n\nexport type SkillsIndex = keyof typeof skills;\nexport type Skills = { [k in SkillsIndex]: Item };\nconst skills = {\n  sturdy: {\n    display: 'Sturdy',\n    bot: [\n      {\n        display: 'Endure the pain',\n        tooltip: 'Blocks some damage each turn at the cost of stamina',\n        effects: [\n          effectFunCall(['Effect:Armor', { amount: 4 }]),\n          effectFunCall(['Effect:Stat', { target: 'Player', stamina: -2 }]),\n        ],\n        priority: 1,\n        dodgeable: false,\n        range: selfRange,\n      },\n    ],\n  },\n  nimble: {\n    display: 'Nimble',\n    effects: [\n      {\n        display: 'Dodge',\n        tooltip: 'Avoid one enemy attack',\n        effects: [effectFunCall('Effect:Dodge')],\n        priority: 2,\n        dodgeable: false,\n        stamina: 4,\n        range: selfRange,\n      },\n    ],\n  },\n  resourceful: {\n    display: 'Resourceful',\n    effects: [\n      {\n        display: 'Dodge this!',\n        tooltip: 'Throws a stone',\n        effects: [effectFunCall(['Basic:Attack', { amount: 2 }])],\n        priority: 3,\n        dodgeable: true,\n        stamina: 3,\n        range: makeRange(3, 4),\n      },\n    ],\n  },\n};\n\nexport default skills as Skills;\n","import { makeRange, allRanges } from '../makeGame';\nimport { Item, effectFunCall } from '../types';\n\nexport type WeaponsIndex = keyof typeof weapons;\nexport type Weapons = { [k in WeaponsIndex]: Item };\nconst weapons = {\n  sword: {\n    display: 'Sword',\n    tooltip: 'All-rounder',\n    effects: [\n      {\n        display: 'Slash',\n        tooltip: 'Swings at the enemy',\n        effects: [effectFunCall(['Basic:Attack', { amount: 2 }])],\n        priority: 3,\n        dodgeable: true,\n        stamina: 2,\n        range: makeRange(0, 1),\n      },\n      {\n        display: 'Pommel Hit',\n        tooltip: 'Deals a quick blow',\n        effects: [effectFunCall(['Basic:Attack', { amount: 2 }])],\n        priority: 2,\n        dodgeable: true,\n        stamina: 2,\n        range: makeRange(0),\n      },\n      {\n        display: 'Overhead Slice',\n        tooltip: 'Moves into melee and deals a heavy blow',\n        effects: [\n          effectFunCall(['Basic:Move', { amount: -1 }]),\n          effectFunCall(['Basic:Attack', { amount: 4 }]),\n        ],\n        priority: 4,\n        dodgeable: true,\n        stamina: 3,\n        range: makeRange(1),\n      },\n    ],\n  },\n  greatsword: {\n    display: 'Greatsword',\n    tooltip: 'Specialized in big damage',\n    effects: [\n      {\n        display: 'Rend',\n        tooltip: 'Swings at the enemy',\n        effects: [effectFunCall(['Basic:Attack', { amount: 3 }])],\n        priority: 4,\n        dodgeable: true,\n        stamina: 4,\n        range: makeRange(0, 1),\n      },\n      {\n        display: 'Feint',\n        tooltip: 'Quick step backwards',\n        effects: [effectFunCall(['Basic:Move', { amount: 1 }])],\n        priority: 1,\n        dodgeable: false,\n        stamina: 1,\n        range: makeRange(0, 1),\n      },\n      {\n        display: 'Earth Flattener',\n        tooltip: 'Charges a monstruous stunning blow',\n        effects: [\n          effectFunCall(['Basic:Move', { amount: 5 }]),\n          effectFunCall('Effect:Stun'),\n        ],\n        priority: 4,\n        dodgeable: true,\n        stamina: 6,\n        range: makeRange(1),\n      },\n    ],\n  },\n  twinblades: {\n    display: 'Twinblades',\n    tooltip: 'Specialized in mobility',\n    effects: [\n      {\n        display: 'Swoosh',\n        tooltip: 'Deals a strike and moves back',\n        effects: [\n          effectFunCall(['Basic:Attack', { amount: 2 }]),\n          effectFunCall(['Basic:Move', { amount: 1 }]),\n        ],\n        priority: 2,\n        dodgeable: true,\n        stamina: 2,\n        range: makeRange(0, 1),\n      },\n      {\n        display: 'Fiuuum',\n        tooltip: 'Jump attack',\n        effects: [\n          effectFunCall(['Basic:Move', { amount: -2 }]),\n          effectFunCall(['Basic:Attack', { amount: 3 }]),\n        ],\n        priority: 4,\n        dodgeable: true,\n        stamina: 3,\n        range: makeRange(2, 3),\n      },\n      {\n        display: 'SwishSwishSwishSwish',\n        tooltip: 'Deals multiple low damage hits',\n        effects: [\n          effectFunCall(['Basic:Attack', { amount: 1 }]),\n          effectFunCall(['Basic:Attack', { amount: 1 }]),\n          effectFunCall(['Basic:Attack', { amount: 1 }]),\n          effectFunCall(['Basic:Attack', { amount: 1 }]),\n        ],\n        priority: 3,\n        dodgeable: true,\n        stamina: 4,\n        range: makeRange(0),\n      },\n    ],\n  },\n  katana: {\n    display: 'Katana',\n    tooltip: 'Specialized in bleeding',\n    effects: [\n      {\n        display: 'Slice & Dice',\n        tooltip: 'Deals two swift strikes',\n        effects: [\n          effectFunCall(['Basic:Attack', { amount: 1 }]),\n          effectFunCall(['Basic:Attack', { amount: 1 }]),\n        ],\n        priority: 3,\n        dodgeable: true,\n        stamina: 2,\n        range: makeRange(0, 1),\n      },\n      {\n        display: 'Wakizashi',\n        tooltip: 'Short sword with a quick attack causing bleeding',\n        effects: [\n          effectFunCall(['Basic:Attack', { amount: 1 }]),\n          effectFunCall(['Effect:Bleed', { target: 'Monster', turns: 2 }]),\n        ],\n        priority: 2,\n        dodgeable: true,\n        stamina: 4,\n        range: makeRange(0, 1),\n      },\n      {\n        display: 'Unsheathe',\n        tooltip: 'Dodges the next attack and deals damage',\n        effects: [\n          effectFunCall('Effect:Dodge'),\n          effectFunCall(['Basic:Attack', { amount: 3 }]),\n        ],\n        priority: 1,\n        dodgeable: true,\n        stamina: 4,\n        range: makeRange(0),\n      },\n    ],\n  },\n  axe: {\n    display: 'Axe',\n    tooltip: 'Specialized in debuffs',\n    effects: [\n      {\n        display: 'Chop',\n        tooltip: 'A slow but reliable attack',\n        effects: [effectFunCall(['Basic:Attack', { amount: 2 }])],\n        priority: 4,\n        dodgeable: true,\n        stamina: 3,\n        range: makeRange(0, 1),\n      },\n      {\n        display: 'Aim for the head!',\n        tooltip: 'Cripples the monster',\n        effects: [\n          effectFunCall(['Effect:Stat', { target: 'Monster', defence: -1 }]),\n          effectFunCall(['Effect:Bleed', { target: 'Player', turns: 2 }]),\n        ],\n        priority: 4,\n        dodgeable: true,\n        stamina: 5,\n        range: makeRange(1),\n      },\n      {\n        display: 'Target the limbs!',\n        tooltip: 'Weakens the monster',\n        effects: [\n          effectFunCall(['Effect:Stat', { target: 'Monster', attack: -1 }]),\n          effectFunCall(['Effect:Bleed', { target: 'Player', turns: 2 }]),\n        ],\n        priority: 4,\n        dodgeable: true,\n        stamina: 5,\n        range: makeRange(1),\n      },\n    ],\n  },\n  lance: {\n    display: 'Lance',\n    tooltip: 'Specialized in mid-range attacks',\n    effects: [\n      {\n        display: 'Pierce',\n        tooltip: 'Pokes the enemy',\n        effects: [effectFunCall(['Basic:Attack', { amount: 2 }])],\n        priority: 3,\n        dodgeable: true,\n        stamina: 2,\n        range: makeRange(0, 1, 2),\n      },\n      {\n        display: 'Charge!!',\n        tooltip: 'Runs towards the enemy to deal a massive blow',\n        effects: [\n          effectFunCall(['Basic:Move', { amount: -5 }]),\n          effectFunCall(['Basic:Attack', { amount: 4 }]),\n        ],\n        priority: 1,\n        dodgeable: true,\n        stamina: 3,\n        range: makeRange(4),\n      },\n    ],\n  },\n  hammer: {\n    display: 'Hammer',\n    tooltip: 'Specialized in stunning',\n    effects: [\n      {\n        display: 'Head Banger',\n        tooltip: 'Hits the enemy in the head',\n        effects: [\n          effectFunCall(['Basic:Attack', { amount: 2 }]),\n          effectFunCall('Effect:Stun'),\n        ],\n        priority: 4,\n        dodgeable: true,\n        stamina: 4,\n        range: makeRange(0),\n      },\n      {\n        display: 'Large swing',\n        tooltip: 'Uses the inertia of the hammer to safely advance',\n        effects: [\n          effectFunCall(['Basic:Move', { amount: -3 }]),\n          effectFunCall('Effect:Stun'),\n        ],\n        priority: 3,\n        dodgeable: true,\n        stamina: 3,\n        range: makeRange(1, 2, 3),\n      },\n      {\n        display: 'Go for the ankles',\n        tooltip: 'Slows down the enemy',\n        effects: [\n          effectFunCall(['Effect:Stat', { target: 'Monster', speed: -1 }]),\n          effectFunCall('Effect:Stun'),\n        ],\n        priority: 4,\n        dodgeable: true,\n        stamina: 6,\n        range: makeRange(1),\n      },\n    ],\n  },\n  claw: {\n    display: 'Finger Claw',\n    tooltip: 'Specialized in poison',\n    effects: [\n      {\n        display: 'Caress',\n        tooltip: 'Applies poison to the monster',\n        effects: [\n          effectFunCall(['Effect:Poison', { target: 'Monster', turns: 2 }]),\n        ],\n        priority: 3,\n        dodgeable: false,\n        stamina: 2,\n        range: makeRange(0),\n      },\n      {\n        display: 'Backflip',\n        tooltip: 'Dodges an attack and moves backward',\n        effects: [\n          effectFunCall('Effect:Dodge'),\n          effectFunCall(['Basic:Move', { amount: 2 }]),\n        ],\n        priority: 1,\n        dodgeable: false,\n        stamina: 4,\n        range: makeRange(0, 1),\n      },\n    ],\n  },\n  bow: {\n    display: 'Bow',\n    tooltip: 'Specialized in ranged attacks',\n    effects: [\n      {\n        display: 'Relaxed Shot',\n        tooltip: 'Shoots an arrow',\n        effects: [effectFunCall(['Basic:Attack', { amount: 2 }])],\n        priority: 3,\n        dodgeable: true,\n        stamina: 2,\n        range: makeRange(3, 4),\n      },\n      {\n        display: 'Power Draw',\n        tooltip: 'Shoots your strongest arrow and makes you weaker',\n        effects: [\n          effectFunCall(['Basic:Attack', { amount: 6 }]),\n          effectFunCall(['Effect:Stat', { target: 'Player', attack: -1 }]),\n        ],\n        priority: 3,\n        dodgeable: true,\n        stamina: 4,\n        range: makeRange(4),\n      },\n    ],\n  },\n  staff: {\n    display: 'Magic Staff',\n    tooltip: 'Specialized in multiple attacks',\n    effects: [\n      {\n        display: 'Bolt',\n        tooltip: 'Shoots a low damage bolt',\n        effects: [effectFunCall(['Basic:Attack', { amount: 1 }])],\n        priority: 3,\n        dodgeable: true,\n        stamina: 3,\n        range: allRanges,\n      },\n      {\n        display: 'Pew Pew Pew',\n        tooltip: 'Shoots a barrage of bolts',\n        effects: [\n          effectFunCall(['Basic:Attack', { amount: 1 }]),\n          effectFunCall(['Basic:Attack', { amount: 1 }]),\n          effectFunCall(['Basic:Attack', { amount: 1 }]),\n          effectFunCall(['Basic:Attack', { amount: 1 }]),\n        ],\n        priority: 4,\n        dodgeable: true,\n        stamina: 8,\n        range: makeRange(2, 3, 4),\n      },\n    ],\n  },\n};\n\nexport default weapons as Weapons;\n","import { allRanges, selfRange, makeRange } from '../makeGame';\nimport { BuildRepository, effectFunCall } from '../types';\nimport armors from './armors';\nimport charms from './charms';\nimport classes from './classes';\nimport consumables from './consumables';\nimport footwears from './footwears';\nimport headgears from './headgears';\nimport offhands from './offhand';\nimport skills from './skills';\nimport weapons from './weapons';\n\nconst build: BuildRepository = {\n  debug: {\n    disabled: {\n      display: 'None',\n    },\n    enabled: {\n      display: 'Debug',\n      effects: [\n        {\n          display: 'GGWP',\n          tooltip: 'Wins the game',\n          priority: 1,\n          dodgeable: false,\n          stamina: 0,\n          range: allRanges,\n          effects: [effectFunCall('Debug:GGWP')],\n        },\n        {\n          display: 'SUDOKU',\n          tooltip: 'Loses the game',\n          priority: 1,\n          dodgeable: false,\n          stamina: 0,\n          range: allRanges,\n          effects: [effectFunCall('Debug:Sudoku')],\n        },\n      ],\n    },\n  },\n  basic: {\n    _: {\n      display: 'Basic',\n      effects: [\n        {\n          display: 'Rest',\n          tooltip: 'Skip the turn and restore stamina',\n          priority: 4,\n          dodgeable: false,\n          stamina: 0,\n          range: selfRange,\n          effects: [effectFunCall('Basic:Rest')],\n        },\n        {\n          display: 'Advance',\n          tooltip: 'Move closer',\n          priority: 4,\n          dodgeable: false,\n          stamina: 1,\n          range: selfRange,\n          effects: [effectFunCall(['Basic:Move', { amount: -1 }])],\n        },\n        {\n          display: 'Retreat',\n          tooltip: 'Move farther',\n          effects: [effectFunCall(['Basic:Move', { amount: 1 }])],\n          priority: 4,\n          dodgeable: false,\n          stamina: 1,\n          range: selfRange,\n        },\n      ],\n    },\n  },\n  class: classes,\n  skill: skills,\n  weapon: weapons,\n  offhand: offhands,\n  armor: armors,\n  headgear: headgears,\n  footwear: footwears,\n  charm: charms,\n  consumable: consumables,\n};\n\nexport default build;\n","import { updateGlobals } from './modding';\nimport { BuildRepository, EnemyRepository } from './types';\nimport enemyRepository from './data/enemies';\nimport buildRepository from './data/build';\n\nexport const enemies: EnemyRepository = enemyRepository;\nexport const build: BuildRepository = buildRepository;\n\nupdateGlobals({ build, enemies });\n","export const rangeArr = (max: number, min: number = 0) => {\n  let range = [...Array(max).keys()];\n  if (min >= 0) {\n    range.filter((i) => i < min);\n  }\n  return range;\n};\n\nexport const clamp = (num: number, min: number, max: number = Infinity) =>\n  Math.min(Math.max(num, min), max);\n\nexport const pipe = <T, U>(t: T, f: (t: T) => U): U => f(t);\n\nexport const pipe2 = <T, U, A>(t: T, u: U, f: (t: T, u: U) => A): A => f(t, u);\n\nexport const pipe3 = <T, U, V, A>(\n  t: T,\n  u: U,\n  v: V,\n  f: (t: T, u: U, v: V) => A\n): A => f(t, u, v);\n","import { EffectFunctionRepository } from './effectRepository';\nimport {\n  BuildRepository,\n  effectFunCall,\n  EnemyInfo,\n  EnemyRepository,\n  Play,\n} from './types';\n\nexport type Globals = {\n  debug: boolean;\n  trainingEnemy: EnemyInfo;\n  build?: BuildRepository;\n  effects?: EffectFunctionRepository;\n  enemies?: EnemyRepository;\n  ingame?: {\n    game: Play;\n    forceUpdate: () => void;\n  };\n};\n\nconst globalsDefault: Globals = {\n  debug: false,\n  trainingEnemy: [\n    {\n      lore: {\n        name: '🤖 Dummy 🤖',\n      },\n      effects: [\n        {\n          display: 'Approve of your life choices',\n          tooltip: \"You're doing great!\",\n          priority: 4,\n          effects: [effectFunCall(['Monster:Attack', { amount: 0 }])],\n          dodgeable: true,\n          range: [0, 1, 2, 3, 4],\n        },\n      ],\n      rolls: [[0], [0], [0], [0], [0]],\n    },\n    {\n      hp: { current: 300, starting: 300, max: 300 },\n      distance: 0,\n      speed: { current: 0, starting: 0, max: 0 },\n      attack: { current: 0, starting: 0, max: 0 },\n      defence: { current: 0, starting: 0, max: 0 },\n      status: {\n        dodge: { active: false },\n        armor: { amount: 0 },\n        bleed: { turns: 0 },\n        stun: { active: false },\n      },\n    },\n  ],\n};\n\nexport const globals = (): Globals =>\n  // @ts-ignore\n  globalThis.__buildmancer;\n\nexport const updateGlobals = (p: Partial<Globals>) => {\n  const theThis = globalThis as unknown as { __buildmancer: Globals };\n  theThis.__buildmancer = {\n    ...globalsDefault,\n    ...(theThis.__buildmancer ?? {}),\n    ...p,\n  };\n};\n\nupdateGlobals({});\n","import { Opaque } from 'type-fest';\nimport { Armors } from './data/armors';\nimport { Charms } from './data/charms';\nimport { Classes } from './data/classes';\nimport { Consumables } from './data/consumables';\nimport { EnemiesIndex } from './data/enemies';\nimport { Footwears } from './data/footwears';\nimport { Headgears } from './data/headgears';\nimport { Offhands } from './data/offhand';\nimport { Skills } from './data/skills';\nimport { Weapons } from './data/weapons';\nimport {\n  EffectFunParams,\n  EffectFunctionRepository,\n  EffectFunRepoIndex,\n  StatsFunIndex,\n} from './effectRepository';\n\nexport type Tuple<T, N extends number> = N extends N\n  ? number extends N\n    ? T[]\n    : _TupleOf<T, N, []>\n  : never;\ntype _TupleOf<T, N extends number, R extends unknown[]> = R['length'] extends N\n  ? R\n  : _TupleOf<T, N, [T, ...R]>;\n\nexport type Nel<T> = [T, ...T[]];\n\ntype Length<T extends any[]> = T extends { length: infer L } ? L : never;\ntype BuildTuple<L extends number, T extends any[] = []> = T extends {\n  length: L;\n}\n  ? T\n  : BuildTuple<L, [...T, any]>;\nexport type Subtract<\n  A extends number,\n  B extends number\n> = BuildTuple<A> extends [...infer U, ...BuildTuple<B>] ? Length<U> : never;\ntype EQ<A, B> = A extends B ? (B extends A ? true : false) : false;\ntype AtTerminus<A extends number, B extends number> = A extends 0\n  ? true\n  : B extends 0\n  ? true\n  : false;\ntype LT<A extends number, B extends number> = AtTerminus<A, B> extends true\n  ? EQ<A, B> extends true\n    ? false\n    : A extends 0\n    ? true\n    : false\n  : LT<Subtract<A, 1>, Subtract<B, 1>>;\n\nexport type TupleUpTo<T, N extends number> = EQ<N, 1> extends true\n  ? [T]\n  : TupleUpTo<T, Subtract<N, 1>> | Tuple<T, N>;\n\nexport type UpTo<N extends number> = EQ<N, 0> extends true\n  ? 0\n  : UpTo<Subtract<N, 1>> | N;\n\nexport interface Stat {\n  max: number;\n  starting: number;\n  current: UpTo<Stat['max']>;\n}\n\nexport interface Status {\n  dodge: { active: boolean };\n  stun: { active: boolean };\n  armor: { amount: number };\n  bleed: { turns: number };\n}\nexport interface PlayerStats {\n  hp: Stat;\n  stamina: Stat;\n  staminaPerTurn: Stat;\n  speed: Stat;\n  attack: Stat;\n  defence: Stat;\n  status: Status;\n}\nexport interface EnemyStats {\n  hp: Stat;\n  speed: Stat;\n  attack: Stat;\n  defence: Stat;\n  distance: UpTo<Subtract<Distances, 1>>;\n  status: Status;\n}\nexport type InventoryStats = {\n  [k in Item['display']]: { used: number };\n};\n\nexport type Priorities = 5;\nexport type Distances = 5;\nexport type MonsterCount = 5;\nexport type Staminas = 10;\n\nexport type EffectPhase = 'MAIN' | 'EOT' | 'BOT';\nexport interface EffectSummary {\n  origin: Target;\n  display: string;\n  phase: EffectPhase;\n}\n\nexport type DisabledSkills = (keyof BuildRepository)[];\nexport interface Snapshot {\n  player: PlayerStats;\n  enemies: EnemiesStats;\n  inventory: InventoryStats;\n  target: MonsterTarget;\n  lastAttacks: EffectSummary[];\n  bot?: Nel<[Target, Effect]>;\n  eot?: Nel<[Target, Effect]>;\n  disabledSkills: DisabledSkills;\n}\n\nexport type RNG = Opaque<number[][], 'RNG'>;\n\nexport type VersionString = '1';\nexport type Seed = number | string;\nexport interface Play {\n  states: Nel<Snapshot>;\n  player: Player;\n  enemies: Enemies;\n  rng: RNG;\n  turns: number;\n  id: string;\n  seed: Seed;\n  version: VersionString;\n}\n\ntype ItemOrMonster = string /* TODO all items */ | 'Monster';\nexport type FunIndex = `${ItemOrMonster}:${string}`;\n\nexport type StatsFunRepo = { [key in StatsFunIndex]: StatsFun };\nexport type StatsFun = (\n  player: PlayerStats,\n  enemies: EnemiesStats\n) => [PlayerStats, EnemiesStats];\n\nexport type Ranges = UpTo<Subtract<Distances, 1>>[];\n\ninterface EffectFunCallT {\n  index: EffectFunRepoIndex;\n  parameters: EffectFunParams<EffectFunRepoIndex>;\n}\nexport type EffectFunCall = Opaque<EffectFunCallT, EffectFunCallT>;\nexport const effectFunCall = <T extends EffectFunRepoIndex>(\n  t: EffectFunParams<T> extends undefined ? T : [T, EffectFunParams<T>]\n): EffectFunCall =>\n  (Array.isArray(t)\n    ? { index: t[0], parameters: t[1] }\n    : { index: t, parameters: undefined }) as EffectFunCall;\nexport const callEffectFun = <T extends EffectFunRepoIndex>(\n  repo: EffectFunctionRepository,\n  t: T,\n  p: EffectFunParams<T>\n) => {\n  const f = repo[t];\n  // @ts-expect-error: index and parameters are enforced to be compatible at construction and the runtime check above ^^^^\n  return f(p);\n};\n\nexport interface Effect {\n  display: string;\n  tooltip: string;\n  effects: Nel<EffectFunCall>;\n  priority: UpTo<Subtract<Priorities, 1>>;\n  range: Ranges;\n  dodgeable: boolean;\n}\nexport interface InventoryEffect extends Effect {\n  stamina: UpTo<Subtract<Staminas, 1>>;\n  amount?: number;\n}\n\nexport type MonsterTarget = UpTo<Subtract<MonsterCount, 1>>;\nexport type PlayerTarget = 'Player';\nexport type Target = MonsterTarget | PlayerTarget;\n\nexport type EffectTarget = 'Player' | 'Monster';\nexport type PlayerStatParameter = Partial<{\n  [k in keyof Omit<PlayerStats, 'status'>]: number;\n}>;\nexport type MonsterStatParameter = Partial<{\n  [k in keyof Omit<EnemyStats, 'status'>]: number;\n}>;\nexport type StatEffectTarget =\n  | (PlayerStatParameter & { target: 'Player' })\n  | (MonsterStatParameter & { target: 'Monster' });\n\nexport interface BuildRepository {\n  debug: { [k in string]: Item };\n  basic: { [k in string]: Item };\n  class: Classes;\n  skill: Skills;\n  weapon: Weapons;\n  offhand: Offhands;\n  consumable: Consumables;\n  armor: Armors;\n  headgear: Headgears;\n  footwear: Footwears;\n  charm: Charms;\n}\nexport type Build = {\n  [k in keyof BuildRepository]: Item;\n};\n\nexport type EnemyInfo = [Enemy, EnemyStats];\nexport type EnemyRepository = { [k in EnemiesIndex]: EnemyInfo };\n\nexport interface Item {\n  display: string;\n  tooltip?: string;\n  passives?: StatsFunIndex[];\n  bot?: Nel<Effect>;\n  eot?: Nel<Effect>;\n  effects?: Nel<InventoryEffect>;\n  //[key: string]: any;\n}\n\nexport interface Player {\n  id: string;\n  lore: Record<string, string | number>;\n  build: Build;\n}\n\n// Place in the array for now\ntype EffectIdentity = number;\nexport interface Enemy {\n  lore: Record<string, string | number>;\n  effects: Nel<Effect>;\n  rolls: Tuple<EffectIdentity[], Distances>;\n  bot?: Nel<Effect>;\n  eot?: Nel<Effect>;\n}\n\nexport type Enemies = TupleUpTo<Enemy, MonsterCount>;\nexport type EnemiesStats = TupleUpTo<EnemyStats, MonsterCount>;\n\nexport const safeEntries = <T, K extends keyof T>(o: {\n  [s in K]: T[s];\n}): [K, T[K]][] => Object.entries(o).map(([k, v]) => [k as K, v as T[K]]);\n\nexport const safeValues = <T, K extends keyof T>(o: {\n  [s in K]: T[s];\n}): T[K][] => safeEntries(o).map((a) => a[1]);\n","const names = [\n  'Lydan',\n  'Syrin',\n  'Ptorik',\n  'Joz',\n  'Varog',\n  'Gethrod',\n  'Hezra',\n  'Feron',\n  'Ophni',\n  'Colborn',\n  'Fintis',\n  'Gatlin',\n  'Jinto',\n  'Hagalbar',\n  'Krinn',\n  'Lenox',\n  'Revvyn',\n  'Hodus',\n  'Dimian',\n  'Paskel',\n  'Kontas',\n  'Weston',\n  'Azamarr',\n  'Jather',\n  'Tekren',\n  'Jareth',\n  'Adon',\n  'Zaden',\n  'Eune',\n  'Graff',\n  'Tez',\n  'Jessop',\n  'Gunnar',\n  'Pike',\n  'Domnhar',\n  'Baske',\n  'Jerrick',\n  'Mavrek',\n  'Riordan',\n  'Wulfe',\n  'Straus',\n  'Tyvrik',\n  'Henndar',\n  'Favroe',\n  'Whit',\n  'Jaris',\n  'Renham',\n  'Kagran',\n  'Lassrin',\n  'Vadim',\n  'Arlo',\n  'Quintis',\n  'Vale',\n  'Caelan',\n  'Yorjan',\n  'Khron',\n  'Ishmael',\n  'Jakrin',\n  'Fangar',\n  'Roux',\n  'Baxar',\n  'Hawke',\n  'Gatlen',\n  'Barak',\n  'Nazim',\n  'Kadric',\n  'Paquin',\n  'Kent',\n  'Moki',\n  'Rankar',\n  'Lothe',\n  'Ryven',\n  'Clawsen',\n  'Pakker',\n  'Embre',\n  'Cassian',\n  'Verssek',\n  'Dagfinn',\n  'Ebraheim',\n  'Nesso',\n  'Eldermar',\n  'Rivik',\n  'Rourke',\n  'Barton',\n  'Hemm',\n  'Sarkin',\n  'Blaiz',\n  'Talon',\n  'Agro',\n  'Zagaroth',\n  'Turrek',\n  'Esdel',\n  'Lustros',\n  'Zenner',\n  'Baashar',\n  'Dagrod',\n  'Gentar',\n  'Feston',\n  'Syrana',\n  'Resha',\n  'Varin',\n  'Wren',\n  'Yuni',\n  'Talis',\n  'Kessa',\n  'Magaltie',\n  'Aeris',\n  'Desmina',\n  'Krynna',\n  'Asralyn',\n  'Herra',\n  'Pret',\n  'Kory',\n  'Afia',\n  'Tessel',\n  'Rhiannon',\n  'Zara',\n  'Jesi',\n  'Belen',\n  'Rei',\n  'Ciscra',\n  'Temy',\n  'Renalee',\n  'Estyn',\n  'Maarika',\n  'Lynorr',\n  'Tiv',\n  'Annihya',\n  'Semet',\n  'Tamrin',\n  'Antia',\n  'Reslyn',\n  'Basak',\n  'Vixra',\n  'Pekka',\n  'Xavia',\n  'Beatha',\n  'Yarri',\n  'Liris',\n  'Sonali',\n  'Razra',\n  'Soko',\n  'Maeve',\n  'Everen',\n  'Yelina',\n  'Morwena',\n  'Hagar',\n  'Palra',\n  'Elysa',\n  'Sage',\n  'Ketra',\n  'Lynx',\n  'Agama',\n  'Thesra',\n  'Tezani',\n  'Ralia',\n  'Esmee',\n  'Heron',\n  'Naima',\n  'Rydna',\n  'Sparrow',\n  'Baakshi',\n  'Ibera',\n  'Phlox',\n  'Dessa',\n  'Braithe',\n  'Taewen',\n  'Larke',\n  'Silene',\n  'Phressa',\n  'Esther',\n  'Anika',\n  'Rasy',\n  'Harper',\n  'Indie',\n  'Vita',\n  'Drusila',\n  'Minha',\n  'Surane',\n  'Lassona',\n  'Merula',\n  'Kye',\n  'Jonna',\n  'Lyla',\n  'Zet',\n  'Orett',\n  'Naphtalia',\n  'Turi',\n  'Rhays',\n  'Shike',\n  'Hartie',\n  'Beela',\n  'Leska',\n  'Vemery',\n  'Lunex',\n  'Fidess',\n  'Tisette',\n  'Partha',\n];\n\nexport default names;\n","import { enemies, build } from './data';\nimport { Chance } from 'chance';\nimport names from './data/names';\nimport { globals } from './modding';\nimport {\n  UpTo,\n  Subtract,\n  Distances,\n  Ranges,\n  Stat,\n  Status,\n  EnemyInfo,\n  Build,\n  PlayerStats,\n  Player,\n  safeValues,\n} from './types';\n\nexport const makeRange = (...number: UpTo<Subtract<Distances, 1>>[]) =>\n  [...new Set(number)] as Ranges;\nexport const allRanges = makeRange(0, 1, 2, 3, 4);\nexport const selfRange = allRanges;\n\nexport const makeStat = (amount: number, max: number = amount + 5): Stat => ({\n  current: amount,\n  starting: amount,\n  max,\n});\nexport const defaultStatus: Status = {\n  dodge: { active: false },\n  armor: { amount: 0 },\n  bleed: { turns: 0 },\n  stun: { active: false },\n};\n\nexport const randomEnemy = (): EnemyInfo =>\n  new Chance().pickone(safeValues(enemies));\nexport const dummyEnemy = (): EnemyInfo => globals().trainingEnemy;\n\nexport const randomName = () => names[Math.floor(Math.random() * names.length)];\n\nexport const randomBuild = (\n  rng: Chance.Chance,\n  buildOverride?: Partial<Build>\n) => ({\n  debug: build.debug[globals().debug ? 1 : 0],\n  basic: rng.pickone(safeValues(build.basic)),\n  class: rng.pickone(safeValues(build.class)),\n  skill: rng.pickone(safeValues(build.skill)),\n  armor: rng.pickone(safeValues(build.armor)),\n  weapon: rng.pickone(safeValues(build.weapon)),\n  offhand: rng.pickone(safeValues(build.offhand)),\n  footwear: rng.pickone(safeValues(build.footwear)),\n  headgear: rng.pickone(safeValues(build.headgear)),\n  charm: rng.pickone(safeValues(build.charm)),\n  consumable: rng.pickone(safeValues(build.consumable)),\n  ...buildOverride,\n});\n\nexport const playerStatsDefault: PlayerStats = {\n  hp: makeStat(10),\n  stamina: makeStat(6),\n  staminaPerTurn: makeStat(2),\n  speed: makeStat(0),\n  attack: makeStat(0),\n  defence: makeStat(0),\n  status: defaultStatus,\n};\n\nexport const randomPlayer = (\n  statsOverride?: Partial<PlayerStats>,\n  buildOverride?: Partial<Build>\n): [Player, PlayerStats] => {\n  const rng = new Chance();\n  return [\n    {\n      id: rng.string(),\n      lore: {\n        name: randomName(),\n        age: rng.age(),\n      },\n      build: randomBuild(rng, buildOverride),\n    },\n    {\n      ...playerStatsDefault,\n      ...statsOverride,\n    },\n  ];\n};\n","import WebSocket from 'ws';\nimport { assign, createMachine, interpret } from 'xstate';\nimport { inspect } from '@xstate/inspect/lib/server.js';\nimport { scoreGame } from '../game/playGame';\n\nconst isDebug = process && process.env['SMD'] === '1';\n\nif (isDebug) {\n  inspect({\n    server: new WebSocket.Server({\n      port: 8888,\n    }),\n  });\n}\n\nconst toMenu = {\n  on: {\n    MENU: { target: 'main' },\n  },\n};\n\nconst quick = {\n  initial: 'play',\n  states: {\n    play: {\n      entry: ['reset'],\n      on: {\n        WIN: { target: 'win' },\n        LOSE: { target: 'lose' },\n      },\n    },\n    win: { type: 'final' as const },\n    lose: { type: 'final' as const },\n  },\n  ...toMenu,\n};\n\nconst single = {\n  initial: 'player',\n  states: {\n    player: {\n      entry: ['reset'],\n      on: {\n        PLAYER: { target: 'encounter' },\n      },\n    },\n    encounter: {\n      on: {\n        ENCOUNTER: { target: 'play' },\n      },\n    },\n    play: {\n      on: {\n        WIN: { target: 'win' },\n        LOSE: { target: 'lose' },\n      },\n    },\n    win: { type: 'final' as const },\n    lose: { type: 'final' as const },\n  },\n  ...toMenu,\n};\n\nconst arcade = {\n  initial: 'player',\n  states: {\n    player: {\n      entry: ['reset'],\n      on: {\n        PLAYER: { target: 'play' },\n      },\n    },\n    play: {\n      on: {\n        WIN: [\n          { target: 'victory', cond: 'isFinal' },\n          {\n            target: 'play',\n            actions: ['bumpVictories', 'bumpScore'],\n            internal: true,\n          },\n        ],\n        LOSE: { target: 'defeat' },\n      },\n    },\n    victory: {\n      type: 'final' as const,\n    },\n    defeat: {\n      type: 'final' as const,\n    },\n  },\n  ...toMenu,\n};\n\nconst survival = {\n  initial: 'player',\n  states: {\n    player: {\n      entry: ['reset'],\n      on: {\n        PLAYER: { target: 'play' },\n      },\n    },\n    play: {\n      on: {\n        WIN: { target: 'play', actions: ['bumpVictories'] },\n        LOSE: { target: 'defeat' },\n      },\n    },\n    defeat: {\n      type: 'final' as const,\n      on: {\n        // ACK: { target: '#menus.leaderboards' }\n      },\n    },\n  },\n  ...toMenu,\n};\n\nconst puzzle = {\n  initial: 'puzzle',\n  states: {\n    puzzle: {\n      on: {\n        PLAYER: { target: 'player' },\n      },\n    },\n    player: {\n      on: {\n        SELECTED: { target: 'play' },\n      },\n    },\n    play: {\n      on: {\n        COMPLETE: { target: 'complete' },\n      },\n    },\n    complete: {\n      on: {\n        NEXT: { target: 'player' },\n        SELECT: { target: 'puzzle' },\n      },\n    },\n  },\n  ...toMenu,\n};\n\nconst replay = {\n  initial: 'replay',\n  states: {\n    replay: {\n      on: {\n        REPLAY: { target: 'play' },\n      },\n    },\n    play: {\n      on: {\n        WIN: { target: 'win' },\n        LOSE: { target: 'lose' },\n      },\n    },\n    win: { type: 'final' as const },\n    lose: { type: 'final' as const },\n  },\n  ...toMenu,\n};\n\nconst training = {\n  initial: 'player',\n  states: {\n    player: {\n      entry: ['reset'],\n      on: {\n        PLAYER: { target: 'play' },\n      },\n    },\n    play: {\n      on: {\n        WIN: { target: 'win' },\n        LOSE: { target: 'lose' },\n      },\n    },\n    win: { type: 'final' as const },\n    lose: { type: 'final' as const },\n  },\n  ...toMenu,\n};\n\nconst makeArcadeContext = () => ({\n  victories: 0,\n  score: 0,\n  seed: Math.random(),\n});\nconst makeSurvivalContext = () => ({\n  victories: 0,\n  seed: Math.random(),\n});\nconst makeSingleContext = () => ({\n  seed: Math.random(),\n});\nconst makeGameContext = () => ({\n  arcadeContext: makeArcadeContext(),\n  survivalContext: makeSurvivalContext(),\n  singleContext: makeSingleContext(),\n});\n\nexport const gameMenuMachine = createMachine(\n  {\n    tsTypes: {} as import('./menuStateMachine.typegen').Typegen0,\n    id: 'menus',\n    initial: 'main',\n    context: makeGameContext(),\n    states: {\n      main: {\n        on: {\n          QUICK: { target: 'quick' },\n          SINGLE: { target: 'single' },\n          TRAINING: { target: 'training' },\n          ARCADE: { target: 'arcade' },\n          SURVIVAL: { target: 'survival' },\n          REPLAY: { target: 'replay' },\n          // PUZZLE: { target: 'puzzle' },\n          // LEADERBOARDS: { target: 'leaderboards' },\n        },\n      },\n      quick: {\n        ...quick,\n      },\n      single: {\n        ...single,\n      },\n      arcade: {\n        ...arcade,\n      },\n      survival: {\n        ...survival,\n      },\n      replay: {\n        ...replay,\n      },\n      training: {\n        ...training,\n      },\n      // puzzle: {\n      //   ...puzzle,\n      // },\n      // leaderboards: {\n      //   ...toMenu,\n      // }\n    },\n  },\n  {\n    guards: {\n      isFinal: ({ arcadeContext: { victories } }) => victories + 1 >= 7,\n    },\n    actions: {\n      bumpVictories: assign({\n        arcadeContext: ({ arcadeContext }, _event) => ({\n          ...arcadeContext,\n          victories: arcadeContext.victories + 1,\n          seed: Math.random(),\n        }),\n        survivalContext: ({ survivalContext }, _event) => ({\n          ...survivalContext,\n          victories: survivalContext.victories + 1,\n          seed: Math.random(),\n        }),\n      }),\n      bumpScore: assign({\n        arcadeContext: ({ arcadeContext }, { game }) => ({\n          ...arcadeContext,\n          score: arcadeContext.score + scoreGame(game),\n          seed: Math.random(),\n        }),\n      }),\n      reset: assign({\n        survivalContext: (c, e) => makeSurvivalContext(),\n        arcadeContext: (c, e) => makeArcadeContext(),\n        singleContext: (c, e) => makeSingleContext(),\n      }),\n    },\n  }\n);\n\nif (isDebug) {\n  interpret(gameMenuMachine, { devTools: true })\n    .onTransition((state) => console.log(state))\n    .start();\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (\n    process &&\n    process.env.NODE_ENV === 'production' &&\n    'serviceWorker' in navigator\n  ) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://cra.link/PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://cra.link/PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n"],"sourceRoot":""}