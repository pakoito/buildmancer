{"version":3,"sources":["components/Enemy.tsx","components/Player.tsx","utils/data.ts","playGame.ts","components/Game.tsx","hooks/usePressedKeys.tsx","components/PlayerBuilder.tsx","hooks/useScroll.tsx","components/EncounterBuilder.tsx","geneticalgorithm/geneticalgorithm.js","tinkerer/tinkerer.ts","App.tsx","serviceWorkerRegistration.ts","reportWebVitals.ts","index.tsx"],"names":["EnemyCard","effects","enemy","isSelected","onSelect","latestAttack","canAct","Card","bg","undefined","Body","Title","lore","name","stats","hp","Text","distance","rolls","map","idx","Seq","countBy","e","display","toArray","k","v","length","toFixed","Button","disabled","onClick","PlayerCard","selectedButtons","player","onClickEffect","lastAction","Subtitle","className","build","class","stamina","Stack","direction","gap","Object","values","flatMap","a","active","has","_","priority","startState","play","states","previousState","effectRepository","_origin","_play","newState","actions","changeDistance","target","currentState","attackMonster","funs","reduce","acc","value","origin","chain","attackPlayer","modifyPlayerStamina","basic","effect","skill","weapon","offhand","consumable","armor","headgear","footwear","charm","randomName","names","Math","floor","random","enemies","rage","clamp","num","min","max","turnDeterministicRng","turns","randPerTurn","monsterSeed","monsterChance","Chance","monsterRng","Array","keys","floating","fixed","turn","turnRng","pop","updateMonster","override","m","playerActions","s","start","curr","amount","handlePlayerEffect","index","select","usedSkill","rand","functions","concat","sortBy","latestState","staminaPerTurn","lastAttacks","accState","setSelected","Game","game","solveGame","undo","redo","playerSkills","monsterHealth","isPlayerAlive","areMonstersAlive","pressed","onUp","useState","Set","pressedKeys","updatePressedKeys","downHandler","key","set","upHandler","useCallback","filter","useEffect","window","addEventListener","removeEventListener","usePressedKeys","valNum","parseInt","Container","fluid","Row","Col","sm","md","Player","find","xs","Enemy","first","selects","entries","type","options","ElementPicker","section","setField","scrollParams","elRef","useRef","current","scrollIntoView","useScroll","behavior","block","scrollTo","scrollRef","Form","Label","ButtonGroup","size","id","variant","ref","PlayerBuilder","onSave","React","form","setForm","age","setLore","displayType","onSubmit","preventDefault","style","marginBottom","field","Navbar","maxHeight","EncounterBuilder","encounter","setEncounter","found","geneticAlgorithmConstructor","settingWithDefaults","settings","defaults","mutationFunction","crossoverFunction","fitnessFunction","doesABeatBFunction","population","Error","populationSize","phenotype","b","cloneJSON","object","JSON","parse","stringify","mutate","crossover","mate","evolve","push","populate","otherIndex","temp","randomizePopulationOrder","nextGeneration","p","competitor","compete","this","best","scored","scoredPopulation","score","bestScore","config","clone","defaultTinkererOptions","playerSeed","weights","monster","debug","App","status","setStatus","setPlayerBuild","setGame","setRedo","newRedo","latest","slice","iterations","iter","options_","range","gen","GeneticAlgorithmConstructor","oldPlay","newPlay","d6","natural","unavailable","exclude","playerHealth","startPlayerHealth","startMonsterHealth","monsterKillingFitness","playerAlivenessFitness","killSpeedFitness","fitness","console","log","i","tinkerer","maxBy","isLocalhost","Boolean","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","onUpdate","onSuccess","catch","error","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById","URL","process","href","fetch","headers","response","contentType","get","indexOf","ready","unregister","reload","checkValidServiceWorker","serviceWorkerRegistration"],"mappings":"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ACA,SACA,OACA,QACA,QACA,QACA,MACA,SACA,SACA,OACA,UACA,QACA,UACA,SACA,UACA,QACA,SACA,UACA,UACA,SACA,OACA,QACA,SACA,SACA,WACA,QACA,OACA,UACA,OACA,SACA,SACA,QACA,UACA,SACA,SACA,OACA,QACA,QACA,SACA,QACA,QACA,SACA,SACA,OACA,OACA,SACA,QACA,QACA,UACA,SACA,QACA,UACA,UACA,UACA,WACA,QACA,WACA,QACA,SACA,SACA,OACA,SACA,SACA,QACA,OACA,WACA,SACA,QACA,UACA,SACA,WACA,UACA,SACA,SACA,SACA,QACA,QACA,OACA,OACA,QACA,QACA,WACA,QACA,UACA,SACA,WACA,QACA,OACA,OACA,OACA,SACA,WACA,OACA,OACA,QACA,MACA,SACA,OACA,WACA,QACA,UACA,SACA,MACA,UACA,QACA,SACA,QACA,SACA,QACA,QACA,SACA,QACA,UACA,QACA,QACA,SACA,SACA,OACA,QACA,SACA,SACA,UACA,QACA,QACA,QACA,OACA,QACA,OACA,QACA,UACA,SACA,QACA,QACA,QACA,QACA,SACA,UACA,WACA,QACA,QACA,QACA,UACA,SACA,QACA,SACA,UACA,SACA,QACA,QACA,SACA,QACA,OACA,UACA,QACA,SACA,UACA,SACA,MACA,QACA,OACA,MACA,QACA,YACA,OACA,QACA,QACA,SACA,QACA,QACA,UACA,QACA,SACA,UACA,U,iBCrZIM,EAAQ,SAACC,EAAaC,EAAaC,GAA3B,OACZR,KAAKO,IAAIP,KAAKQ,IAAIF,EAAKC,GAAMC,IAKxB,SAASC,EAAqBC,EAAeC,EAAqBC,GACvE,IAAMC,EAAgB,IAAIC,SAAOF,GAC3BG,EACJ,YAAIC,MAAMN,GAAOO,QACdrF,KAAI,SAAAiC,GAAC,OAAI,YAAImD,MAAML,GAAaM,QAC9BrF,KAAI,SAAAiC,GAAC,OAAIgD,EAAcK,SAAS,CAAEX,IAAK,EAAGC,IAAK,EAAGW,MAAO,UAChE,OAAO,SAACC,GACN,IAAMC,EAAO,YAAON,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","file":"static/js/main.499d1986.chunk.js","sourcesContent":["import React from \"react\";\nimport { Card, Button } from \"react-bootstrap\";\nimport { Enemy, Effect } from \"../types\";\nimport { Seq } from \"immutable\";\n\nconst skillPercents = (effects: Effect[]) =>\n  Seq(effects).countBy((e) => e.display).toArray().map(([k, v], idx) => <Card.Text key={idx}>[{(v / effects.length * 100).toFixed(2)}%] {k}</Card.Text>);\n\nconst EnemyCard: React.FC<{\n  enemy: Enemy;\n  latestAttack: string | undefined;\n  isSelected?: boolean;\n  onSelect: () => void;\n  canAct: boolean;\n}> = ({ enemy, isSelected, onSelect, latestAttack, canAct }) => (\n  <Card bg={isSelected ? \"info\" : undefined}>\n    <Card.Body>\n      <Card.Title>{enemy.lore.name}{enemy.stats.hp > 0 ? \"\" : (<b> 💀DEAD💀 </b>)}</Card.Title>\n      <Card.Text>\n        {enemy.lore.name}. Has {enemy.stats.hp} HP and is at distance{\" \"}\n        {enemy.stats.distance}\n      </Card.Text>\n      {latestAttack && (<Card.Text>Latest attack: {latestAttack}</Card.Text>)}\n      <Card.Text>Next attack prediction:</Card.Text>\n      {skillPercents(enemy.rolls[enemy.stats.distance - 1].map((idx) => enemy.effects[idx]))}\n      {canAct && (<Button disabled={isSelected} onClick={onSelect}>Select</Button>)}\n    </Card.Body>\n  </Card>\n);\n\nexport default EnemyCard;\n","import React from \"react\";\nimport { Card, Button, Stack } from \"react-bootstrap\";\nimport { Player } from \"../types\";\n\nconst PlayerCard: React.FC<{\n  selectedButtons: Set<string>,\n  player: Player;\n  canAct: boolean;\n  lastAction: string | undefined;\n  onClickEffect: (index: number) => void;\n}> = ({ selectedButtons, player, onClickEffect, canAct, lastAction }) => (\n  <Card>\n    <Card.Body>\n      <Card.Title>{player.lore.name}{player.stats.hp > 0 ? \"\" : (<b> 💀DEAD💀 </b>)}</Card.Title>\n      <Card.Subtitle className=\"mb-2 text-muted\">\n        {player.build.class.display}\n      </Card.Subtitle>\n      <Card.Text>Has {player.stats.hp} HP and {player.stats.stamina} stamina</Card.Text>\n      {lastAction && (<Card.Text>Last action: {lastAction}</Card.Text>)}\n    </Card.Body>\n    {canAct && (<Card.Body>\n      <Stack direction=\"horizontal\" gap={2}>\n        {Object.values(player.build)\n          .flatMap((a) => a.effects)\n          .map((e, idx) => (\n            <Button\n              key={e.display}\n              active={selectedButtons.has(e.display)}\n              disabled={player.stats.stamina < e.stamina}\n              onClick={(_) => onClickEffect(idx)}\n            >\n              [<b>{e.display}</b> <i>{idx + 1}</i>]\n              <br />\n              Sta: {e.stamina} | Prio: {e.priority}\n            </Button>\n          ))}\n      </Stack>\n    </Card.Body>)}\n  </Card>\n);\n\nexport default PlayerCard;\n","import { actions, Play } from \"../playGame\";\nimport { EffectFun, EffectFunRepo, Enemy, InventoryEffect, Snapshot } from \"../types\";\n\nexport const startState = (play: Play): Snapshot => play.states[0];\nexport const previousState = (play: Play): Snapshot => play.states[play.states.length - 1];\n\nexport const chain = (...funs: Array<EffectFun>): EffectFun =>\n  // TODO check direction of the fold\n  funs.reduce((acc, value) => (origin, play, newState) => value(origin, play, acc(origin, play, newState)));\n\n\nexport const effectRepository: EffectFunRepo = {\n  'Basic:Rest': (_origin, _play, newState) => newState,\n  'Basic:Advance': (_origin, _play, newState) => actions.changeDistance(newState, newState.target, -2),\n  'Basic:Retreat': (_origin, _play, newState) => actions.changeDistance(newState, newState.target, 2),\n  'Axe:Chop': (_, play, currentState) => actions.attackMonster(startState(play), currentState, 3),\n  'Axe:Cut': (_, play, currentState) => actions.attackMonster(startState(play), currentState, 3),\n  'Hook:GetHere': chain(\n    (_, play, currentState) => actions.attackMonster(startState(play), currentState, 3),\n    (_origin, _play, currentState) => actions.changeDistance(currentState, currentState.target, -1),\n  ),\n  'Monster:Swipe': (_, play, currentState) => actions.attackPlayer(startState(play), currentState, 2),\n  'Monster:Roar': (_, play, currentState) => actions.modifyPlayerStamina(startState(play), currentState, -5),\n  'Monster:Jump': (origin, _, currentState) => actions.changeDistance(currentState, origin, -2),\n};\n\nexport const build: Record<\n  string,\n  {\n    display: string;\n    effects: InventoryEffect[];\n    [key: string]: any;\n  }[]\n> = {\n  basic: [\n    {\n      display: \"Basic\",\n      effects: [\n        {\n          display: \"Rest\",\n          effect: \"Basic:Rest\",\n          priority: 4,\n          stamina: 0,\n        },\n        {\n          display: \"Advance\",\n          effect: \"Basic:Advance\",\n          priority: 4,\n          stamina: 1,\n        },\n        {\n          display: \"Retreat\",\n          effect: \"Basic:Retreat\",\n          priority: 4,\n          stamina: 1,\n        }\n      ]\n    }\n  ],\n  class: [\n    {\n      display: \"Warrior\",\n      effects: [],\n    },\n    {\n      display: \"Mage\",\n      effects: [],\n    },\n    {\n      display: \"Rogue\",\n      effects: [],\n    },\n  ],\n  skill: [\n    {\n      display: \"Sturdy\",\n      effects: [],\n    },\n    {\n      display: \"Nimble\",\n      effects: [],\n    },\n  ],\n  weapon: [\n    {\n      display: \"Axe\",\n      effects: [\n        {\n          display: \"Chop\",\n          effect: \"Axe:Chop\",\n          priority: 2,\n          stamina: 2,\n        },\n        {\n          display: \"Cut\",\n          effect: \"Axe:Cut\",\n          priority: 3,\n          stamina: 2,\n        },\n      ],\n    },\n  ],\n  offhand: [\n    {\n      display: \"Hook\",\n      effects: [\n        {\n          display: \"Get over here!\",\n          effect: \"Hook:GetHere\",\n          priority: 4,\n          stamina: 3,\n        },\n      ],\n    },\n  ],\n  consumable: [\n    {\n      display: \"Potion\",\n      effects: [],\n    },\n  ],\n  armor: [\n    {\n      display: \"Heavy\",\n      effects: [],\n    },\n  ],\n  headgear: [\n    {\n      display: \"Helm\",\n      effects: [],\n    },\n  ],\n  footwear: [\n    {\n      display: \"Boots\",\n      effects: [],\n    },\n  ],\n  charm: [\n    {\n      display: \"of Health\",\n      effects: [],\n    },\n  ],\n};\n\nexport const randomName = () => names[Math.floor(Math.random() * names.length)];\n\nexport const enemies: Enemy[] = [\n  {\n    lore: {\n      name: \"Sacapuntas\",\n    },\n    stats: {\n      hp: 25,\n      rage: 0,\n      distance: 5,\n    },\n    rolls: [\n      [0, 1, 2, 1, 0],\n      [0, 1, 0, 0, 0],\n      [0, 0, 0, 0, 0],\n      [0, 0, 0, 0, 0],\n      [0, 1, 2, 1, 0, 0],\n    ],\n    effects: [\n      { display: \"Swipe\", priority: 3, effect: \"Monster:Swipe\" },\n      { display: \"Roar\", priority: 1, effect: \"Monster:Roar\" },\n      { display: \"Jump\", priority: 2, effect: \"Monster:Jump\" },\n    ],\n  },\n  {\n    lore: {\n      name: \"Cacahue\",\n    },\n    stats: {\n      hp: 30,\n      rage: 0,\n      distance: 5,\n    },\n    effects: [\n      { display: \"Swipe\", priority: 3, effect: \"Monster:Swipe\" },\n      { display: \"Roar\", priority: 1, effect: \"Monster:Roar\" },\n      { display: \"Jump\", priority: 2, effect: \"Monster:Jump\" },\n    ],\n    rolls: [\n      [0, 0, 0, 1, 0],\n      [0, 0, 0, 0, 0],\n      [0, 0, 0, 0, 0],\n      [0, 0, 0, 0, 0],\n      [0, 0, 2, 0, 0],\n    ]\n  },\n  {\n    lore: {\n      name: \"Toro\",\n    },\n    stats: {\n      hp: 22,\n      rage: 0,\n      distance: 5,\n    },\n    effects: [\n      { display: \"Swipe\", priority: 3, effect: \"Monster:Swipe\" },\n      { display: \"Roar\", priority: 1, effect: \"Monster:Roar\" },\n      { display: \"Jump\", priority: 2, effect: \"Monster:Jump\" },\n    ],\n    rolls: [\n      [0, 0, 0, 1, 0],\n      [0, 0, 0, 0, 0],\n      [0, 0, 0, 0, 0],\n      [0, 0, 0, 0, 0],\n      [0, 0, 2, 0, 0],\n    ]\n  },\n];\n\nconst names = [\n  \"Lydan\",\n  \"Syrin\",\n  \"Ptorik\",\n  \"Joz\",\n  \"Varog\",\n  \"Gethrod\",\n  \"Hezra\",\n  \"Feron\",\n  \"Ophni\",\n  \"Colborn\",\n  \"Fintis\",\n  \"Gatlin\",\n  \"Jinto\",\n  \"Hagalbar\",\n  \"Krinn\",\n  \"Lenox\",\n  \"Revvyn\",\n  \"Hodus\",\n  \"Dimian\",\n  \"Paskel\",\n  \"Kontas\",\n  \"Weston\",\n  \"Azamarr \",\n  \"Jather \",\n  \"Tekren \",\n  \"Jareth\",\n  \"Adon\",\n  \"Zaden\",\n  \"Eune \",\n  \"Graff\",\n  \"Tez\",\n  \"Jessop\",\n  \"Gunnar\",\n  \"Pike\",\n  \"Domnhar\",\n  \"Baske\",\n  \"Jerrick\",\n  \"Mavrek\",\n  \"Riordan\",\n  \"Wulfe\",\n  \"Straus\",\n  \"Tyvrik \",\n  \"Henndar\",\n  \"Favroe\",\n  \"Whit\",\n  \"Jaris\",\n  \"Renham\",\n  \"Kagran\",\n  \"Lassrin \",\n  \"Vadim\",\n  \"Arlo\",\n  \"Quintis\",\n  \"Vale\",\n  \"Caelan\",\n  \"Yorjan\",\n  \"Khron\",\n  \"Ishmael\",\n  \"Jakrin\",\n  \"Fangar\",\n  \"Roux\",\n  \"Baxar\",\n  \"Hawke\",\n  \"Gatlen\",\n  \"Barak\",\n  \"Nazim\",\n  \"Kadric\",\n  \"Paquin\",\n  \"Kent\",\n  \"Moki\",\n  \"Rankar\",\n  \"Lothe\",\n  \"Ryven\",\n  \"Clawsen\",\n  \"Pakker\",\n  \"Embre\",\n  \"Cassian\",\n  \"Verssek\",\n  \"Dagfinn\",\n  \"Ebraheim\",\n  \"Nesso\",\n  \"Eldermar\",\n  \"Rivik\",\n  \"Rourke\",\n  \"Barton\",\n  \"Hemm\",\n  \"Sarkin\",\n  \"Blaiz \",\n  \"Talon\",\n  \"Agro\",\n  \"Zagaroth\",\n  \"Turrek\",\n  \"Esdel\",\n  \"Lustros\",\n  \"Zenner\",\n  \"Baashar \",\n  \"Dagrod \",\n  \"Gentar\",\n  \"Feston\",\n  \"Syrana\",\n  \"Resha\",\n  \"Varin\",\n  \"Wren\",\n  \"Yuni\",\n  \"Talis\",\n  \"Kessa\",\n  \"Magaltie\",\n  \"Aeris\",\n  \"Desmina\",\n  \"Krynna\",\n  \"Asralyn \",\n  \"Herra\",\n  \"Pret\",\n  \"Kory\",\n  \"Afia\",\n  \"Tessel\",\n  \"Rhiannon\",\n  \"Zara\",\n  \"Jesi\",\n  \"Belen\",\n  \"Rei\",\n  \"Ciscra\",\n  \"Temy\",\n  \"Renalee \",\n  \"Estyn\",\n  \"Maarika\",\n  \"Lynorr\",\n  \"Tiv\",\n  \"Annihya\",\n  \"Semet\",\n  \"Tamrin\",\n  \"Antia\",\n  \"Reslyn\",\n  \"Basak\",\n  \"Vixra\",\n  \"Pekka \",\n  \"Xavia\",\n  \"Beatha \",\n  \"Yarri\",\n  \"Liris\",\n  \"Sonali\",\n  \"Razra \",\n  \"Soko\",\n  \"Maeve\",\n  \"Everen\",\n  \"Yelina\",\n  \"Morwena\",\n  \"Hagar\",\n  \"Palra\",\n  \"Elysa\",\n  \"Sage\",\n  \"Ketra\",\n  \"Lynx\",\n  \"Agama\",\n  \"Thesra \",\n  \"Tezani\",\n  \"Ralia\",\n  \"Esmee\",\n  \"Heron\",\n  \"Naima\",\n  \"Rydna \",\n  \"Sparrow\",\n  \"Baakshi \",\n  \"Ibera\",\n  \"Phlox\",\n  \"Dessa\",\n  \"Braithe\",\n  \"Taewen\",\n  \"Larke\",\n  \"Silene\",\n  \"Phressa\",\n  \"Esther\",\n  \"Anika\",\n  \"Rasy \",\n  \"Harper\",\n  \"Indie\",\n  \"Vita\",\n  \"Drusila\",\n  \"Minha\",\n  \"Surane\",\n  \"Lassona\",\n  \"Merula\",\n  \"Kye\",\n  \"Jonna\",\n  \"Lyla\",\n  \"Zet\",\n  \"Orett\",\n  \"Naphtalia\",\n  \"Turi\",\n  \"Rhays\",\n  \"Shike\",\n  \"Hartie\",\n  \"Beela\",\n  \"Leska\",\n  \"Vemery \",\n  \"Lunex\",\n  \"Fidess\",\n  \"Tisette\",\n  \"Partha\",\n]","import { Enemies, Player, Snapshot, MonsterTarget, Target, EnemyStats, InventoryEffect } from \"./types\";\nimport { Seq } from \"immutable\";\nimport { effectRepository, previousState } from \"./utils/data\";\nimport { Chance } from \"chance\";\n\nexport type PlayHistory = [Snapshot, ...Snapshot[]];\n\nexport type Play = {\n  states: PlayHistory;\n};\n\nconst clamp = (num: number, min: number, max: number) =>\n  Math.min(Math.max(num, min), max);\n\n/**\n * @returns min inclusive, max exclusive rand\n */\nexport function turnDeterministicRng(turns: number, randPerTurn: number, monsterSeed: string | number): (turn: number) => (min: number, max: number) => number {\n  const monsterChance = new Chance(monsterSeed);\n  const monsterRng =\n    [...Array(turns).keys()]\n      .map(_ => [...Array(randPerTurn).keys()]\n        .map(_ => monsterChance.floating({ min: 0, max: 1, fixed: 2 })));\n  return (turn) => {\n    const turnRng = [...monsterRng[turn]];\n    return (min, max) => Math.floor(((max - min) * turnRng.pop()!!) + min);\n  }\n}\n\nconst updateMonster = (enemies: Enemies, target: Target, override: (stats: EnemyStats) => object): Enemies =>\n  enemies.map((m, idx) =>\n    (idx === target)\n      ? { ...m, stats: { ...m.stats, ...override(m.stats) } }\n      : m) as Enemies;\n\nexport const playerActions = (player: Player): InventoryEffect[] =>\n  Object.values(player.build).flatMap((s) => s.effects);\n\nexport const actions = {\n  attackMonster: (start: Snapshot, curr: Snapshot, amount: number): Snapshot =>\n  ({\n    ...curr,\n    enemies: updateMonster(curr.enemies, curr.target, ({ hp }) => ({ hp: clamp(hp - amount, 0, start.enemies[curr.target]!!/* enforced by UI */.stats.hp) })),\n  }),\n  changeDistance: (curr: Snapshot, origin: Target, amount: number): Snapshot =>\n  ({\n    ...curr,\n    enemies: updateMonster(curr.enemies, origin, ({ distance }) => ({ distance: clamp(distance + amount, 1, 5) })),\n  }),\n\n  attackPlayer: (start: Snapshot, curr: Snapshot, amount: number): Snapshot =>\n  ({\n    ...curr,\n    player: {\n      ...curr.player,\n      stats: { ...curr.player.stats, hp: clamp(curr.player.stats.hp - amount, 0, start.player.stats.hp) },\n    },\n  }),\n  modifyPlayerStamina: (\n    start: Snapshot,\n    curr: Snapshot,\n    amount: number,\n  ): Snapshot =>\n  ({\n    ...curr,\n    player: {\n      ...curr.player,\n      stats: {\n        ...curr.player.stats,\n        stamina: clamp(curr.player.stats.stamina + amount, 0, start.player.stats.stamina),\n      },\n    },\n  }),\n};\n\nexport default function play(player: Player, enemies: Enemies): Play {\n  return {\n    states: [{\n      player,\n      enemies,\n      target: 0,\n      lastAttacks: []\n    }],\n  };\n}\n\nexport const handlePlayerEffect = (play: Play, index: number, select: (turn: number) => (min: number, max: number) => number): Play => {\n  const { enemies, player } = previousState(play);\n  const playerSkills = playerActions(player);\n  const usedSkill = playerSkills[index];\n  const rand = select(play.states.length - 1);\n  const functions = Seq(enemies)\n    .map((e, idx) =>\n      [idx as Target, e.effects[\n        e.rolls[e.stats.distance - 1]\n        [rand(0, e.rolls[e.stats.distance - 1].length)]\n      ]] as const)\n    .concat([['Player' as Target, usedSkill] as const])\n    .sortBy(([_origin, effect]) => effect.priority);\n\n  const latestState: Snapshot =\n    actions.modifyPlayerStamina(play.states[0], previousState(play), player.stats.staminaPerTurn - usedSkill.stamina);\n  latestState.lastAttacks = functions.map(([origin, effect]) => [origin, effect.effect] as const).toArray();\n  const newState =\n    functions.reduce((accState, [origin, effect]) => effectRepository[effect.effect](origin, play, accState), latestState);\n  return {\n    ...play,\n    states: [...play.states, newState],\n  };\n};\n\nexport const setSelected = (play: Play, target: MonsterTarget): Play => {\n  play.states[play.states.length - 1].target = target;\n  return {\n    states: [...play.states],\n  };\n}\n","import { Container, Row, Col, Card } from \"react-bootstrap\";\n\nimport { MonsterTarget } from \"../types\";\n\nimport EnemyCard from \"./Enemy\";\nimport PlayerCard from \"./Player\";\nimport usePressedKeys from \"../hooks/usePressedKeys\";\nimport { Play, playerActions } from \"../playGame\";\nimport { Seq } from \"immutable\";\nimport { previousState } from \"../utils/data\";\nimport { Button } from \"react-bootstrap\";\n\nexport type GameProps = {\n  game: Play;\n  setSelected: (target: MonsterTarget) => void;\n  handlePlayerEffect: (index: number) => void,\n  solveGame: (iterations: number) => void,\n  undo: () => void\n  redo: (() => void) | undefined;\n};\n\nconst Game = ({ handlePlayerEffect, setSelected, game, solveGame, undo, redo }: GameProps): JSX.Element => {\n  const { player, enemies, target, lastAttacks } = previousState(game);\n\n  const playerSkills = playerActions(player);\n  const monsterHealth = enemies.reduce((acc, m) => m.stats.hp + acc, 0);\n  const isPlayerAlive = player.stats.hp > 0;\n  const areMonstersAlive = monsterHealth > 0;\n  const canAct = isPlayerAlive && areMonstersAlive;\n\n  const pressed = usePressedKeys((key) => {\n    if (!canAct) return;\n    const valNum = parseInt(key);\n    if (valNum > 0 && valNum <= playerSkills.length) {\n      handlePlayerEffect(valNum - 1);\n    }\n  });\n\n  const selectedButtons = new Set<string>([...pressed].flatMap((key: string) => {\n    const valNum = parseInt(key);\n    if (valNum > 0 && valNum <= playerSkills.length) {\n      return [playerSkills[valNum - 1].display];\n    } else {\n      return [];\n    }\n  }));\n\n  return (\n    <Container fluid>\n      <Row className=\"justify-content-center align-items-flex-start\">\n        <Col sm={12} md={8}>\n          <Row>\n            <Card.Title>\n              Turn {game.states.length} {!isPlayerAlive ? (<b>❌❌DEFEAT❌❌</b>) : !areMonstersAlive ? (<b>🎉🎉VICTORY🎉🎉</b>) : \"\"}\n            </Card.Title>\n          </Row>\n          <Row>\n            <Col>\n              <PlayerCard\n                player={player}\n                onClickEffect={handlePlayerEffect}\n                selectedButtons={selectedButtons}\n                lastAction={(lastAttacks.find(a => a[0] === 'Player') ?? [undefined, undefined])[1]}\n                canAct={canAct} />\n            </Col>\n          </Row>\n          <Row className=\"mt-2 g-2\">\n            {enemies.map((enemy, idx) => (\n              <Col key={idx} xs={6} md={4}>\n                <EnemyCard\n                  key={idx}\n                  enemy={enemy}\n                  canAct={canAct}\n                  latestAttack={Seq(lastAttacks).filter(([target, _]) => target === idx).map(v => v[1]).first()}\n                  isSelected={idx === target}\n                  onSelect={() => setSelected(idx as MonsterTarget)}\n                />\n              </Col>\n            ))}\n          </Row>\n          <Row>\n            <Button onClick={(_) => undo()}>Undo ↩</Button>\n            {redo && (<Button onClick={(_) => redo()}>Redo ↪</Button>)}\n            <Button onClick={(_) => solveGame(100)}>Solve ⌛</Button>\n            <Button onClick={(_) => solveGame(1000)}>Solve thoroughly ⌛⌛⌛</Button>\n          </Row>\n        </Col>\n      </Row>\n    </Container>\n  );\n};\n\nexport default Game;\n","import { useEffect, useCallback, useState } from \"react\";\n\nexport default function usePressedKeys(onUp: (e: string) => void): Set<string> {\n\n  const [pressedKeys, updatePressedKeys] = useState(new Set<string>());\n\n  const downHandler = ({ key }: { key: string }) => {\n    updatePressedKeys((set) => new Set([...set, key]));\n  }\n\n  const upHandler = useCallback(({ key }: { key: string }) => {\n    updatePressedKeys((set) => new Set([...set].filter((k) => k !== key)));\n    onUp(key);\n  }, [onUp]);\n\n  useEffect(() => {\n    window.addEventListener(\"keydown\", downHandler);\n    window.addEventListener(\"keyup\", upHandler);\n\n    return () => {\n      window.removeEventListener(\"keydown\", downHandler);\n      window.removeEventListener(\"keyup\", upHandler);\n    };\n  }, [upHandler]);\n\n  return pressedKeys;\n}","import React from \"react\";\nimport { Container, Row, Form, Button, ButtonGroup, Navbar } from \"react-bootstrap\";\nimport useScroll from \"../hooks/useScroll\";\n\nimport { Player } from \"../types\";\nimport { build, randomName } from \"../utils/data\";\n\nconst randomAge = () => Math.floor((Math.random() * 50) + 16);\n\nconst selects = Object.entries(build).map(([type, options]) => ({\n  type,\n  options: options.map(({ display }, value) => ({\n    display,\n    value,\n  })),\n}));\n\nconst PlayerBuilder = ({ onSave }: { onSave: (player: Player) => void }) => {\n  const [form, setForm] = React.useState<Record<string, number>>(\n    selects.reduce(\n      (acc, { type, options }) => ({\n        ...acc,\n        [type]: options[0].value,\n      }),\n      {},\n    ),\n  );\n  const [lore, setLore] = React.useState({\n    name: randomName(),\n    age: randomAge(),\n  });\n  const setField = (field: string, value: number) => {\n    setForm({\n      ...form,\n      [field]: value,\n    });\n  };\n  const onFormSubmit = (e: any) => {\n    e.preventDefault();\n    onSave({\n      id: \"p-1\",\n      lore,\n      stats: {\n        hp: 25,\n        stamina: 8,\n        staminaPerTurn: 2,\n      },\n      build: Object.entries(form).reduce((acc, [type, value]) => {\n        return {\n          ...acc,\n          [type]: build[type][value]\n        }\n      }, { basic: build.basic[0] }),\n    });\n  };\n  const displayType = (type: string) => <b>{build[type][form[type]].display}</b>;\n  return (\n    <Form onSubmit={onFormSubmit}>\n      <Container fluid style={{ marginBottom: '105px' }}>\n        <Row className=\"g-2\">\n          {selects.map(({ type, options }) =>\n            <ElementPicker\n              setField={(value) => setField(type, value)}\n              section={type}\n              options={options}\n              key={type}\n              isSelected={(value) => form[type] === value} />\n          )}\n        </Row>\n        <Navbar fixed=\"bottom\" bg=\"dark\" variant=\"dark\" style={{ maxHeight: '100px' }}>\n          <Container>\n            <Navbar.Text>You are <i onClick={() => setLore((lore) => ({ ...lore, name: randomName() }))}>{lore.name}</i>, the {displayType('skill')} {displayType('class')} {displayType('charm')}<br />who wields a {displayType('weapon')} and a {displayType('offhand')}<br />and wears {displayType('armor')} with {displayType('headgear')} and {displayType('footwear')}</Navbar.Text>\n            <Button type=\"submit\">Pick your foe!</Button>\n          </Container>\n        </ Navbar>\n      </Container >\n    </Form >\n  );\n};\n\nconst ElementPicker = ({ isSelected, section, options, setField }: {\n  options: {\n    display: string;\n    value: number;\n  }[], isSelected: (value: number) => boolean, setField: (value: number) => void, section: string\n}) => {\n  const [scrollTo, scrollRef] = useScroll({\n    behavior: 'smooth',\n    block: 'start',\n  });\n\n  return (\n    <Row>\n      <Form.Label>{section}</Form.Label>\n      <br />\n      <ButtonGroup size=\"lg\" className=\"mb-2\">\n        {options.map(({ display, value }) => (\n          <Button\n            key={value}\n            name={section}\n            id={`${value}`}\n            variant={isSelected(value) ? 'primary' : 'secondary'}\n            onClick={() => { setField(value); scrollTo(); }}\n          >{display}</Button>\n        ))}\n      </ButtonGroup>\n      <div id={`${section}-scroll`} ref={scrollRef} />\n    </Row>\n  );\n}\n\nexport default PlayerBuilder;\n","import { Ref, useRef } from \"react\";\n\ntype ScrollToFn = () => void;\n\nexport default function useScroll<T extends Element>(scrollParams: ScrollIntoViewOptions): [ScrollToFn, Ref<any>] {\n  const elRef = useRef<T>(null);\n  const executeScroll = () => elRef.current!.scrollIntoView(scrollParams);\n\n  return [executeScroll, elRef];\n};\n","import React from \"react\";\nimport { Container, ButtonGroup, Form, Button, Navbar } from \"react-bootstrap\";\n\nimport { Player, Enemies, Enemy } from \"../types\";\nimport { enemies } from \"../utils/data\";\n\nconst EncounterBuilder = ({ player, onSave }: { player: Player, onSave: (enemies: Enemies) => void }) => {\n  const [encounter, setEncounter] = React.useState<Enemy[]>([]);\n  const onFormSubmit = (e: any) => {\n    e.preventDefault();\n    // Size enforced by UI\n    onSave([...encounter] as Enemies);\n  };\n  const displayType = (type: string) => <b>{player.build[type].display}</b>;\n  return (\n    <Form onSubmit={onFormSubmit}>\n      <Container fluid style={{ marginBottom: encounter.length > 0 ? '205px' : '105px' }}>\n        <ButtonGroup size=\"lg\" className=\"mb-2\">\n          {enemies.map((enemy) =>\n            <Button\n              key={enemy.lore.name}\n              onClick={() => encounter.length < 5 ? setEncounter((e) => [...e, enemy]) : void 0}\n            >{enemy.lore.name}</Button>\n          )}\n        </ButtonGroup>\n      </Container >\n      {encounter.length > 0 &&\n        <Navbar fixed=\"bottom\" bg=\"dark\" variant=\"dark\" style={{ marginBottom: '100px' }}>\n          <Container fluid>\n            <ButtonGroup size=\"sm\" className=\"mb-2\">\n              {encounter.map((enemy, idx) => <Button key={`${enemy.lore.name}-${idx}`} onClick={() => setEncounter((e) => { let found = false; return e.filter((m) => (found || m.lore.name !== enemy.lore.name) || !(found = true)); })}>{enemy.lore.name}</Button>)}\n            </ButtonGroup>\n          </Container>\n        </ Navbar>}\n      <Navbar fixed=\"bottom\" bg=\"dark\" variant=\"dark\" style={{ maxHeight: '100px' }}>\n        <Container>\n          <Navbar.Text>You are <i>{player.lore.name}</i>, the {displayType('skill')} {displayType('class')} {displayType('charm')}<br />who wields a {displayType('weapon')} and a {displayType('offhand')}<br />and wears {displayType('armor')} with {displayType('headgear')} and {displayType('footwear')}</Navbar.Text>\n          <Button type=\"submit\" disabled={encounter.length < 1}>To Battle!</Button>\n        </Container>\n      </ Navbar>\n    </Form >\n  );\n};\n\nexport default EncounterBuilder;\n","export default function geneticAlgorithmConstructor(options) {\n\n    function settingDefaults() {\n        return {\n\n            mutationFunction: function (phenotype) { return phenotype },\n\n            crossoverFunction: function (a, b) { return [a, b] },\n\n            fitnessFunction: function (phenotype) { return 0 },\n\n            doesABeatBFunction: undefined,\n\n            population: [],\n            populationSize: 100,\n        }\n    }\n\n    function settingWithDefaults(settings, defaults) {\n        settings = settings || {}\n\n        settings.mutationFunction = settings.mutationFunction || defaults.mutationFunction\n        settings.crossoverFunction = settings.crossoverFunction || defaults.crossoverFunction\n        settings.fitnessFunction = settings.fitnessFunction || defaults.fitnessFunction\n\n        settings.doesABeatBFunction = settings.doesABeatBFunction || defaults.doesABeatBFunction\n\n        settings.population = settings.population || defaults.population\n        if (settings.population.length <= 0) throw Error(\"population must be an array and contain at least 1 phenotypes\")\n\n        settings.populationSize = settings.populationSize || defaults.populationSize\n        if (settings.populationSize <= 0) throw Error(\"populationSize must be greater than 0\")\n\n        return settings\n    }\n\n    var settings = settingWithDefaults(options, settingDefaults())\n\n    function populate() {\n        var size = settings.population.length\n        while (settings.population.length < settings.populationSize) {\n            const rand = Math.floor(Math.random() * size);\n            settings.population.push(\n                mutate(\n                    cloneJSON(settings.population[Math.floor(rand)])\n                )\n            )\n        }\n    }\n\n    function cloneJSON(object) {\n        return JSON.parse(JSON.stringify(object))\n    }\n\n    function mutate(phenotype) {\n        return settings.mutationFunction(cloneJSON(phenotype))\n    }\n\n    function crossover(phenotype) {\n        phenotype = cloneJSON(phenotype)\n        var mate = settings.population[Math.floor(Math.random() * settings.population.length)]\n        mate = cloneJSON(mate)\n        return settings.crossoverFunction(phenotype, mate)[0]\n    }\n\n    function doesABeatB(a, b) {\n        if (settings.doesABeatBFunction) {\n            return settings.doesABeatBFunction(a, b)\n        } else {\n            return settings.fitnessFunction(a) >= settings.fitnessFunction(b)\n        }\n    }\n\n    function compete() {\n        var nextGeneration = []\n\n        for (var p = 0; p < settings.population.length - 1; p += 2) {\n            var phenotype = settings.population[p];\n            var competitor = settings.population[p + 1];\n\n            nextGeneration.push(phenotype)\n            if (doesABeatB(phenotype, competitor)) {\n                if (Math.random() < 0.5) {\n                    nextGeneration.push(mutate(phenotype))\n                } else {\n                    nextGeneration.push(crossover(phenotype))\n                }\n            } else {\n                nextGeneration.push(competitor)\n            }\n        }\n\n        settings.population = nextGeneration;\n    }\n\n\n\n    function randomizePopulationOrder() {\n\n        for (var index = 0; index < settings.population.length; index++) {\n            var otherIndex = Math.floor(Math.random() * settings.population.length)\n            var temp = settings.population[otherIndex]\n            settings.population[otherIndex] = settings.population[index]\n            settings.population[index] = temp\n        }\n    }\n\n    return {\n        evolve: function (options) {\n\n            if (options) {\n                settings = settingWithDefaults(options, settings)\n            }\n\n            populate()\n            randomizePopulationOrder()\n            compete()\n            return this\n        },\n        best: function () {\n            var scored = this.scoredPopulation()\n            var result = scored.reduce(function (a, b) {\n                return a.score >= b.score ? a : b\n            }, scored[0]).phenotype\n            return cloneJSON(result)\n        },\n        bestScore: function () {\n            return settings.fitnessFunction(this.best())\n        },\n        population: function () {\n            return cloneJSON(this.config().population)\n        },\n        scoredPopulation: function () {\n            return this.population().map(function (phenotype) {\n                return {\n                    phenotype: cloneJSON(phenotype),\n                    score: settings.fitnessFunction(phenotype)\n                }\n            })\n        },\n        config: function () {\n            return cloneJSON(settings)\n        },\n        clone: function (options) {\n            return geneticAlgorithmConstructor(\n                settingWithDefaults(options,\n                    settingWithDefaults(this.config(), settings)\n                )\n            )\n        }\n    }\n}\n","import GeneticAlgorithmConstructor, { GeneticAlgorithmConfig, ScoredPhenotype } from '../geneticalgorithm/geneticalgorithm';\nimport { handlePlayerEffect, Play, playerActions, turnDeterministicRng, setSelected } from '../playGame';\nimport Chance from 'chance';\nimport { MonsterTarget } from '../types';\nimport { previousState } from '../utils/data';\nimport prettyjson from 'prettyjson';\nimport { Seq } from 'immutable';\n\nexport type TinkererOptions = typeof defaultTinkererOptions;\n\nexport const defaultTinkererOptions = {\n  playerSeed: \"Miau\",\n  turns: 50,\n  weights: { monster: 0.8, player: 0.15, turn: 0.05 },\n  debug: false,\n  randPerTurn: 10\n};\n\nexport const gameRender = (results: ScoredPhenotype<Play>[]): string => {\n  const best: ScoredPhenotype<Play> = Seq(results).maxBy(a => a.score)!!;\n  const lastState = previousState(best.phenotype);\n  return `BEST BY ${best.score} in ${best.phenotype.states.length - 1} turns\\n` +\n    prettyjson.render([\n      lastState.lastAttacks.flatMap(([target, id]) => [target === 'Player' ? 'Player' : `[${target}] ${lastState.enemies[target]!!.lore.name}`, id]),\n      lastState.enemies.flatMap((a, idx) => [`[${idx}] ${a.lore.name}`, a.stats]),\n      lastState.player.stats\n    ]);\n}\n\nexport default function tinkerer(play: Play, iter: number, monsterSeed: any, options_?: TinkererOptions): ScoredPhenotype<Play>[] {\n  const options = { ...defaultTinkererOptions, ...options_ };\n  const range = [...Array(iter).keys()];\n  const rand = new Chance(options.playerSeed);\n  const config: GeneticAlgorithmConfig<Play> = {\n    mutationFunction: (oldPlay) => {\n      const latestState = previousState(oldPlay);\n      const monsterHealth = latestState.enemies.reduce((acc, monster) => acc + monster.stats.hp, 0);\n      const playerHealth = latestState.player.stats.hp;\n      if (playerHealth === 0 || monsterHealth === 0) {\n        return oldPlay;\n      }\n      let newPlay = oldPlay;\n      if (rand.d6() === 6) {\n        newPlay = setSelected(newPlay, rand.natural({ min: 0, max: previousState(newPlay).enemies.length - 1 }) as MonsterTarget);\n      }\n      const latest = previousState(newPlay);\n      const actions = playerActions(latest.player);\n      const unavailable = actions.map((a, idx) => [a, idx] as const).filter(([a, _]) => a.stamina > latest.player.stats.stamina).map(([_, idx]) => idx);\n      newPlay = handlePlayerEffect(\n        newPlay,\n        rand.natural({ min: 0, max: actions.length - 1, exclude: unavailable }),\n        turnDeterministicRng(options.turns, options.randPerTurn, monsterSeed)\n      );\n      return newPlay;\n    },\n    fitnessFunction: (play) => {\n      const latestState = previousState(play);\n      const monsterHealth = latestState.enemies.reduce((acc, monster) => acc + monster.stats.hp, 0);\n      const playerHealth = latestState.player.stats.hp;\n      const startPlayerHealth = play.states[0].player.stats.hp;\n      const startMonsterHealth = play.states[0].enemies.reduce((acc, monster) => acc + monster.stats.hp, 0);\n\n      const monsterKillingFitness = ((startMonsterHealth - monsterHealth) / startMonsterHealth);\n      const playerAlivenessFitness = (playerHealth / startPlayerHealth);\n      const killSpeedFitness = (options.turns - play.states.length) / options.turns;\n\n      const fitness = (monsterKillingFitness * options.weights.monster) + (playerAlivenessFitness * options.weights.player) + (killSpeedFitness * options.weights.turn);\n      if (options.debug) {\n        console.log(`MH: ${monsterHealth} | PH: ${playerHealth} | TR: ${play.states.length}\\nFitness: ${fitness} | MF: ${monsterKillingFitness} | PF: ${playerAlivenessFitness} | TF: ${killSpeedFitness}`);\n      }\n      return fitness;\n    },\n    population: range.map((_) => play),\n    populationSize: iter,\n  }\n\n  let gen = new GeneticAlgorithmConstructor<Play>(config);\n  for (let i = 0; i < options.turns; i++) {\n    gen = gen.evolve();\n  }\n  return gen.scoredPopulation();\n}\n","import React from \"react\";\nimport \"./App.css\";\n// import { readString } from \"react-papaparse\";\nimport { Enemies, Player, Snapshot } from \"./types\";\n\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport Game from \"./components/Game\";\nimport PlayerBuilder from \"./components/PlayerBuilder\";\nimport EncounterBuilder from \"./components/EncounterBuilder\";\nimport play, { handlePlayerEffect, Play, turnDeterministicRng, setSelected } from \"./playGame\";\nimport tinkerer, { defaultTinkererOptions } from \"./tinkerer/tinkerer\";\nimport { Seq } from \"immutable\";\nimport { previousState } from \"./utils/data\";\n\ntype AppStatus = \"buildPlayer\" | \"buildEncounter\" | \"game\" | \"endGame\";\n\nfunction App() {\n  const [status, setStatus] = React.useState<AppStatus>(\"buildPlayer\");\n  const [player, setPlayerBuild] = React.useState<\n    Player | undefined\n  >();\n  const [encounter, setEncounter] = React.useState<Enemies>();\n  const [game, setGame] = React.useState<Play | undefined>();\n  const [redo, setRedo] = React.useState<Snapshot[]>([]);\n\n  const handleSavePlayer = (player: Player) => {\n    setPlayerBuild(player);\n    setStatus(\"buildEncounter\");\n  };\n  const handleSaveEncounter = (encounter: Enemies) => {\n    setEncounter(encounter);\n    setStatus(\"game\");\n  }\n\n  if (!game && player && encounter) {\n    const game = play(player, encounter);\n    setGame(game);\n  }\n\n  return (\n    <div className=\"App\">\n      {status === \"buildPlayer\" ? (\n        <PlayerBuilder onSave={handleSavePlayer} />\n      ) : null}\n      {status === \"buildEncounter\" && player ? (\n        <EncounterBuilder\n          player={player}\n          onSave={handleSaveEncounter}\n        />\n      ) : null}\n      {status === \"game\" && game ? (\n        <Game\n          game={game}\n          redo={redo.length > 0 ? (() => {\n            const newRedo = [...redo];\n            const latest = newRedo.pop() as Snapshot;\n            setRedo(newRedo);\n            setGame({ ...game, states: [...game.states, latest] });\n          }) : undefined}\n          undo={() => {\n            setRedo([...redo, previousState(game)]);\n            setGame({ ...game, states: [game.states[0], ...game.states.slice(1, -1)] });\n          }}\n          setSelected={(idx) => { setRedo([]); setGame(setSelected(game, idx)); }}\n          handlePlayerEffect={(idx) => { setRedo([]); setGame(handlePlayerEffect(game, idx, turnDeterministicRng(50, 10, 'SEED'))); }}\n          solveGame={(iterations) => setGame(Seq(tinkerer(game, iterations, 'SEED', { ...defaultTinkererOptions, turns: 50 - game.states.length })).maxBy(a => a.score)!!.phenotype)}\n        />\n      ) : null}\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://cra.link/PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://cra.link/PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorkerRegistration from './serviceWorkerRegistration';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://cra.link/PWA\nserviceWorkerRegistration.register();\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}