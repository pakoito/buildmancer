{"version":3,"sources":["hooks/useGame.tsx","utils/index.ts","components/Enemy.tsx","components/Player.tsx","components/Game.tsx","hooks/usePressedKeys.tsx","components/PlayerBuilder.tsx","hooks/useScroll.tsx","components/EncounterBuilder.tsx","App.tsx","serviceWorkerRegistration.ts","reportWebVitals.ts","index.tsx"],"names":["gameReducer","state","action","type","player","stats","enemies","map","enemy","id","selectedEnemy","useGame","initialState","React","useReducer","dispatch","updatePlayerStats","updateEnemyStats","setSelectedEnemy","snap","monster","clamp","num","min","max","Math","skills","start","curr","amount","hp","distance","stamina","build","class","display","effects","skill","weapon","effect","priority","offhand","funs","reduce","acc","value","chain","_","consumable","armor","headgear","footwear","charm","randomName","names","floor","random","length","lore","name","rage","rolls","EnemyCard","isSelected","onSelect","Card","bg","undefined","Body","Title","Text","idx","Seq","countBy","e","toArray","k","v","toFixed","Button","disabled","onClick","PlayerCard","selectedButtons","onClickEffect","Subtitle","className","Stack","direction","gap","Object","values","flatMap","a","active","has","Game","props","handlePlayerEffect","newState","filter","playerSkills","s","pressed","onUp","useState","Set","pressedKeys","updatePressedKeys","downHandler","key","set","upHandler","useCallback","useEffect","window","addEventListener","removeEventListener","usePressedKeys","valNum","parseInt","Container","fluid","Row","Col","sm","md","Player","xs","Enemy","selects","entries","options","ElementPicker","section","setField","scrollParams","elRef","useRef","current","scrollIntoView","useScroll","behavior","block","scrollTo","scrollRef","Form","Label","ButtonGroup","size","variant","ref","PlayerBuilder","onSave","form","setForm","age","setLore","displayType","onSubmit","preventDefault","style","marginBottom","field","Navbar","fixed","maxHeight","EncounterBuilder","encounter","setEncounter","found","m","App","status","setStatus","setPlayerBuild","isLocalhost","Boolean","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","onUpdate","onSuccess","catch","error","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById","URL","process","href","origin","fetch","headers","response","contentType","get","indexOf","ready","unregister","reload","checkValidServiceWorker","serviceWorkerRegistration"],"mappings":"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R,OAAcrB,EAAsBC,GAAQ,MAEtFkC,MAAO,CACL,CAAC,EAAG,EAAG,EAAG,EAAG,GACb,CAAC,EAAG,EAAG,EAAG,EAAG,GACb,CAAC,EAAG,EAAG,EAAG,EAAG,GACb,CAAC,EAAG,EAAG,EAAG,EAAG,GACb,CAAC,EAAG,EAAG,EAAG,EAAG,MAKbP,EAAQ,CACZ,QACA,QACA,SACA,MACA,QACA,UACA,QACA,QACA,QACA,UACA,SACA,SACA,QACA,WACA,QACA,QACA,SACA,QACA,SACA,SACA,SACA,SACA,WACA,UACA,UACA,SACA,OACA,QACA,QACA,QACA,MACA,SACA,SACA,OACA,UACA,QACA,UACA,SACA,UACA,QACA,SACA,UACA,UACA,SACA,OACA,QACA,SACA,SACA,WACA,QACA,OACA,UACA,OACA,SACA,SACA,QACA,UACA,SACA,SACA,OACA,QACA,QACA,SACA,QACA,QACA,SACA,SACA,OACA,OACA,SACA,QACA,QACA,UACA,SACA,QACA,UACA,UACA,UACA,WACA,QACA,WACA,QACA,SACA,SACA,OACA,SACA,SACA,QACA,OACA,WACA,SACA,QACA,UACA,SACA,WACA,UACA,SACA,SACA,SACA,QACA,QACA,OACA,OACA,QACA,QACA,WACA,QACA,UACA,SACA,WACA,QACA,OACA,OACA,OACA,SACA,WACA,OACA,OACA,QACA,MACA,SACA,OACA,WACA,QACA,UACA,SACA,MACA,UACA,QACA,SACA,QACA,SACA,QACA,QACA,SACA,QACA,UACA,QACA,QACA,SACA,SACA,OACA,QACA,SACA,SACA,UACA,QACA,QACA,QACA,OACA,QACA,OACA,QACA,UACA,SACA,QACA,QACA,QACA,QACA,SACA,UACA,WACA,QACA,QACA,QACA,UACA,SACA,QACA,SACA,UACA,SACA,QACA,QACA,SACA,QACA,OACA,UACA,QACA,SACA,UACA,SACA,MACA,QACA,OACA,MACA,QACA,YACA,OACA,QACA,QACA,SACA,QACA,QACA,UACA,QACA,SACA,UACA,U,+BCrYaQ,EAfV,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","file":"static/js/main.422cc548.chunk.js","sourcesContent":["import React from \"react\";\nimport { Player, Enemy } from \"../types\";\n\ntype UpdatePlayerStatsAction = {\n  type: \"updatePlayerStats\";\n  stats: Player[\"stats\"];\n};\n\ntype UpdateEnemyStatsAction = {\n  type: \"updateEnemyStats\";\n  id: Enemy[\"id\"];\n  stats: Enemy[\"stats\"];\n};\n\ntype SetSelectedEnemy = {\n  type: \"setSelectedEnemy\";\n  id: Enemy[\"id\"];\n};\n\ntype Action =\n  | UpdatePlayerStatsAction\n  | UpdateEnemyStatsAction\n  | SetSelectedEnemy;\n\nexport type GameState = {\n  player: Player;\n  enemies: Enemy[];\n  selectedEnemy: Enemy[\"id\"];\n};\n\nfunction gameReducer(state: GameState, action: Action) {\n  switch (action.type) {\n    case \"updatePlayerStats\":\n      return {\n        ...state,\n        player: {\n          ...state.player,\n          stats: action.stats,\n        },\n      };\n    case \"updateEnemyStats\":\n      return {\n        ...state,\n        enemies: state.enemies.map((enemy) => {\n          if (enemy.id === action.id) {\n            return {\n              ...enemy,\n              stats: action.stats,\n            };\n          }\n          return enemy;\n        }),\n      };\n    case \"setSelectedEnemy\":\n      return {\n        ...state,\n        selectedEnemy: action.id,\n      };\n    default:\n      return state;\n  }\n}\n\nfunction useGame(initialState: GameState) {\n  const [state, dispatch] = React.useReducer(gameReducer, initialState);\n\n  const updatePlayerStats = (stats: Player[\"stats\"]) => {\n    dispatch({\n      type: \"updatePlayerStats\",\n      stats,\n    });\n  };\n  const updateEnemyStats = (id: Enemy[\"id\"], stats: Enemy[\"stats\"]) => {\n    dispatch({\n      type: \"updateEnemyStats\",\n      id,\n      stats,\n    });\n  };\n\n  const setSelectedEnemy = (id: Enemy[\"id\"]) => {\n    dispatch({\n      type: \"setSelectedEnemy\",\n      id,\n    });\n  };\n  return {\n    ...state,\n    updatePlayerStats,\n    updateEnemyStats,\n    setSelectedEnemy,\n  };\n}\n\nexport default useGame;\n","import { EnemyStats, PlayerStats, EffectFun, Snapshot, Effect, Enemy } from \"../types\";\n\nexport const snap = (player: PlayerStats, monster: EnemyStats) => ({\n  player,\n  monster,\n});\n\nexport const chain = (...funs: Array<EffectFun>): EffectFun =>\n  funs.reduce((acc, value) => (start, curr) => acc(start, value(start, curr)));\n\nexport const clamp = (num: number, min: number, max: number) =>\n  Math.min(Math.max(num, min), max);\n\nexport const skills = {\n  attackMonster: (start: Snapshot, curr: Snapshot, amount: number): Snapshot =>\n    snap(curr.player, {\n      ...curr.monster,\n      hp: clamp(curr.monster.hp - amount, 0, start.monster.hp),\n    }),\n  changeDistance: (curr: Snapshot, amount: number): Snapshot =>\n    snap(curr.player, {\n      ...curr.monster,\n      distance: clamp(curr.monster.distance + amount, 1, 5),\n    }),\n\n  attackPlayer: (start: Snapshot, curr: Snapshot, amount: number): Snapshot =>\n    snap(\n      {\n        ...curr.player,\n        hp: clamp(curr.player.hp - amount, 0, start.player.hp),\n      },\n      curr.monster,\n    ),\n  reducePlayerStamina: (\n    start: Snapshot,\n    curr: Snapshot,\n    amount: number,\n  ): Snapshot =>\n    snap(\n      {\n        ...curr.player,\n        stamina: clamp(curr.player.stamina - amount, 0, start.player.stamina),\n      },\n      curr.monster,\n    ),\n};\n\nexport const build: Record<\n  string,\n  {\n    display: string;\n    effects: Effect[];\n    [key: string]: any;\n  }[]\n> = {\n  class: [\n    {\n      display: \"Warrior\",\n      effects: [],\n    },\n    {\n      display: \"Mage\",\n      effects: [],\n    },\n    {\n      display: \"Rogue\",\n      effects: [],\n    },\n  ],\n  skill: [\n    {\n      display: \"Sturdy\",\n      effects: [],\n    },\n    {\n      display: \"Nimble\",\n      effects: [],\n    },\n  ],\n  weapon: [\n    {\n      display: \"Axe\",\n      effects: [\n        {\n          display: \"Chop\",\n          effect: (start, curr) => skills.attackMonster(start, curr, 3),\n          priority: 2,\n        },\n        {\n          display: \"Cut\",\n          effect: (start, curr) => skills.attackMonster(start, curr, 3),\n          priority: 3,\n        },\n      ],\n    },\n  ],\n  offhand: [\n    {\n      display: \"Hook\",\n      effects: [\n        {\n          display: \"Get over here!\",\n          effect: chain(\n            (start, curr) => skills.attackMonster(start, curr, 3),\n            (start, curr) => skills.reducePlayerStamina(start, curr, 2),\n            (_, curr) => skills.changeDistance(curr, -1),\n          ),\n          priority: 4,\n        },\n      ],\n    },\n  ],\n  consumable: [\n    {\n      display: \"Potion\",\n      effects: [],\n    },\n  ],\n  armor: [\n    {\n      display: \"Heavy\",\n      effects: [],\n    },\n  ],\n  headgear: [\n    {\n      display: \"Helm\",\n      effects: [],\n    },\n  ],\n  footwear: [\n    {\n      display: \"Boots\",\n      effects: [],\n    },\n  ],\n  charm: [\n    {\n      display: \"of Health\",\n      effects: [],\n    },\n  ],\n};\n\nexport const randomName = () => names[Math.floor(Math.random() * names.length)];\n\nexport const enemies: Enemy[] = [\n  {\n    id: \"m-1\",\n    lore: {\n      name: \"Sacapuntas\",\n    },\n    stats: {\n      hp: 25,\n      rage: 0,\n      distance: 5,\n    },\n    rolls: [\n      [0, 1, 2, 1, 0],\n      [0, 1, 0, 0, 0],\n      [0, 0, 0, 0, 0],\n      [0, 0, 0, 0, 0],\n      [0, 1, 2, 1, 0, 0],\n    ],\n    effects: [\n      { display: \"Swipe\", priority: 3, effect: (start, curr) => skills.attackPlayer(start, curr, 2) },\n      { display: \"Roar\", priority: 1, effect: (start, curr) => skills.reducePlayerStamina(start, curr, 5) },\n      { display: \"Jump\", priority: 2, effect: (start, _) => skills.changeDistance(start, -2) },\n    ],\n  },\n  {\n    id: \"m-2\",\n    lore: {\n      name: \"Cacahue\",\n    },\n    stats: {\n      hp: 30,\n      rage: 0,\n      distance: 5,\n    },\n    effects: [\n      { display: \"Swipe\", priority: 3, effect: (start, curr) => skills.attackPlayer(start, curr, 2) },\n      { display: \"Roar\", priority: 1, effect: (start, curr) => skills.reducePlayerStamina(start, curr, 5) },\n      { display: \"Jump\", priority: 2, effect: (start, _) => skills.changeDistance(start, -2) },\n    ],\n    rolls: [\n      [0, 0, 0, 1, 0],\n      [0, 0, 0, 0, 0],\n      [0, 0, 0, 0, 0],\n      [0, 0, 0, 0, 0],\n      [0, 0, 2, 0, 0],\n    ]\n  },\n  {\n    id: \"m-3\",\n    lore: {\n      name: \"Toro\",\n    },\n    stats: {\n      hp: 22,\n      rage: 0,\n      distance: 5,\n    },\n    effects: [\n      { display: \"Swipe\", priority: 3, effect: (start, curr) => skills.attackPlayer(start, curr, 2) },\n      { display: \"Roar\", priority: 1, effect: (start, curr) => skills.reducePlayerStamina(start, curr, 5) },\n      { display: \"Jump\", priority: 2, effect: (start, _) => skills.changeDistance(start, -2) },\n    ],\n    rolls: [\n      [0, 0, 0, 1, 0],\n      [0, 0, 0, 0, 0],\n      [0, 0, 0, 0, 0],\n      [0, 0, 0, 0, 0],\n      [0, 0, 2, 0, 0],\n    ]\n  },\n];\n\nconst names = [\n  \"Lydan\",\n  \"Syrin\",\n  \"Ptorik\",\n  \"Joz\",\n  \"Varog\",\n  \"Gethrod\",\n  \"Hezra\",\n  \"Feron\",\n  \"Ophni\",\n  \"Colborn\",\n  \"Fintis\",\n  \"Gatlin\",\n  \"Jinto\",\n  \"Hagalbar\",\n  \"Krinn\",\n  \"Lenox\",\n  \"Revvyn\",\n  \"Hodus\",\n  \"Dimian\",\n  \"Paskel\",\n  \"Kontas\",\n  \"Weston\",\n  \"Azamarr \",\n  \"Jather \",\n  \"Tekren \",\n  \"Jareth\",\n  \"Adon\",\n  \"Zaden\",\n  \"Eune \",\n  \"Graff\",\n  \"Tez\",\n  \"Jessop\",\n  \"Gunnar\",\n  \"Pike\",\n  \"Domnhar\",\n  \"Baske\",\n  \"Jerrick\",\n  \"Mavrek\",\n  \"Riordan\",\n  \"Wulfe\",\n  \"Straus\",\n  \"Tyvrik \",\n  \"Henndar\",\n  \"Favroe\",\n  \"Whit\",\n  \"Jaris\",\n  \"Renham\",\n  \"Kagran\",\n  \"Lassrin \",\n  \"Vadim\",\n  \"Arlo\",\n  \"Quintis\",\n  \"Vale\",\n  \"Caelan\",\n  \"Yorjan\",\n  \"Khron\",\n  \"Ishmael\",\n  \"Jakrin\",\n  \"Fangar\",\n  \"Roux\",\n  \"Baxar\",\n  \"Hawke\",\n  \"Gatlen\",\n  \"Barak\",\n  \"Nazim\",\n  \"Kadric\",\n  \"Paquin\",\n  \"Kent\",\n  \"Moki\",\n  \"Rankar\",\n  \"Lothe\",\n  \"Ryven\",\n  \"Clawsen\",\n  \"Pakker\",\n  \"Embre\",\n  \"Cassian\",\n  \"Verssek\",\n  \"Dagfinn\",\n  \"Ebraheim\",\n  \"Nesso\",\n  \"Eldermar\",\n  \"Rivik\",\n  \"Rourke\",\n  \"Barton\",\n  \"Hemm\",\n  \"Sarkin\",\n  \"Blaiz \",\n  \"Talon\",\n  \"Agro\",\n  \"Zagaroth\",\n  \"Turrek\",\n  \"Esdel\",\n  \"Lustros\",\n  \"Zenner\",\n  \"Baashar \",\n  \"Dagrod \",\n  \"Gentar\",\n  \"Feston\",\n  \"Syrana\",\n  \"Resha\",\n  \"Varin\",\n  \"Wren\",\n  \"Yuni\",\n  \"Talis\",\n  \"Kessa\",\n  \"Magaltie\",\n  \"Aeris\",\n  \"Desmina\",\n  \"Krynna\",\n  \"Asralyn \",\n  \"Herra\",\n  \"Pret\",\n  \"Kory\",\n  \"Afia\",\n  \"Tessel\",\n  \"Rhiannon\",\n  \"Zara\",\n  \"Jesi\",\n  \"Belen\",\n  \"Rei\",\n  \"Ciscra\",\n  \"Temy\",\n  \"Renalee \",\n  \"Estyn\",\n  \"Maarika\",\n  \"Lynorr\",\n  \"Tiv\",\n  \"Annihya\",\n  \"Semet\",\n  \"Tamrin\",\n  \"Antia\",\n  \"Reslyn\",\n  \"Basak\",\n  \"Vixra\",\n  \"Pekka \",\n  \"Xavia\",\n  \"Beatha \",\n  \"Yarri\",\n  \"Liris\",\n  \"Sonali\",\n  \"Razra \",\n  \"Soko\",\n  \"Maeve\",\n  \"Everen\",\n  \"Yelina\",\n  \"Morwena\",\n  \"Hagar\",\n  \"Palra\",\n  \"Elysa\",\n  \"Sage\",\n  \"Ketra\",\n  \"Lynx\",\n  \"Agama\",\n  \"Thesra \",\n  \"Tezani\",\n  \"Ralia\",\n  \"Esmee\",\n  \"Heron\",\n  \"Naima\",\n  \"Rydna \",\n  \"Sparrow\",\n  \"Baakshi \",\n  \"Ibera\",\n  \"Phlox\",\n  \"Dessa\",\n  \"Braithe\",\n  \"Taewen\",\n  \"Larke\",\n  \"Silene\",\n  \"Phressa\",\n  \"Esther\",\n  \"Anika\",\n  \"Rasy \",\n  \"Harper\",\n  \"Indie\",\n  \"Vita\",\n  \"Drusila\",\n  \"Minha\",\n  \"Surane\",\n  \"Lassona\",\n  \"Merula\",\n  \"Kye\",\n  \"Jonna\",\n  \"Lyla\",\n  \"Zet\",\n  \"Orett\",\n  \"Naphtalia\",\n  \"Turi\",\n  \"Rhays\",\n  \"Shike\",\n  \"Hartie\",\n  \"Beela\",\n  \"Leska\",\n  \"Vemery \",\n  \"Lunex\",\n  \"Fidess\",\n  \"Tisette\",\n  \"Partha\",\n]","import React from \"react\";\nimport { Card, Button } from \"react-bootstrap\";\nimport { Enemy, Effect } from \"../types\";\nimport { Seq } from \"immutable\";\n\nconst skillPercents = (effects: Effect[]) =>\n  Seq(effects).countBy((e) => e.display).toArray().map(([k, v]) => <Card.Text>[{(v / effects.length * 100).toFixed(2)}%] {k}</Card.Text>);\n\nconst EnemyCard: React.FC<{\n  enemy: Enemy;\n  isSelected?: boolean;\n  onSelect: () => void;\n}> = ({ enemy, isSelected, onSelect }) => (\n  <Card bg={isSelected ? \"info\" : undefined}>\n    <Card.Body>\n      <Card.Title>{enemy.lore.name}</Card.Title>\n      <Card.Text>\n        {enemy.lore.name}. Has {enemy.stats.hp} HP and is at distance{\" \"}\n        {enemy.stats.distance}\n      </Card.Text>\n      <Card.Text>Next attack prediction:</Card.Text>\n      {skillPercents(enemy.rolls[enemy.stats.distance - 1].map((idx) => enemy.effects[idx]))}\n      <Button disabled={isSelected} onClick={onSelect}>Select</Button>\n    </Card.Body>\n  </Card>\n);\n\nexport default EnemyCard;\n","import React from \"react\";\nimport { Card, Button, Stack } from \"react-bootstrap\";\nimport { Player, EffectFun } from \"../types\";\n\nconst PlayerCard: React.FC<{\n  selectedButtons: Set<string>,\n  player: Player;\n  onClickEffect: (effect: EffectFun) => void;\n}> = ({ selectedButtons, player, onClickEffect }) => (\n  <Card>\n    <Card.Body>\n      <Card.Title>{player.lore.name}</Card.Title>\n      <Card.Subtitle className=\"mb-2 text-muted\">\n        {player.build.class.display}\n      </Card.Subtitle>\n      <Card.Text>Has {player.stats.hp} HP</Card.Text>\n    </Card.Body>\n    <Card.Body>\n      <Stack direction=\"horizontal\" gap={2}>\n        {Object.values(player.build)\n        .flatMap((a) => a.effects)\n        .map((e, idx) => (\n          <Button\n            key={e.display}\n            active={selectedButtons.has(e.display)}\n            onClick={(_) => {\n              onClickEffect(e.effect);\n            }}\n          >\n           [{idx + 1}] {e.display}\n          </Button>\n        ))}\n      </Stack>\n    </Card.Body>\n  </Card>\n);\n\nexport default PlayerCard;\n","import { Container, Row, Col } from \"react-bootstrap\";\n\nimport { Player, Enemy, EffectFun } from \"../types\";\n\nimport useGame from \"../hooks/useGame\";\nimport { snap } from \"../utils\";\n\nimport EnemyCard from \"./Enemy\";\nimport PlayerCard from \"./Player\";\nimport usePressedKeys from \"../hooks/usePressedKeys\";\n\nconst Game = (props: { player: Player; enemies: Enemy[] }): JSX.Element => {\n  const {\n    player,\n    enemies,\n    selectedEnemy,\n    updatePlayerStats,\n    updateEnemyStats,\n    setSelectedEnemy,\n  } = useGame({\n    player: props.player,\n    enemies: props.enemies,\n    selectedEnemy: props.enemies[0].id,\n  });\n\n  const handlePlayerEffect = (effect: EffectFun) => {\n    const newState = effect(\n      snap(\n        props.player.stats,\n        props.enemies.filter((enemy) => enemy.id === selectedEnemy)[0].stats,\n      ),\n      snap(\n        player.stats,\n        enemies.filter((enemy) => enemy.id === selectedEnemy)[0].stats,\n      ),\n    );\n    updatePlayerStats(newState.player);\n    updateEnemyStats(selectedEnemy, newState.monster);\n  };\n\n  const playerSkills = Object.values(player.build).flatMap((s) => s.effects);\n\n  const pressed = usePressedKeys((key) => {\n    const valNum = parseInt(key);\n    if (valNum > 0 && valNum <= playerSkills.length) {\n      handlePlayerEffect(playerSkills[valNum - 1].effect);\n    }\n  });\n\n  const selectedButtons = new Set<string>([...pressed].flatMap((key: string) => {\n    const valNum = parseInt(key);\n    if (valNum > 0 && valNum <= playerSkills.length) {\n      return [playerSkills[valNum - 1].display];\n    } else {\n      return [];\n    }\n  }));\n\n  return (\n    <Container fluid>\n      <Row className=\"justify-content-center align-items-flex-start\">\n        <Col sm={12} md={8}>\n          <Row>\n            <Col>\n              <PlayerCard player={player} onClickEffect={handlePlayerEffect} selectedButtons={selectedButtons} />\n            </Col>\n          </Row>\n          <Row className=\"mt-2 g-2\">\n            {enemies.map((enemy) => (\n              <Col key={enemy.id} xs={6} md={4}>\n                <EnemyCard\n                  enemy={enemy}\n                  isSelected={enemy.id === selectedEnemy}\n                  onSelect={() => {\n                    setSelectedEnemy(enemy.id);\n                  }}\n                />\n              </Col>\n            ))}\n          </Row>\n        </Col>\n      </Row>\n    </Container>\n  );\n};\n\nexport default Game;\n","import { useEffect, useCallback, useState } from \"react\";\n\nexport default function usePressedKeys(onUp: (e: string) => void): Set<string> {\n\n  const [pressedKeys, updatePressedKeys] = useState(new Set<string>());\n\n  const downHandler = ({ key }: { key: string }) => {\n    updatePressedKeys((set) => new Set([...set, key]));\n  }\n\n  const upHandler = useCallback(({ key }: { key: string }) => {\n    updatePressedKeys((set) => new Set([...set].filter((k) => k !== key)));\n    onUp(key);\n  }, [onUp]);\n\n  useEffect(() => {\n    window.addEventListener(\"keydown\", downHandler);\n    window.addEventListener(\"keyup\", upHandler);\n\n    return () => {\n      window.removeEventListener(\"keydown\", downHandler);\n      window.removeEventListener(\"keyup\", upHandler);\n    };\n  }, [upHandler]);\n\n  return pressedKeys;\n}","import React from \"react\";\nimport { Container, Row, Form, Button, ButtonGroup, Navbar } from \"react-bootstrap\";\nimport useScroll from \"../hooks/useScroll\";\n\nimport { Player } from \"../types\";\nimport { build, randomName } from \"../utils\";\n\nconst randomAge = () => Math.floor((Math.random() * 50) + 16);\n\nconst selects = Object.entries(build).map(([type, options]) => ({\n  type,\n  options: options.map(({ display }, value) => ({\n    display,\n    value,\n  })),\n}));\n\nconst PlayerBuilder = ({ onSave }: { onSave: (player: Player) => void }) => {\n  const [form, setForm] = React.useState<Record<string, number>>(\n    selects.reduce(\n      (acc, { type, options }) => ({\n        ...acc,\n        [type]: options[0].value,\n      }),\n      {},\n    ),\n  );\n  const [lore, setLore] = React.useState({\n    name: randomName(),\n    age: randomAge(),\n  });\n  const setField = (field: string, value: number) => {\n    setForm({\n      ...form,\n      [field]: value,\n    });\n  };\n  const onFormSubmit = (e: any) => {\n    e.preventDefault();\n    onSave({\n      id: \"p-1\",\n      lore,\n      stats: {\n        hp: 10,\n        stamina: 8,\n      },\n      build: Object.entries(form).reduce((acc, [type, value]) => {\n        return {\n          ...acc,\n          [type]: build[type][value]\n        }\n      }, {}),\n    });\n  };\n  const displayType = (type: string) => <b>{build[type][form[type]].display}</b>;\n  return (\n    <Form onSubmit={onFormSubmit}>\n      <Container fluid style={{ marginBottom: '105px' }}>\n        <Row className=\"g-2\">\n          {selects.map(({ type, options }) =>\n            <ElementPicker\n              setField={(value) => setField(type, value)}\n              section={type}\n              options={options}\n              isSelected={(value) => form[type] === value} />\n          )}\n        </Row>\n        <Navbar fixed=\"bottom\" bg=\"dark\" variant=\"dark\" style={{ maxHeight: '100px' }}>\n          <Container>\n            <Navbar.Text>You are <i onClick={() => setLore((lore) => ({ ...lore, name: randomName() }))}>{lore.name}</i>, the {displayType('skill')} {displayType('class')} {displayType('charm')}<br />who wields a {displayType('weapon')} and a {displayType('offhand')}<br />and wears {displayType('armor')} with {displayType('headgear')} and {displayType('footwear')}</Navbar.Text>\n            <Button type=\"submit\">Pick your foe!</Button>\n          </Container>\n        </ Navbar>\n      </Container >\n    </Form >\n  );\n};\n\nconst ElementPicker = ({ isSelected, section, options, setField }: {\n  options: {\n    display: string;\n    value: number;\n  }[], isSelected: (value: number) => boolean, setField: (value: number) => void, section: string\n}) => {\n  const [scrollTo, scrollRef] = useScroll({\n    behavior: 'smooth',\n    block: 'start',\n  });\n\n  return (\n    <Row>\n      <Form.Label>{section}</Form.Label>\n      <br />\n      <ButtonGroup size=\"lg\" className=\"mb-2\">\n        {options.map(({ display, value }) => (\n          <Button\n            key={value}\n            name={section}\n            id={`${value}`}\n            variant={isSelected(value) ? 'primary' : 'secondary'}\n            onClick={() => { setField(value); scrollTo(); }}\n          >{display}</Button>\n        ))}\n      </ButtonGroup>\n      <div id={`${section}-scroll`} ref={scrollRef} />\n    </Row>\n  );\n}\n\nexport default PlayerBuilder;\n","import { Ref, useRef } from \"react\";\n\ntype ScrollToFn = () => void;\n\nexport default function useScroll<T extends Element>(scrollParams: ScrollIntoViewOptions): [ScrollToFn, Ref<any>] {\n  const elRef = useRef<T>(null);\n  const executeScroll = () => elRef.current!.scrollIntoView(scrollParams);\n\n  return [executeScroll, elRef];\n};","import React from \"react\";\nimport { Container, ButtonGroup, Form, Button, Navbar } from \"react-bootstrap\";\n\nimport { Player, Enemies, Enemy } from \"../types\";\nimport { enemies } from \"../utils\";\n\nconst EncounterBuilder = ({ player, onSave }: { player: Player, onSave: (enemies: Enemies) => void }) => {\n  const [encounter, setEncounter] = React.useState<Enemy[]>([]);\n  const onFormSubmit = (e: any) => {\n    e.preventDefault();\n    // Size enforced by UI\n    onSave([...encounter] as Enemies);\n  };\n  const displayType = (type: string) => <b>{player.build[type].display}</b>;\n  return (\n    <Form onSubmit={onFormSubmit}>\n      <Container fluid style={{ marginBottom: encounter.length > 0 ? '205px' : '105px' }}>\n        <ButtonGroup size=\"lg\" className=\"mb-2\">\n          {enemies.map((enemy) =>\n            <Button\n              key={enemy.lore.name}\n              onClick={() => encounter.length < 5 ? setEncounter((e) => [...e, enemy]) : void 0}\n            >{enemy.lore.name}</Button>\n          )}\n        </ButtonGroup>\n      </Container >\n      {encounter.length > 0 &&\n        <Navbar fixed=\"bottom\" bg=\"dark\" variant=\"dark\" style={{ marginBottom: '100px' }}>\n          <Container fluid>\n            <ButtonGroup size=\"sm\" className=\"mb-2\">\n              {encounter.map((enemy, idx) => <Button key={`${enemy.lore.name}-${idx}`} onClick={() => setEncounter((e) => { let found = false; return e.filter((m) => (found || m.lore.name !== enemy.lore.name) || !(found = true)); })}>{enemy.lore.name}</Button>)}\n            </ButtonGroup>\n          </Container>\n        </ Navbar>}\n      <Navbar fixed=\"bottom\" bg=\"dark\" variant=\"dark\" style={{ maxHeight: '100px' }}>\n        <Container>\n          <Navbar.Text>You are <i>{player.lore.name}</i>, the {displayType('skill')} {displayType('class')} {displayType('charm')}<br />who wields a {displayType('weapon')} and a {displayType('offhand')}<br />and wears {displayType('armor')} with {displayType('headgear')} and {displayType('footwear')}</Navbar.Text>\n          <Button type=\"submit\" disabled={encounter.length < 1}>To Battle!</Button>\n        </Container>\n      </ Navbar>\n    </Form >\n  );\n};\n\nexport default EncounterBuilder;\n","import React from \"react\";\nimport \"./App.css\";\n// import { readString } from \"react-papaparse\";\nimport { Enemies, Player } from \"./types\";\n\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport Game from \"./components/Game\";\nimport PlayerBuilder from \"./components/PlayerBuilder\";\nimport EncounterBuilder from \"./components/EncounterBuilder\";\n\n\ntype AppStatus = \"buildPlayer\" | \"buildEncounter\" | \"game\" | \"endGame\";\n\nfunction App() {\n  const [status, setStatus] = React.useState<AppStatus>(\"buildPlayer\");\n  const [player, setPlayerBuild] = React.useState<\n    Player | undefined\n  >();\n\n  const [encounter, setEncounter] = React.useState<Enemies>();\n\n  const handleSavePlayer = (player: Player) => {\n    setPlayerBuild(player);\n    setStatus(\"buildEncounter\");\n  };\n  const handleSaveEncounter = (encounter: Enemies) => {\n    setEncounter(encounter);\n    setStatus(\"game\");\n  }\n  return (\n    <div className=\"App\">\n      {status === \"buildPlayer\" ? (\n        <PlayerBuilder onSave={handleSavePlayer} />\n      ) : null}\n      {status === \"buildEncounter\" && player ? (\n        <EncounterBuilder\n          player={player}\n          onSave={handleSaveEncounter}\n        />\n      ) : null}\n      {status === \"game\" && player && encounter ? (\n        <Game\n          player={player}\n          enemies={encounter}\n        />\n      ) : null}\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://cra.link/PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://cra.link/PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorkerRegistration from './serviceWorkerRegistration';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://cra.link/PWA\nserviceWorkerRegistration.register();\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}