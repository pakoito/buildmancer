{"version":3,"sources":["utils/types.ts","components/Enemy.tsx","components/Player.tsx","utils/playGame.ts","components/Game.tsx","hooks/usePressedKeys.tsx","components/PlayerBuilder.tsx","hooks/useScroll.tsx","components/EncounterBuilder.tsx","geneticalgorithm/geneticalgorithm.js","tinkerer/tinkerer.ts","App.tsx","serviceWorkerRegistration.ts","reportWebVitals.ts","index.tsx","utils/effectRepository.ts","utils/effectFunctions.ts","utils/data.ts"],"names":["effectFunCall","t","Array","isArray","index","parameters","undefined","callEffectFun","repo","p","f","EnemyCard","effects","enemy","enemyStats","isSelected","onSelect","latestAttack","canAct","hotkey","Card","bg","Body","Title","lore","name","hp","current","Text","distance","status","bleed","turns","rolls","map","idx","Seq","countBy","e","display","toArray","v","find","a","range","priority","tooltip","OverlayTrigger","placement","delay","show","hide","overlay","Popover","Header","as","length","join","toFixed","Button","disabled","onClick","toUpperCase","PlayerCard","selectedButtons","player","playerStats","onClickEffect","lastAction","disabledSkills","setDisabledSkills","Subtitle","className","build","class","max","stamina","ButtonGroup","Object","entries","k","bot","eot","ToggleButton","checked","Set","has","value","id","type","variant","onChange","event","currentTarget","delete","add","Stack","direction","gap","values","flatMap","active","_","Math","speed","turnDeterministicRng","randPerTurn","monsterSeed","monsterChance","Chance","keys","floating","min","fixed","playerPassives","s","passive","i","statsRepository","playerActions","reduceFuns","funs","phase","sortBy","origin","priorityBonus","enemies","num","Infinity","clamp","reduce","acc","effect","oldPlay","oldState","target","extractFunction","newPlay","newState","lastAttacks","resetArmor","allRanges","handlePlayerEffect","play","amount","d","usedSkill","previousState","initialState","staminaPerTurn","preBotPlay","preBotState","postBotPlay","postBotState","entitiesBot","eff","postEntitiesBotPlay","postEntitiesBotState","rand","turn","turnRng","rng","floor","pop","states","turnFunctions","zip","stats","effectDead","concat","entitiesEot","playerEotEffects","enemiesEotEffects","postPlayerEotPlay","postPlayerEotState","postEotPlay","postEotState","postCleanup","postCleanupState","setSelected","monsterHotkeys","Game","game","solveGame","undo","redo","hint","enemiesStats","useState","isLogShown","setShowLog","handleCloseLog","playerSkills","monsterHealth","m","isPlayerAlive","areMonstersAlive","endGame","pressed","onUp","pressedKeys","updatePressedKeys","downHandler","key","set","upHandler","useCallback","filter","useEffect","window","addEventListener","removeEventListener","usePressedKeys","valNum","parseInt","save","blob","Blob","JSON","stringify","saveAs","Date","now","Container","fluid","Row","Col","sm","md","Player","xs","Enemy","Modal","onHide","scrollable","centered","closeButton","Footer","selects","options","ElementPicker","section","setField","scrollParams","elRef","useRef","scrollIntoView","useScroll","behavior","block","scrollTo","scrollRef","Form","Label","size","ref","PlayerBuilder","onSave","React","form","setForm","randomName","age","setLore","displayType","onSubmit","preventDefault","basic","makeStat","attack","defence","defaultStatus","style","marginBottom","field","Navbar","maxHeight","EncounterBuilder","encounter","setEncounter","found","randomEnemy","geneticAlgorithmConstructor","settingWithDefaults","settings","defaults","mutationFunction","crossoverFunction","fitnessFunction","doesABeatBFunction","population","Error","populationSize","phenotype","b","cloneJSON","object","parse","mutate","crossover","mate","random","evolve","push","populate","otherIndex","temp","randomizePopulationOrder","nextGeneration","competitor","compete","this","best","scored","scoredPopulation","score","bestScore","config","clone","defaultTinkererOptions","playerSeed","weights","monster","debug","tinkerer","iter","optionsOverride","actions","latestState","d6","natural","latest","unavailable","exclude","playerHealth","playerStamina","startPlayerHealth","startPlayerStamina","startMonsterHealth","monsterKillingFitness","playerAlivenessFitness","killSpeedFitness","staminaFitness","fitness","console","log","gen","GeneticAlgorithmConstructor","App","setStatus","playerBuild","setPlayerBuild","encounterBuild","setGame","setRedo","seed","fun","playerGameStats","enemyGameStats","toIndexableString","encounterStats","newRedo","slice","iterations","maxBy","isLocalhost","Boolean","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","onUpdate","onSuccess","catch","error","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById","URL","process","href","fetch","headers","response","contentType","get","indexOf","ready","unregister","reload","checkValidServiceWorker","serviceWorkerRegistration","effectFun","params","currentState","attackPlayer","attackMonster","lifespan","addEotEffect","_origin","addEnemy","modifyPlayerStamina","startState","changeStatusPlayer","o","armor","changeStatusMonster","changeDistance","dodge","_m","updateMonster","override","updatePlayerStat","curr","modify","damage","afterDefence","afterArmor","armorSpent","afterBleed","updatePlayer","updateStatus","removeMonster","currPlay","currSnap","start","addBotEffect","isNode","isAnyEffectFunParams","includes","effectRepository","assignObject","obj","validators","is","createIs","pickone","makeRange","number","selfRange","skill","weapon","offhand","consumable","headgear","footwear","charm","names"],"mappings":"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AG,EAAG,GACb,CAAC,EAAG,EAAG,EAAG,EAAG,GACb,CAAC,EAAG,EAAG,EAAG,EAAG,GACb,CAAC,EAAG,EAAG,EAAG,EAAG,KAEd,CACDP,GAAIkP,EAAS,IACb/O,SAAU,EACV2E,MAAOoK,EAAS,GAChBC,OAAQD,EAAS,GACjBE,QAASF,EAAS,GAClB9O,OAAQiP,IAEV,CAAC,CACCvP,KAAM,CACJC,KAAM,QAERb,QAAS,CACP,CAAE2B,QAAS,QAASO,QAAS,QAASD,SAAU,EAAGjC,QAAS,CAACZ,YAAc,kBAAmB4C,MAAO+Z,MAEvG1a,MAAO,CACL,CAAC,GACD,CAAC,GACD,CAAC,GACD,CAAC,GACD,CAAC,KAEF,CACDP,GAAIkP,EAAS,KACb/O,SAAU,EACV2E,MAAOoK,EAAS,GAChBC,OAAQD,EAAS,GACjBE,QAASF,EAAS,GAClB9O,OAAQiP,IAGV,CAAC,CACCvP,KAAM,CACJC,KAAM,QAERb,QAAS,CACP,CAAE2B,QAAS,QAASO,QAAS,QAASD,SAAU,EAAGjC,QAAS,CAACZ,YAAc,kBAAmB4C,MAAO+Z,MAEvG1a,MAAO,CACL,CAAC,GACD,CAAC,GACD,CAAC,GACD,CAAC,GACD,CAAC,KAEF,CACDP,GAAIkP,EAAS,GACb/O,SAAU,EACV2E,MAAOoK,EAAS,GAChBC,OAAQD,EAAS,GACjBE,QAASF,EAAS,GAClB9O,OAAQiP,KAINsM,EAAQ,CACZ,QACA,QACA,SACA,MACA,QACA,UACA,QACA,QACA,QACA,UACA,SACA,SACA,QACA,WACA,QACA,QACA,SACA,QACA,SACA,SACA,SACA,SACA,UACA,SACA,SACA,SACA,OACA,QACA,OACA,QACA,MACA,SACA,SACA,OACA,UACA,QACA,UACA,SACA,UACA,QACA,SACA,SACA,UACA,SACA,OACA,QACA,SACA,SACA,UACA,QACA,OACA,UACA,OACA,SACA,SACA,QACA,UACA,SACA,SACA,OACA,QACA,QACA,SACA,QACA,QACA,SACA,SACA,OACA,OACA,SACA,QACA,QACA,UACA,SACA,QACA,UACA,UACA,UACA,WACA,QACA,WACA,QACA,SACA,SACA,OACA,SACA,QACA,QACA,OACA,WACA,SACA,QACA,UACA,SACA,UACA,SACA,SACA,SACA,SACA,QACA,QACA,OACA,OACA,QACA,QACA,WACA,QACA,UACA,SACA,UACA,QACA,OACA,OACA,OACA,SACA,WACA,OACA,OACA,QACA,MACA,SACA,OACA,UACA,QACA,UACA,SACA,MACA,UACA,QACA,SACA,QACA,SACA,QACA,QACA,QACA,QACA,SACA,QACA,QACA,SACA,QACA,OACA,QACA,SACA,SACA,UACA,QACA,QACA,QACA,OACA,QACA,OACA,QACA,SACA,SACA,QACA,QACA,QACA,QACA,QACA,UACA,UACA,QACA,QACA,QACA,UACA,SACA,QACA,SACA,UACA,SACA,QACA,OACA,SACA,QACA,OACA,UACA,QACA,SACA,UACA,SACA,MACA,QACA,OACA,MACA,QACA,YACA,OACA,QACA,QACA,SACA,QACA,QACA,SACA,QACA,SACA,UACA,W","file":"static/js/main.36f8a021.chunk.js","sourcesContent":["import { Opaque } from \"type-fest\";\nimport { EffectFunParams, EffectFunRepo, EffectFunRepoIndex, StatsFunIndex } from \"./effectFunctions\";\n\nexport type Tuple<T, N extends number> = N extends N ? number extends N ? T[] : _TupleOf<T, N, []> : never;\ntype _TupleOf<T, N extends number, R extends unknown[]> = R['length'] extends N ? R : _TupleOf<T, N, [T, ...R]>;\n\nexport type Nel<T> = [T, ...T[]];\n\ntype Length<T extends any[]> =\n  T extends { length: infer L } ? L : never;\ntype BuildTuple<L extends number, T extends any[] = []> =\n  T extends { length: L } ? T : BuildTuple<L, [...T, any]>;\nexport type Subtract<A extends number, B extends number> =\n  BuildTuple<A> extends [...(infer U), ...BuildTuple<B>]\n  ? Length<U>\n  : never;\ntype EQ<A, B> =\n  A extends B\n  ? (B extends A ? true : false)\n  : false;\ntype AtTerminus<A extends number, B extends number> =\n  A extends 0\n  ? true\n  : (B extends 0 ? true : false);\ntype LT<A extends number, B extends number> =\n  AtTerminus<A, B> extends true\n  ? EQ<A, B> extends true\n  ? false\n  : (A extends 0 ? true : false)\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  : LT<Subtract<A, 1>, Subtract<B, 1>>;\n\nexport type TupleUpTo<T, N extends number> =\n  EQ<N, 1> extends true ? [T] : TupleUpTo<T, Subtract<N, 1>> | Tuple<T, N>;\n\nexport type UpTo<N extends number> =\n  EQ<N, 0> extends true ? 0 : UpTo<Subtract<N, 1>> | N;\n\nexport interface Stat {\n  max: number,\n  current: UpTo<Stat['max']>,\n}\n\nexport type Status = { dodge: { active: boolean }, armor: { amount: number }, bleed: { turns: number } };\nexport interface PlayerStats { hp: Stat, stamina: Stat, staminaPerTurn: Stat, speed: Stat, attack: Stat, defence: Stat, status: Status };\nexport interface EnemyStats { hp: Stat, speed: Stat, attack: Stat, defence: Stat, distance: UpTo<Subtract<Distances, 1>>, status: Status };\n\nexport type Priorities = 5;\nexport type Distances = 5;\nexport type MonsterCount = 5;\nexport type Staminas = 5;\n\nexport interface EffectSummary {\n  origin: Target;\n  display: string;\n  phase: string;\n}\n\nexport type DisabledSkills = string[];\nexport interface Snapshot {\n  player: PlayerStats;\n  enemies: EnemiesStats;\n  target: MonsterTarget;\n  lastAttacks: EffectSummary[];\n  bot?: Nel<[Target, Effect]>;\n  eot?: Nel<[Target, Effect]>;\n  disabledSkills: DisabledSkills;\n};\n\nexport type RNG = Opaque<number[][], 'RNG'>;\n\nexport interface Play {\n  states: Nel<Snapshot>;\n  player: Player;\n  enemies: Enemies,\n  rng: RNG;\n  turns: number;\n  id: string;\n  seed: string | number;\n};\n\ntype ItemOrMonster = string /* TODO all items */ | 'Monster';\nexport type FunIndex = `${ItemOrMonster}:${string}`;\n\nexport type StatsFunRepo = { [key in StatsFunIndex]: StatsFun; }\nexport type StatsFun = (player: PlayerStats, enemies: EnemiesStats) => [PlayerStats, EnemiesStats];\n\nexport type Ranges = UpTo<Subtract<Distances, 1>>[];\n\ninterface EffectFunCallT {\n  index: EffectFunRepoIndex;\n  parameters: EffectFunParams<EffectFunRepoIndex>;\n};\nexport type EffectFunCall = Opaque<EffectFunCallT, EffectFunCallT>;\nexport const effectFunCall = <T extends EffectFunRepoIndex>(t: EffectFunParams<T> extends undefined ? T : [T, EffectFunParams<T>]): EffectFunCall =>\n  (Array.isArray(t) ? { index: t[0], parameters: t[1] } : { index: t, parameters: undefined }) as EffectFunCall;\nexport const callEffectFun = <T extends EffectFunRepoIndex>(repo: EffectFunRepo, t: T, p: EffectFunParams<T>) => {\n  const f = repo[t];\n  // @ts-expect-error: index and parameters are enforced to be compatible at construction and the runtime check above ^^^^\n  return f(p);\n}\n\ninterface EffectT {\n  display: string;\n  tooltip: string;\n  effects: Nel<EffectFunCall>;\n  priority: UpTo<Subtract<Priorities, 1>>;\n  range: Ranges;\n};\nexport type Effect = EffectT;\nexport type InventoryEffect = EffectT & {\n  stamina: UpTo<Subtract<Staminas, 1>>;\n};\n\nexport type MonsterTarget = UpTo<Subtract<MonsterCount, 1>>;\nexport type PlayerTarget = 'Player';\nexport type Target = MonsterTarget | PlayerTarget;\n\nexport type Build = Record<\n  string,\n  Item\n>;\n\nexport interface Item {\n  display: string;\n  passive?: StatsFunIndex;\n  bot?: Nel<Effect>;\n  eot?: Nel<Effect>;\n  effects?: Nel<InventoryEffect>;\n  [key: string]: any;\n};\n\nexport interface Player {\n  id: string;\n  lore: Record<string, string | number>;\n  build: Build;\n};\n\n// Place in the array for now\ntype EffectIdentity = number;\nexport interface Enemy {\n  lore: Record<string, string | number>;\n  effects: Nel<Effect>;\n  rolls: Tuple<EffectIdentity[], Distances>;\n  bot?: Nel<Effect>;\n  eot?: Nel<Effect>;\n}\n\nexport type Enemies = TupleUpTo<Enemy, MonsterCount>;\nexport type EnemiesStats = TupleUpTo<EnemyStats, MonsterCount>;\n","import React from \"react\";\nimport { Card, Button, OverlayTrigger, Popover } from \"react-bootstrap\";\nimport { Enemy, Effect, EnemyStats } from \"../utils/types\";\nimport { Seq } from \"immutable\";\n\nconst skillPercents = (effects: Effect[]) =>\n  Seq(effects).countBy((e) => e.display).toArray().map(([display, v], idx) => {\n    const { range, priority, tooltip } = effects.find(a => a.display === display)!!;\n    return <OverlayTrigger\n      key={idx}\n      placement=\"right\"\n      delay={{ show: 100, hide: 250 }}\n      overlay={<Popover>\n        <Popover.Header as=\"h3\">{display}</Popover.Header>\n        <Popover.Body>\n          {tooltip}<br />⏱:{priority}<br />🏹:{range.length === 5 ? 'Any' : range.length === 0 ? 'None' : range.map(a => a + 1).join(\", \")}\n        </Popover.Body>\n      </Popover>}\n    ><div>[{(v / effects.length * 100).toFixed(2)}%] {display}<br key={idx} /></div>\n    </OverlayTrigger>\n  });\n\nconst EnemyCard: React.FC<{\n  enemy: Enemy;\n  enemyStats: EnemyStats;\n  latestAttack: string | undefined;\n  isSelected?: boolean;\n  onSelect: () => void;\n  canAct: boolean;\n  hotkey: string;\n}> = ({ enemy, enemyStats, isSelected, onSelect, latestAttack, canAct, hotkey }) => (\n  <Card bg={isSelected ? \"info\" : undefined}>\n    <Card.Body>\n      <Card.Title>{enemy.lore.name} {enemyStats.hp.current > 0 ? \"\" : (<b>💀DEAD💀</b>)}</Card.Title>\n      <Card.Text>❤:{enemyStats.hp.current} 🏹:{enemyStats.distance + 1}</Card.Text>\n      {enemyStats.status.bleed.turns > 0 && ` ${enemyStats.status.bleed.turns} 🩸`}\n      {latestAttack && (<Card.Text>Latest attack: {latestAttack}</Card.Text>)}\n      <Card.Text>\n        Next attack prediction:\n        <br />\n        {skillPercents(enemy.rolls[enemyStats.distance].map((idx) => enemy.effects[idx]))}\n        <br />\n      </Card.Text>\n      {canAct && (<Button disabled={isSelected} onClick={onSelect}>[<i>{hotkey.toUpperCase()}</i>] Select</Button>)}\n    </Card.Body>\n  </Card>\n);\n\nexport default EnemyCard;\n","import React from \"react\";\nimport { Card, Button, Stack, ToggleButton, ButtonGroup, Popover, OverlayTrigger } from \"react-bootstrap\";\nimport { DisabledSkills, Player, PlayerStats } from \"../utils/types\";\nimport { Set } from 'immutable';\n\nconst PlayerCard: React.FC<{\n  selectedButtons: Set<string>,\n  player: Player;\n  playerStats: PlayerStats;\n  canAct: boolean;\n  lastAction: string | undefined;\n  onClickEffect: (index: number) => void;\n  disabledSkills: DisabledSkills;\n  setDisabledSkills: (skills: DisabledSkills) => void;\n}> = ({ selectedButtons, player, playerStats, onClickEffect, canAct, lastAction, disabledSkills, setDisabledSkills }) => (\n  <Card>\n    <Card.Body>\n      <Card.Title>{player.lore.name}{playerStats.hp.current > 0 ? \"\" : (<b> 💀DEAD💀 </b>)}</Card.Title>\n      <Card.Subtitle className=\"mb-2 text-muted\">\n        {player.build.class.display}\n      </Card.Subtitle>\n      <Card.Text>{playerStats.hp.current}/{playerStats.hp.max} ❤ {playerStats.stamina.current}/{playerStats.stamina.max} 💪</Card.Text>\n      {playerStats.status.bleed.turns > 0 && <Card.Text>` ${playerStats.status.bleed.turns} 🩸`</Card.Text>}\n      {lastAction && (<Card.Text>Last action: {lastAction}</Card.Text>)}\n    </Card.Body>\n    {canAct && (<>\n      <b>Passives</b>\n      <ButtonGroup>\n        {Object.entries(player.build)\n          .map(([k, e]) => [k, e, [...(e.bot ?? []), ...(e.eot ?? [])]] as const)\n          .map(([k, e, passives], idx) => passives.length > 0 && (<OverlayTrigger\n            placement=\"right\"\n            delay={{ show: 100, hide: 250 }}\n            overlay={<Popover>\n              <Popover.Header as=\"h3\">{e.display}</Popover.Header>\n              <Popover.Body>\n                {e.tooltip}\n              </Popover.Body>\n            </Popover>}\n          >\n            <ToggleButton\n              key={idx}\n              checked={!Set(disabledSkills).has(k)}\n              value={k}\n              id={`passive-skill-${k}`}\n              type=\"checkbox\"\n              variant=\"outline-primary\"\n              onChange={(event) => setDisabledSkills(\n                event.currentTarget.checked\n                  ? Set(disabledSkills).delete(k).toArray()\n                  : Set(disabledSkills).add(k).toArray())}>\n              {e.display}\n            </ToggleButton>\n          </OverlayTrigger>\n          ))}\n      </ButtonGroup>\n    </>)}\n    {canAct && (<Card.Body>\n      <Stack direction=\"horizontal\" gap={2}>\n        {Object.values(player.build)\n          .flatMap((a) => a.effects ?? [])\n          .map((e, idx) => (<OverlayTrigger\n            key={e.display}\n            placement=\"top\"\n            delay={{ show: 100, hide: 250 }}\n            overlay={<Popover>\n              <Popover.Header as=\"h3\">{e.display}</Popover.Header>\n              <Popover.Body>\n                {e.tooltip}\n              </Popover.Body>\n            </Popover>}\n          >\n            <div>\n              <Button\n                active={selectedButtons.has(e.display)}\n                disabled={playerStats.stamina.current < e.stamina}\n                onClick={(_) => onClickEffect(idx)}\n              >\n                [<i>{idx + 1}</i>] <b>{e.display}</b>\n              </Button>\n              <br />\n              <Card.Text>💪:{e.stamina} ⏱:{Math.max(e.priority + playerStats.speed.current)}<br />🏹:{e.range.length === 5 ? 'Any' : e.range.map(a => a + 1).join(\", \")}</Card.Text>\n            </div>\n          </OverlayTrigger>\n          ))}\n      </Stack>\n    </Card.Body>)}\n  </Card>\n);\n\nexport default PlayerCard;\n","import { Enemies, Player, Snapshot, MonsterTarget, Target, InventoryEffect, EnemiesStats, PlayerStats, Play, RNG, StatsFun, Effect, PlayerTarget, effectFunCall, DisabledSkills, EnemyStats } from \"./types\";\nimport { Seq, Set } from \"immutable\";\nimport { allRanges, effectDead, previousState } from \"./data\";\nimport { Chance } from \"chance\";\n// @ts-ignore fails on scripts despite having a d.ts file\nimport { toIndexableString } from 'pouchdb-collate';\nimport { extractFunction } from \"./effectFunctions\";\nimport { statsRepository } from \"./effectRepository\";\n\n/**\n * @returns min inclusive, max exclusive rand\n */\nfunction turnDeterministicRng(turns: number, randPerTurn: number, monsterSeed: string | number): RNG {\n  const monsterChance = new Chance(monsterSeed);\n  const monsterRng =\n    [...Array(turns).keys()]\n      .map(_ => [...Array(randPerTurn).keys()]\n        .map(_ => monsterChance.floating({ min: 0, max: 1, fixed: 2 })));\n  return monsterRng as RNG;\n}\n\nexport const turnRng = (play: Play, turn: number): ((min: number, max: number) => number) => {\n  const turnRng = [...play.rng[turn]];\n  return (min: number, max: number) => Math.floor(((max - min) * turnRng.pop()!!) + min);\n}\n\nexport const playerPassives = (player: Player): StatsFun[] =>\n  Object.values(player.build).flatMap((s) => s.passive ?? []).map(i => statsRepository[i]);\n\nexport const playerActions = (player: Player): InventoryEffect[] =>\n  Object.values(player.build).flatMap((s) => s.effects ?? []);\n\nconst enemiesBotEffects = (enemies: Enemies): [MonsterTarget, Effect][] =>\n  enemies.flatMap((e, idx) => (e.bot ?? []).map(eff => [idx as MonsterTarget, eff] as const))\n    // Sure, typescript\n    .map(a => [...a])\n\nconst enemiesEotEffects = (enemies: Enemies): [MonsterTarget, Effect][] =>\n  enemies.flatMap((e, idx) => (e.eot ?? []).map(eff => [idx as MonsterTarget, eff] as const))\n    // Sure, typescript\n    .map(a => [...a])\n\nexport const playerBotEffects = (player: Player, d: string[]): [PlayerTarget, Effect][] =>\n  Object.entries(player.build).flatMap(([k, s]) => !Set(d).has(k) ? s.bot ?? [] : []).map(a => ['Player', a]);\n\nexport const playerEotEffects = (player: Player, d: string[]): [PlayerTarget, Effect][] =>\n  Object.entries(player.build).flatMap(([k, s]) => !Set(d).has(k) ? s.eot ?? [] : []).map(a => ['Player', a]);\n\nexport default function start(player: Player, playerStats: PlayerStats, enemies: Enemies, enemiesStats: EnemiesStats, turns: number, seed: number | string, randPerTurn: number = 20): Play {\n  const [playerGameStats, enemyGameStats] = playerPassives(player).reduce(([p, e], fun) => fun(p, e), [playerStats, enemiesStats] as const);\n  return {\n    player,\n    enemies,\n    states: [{\n      player: playerGameStats,\n      enemies: enemyGameStats,\n      target: 0,\n      lastAttacks: [],\n      disabledSkills: []\n    }],\n    rng: turnDeterministicRng(turns, randPerTurn, seed),\n    turns,\n    id: toIndexableString([player, enemies, turns, seed]),\n    seed,\n  };\n}\n\nconst clamp = (num: number, min: number, max: number = Infinity) =>\n  Math.min(Math.max(num, min), max);\n\nconst reduceFuns = (funs: [Target, Effect][], p: Play, s: Snapshot, phase: string): [Play, Snapshot] =>\n  Seq(funs)\n    .sortBy(([origin, a]) => {\n      const priorityBonus = origin === 'Player' ? s.player.speed.current : s.enemies[origin]!!.speed.current;\n      return clamp(a.priority - priorityBonus, 0, 4);\n    })\n    .reduce((acc, value) => {\n      const [origin, effect] = value;\n      const [oldPlay, oldState] = acc;\n      const target = origin === 'Player' ? oldState.target : origin;\n      const isInRange = Set([...effect.range]).has(oldState.enemies[target]?.distance!!);\n      if (isInRange) {\n        const [newPlay, newState] = extractFunction(effect)(origin, oldPlay, oldState);\n        return [newPlay, { ...newState, lastAttacks: [...newState.lastAttacks, { origin, display: effect.display, phase }] }]\n      } else {\n        return [oldPlay, { ...oldState, lastAttacks: [...oldState.lastAttacks, { origin, display: `${effect.display} ❌❌WHIFF❌❌`, phase }] }]\n      }\n    }, [p, s]);\n\nconst applyEffectStamina = (amount: number): Effect =>\n  ({ display: `${amount >= 0 ? '+' : ''}${amount} 💪`, tooltip: `Use ${amount} stamina`, effects: [effectFunCall(['Utility:UseStamina', { amount }])], range: allRanges, priority: 0 });\n\nconst resetArmor: Effect =\n  ({ display: 'Reset Armor', tooltip: 'Reset Armor', effects: [effectFunCall('Utility:ResetArmor')], range: allRanges, priority: 0 });\n\nexport const handlePlayerEffect = (play: Play, index: number): Play => {\n\n  const usedSkill = playerActions(play.player)[index];\n  const bot = previousState(play).bot ?? [];\n  const eot = previousState(play).eot ?? [];\n\n  const initialState: Snapshot = {\n    ...previousState(play),\n    lastAttacks: [],\n    bot: undefined, eot: undefined,\n  };\n\n  // Stamina\n  const [preBotPlay, preBotState] =\n    reduceFuns([['Player', applyEffectStamina(previousState(play).player.staminaPerTurn.current - usedSkill.stamina)]], play, initialState, 'STAMINA');\n\n  // BOT\n  // Lingering effects\n  const [postBotPlay, postBotState] = reduceFuns(bot, preBotPlay, preBotState, 'BOT');\n  // Player & Monster effects\n  const entitiesBot: [Target, Effect][] = [...playerBotEffects(postBotPlay.player, postBotState.disabledSkills), ...enemiesBotEffects(postBotPlay.enemies)];\n  const [postEntitiesBotPlay, postEntitiesBotState] = reduceFuns(entitiesBot, postBotPlay, postBotState, 'BOT');\n\n  // Turn\n  const rand = turnRng(postEntitiesBotPlay, postEntitiesBotPlay.states.length);\n  const turnFunctions: [Target, Effect][] = Seq(postEntitiesBotPlay.enemies).zip(Seq(postEntitiesBotState.enemies))\n    .map(([e, stats], idx) =>\n      [idx as Target,\n      stats.hp.current > 0\n        ? e.effects[e.rolls[stats.distance][rand(0, e.rolls[stats.distance].length)]]\n        : effectDead] as const)\n    .concat([['Player' as Target, usedSkill] as const])\n    .toArray()\n    // Sure, typescript\n    .map(a => [...a]);\n\n  const [newPlay, newState] =\n    reduceFuns(turnFunctions, postEntitiesBotPlay, postEntitiesBotState, 'MAIN');\n\n  // EOT\n  // Player & Monster effects\n  const entitiesEot = [...playerEotEffects(newPlay.player, newState.disabledSkills), ...enemiesEotEffects(newPlay.enemies)];\n  const [postPlayerEotPlay, postPlayerEotState] = reduceFuns(entitiesEot, newPlay, newState, 'EOT');\n  // Lingering effects\n  const [postEotPlay, postEotState] = reduceFuns(eot, postPlayerEotPlay, postPlayerEotState, 'EOT');\n  // Cleanup\n  const [postCleanup, postCleanupState] = reduceFuns([['Player' as Target, resetArmor]], postEotPlay, postEotState, 'EOT');\n\n  return {\n    ...postCleanup,\n    states: [...postCleanup.states, postCleanupState],\n  };\n};\n\nexport const setSelected = (play: Play, target: MonsterTarget): Play => {\n  play.states[play.states.length - 1].target = target;\n  return {\n    ...play,\n    states: [...play.states],\n  };\n}\n\nexport const setDisabledSkills = (play: Play, disabled: DisabledSkills): Play => {\n  play.states[play.states.length - 1].disabledSkills = disabled;\n  return {\n    ...play,\n    states: [...play.states],\n  };\n}\n","import { Container, Row, Col, Card, Modal, ButtonGroup } from \"react-bootstrap\";\n\nimport { DisabledSkills, MonsterTarget, Play } from \"../utils/types\";\n\nimport EnemyCard from \"./Enemy\";\nimport PlayerCard from \"./Player\";\nimport usePressedKeys from \"../hooks/usePressedKeys\";\nimport { playerActions } from \"../utils/playGame\";\nimport { Seq, Set } from \"immutable\";\nimport { previousState } from \"../utils/data\";\nimport { Button } from \"react-bootstrap\";\nimport saveAs from 'file-saver';\nimport { useCallback, useState } from \"react\";\n\nexport type GameProps = {\n  game: Play;\n  setSelected: (target: MonsterTarget) => void;\n  setDisabledSkills: (disabled: DisabledSkills) => void;\n  handlePlayerEffect: (index: number) => void,\n  solveGame: (iterations: number) => void,\n  hint: (iterations: number) => void,\n  undo: () => void\n  redo: (() => void) | undefined;\n};\n\nconst monsterHotkeys = [\"q\", \"w\", \"e\", \"r\", \"t\", \"y\"];\n\nconst Game = ({ handlePlayerEffect, setSelected, setDisabledSkills, game, solveGame, undo, redo, hint }: GameProps): JSX.Element => {\n  const { player, enemies } = game;\n  const { player: playerStats, enemies: enemiesStats, target, lastAttacks, disabledSkills } = previousState(game);\n  const [isLogShown, setShowLog] = useState(false);\n\n  const handleCloseLog = () => setShowLog(false);\n  const handleShowLog = () => setShowLog(true);\n\n  const playerSkills = playerActions(player);\n  const monsterHealth = enemiesStats.reduce((acc, m) => m.hp.current + acc, 0);\n  const isPlayerAlive = playerStats.hp.current > 0;\n  const areMonstersAlive = monsterHealth > 0;\n  const endGame = game.states.length <= game.turns;\n  const canAct = isPlayerAlive && areMonstersAlive && endGame;\n\n  const pressed = usePressedKeys((key) => {\n    if (!canAct) return;\n    const valNum = parseInt(key);\n    if (valNum > 0 && valNum <= playerSkills.length) {\n      const hasStamina = playerSkills[valNum - 1].stamina <= playerStats.stamina.current;\n      if (!hasStamina) return;\n      handlePlayerEffect(valNum - 1);\n    }\n    if (key === \"h\") {\n      hint(100);\n    }\n\n    if (key === \"l\") {\n      setShowLog(!isLogShown);\n    }\n\n    if (key === \"s\") {\n      save();\n    }\n\n    if (key === \"a\" && game.states.length > 1) {\n      undo();\n    }\n    if (key === \"d\" && redo != null) {\n      redo();\n    }\n\n    if (key === monsterHotkeys[0] && enemies.length > 0) {\n      setSelected(0 as MonsterTarget);\n    }\n    if (key === monsterHotkeys[1] && enemies.length > 1) {\n      setSelected(1 as MonsterTarget);\n    }\n    if (key === monsterHotkeys[2] && enemies.length > 2) {\n      setSelected(2 as MonsterTarget);\n    }\n    if (key === monsterHotkeys[3] && enemies.length > 3) {\n      setSelected(3 as MonsterTarget);\n    }\n    if (key === monsterHotkeys[4] && enemies.length > 4) {\n      setSelected(4 as MonsterTarget);\n    }\n  });\n\n  const selectedButtons = Set<string>([...pressed].flatMap((key: string) => {\n    const valNum = parseInt(key);\n    if (valNum > 0 && valNum <= playerSkills.length) {\n      return [playerSkills[valNum - 1].display];\n    } else {\n      return [];\n    }\n  }));\n\n  const save = useCallback(() => {\n    const blob = new Blob([JSON.stringify(game)], { type: \"application/json;charset=utf-8\" });\n    saveAs(blob, `buildmancer-${Date.now()}.json`);\n  }, [game]);\n\n  return (\n    <>\n      <Container fluid>\n        <Row className=\"justify-content-center align-items-flex-start\">\n          <Col sm={12} md={8}>\n            <Card.Title>\n              Turn {game.states.length} out of {game.turns} {!isPlayerAlive ? (<b>❌❌DEFEAT❌❌</b>) : !areMonstersAlive ? (<b>🎉🎉VICTORY🎉🎉</b>) : \"\"}\n            </Card.Title>\n            <PlayerCard\n              player={player}\n              playerStats={playerStats}\n              disabledSkills={disabledSkills}\n              setDisabledSkills={setDisabledSkills}\n              onClickEffect={(idx) => handlePlayerEffect(idx)}\n              selectedButtons={selectedButtons}\n              lastAction={lastAttacks.filter(a => a.origin === 'Player').map(a => `[${a.phase}] ${a.display}`).join(\" -> \") ?? undefined}\n              canAct={canAct} />\n            <Row>\n              <ButtonGroup>\n                {game.states.length > 1 && (<Button onClick={(_) => undo()}>[<i>A</i>] Undo ↩</Button>)}\n                {redo && (<Button onClick={(_) => redo()}>[<i>D</i>] Redo ↪</Button>)}\n              </ButtonGroup>\n            </Row>\n            <Row>\n              <ButtonGroup>\n                <Button onClick={(_) => hint(100)}><i>[H]</i> Hint</Button>\n              </ButtonGroup>\n            </Row>\n            <Row>\n              {Seq(enemies).zip(Seq(enemiesStats)).map(([enemy, stats], idx) => (\n                <Col key={idx} xs={6} md={4}>\n                  <EnemyCard\n                    key={idx}\n                    enemyStats={stats}\n                    enemy={enemy}\n                    canAct={canAct}\n                    latestAttack={Seq(lastAttacks).filter(({ origin }) => origin === idx).map(a => `[${a.phase}] ${a.display}`).join(\" -> \") ?? undefined}\n                    isSelected={idx === target}\n                    onSelect={() => setSelected(idx as MonsterTarget)}\n                    hotkey={monsterHotkeys[idx]}\n                  />\n                </Col>\n              ))}\n            </Row>\n            <Card.Title>\n              Debug\n            </Card.Title>\n            <Row>\n              <ButtonGroup>\n                <Button onClick={handleShowLog}>[<i>L</i>] Log 🗒</Button>\n                <Button onClick={save}>[<i>S</i>] Dump to file 📂</Button>\n              </ButtonGroup>\n            </Row>\n            <Card.Title>\n              Cheats\n            </Card.Title>\n            <Row>\n              <ButtonGroup>\n                <Button onClick={(_) => solveGame(100)}>Solve ⌛</Button>\n                <Button onClick={(_) => solveGame(1000)}>Solve thoroughly ⌛⌛⌛</Button>\n              </ButtonGroup>\n            </Row>\n          </Col>\n        </Row>\n      </Container>\n      <Modal show={isLogShown} onHide={handleCloseLog} scrollable={true} centered={true}>\n        <Modal.Header closeButton>\n          <Modal.Title>Game Log</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          {game.states.map((s, idx) => (\n            <>\n              <b>Turn {idx}</b><br />\n              Player: {JSON.stringify(s.player, null, 2)}<br />\n              Enemies: {JSON.stringify(s.enemies, null, 2)}<br />\n              Target [{s.target}]<br />\n              Eot? Bot?: {JSON.stringify({ bot: s.bot, eot: s.eot }, null, 2)}<br />\n              Actions:<br />\n              {s.lastAttacks.map(a => (<>  {JSON.stringify(a, null, 2)}<br /></>))}\n            </>\n          ))}\n        </Modal.Body>\n        <Modal.Footer>\n          <Button variant=\"primary\" onClick={handleCloseLog}>\n            Close\n          </Button>\n        </Modal.Footer>\n      </Modal>\n    </>\n  );\n};\n\nexport default Game;\n","import { useEffect, useCallback, useState } from \"react\";\n\nexport default function usePressedKeys(onUp: (e: string) => void): Set<string> {\n\n  const [pressedKeys, updatePressedKeys] = useState(new Set<string>());\n\n  const downHandler = ({ key }: { key: string }) => {\n    updatePressedKeys((set) => new Set([...set, key]));\n  }\n\n  const upHandler = useCallback(({ key }: { key: string }) => {\n    updatePressedKeys((set) => new Set([...set].filter((k) => k !== key)));\n    onUp(key);\n  }, [onUp]);\n\n  useEffect(() => {\n    window.addEventListener(\"keydown\", downHandler);\n    window.addEventListener(\"keyup\", upHandler);\n\n    return () => {\n      window.removeEventListener(\"keydown\", downHandler);\n      window.removeEventListener(\"keyup\", upHandler);\n    };\n  }, [upHandler]);\n\n  return pressedKeys;\n}","import React from \"react\";\nimport { Container, Row, Form, Button, ButtonGroup, Navbar } from \"react-bootstrap\";\nimport useScroll from \"../hooks/useScroll\";\n\nimport { Player, PlayerStats } from \"../utils/types\";\nimport { build, defaultStatus, makeStat, randomName } from \"../utils/data\";\nimport Chance from 'chance';\n\nconst version = 'dev';\n\nconst selects = Object.entries(build).map(([type, options]) => ({\n  type,\n  options: options.map(({ display }, value) => ({\n    display,\n    value,\n  })),\n}));\n\nconst PlayerBuilder = ({ onSave }: { onSave: (player: Player, playerStats: PlayerStats) => void }) => {\n  const [form, setForm] = React.useState<Record<string, number>>(\n    selects.reduce(\n      (acc, { type, options }) => ({\n        ...acc,\n        [type]: options[0].value,\n      }),\n      {},\n    ),\n  );\n  const [lore, setLore] = React.useState({\n    name: randomName(),\n    age: new Chance().age(),\n  });\n  const setField = (field: string, value: number) => {\n    setForm({\n      ...form,\n      [field]: value,\n    });\n  };\n  const onFormSubmit = (e: any) => {\n    e.preventDefault();\n    onSave({\n      id: \"p-1\",\n      lore,\n      build: Object.entries(form).reduce((acc, [type, value]) => {\n        return {\n          ...acc,\n          [type]: build[type][value]\n        }\n      }, { basic: build.basic[0] }),\n    }, {\n      hp: makeStat(25),\n      stamina: makeStat(6),\n      staminaPerTurn: makeStat(1),\n      speed: makeStat(0),\n      attack: makeStat(0),\n      defence: makeStat(0),\n      status: defaultStatus,\n    });\n  };\n  const displayType = (type: string) => <b>{build[type][form[type]].display}</b>;\n  return (\n    <Form onSubmit={onFormSubmit}>\n      Build: {version}\n      <Container fluid style={{ marginBottom: '105px' }}>\n        <Row className=\"g-2\">\n          {selects.map(({ type, options }) =>\n            <ElementPicker\n              setField={(value) => setField(type, value)}\n              section={type}\n              options={options}\n              key={type}\n              isSelected={(value) => form[type] === value} />\n          )}\n        </Row>\n        <Navbar fixed=\"bottom\" bg=\"dark\" variant=\"dark\" style={{ maxHeight: '100px' }}>\n          <Container>\n            <Navbar.Text>You are <i onClick={() => setLore((lore) => ({ ...lore, name: randomName() }))}>{lore.name}</i>, the {displayType('skill')} {displayType('class')} {displayType('charm')}<br />who wields a {displayType('weapon')} and a {displayType('offhand')}<br />and wears {displayType('armor')} with {displayType('headgear')} and {displayType('footwear')}</Navbar.Text>\n            <Button type=\"submit\">Pick your foe!</Button>\n          </Container>\n        </ Navbar>\n      </Container >\n    </Form >\n  );\n};\n\nconst ElementPicker = ({ isSelected, section, options, setField }: {\n  options: {\n    display: string;\n    value: number;\n  }[], isSelected: (value: number) => boolean, setField: (value: number) => void, section: string\n}) => {\n  const [scrollTo, scrollRef] = useScroll({\n    behavior: 'smooth',\n    block: 'start',\n  });\n\n  return (\n    <Row>\n      <Form.Label>{section}</Form.Label>\n      <br />\n      <ButtonGroup size=\"lg\" className=\"mb-2\">\n        {options.map(({ display, value }) => (\n          <Button\n            key={value}\n            name={section}\n            id={`${value}`}\n            variant={isSelected(value) ? 'primary' : 'secondary'}\n            onClick={() => { setField(value); scrollTo(); }}\n          >{display}</Button>\n        ))}\n      </ButtonGroup>\n      <div id={`${section}-scroll`} ref={scrollRef} />\n    </Row>\n  );\n}\n\nexport default PlayerBuilder;\n","import { Ref, useRef } from \"react\";\n\ntype ScrollToFn = () => void;\n\nexport default function useScroll<T extends Element>(scrollParams: ScrollIntoViewOptions): [ScrollToFn, Ref<any>] {\n  const elRef = useRef<T>(null);\n  const executeScroll = () => elRef.current!.scrollIntoView(scrollParams);\n\n  return [executeScroll, elRef];\n};\n","import React from \"react\";\nimport { Container, ButtonGroup, Form, Button, Navbar } from \"react-bootstrap\";\n\nimport { Player, Enemies, Enemy, EnemiesStats, EnemyStats } from \"../utils/types\";\nimport { enemies, randomEnemy } from \"../utils/data\";\n\nconst EncounterBuilder = ({ player, onSave }: { player: Player, onSave: (enemies: Enemies, enemiesStats: EnemiesStats) => void }) => {\n  const [encounter, setEncounter] = React.useState<[Enemy, EnemyStats][]>([]);\n  const onFormSubmit = (e: any) => {\n    e.preventDefault();\n    const enemies = encounter.map(a => a[0]);\n    const enemiesStats = encounter.map(a => a[1]);\n    // Size enforced by UI\n    onSave(enemies as Enemies, enemiesStats as EnemiesStats);\n  };\n  const displayType = (type: string) => <b>{player.build[type].display}</b>;\n  return (\n    <Form onSubmit={onFormSubmit}>\n      <Container fluid style={{ marginBottom: encounter.length > 0 ? '205px' : '105px' }}>\n        <ButtonGroup size=\"lg\" className=\"mb-2\">\n          {enemies.map((enemy) =>\n            <Button\n              key={enemy[0].lore.name}\n              disabled={encounter.length > 4}\n              onClick={() => setEncounter((e) => [...e, enemy])}\n            >{enemy[0].lore.name}</Button>\n          )}\n        </ButtonGroup>\n      </Container >\n      {\n        encounter.length > 0 &&\n        <Navbar fixed=\"bottom\" bg=\"dark\" variant=\"dark\" style={{ marginBottom: '100px' }}>\n          <Container fluid>\n            <ButtonGroup size=\"sm\" className=\"mb-2\">\n              {encounter.map((enemy, idx) => <Button key={`${enemy[0].lore.name}-${idx}`} onClick={() => setEncounter((e) => { let found = false; return e.filter((m) => (found || m[0].lore.name !== enemy[0].lore.name) || !(found = true)); })}>{enemy[0].lore.name}</Button>)}\n            </ButtonGroup>\n          </Container>\n        </ Navbar>\n      }\n      <Navbar fixed=\"bottom\" bg=\"dark\" variant=\"dark\" style={{ maxHeight: '100px' }}>\n        <Container>\n          <Navbar.Text>You are <i>{player.lore.name}</i>, the {displayType('skill')} {displayType('class')} {displayType('charm')}<br />who wields a {displayType('weapon')} and a {displayType('offhand')}<br />and wears {displayType('armor')} with {displayType('headgear')} and {displayType('footwear')}</Navbar.Text>\n          <ButtonGroup>\n            <Button\n              disabled={encounter.length < 0 || encounter.length > 5}\n              onClick={(_) => setEncounter((e) => [...e, randomEnemy()])}>\n              Add Random\n            </Button>\n            <Button type=\"submit\" disabled={encounter.length < 1 || encounter.length > 5}>To Battle!</Button>\n          </ButtonGroup>\n        </Container>\n      </ Navbar>\n    </Form >\n  );\n};\n\nexport default EncounterBuilder;\n","export default function geneticAlgorithmConstructor(options) {\n\n    function settingDefaults() {\n        return {\n\n            mutationFunction: function (phenotype) { return phenotype },\n\n            crossoverFunction: function (a, b) { return [a, b] },\n\n            fitnessFunction: function (phenotype) { return 0 },\n\n            doesABeatBFunction: undefined,\n\n            population: [],\n            populationSize: 100,\n        }\n    }\n\n    function settingWithDefaults(settings, defaults) {\n        settings = settings || {}\n\n        settings.mutationFunction = settings.mutationFunction || defaults.mutationFunction\n        settings.crossoverFunction = settings.crossoverFunction || defaults.crossoverFunction\n        settings.fitnessFunction = settings.fitnessFunction || defaults.fitnessFunction\n\n        settings.doesABeatBFunction = settings.doesABeatBFunction || defaults.doesABeatBFunction\n\n        settings.population = settings.population || defaults.population\n        if (settings.population.length <= 0) throw Error(\"population must be an array and contain at least 1 phenotypes\")\n\n        settings.populationSize = settings.populationSize || defaults.populationSize\n        if (settings.populationSize <= 0) throw Error(\"populationSize must be greater than 0\")\n\n        return settings\n    }\n\n    var settings = settingWithDefaults(options, settingDefaults())\n\n    function populate() {\n        var size = settings.population.length\n        while (settings.population.length < settings.populationSize) {\n            const rand = Math.floor(Math.random() * size);\n            settings.population.push(\n                mutate(\n                    cloneJSON(settings.population[Math.floor(rand)])\n                )\n            )\n        }\n    }\n\n    function cloneJSON(object) {\n        return JSON.parse(JSON.stringify(object))\n    }\n\n    function mutate(phenotype) {\n        return settings.mutationFunction(cloneJSON(phenotype))\n    }\n\n    function crossover(phenotype) {\n        phenotype = cloneJSON(phenotype)\n        var mate = settings.population[Math.floor(Math.random() * settings.population.length)]\n        mate = cloneJSON(mate)\n        return settings.crossoverFunction(phenotype, mate)[0]\n    }\n\n    function doesABeatB(a, b) {\n        if (settings.doesABeatBFunction) {\n            return settings.doesABeatBFunction(a, b)\n        } else {\n            return settings.fitnessFunction(a) >= settings.fitnessFunction(b)\n        }\n    }\n\n    function compete() {\n        var nextGeneration = []\n\n        for (var p = 0; p < settings.population.length - 1; p += 2) {\n            var phenotype = settings.population[p];\n            var competitor = settings.population[p + 1];\n\n            nextGeneration.push(phenotype)\n            if (doesABeatB(phenotype, competitor)) {\n                if (Math.random() < 0.5) {\n                    nextGeneration.push(mutate(phenotype))\n                } else {\n                    nextGeneration.push(crossover(phenotype))\n                }\n            } else {\n                nextGeneration.push(competitor)\n            }\n        }\n\n        settings.population = nextGeneration;\n    }\n\n\n\n    function randomizePopulationOrder() {\n\n        for (var index = 0; index < settings.population.length; index++) {\n            var otherIndex = Math.floor(Math.random() * settings.population.length)\n            var temp = settings.population[otherIndex]\n            settings.population[otherIndex] = settings.population[index]\n            settings.population[index] = temp\n        }\n    }\n\n    return {\n        evolve: function (options) {\n\n            if (options) {\n                settings = settingWithDefaults(options, settings)\n            }\n\n            populate()\n            randomizePopulationOrder()\n            compete()\n            return this\n        },\n        best: function () {\n            var scored = this.scoredPopulation()\n            var result = scored.reduce(function (a, b) {\n                return a.score >= b.score ? a : b\n            }, scored[0]).phenotype\n            return cloneJSON(result)\n        },\n        bestScore: function () {\n            return settings.fitnessFunction(this.best())\n        },\n        population: function () {\n            return cloneJSON(this.config().population)\n        },\n        scoredPopulation: function () {\n            return this.population().map(function (phenotype) {\n                return {\n                    phenotype: cloneJSON(phenotype),\n                    score: settings.fitnessFunction(phenotype)\n                }\n            })\n        },\n        config: function () {\n            return cloneJSON(settings)\n        },\n        clone: function (options) {\n            return geneticAlgorithmConstructor(\n                settingWithDefaults(options,\n                    settingWithDefaults(this.config(), settings)\n                )\n            )\n        }\n    }\n}\n","import GeneticAlgorithmConstructor, { GeneticAlgorithmConfig, ScoredPhenotype } from '../geneticalgorithm/geneticalgorithm';\nimport { handlePlayerEffect, playerActions, setSelected } from '../utils/playGame';\nimport Chance from 'chance';\nimport { MonsterTarget, Play } from '../utils/types';\nimport { previousState } from '../utils/data';\nimport prettyjson from 'prettyjson';\nimport { Seq } from 'immutable';\n\nexport type TinkererOptions = typeof defaultTinkererOptions & { turns?: number };\n\nexport const defaultTinkererOptions = {\n  playerSeed: \"Miau\",\n  weights: { monster: 0.70, player: 0.125, turn: 0.1, stamina: 0.075 },\n  debug: false,\n};\n\nexport const gameRender = (results: ScoredPhenotype<Play>[]): string => {\n  const best: ScoredPhenotype<Play> = Seq(results).maxBy(a => a.score)!!;\n  const lastState = previousState(best.phenotype);\n  return `BEST BY ${best.score} in ${best.phenotype.states.length - 1} turns\\n` +\n    prettyjson.render([\n      lastState.lastAttacks.map(({ origin, display, phase }) => [origin === 'Player' ? 'Player' : `${best.phenotype.enemies[origin]!!.lore.name} [${origin}]`, display, phase]),\n      Seq(best.phenotype.enemies).zip(Seq(lastState.enemies)).flatMap(([enemy, stats], idx) => [`[${idx}] ${enemy.lore.name}`, stats]).toArray(),\n      lastState.player,\n    ]);\n}\n\nexport default function tinkerer(play: Play, iter: number, optionsOverride?: Partial<TinkererOptions>): ScoredPhenotype<Play>[] {\n  const options: TinkererOptions = { ...defaultTinkererOptions, ...optionsOverride };\n  const range = [...Array(iter).keys()];\n  const rand = new Chance(options.playerSeed);\n  const actions = playerActions(play.player);\n  const config: GeneticAlgorithmConfig<Play> = {\n    mutationFunction: (oldPlay) => {\n      const latestState = previousState(oldPlay);\n      const monsterHealth = latestState.enemies.reduce((acc, monster) => acc + monster.hp.current, 0);\n      const playerHealth = latestState.player.hp.current;\n      if (playerHealth === 0 || monsterHealth === 0) {\n        return oldPlay;\n      }\n      let newPlay = oldPlay;\n      while (rand.d6() === 6 || (previousState(newPlay).enemies[previousState(newPlay).target]?.hp ?? 0) <= 0) {\n        newPlay = setSelected(newPlay, rand.natural({ min: 0, max: previousState(newPlay).enemies.length - 1 }) as MonsterTarget);\n      }\n      const latest = previousState(newPlay);\n      const unavailable = actions.map((a, idx) => [a, idx] as const).filter(([a, _]) => a.stamina > latest.player.stamina.current).map(([_, idx]) => idx);\n      newPlay = handlePlayerEffect(\n        newPlay,\n        rand.natural({ min: 0, max: actions.length - 1, exclude: unavailable })\n      );\n      return newPlay;\n    },\n    fitnessFunction: (play) => {\n      const latestState = previousState(play);\n      const monsterHealth = latestState.enemies.reduce((acc, monster) => acc + monster.hp.current, 0);\n      const playerHealth = latestState.player.hp.current;\n      const playerStamina = latestState.player.stamina.current;\n      const startPlayerHealth = play.states[0].player.hp.max;\n      const startPlayerStamina = play.states[0].player.stamina.max;\n      const startMonsterHealth = play.states[0].enemies.reduce((acc, monster) => acc + monster.hp.current, 0);\n\n      const monsterKillingFitness = ((startMonsterHealth - monsterHealth) / startMonsterHealth);\n      const playerAlivenessFitness = (playerHealth / startPlayerHealth);\n      const killSpeedFitness = (play.turns - play.states.length) / play.turns;\n      const staminaFitness = (playerStamina / startPlayerStamina);\n\n      const fitness = (monsterKillingFitness * options.weights.monster) + (playerAlivenessFitness * options.weights.player) + (killSpeedFitness * options.weights.turn) + (staminaFitness * options.weights.stamina);\n      if (options.debug) {\n        console.log(`MH: ${monsterHealth} | PH: ${playerHealth} | TR: ${play.states.length}\\nFitness: ${fitness} | MF: ${monsterKillingFitness} | PF: ${playerAlivenessFitness} | SF: ${staminaFitness} | TF: ${killSpeedFitness}\\nWeights: ${JSON.stringify(options.weights)}`);\n      }\n      return fitness;\n    },\n    population: range.map((_) => play),\n    populationSize: iter,\n  }\n\n  const turns = optionsOverride?.turns ? optionsOverride?.turns : play.turns;\n  let gen = new GeneticAlgorithmConstructor<Play>(config);\n  for (let i = 0; i < turns; i++) {\n    gen = gen.evolve();\n  }\n  return gen.scoredPopulation();\n}\n","import React from \"react\";\nimport \"./App.css\";\n// import { readString } from \"react-papaparse\";\nimport { Enemies, EnemiesStats, Player, PlayerStats, Snapshot, Play } from \"./utils/types\";\n\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport Game from \"./components/Game\";\nimport PlayerBuilder from \"./components/PlayerBuilder\";\nimport EncounterBuilder from \"./components/EncounterBuilder\";\nimport play, { handlePlayerEffect, setDisabledSkills, setSelected } from \"./utils/playGame\";\nimport tinkerer from \"./tinkerer/tinkerer\";\nimport { Seq } from \"immutable\";\nimport { previousState } from \"./utils/data\";\n\ntype AppStatus = \"buildPlayer\" | \"buildEncounter\" | \"game\" | \"endGame\";\n\nfunction App() {\n  const [status, setStatus] = React.useState<AppStatus>(\"buildPlayer\");\n  const [playerBuild, setPlayerBuild] = React.useState<\n    [Player, PlayerStats] | undefined\n  >();\n  const [encounterBuild, setEncounter] = React.useState<[Enemies, EnemiesStats]>();\n  const [game, setGame] = React.useState<Play | undefined>();\n  const [redo, setRedo] = React.useState<Snapshot[]>([]);\n\n  const handleSavePlayer = (player: Player, playerStats: PlayerStats) => {\n    setPlayerBuild([player, playerStats]);\n    setStatus(\"buildEncounter\");\n  };\n  const handleSaveEncounter = (encounter: Enemies, encounterStats: EnemiesStats) => {\n    setEncounter([encounter, encounterStats]);\n    setStatus(\"game\");\n  }\n\n  if (!game && playerBuild && encounterBuild) {\n    const [player, playerStats] = playerBuild;\n    const [encounter, encounterStats] = encounterBuild;\n    const game = play(player, playerStats, encounter, encounterStats, 50, 'PACC');\n    setGame(game);\n  }\n\n  return (\n    <div className=\"App\">\n      {status === \"buildPlayer\" ? (\n        <PlayerBuilder onSave={handleSavePlayer} />\n      ) : null}\n      {status === \"buildEncounter\" && playerBuild ? (\n        <EncounterBuilder\n          player={playerBuild[0]}\n          onSave={handleSaveEncounter}\n        />\n      ) : null}\n      {status === \"game\" && game ? (\n        <Game\n          game={game}\n          redo={redo.length > 0 ? (() => {\n            const newRedo = [...redo];\n            const latest = newRedo.pop() as Snapshot;\n            setRedo(newRedo);\n            setGame({ ...game, states: [...game.states, latest] });\n          }) : undefined}\n          undo={() => {\n            setRedo([...redo, previousState(game)]);\n            setGame({ ...game, states: [game.states[0], ...game.states.slice(1, -1)] });\n          }}\n          setSelected={(idx) => { setRedo([]); setGame(setSelected(game, idx)); }}\n          setDisabledSkills={(disabled) => { setRedo([]); setGame(setDisabledSkills(game, disabled)) }}\n          handlePlayerEffect={(idx) => { setRedo([]); setGame(handlePlayerEffect(game, idx)); }}\n          solveGame={(iterations) => setGame(Seq(tinkerer(game, iterations, { turns: game.turns - game.states.length })).maxBy(a => a.score)!!.phenotype)}\n          hint={(iterations) =>\n            setGame({\n              ...game,\n              states: [...game.states, Seq(tinkerer(game, iterations, { turns: game.turns - game.states.length })).maxBy(a => a.score)!!.phenotype.states[game.states.length]]\n            })\n          }\n        />\n      ) : null}\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://cra.link/PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://cra.link/PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorkerRegistration from './serviceWorkerRegistration';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://cra.link/PWA\nserviceWorkerRegistration.register();\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","import { allRanges, enemies, makeStat, startState } from \"./data\";\nimport { EffectFun, ParametrizedFun, ReduceFun } from \"./effectFunctions\";\nimport { Effect, effectFunCall, Enemies, EnemiesStats, Enemy, EnemyStats, MonsterTarget, Nel, Play, PlayerStats, Snapshot, StatsFun, StatsFunRepo, Status, Target } from \"./types\";\n\nexport type EffectFunctionRepository = { [k in keyof EffectFunctionT]: (params: EffectFunctionT[k]) => ReduceFun };\nexport type EffectFunctionT = {\n  'Target:Poison': { target: Target; lifespan: number };\n  'Monster:Summon': { enemy: number };\n  'Monster:Dead': undefined;\n  'Basic:Rest': undefined;\n  'Basic:Advance': undefined;\n  'Basic:Retreat': undefined;\n  'Effect:Dodge': undefined;\n  'Effect:Armor': { amount: number };\n  'Axe:Chop': undefined;\n  'Axe:Cut': undefined;\n  'Axe:Bleed': undefined;\n  'Hook:GetHere': undefined;\n  'Monster:Swipe': undefined;\n  'Monster:Roar': undefined;\n  'Monster:Jump': undefined;\n  'BootsOfFlight:EOT': undefined;\n  'Utility:UseStamina': { amount: number };\n  'Utility:ResetArmor': undefined;\n}\n\nexport const statsRepository = {\n  'Charm:ofHealth': (player: PlayerStats, enemies: EnemiesStats): [PlayerStats, EnemiesStats] => [{ ...player, hp: makeStat(player.hp.current + 10) }, enemies],\n  'Charm:ofHaste': (player: PlayerStats, enemies: EnemiesStats): [PlayerStats, EnemiesStats] => [{ ...player, staminaPerTurn: makeStat(player.staminaPerTurn.current + 10) }, enemies],\n  'Charm:ofResilience': (player: PlayerStats, enemies: EnemiesStats): [PlayerStats, EnemiesStats] => [{ ...player, stamina: makeStat(player.stamina.current + 10) }, enemies],\n  'Charm:ofStrength': (player: PlayerStats, enemies: EnemiesStats): [PlayerStats, EnemiesStats] => [{ ...player, attack: makeStat(player.attack.current + 1) }, enemies],\n  'Charm:ofSwiftness': (player: PlayerStats, enemies: EnemiesStats): [PlayerStats, EnemiesStats] => [{ ...player, speed: makeStat(player.speed.current + 1) }, enemies],\n  'Charm:ofDefence': (player: PlayerStats, enemies: EnemiesStats): [PlayerStats, EnemiesStats] => [{ ...player, defence: makeStat(player.defence.current + 1) }, enemies],\n}\n\nexport type Op = '+' | '*';\nexport type StatsOpFun<T> = [Op, keyof T, T[keyof T]];\nconst applyObject = <T extends { [k: string]: number }>(op: Op, obj: T, apply: Partial<T>): T =>\n  Object.entries(apply).reduce((acc, [k, v]) => {\n    if (v == null) {\n      return acc;\n    }\n    return applyKvp(op, acc, k, v);\n  }, obj);\n\nconst applyKvp = <T extends { [k: string]: number }>(op: Op, obj: T, k: keyof T, v: T[keyof T]): T => {\n  const copy = { ...obj };\n  op === '+'\n    ? copy[k] = copy[k] + v as T[keyof T]\n    : op === '*'\n      ? copy[k] = copy[k] * v as T[keyof T]\n      : void 0;\n  return copy;\n};\n\nconst effectFun = <T>(...funs: Nel<ParametrizedFun<T>>): EffectFun<T> =>\n  // TODO check direction of the fold\n  (funs.length > 1\n    ? funs.reduce((acc, value) => (params) => (origin, play, oldState) => {\n      const [newPlay, newState] = acc(params)(origin, play, oldState);\n      return value(params)(origin, newPlay, newState);\n    }) : funs[0]) as EffectFun<T>;\n\nconst repo: EffectFunctionRepository = {\n  'Target:Poison': effectFun(\n    ({ target }) => (origin, play, currentState) => [play, target === 'Player' ? actions.attackPlayer(currentState, origin as MonsterTarget, 1) : actions.attackMonster(currentState, target, 1)],\n    (params) => (origin, play, currentState) => [play,\n      (params.target !== 'Player' && currentState.enemies[params.target]!!.hp.current > 0)\n        && (params.lifespan > 0)\n        ? actions.addEotEffect(currentState, origin, { display: `Poison ${play.enemies[params.target]!!.lore.name} [${params.target + 1}]`, tooltip: '', range: allRanges, priority: 4, effects: [effectFunCall(['Target:Poison', { ...params, lifespan: params.lifespan - 1 }])] })\n        : currentState],\n  ),\n  'Monster:Summon': effectFun(\n    ({ enemy }) => (_origin, play, currentState) => actions.addEnemy(play, currentState, enemies[enemy][0], enemies[enemy][1])\n  ),\n  'Monster:Dead': effectFun(\n    () => (_origin, play, currentState) => [play, currentState]\n  ),\n  'Utility:UseStamina': effectFun(\n    ({ amount }) => (_origin, play, currentState) => [play, actions.modifyPlayerStamina(startState(play), currentState, currentState.player.staminaPerTurn.current - amount)]\n  ),\n  'Utility:ResetArmor': effectFun(\n    () => (_origin, play, currentState) => [play, actions.changeStatusPlayer(currentState, (o) => ({ ...o, armor: { amount: 0 } }))],\n    () => (_origin, play, currentState) => [play, currentState.enemies.reduce((acc, v, idx) => actions.changeStatusMonster(acc, idx as MonsterTarget, (o) => ({ ...o, armor: { amount: 0 } })), currentState)],\n  ),\n  'Basic:Rest': effectFun(\n    () => (_origin, play, currentState) => [play, currentState]\n  ),\n  'Basic:Advance': effectFun(\n    () => (_origin, play, currentState) => [play, actions.changeDistance(currentState, currentState.target, -2)]\n  ),\n  'Basic:Retreat': effectFun(\n    () => (_origin, play, currentState) => [play, actions.changeDistance(currentState, currentState.target, 2)]\n  ),\n  'Effect:Dodge': effectFun(\n    () => (_origin, play, currentState) => [play, actions.changeStatusPlayer(currentState, (o) => ({ ...o, dodge: { active: true } }))]\n  ),\n  'Axe:Chop': effectFun(\n    () => (_, play, currentState) => [play, actions.attackMonster(currentState, currentState.target, 3)]\n  ),\n  'Axe:Cut': effectFun(\n    () => (_, play, currentState) => [play, actions.attackMonster(currentState, currentState.target, 3)],\n    () => (origin, play, currentState) => [play,\n      actions.addEotEffect(currentState, origin, { display: `Poison ${play.enemies[currentState.target]!!.lore.name} [${currentState.target + 1}]`, tooltip: '', range: allRanges, priority: 4, effects: [effectFunCall(['Target:Poison', { target: currentState.target, lifespan: 2 }])] })]\n  ),\n  'Axe:Bleed': effectFun(\n    () => (_, play, currentState) => [play, actions.attackMonster(currentState, currentState.target, 2)],\n    () => (_, play, currentState) => [play, actions.changeStatusMonster(currentState, currentState.target, (o) => ({ ...o, bleed: { turns: o.bleed.turns + 5 } }))]\n  ),\n  'Effect:Armor': effectFun(\n    () => (_, play, currentState) => [play, actions.changeStatusPlayer(currentState, (o) => ({ ...o, armor: { amount: 3 } }))]\n  ),\n  'Hook:GetHere': effectFun(\n    () => (_, play, currentState) => [play, actions.attackMonster(currentState, currentState.target, 3)],\n    () => (_origin, play, currentState) => [play, actions.changeDistance(currentState, currentState.target, -1)]\n  ),\n  'Monster:Swipe': effectFun(\n    () => (origin, play, currentState) => [play, actions.attackPlayer(currentState, origin as MonsterTarget, 2)]\n  ),\n  'Monster:Roar': effectFun(\n    () => (_, play, currentState) => [play, actions.modifyPlayerStamina(startState(play), currentState, -5)]\n  ),\n  'Monster:Jump': effectFun(\n    () => (origin, play, currentState) => [play, actions.changeDistance(currentState, origin, -2)]\n  ),\n  'BootsOfFlight:EOT': effectFun(\n    () => (_, play, currentState) => [play, currentState.enemies.reduce((s, _m, idx) => actions.changeDistance(s, idx as MonsterTarget, -2), currentState)]\n  ),\n};\n\nconst clamp = (num: number, min: number, max: number = Infinity) =>\n  Math.min(Math.max(num, min), max);\n\nconst updateMonster = (enemies: EnemiesStats, target: Target, override: (stats: EnemyStats) => Partial<EnemyStats>): EnemiesStats =>\n  enemies.map((m, idx) =>\n    (idx === target)\n      ? { ...m, ...override(m) }\n      : m) as EnemiesStats;\n\nconst updatePlayer = (curr: Snapshot, override: (player: PlayerStats) => Partial<PlayerStats>): Snapshot => {\n  return {\n    ...curr,\n    player: { ...curr.player, ...override(curr.player) }\n  };\n}\n\nconst updatePlayerStat = <T extends keyof PlayerStats>(curr: Snapshot, key: T, modify: (player: PlayerStats[T]) => Partial<PlayerStats[T]>): Snapshot => {\n  const player = curr.player;\n  player[key] = {\n    ...player[key],\n    ...modify(player[key])\n  }\n  return {\n    ...curr,\n    player\n  };\n}\n\nconst actions = {\n  attackPlayer,\n  attackMonster,\n  changeStatusPlayer: (curr: Snapshot, updateStatus: (oldStatus: Status) => Status): Snapshot => ({\n    ...curr,\n    player: { ...curr.player, status: updateStatus(curr.player.status) }\n  }),\n  changeStatusMonster: (curr: Snapshot, target: MonsterTarget, updateStatus: (oldStatus: Status) => Status): Snapshot => ({\n    ...curr,\n    enemies: updateMonster(curr.enemies, target, ({ status }) => ({ status: updateStatus(status) })),\n  }),\n  changeDistance: (curr: Snapshot, origin: Target, amount: number): Snapshot =>\n  ({\n    ...curr,\n    enemies: updateMonster(curr.enemies, origin, ({ distance }) => ({ distance: clamp(distance + amount, 0, 4) as MonsterTarget })),\n  }),\n  removeMonster: (currPlay: Play, currSnap: Snapshot, target: MonsterTarget): [Play, Snapshot] =>\n    [\n      { ...currPlay, enemies: currPlay.enemies.filter((_, idx) => idx === target) as Enemies },\n      { ...currSnap, target: 0, enemies: currSnap.enemies.filter((_, idx) => idx === target) as EnemiesStats }\n    ],\n  modifyPlayerStamina: (\n    start: Snapshot,\n    curr: Snapshot,\n    amount: number,\n  ): Snapshot =>\n    updatePlayerStat(curr, 'stamina', stamina => ({\n      current: clamp(stamina.current + amount, 0, stamina.max)\n    })),\n  addEotEffect: (\n    curr: Snapshot,\n    origin: Target,\n    effect: Effect,\n  ): Snapshot => ({\n    ...curr,\n    eot: [...(curr.eot ?? []), [origin, effect]],\n  }),\n  addBotEffect: (\n    curr: Snapshot,\n    origin: Target,\n    effect: Effect,\n  ): Snapshot => ({\n    ...curr,\n    bot: [...(curr.eot ?? []), [origin, effect]],\n  }),\n  addEnemy: (\n    play: Play,\n    curr: Snapshot,\n    enemy: Enemy,\n    enemyStats: EnemyStats,\n  ): [Play, Snapshot] => {\n    return play.enemies.length < 5\n      ? [{\n        ...play,\n        enemies: [...play.enemies, enemy] as Enemies,\n      }, {\n        ...curr,\n        enemies: [...curr.enemies, enemyStats] as EnemiesStats,\n      }]\n      : [play, curr];\n  }\n};\n\nfunction attackMonster(curr: Snapshot, target: MonsterTarget, amount: number): Snapshot {\n  const monster = curr.enemies[target]!!;\n  const hasDodge = monster.status.dodge.active;\n  if (hasDodge) {\n    return ({\n      ...curr,\n      enemies: updateMonster(curr.enemies, target, ({ status }) => ({\n        status: { ...status, dodge: { active: false } }\n      })),\n    });\n  }\n\n  const armor = monster.status.armor.amount;\n  const damage = amount + curr.player.attack.current;\n  const afterDefence = Math.max(damage - monster.defence.current, 0);\n  const afterArmor = Math.max(afterDefence - armor, 0);\n  const armorSpent = armor - (afterDefence - afterArmor);\n  const afterBleed = afterArmor + (curr.player.status.bleed.turns > 0 ? 1 : 0);\n  return ({\n    ...curr,\n    enemies: updateMonster(curr.enemies, target, ({ status, hp }) => ({\n      hp: { max: hp.max, current: clamp(hp.current - afterBleed, 0, hp.max) },\n      status:\n        { ...status, armor: { amount: armorSpent } }\n    })),\n  });\n}\n\nfunction attackPlayer(curr: Snapshot, monster: MonsterTarget, amount: number): Snapshot {\n  const hasDodge = curr.player.status.dodge.active;\n  if (hasDodge) {\n    return updatePlayerStat(curr, 'status', () => ({ dodge: { active: false } }));\n  }\n\n  const armor = curr.player.status.armor.amount;\n  const damage = amount + curr.player.attack.current;\n  const afterDefence = Math.max(damage - curr.player.defence.current, 0);\n  const afterArmor = Math.max(afterDefence - armor, 0);\n  const armorSpent = armor - (afterDefence - afterArmor);\n  const afterBleed = afterArmor + (curr.player.status.bleed.turns > 0 ? 1 : 0);\n  return updatePlayer(curr, ({ hp, status }) => ({\n    hp: { max: hp.max, current: clamp(hp.current - afterBleed, 0, hp.max) },\n    status: { ...status, armor: { amount: status.armor.amount - armorSpent } }\n  }));\n}\n\nexport default repo;\n","import { createIs, is } from 'typescript-is';\nimport { Opaque } from \"type-fest\";\nimport { callEffectFun, Effect, FunIndex, Play, Snapshot, Target } from \"./types\";\nimport effectRepository, { EffectFunctionRepository, EffectFunctionT, statsRepository } from './effectRepository';\n\nexport type ReduceFun = (origin: Target, play: Play, newState: Snapshot) => [Play, Snapshot];\nexport type ParametrizedFun<T> = (params: T) => ReduceFun;\nexport type EffectFun<T> = Opaque<ParametrizedFun<T>, ParametrizedFun<T>>;\n\nexport type EffectFunRepo = EffectFunctionRepository;\nexport type EffectFunRepoIndex = keyof EffectFunctionT & FunIndex;\nexport type EffectFunParams<T extends EffectFunRepoIndex> = Parameters<EffectFunRepo[T]>[0];\n\nexport type StatsFunIndex = keyof typeof statsRepository;\n\nconst isNode = typeof process === 'undefined';\n\nexport function extractFunction({ effects }: Effect): ReduceFun {\n  if (!isNode || !effects.map(({ index, parameters }) => isAnyEffectFunParams(index, parameters)).includes(false)) {\n    return (origin, play, startState) => effects.reduce((acc, { index, parameters }) =>\n      callEffectFun(effectRepository, index, parameters)(origin, ...acc), [play, startState]);\n  }\n  throw new Error(`ValidationException: ${JSON.stringify(effects.filter(({ index, parameters }) => !isAnyEffectFunParams(index, parameters)))}`);\n}\n\nconst assignObject = <T extends EffectFunRepoIndex>(idx: T, obj: object, value: any): object => {\n  // @ts-ignore\n  obj[idx as string] = value;\n  return { ...obj };\n}\n\n// Uses all the tricks in the book for runtime validation\nconst validators = !isNode\n  ? {} as { [k: string]: any }\n  : Object.keys(effectRepository)\n    // eslint-disable-next-line array-callback-return\n    .reduce((obj, idx) => {\n      if (!is<EffectFunRepoIndex>(idx)) {\n        return obj;\n      }\n      switch (idx) {\n        case 'Target:Poison': return assignObject(idx, obj, [createIs<typeof idx>(), createIs<EffectFunParams<typeof idx>>()]);\n        case 'Monster:Summon': return assignObject(idx, obj, [createIs<typeof idx>(), createIs<EffectFunParams<typeof idx>>()]);\n        case 'Monster:Dead': return assignObject(idx, obj, [createIs<typeof idx>(), createIs<EffectFunParams<typeof idx>>()]);\n        case 'Utility:ResetArmor': return assignObject(idx, obj, [createIs<typeof idx>(), createIs<EffectFunParams<typeof idx>>()]);\n        case 'Utility:UseStamina': return assignObject(idx, obj, [createIs<typeof idx>(), createIs<EffectFunParams<typeof idx>>()]);\n        case 'Basic:Rest': return assignObject(idx, obj, [createIs<typeof idx>(), createIs<EffectFunParams<typeof idx>>()]);\n        case 'Basic:Advance': return assignObject(idx, obj, [createIs<typeof idx>(), createIs<EffectFunParams<typeof idx>>()]);\n        case 'Basic:Retreat': return assignObject(idx, obj, [createIs<typeof idx>(), createIs<EffectFunParams<typeof idx>>()]);\n        case 'Effect:Dodge': return assignObject(idx, obj, [createIs<typeof idx>(), createIs<EffectFunParams<typeof idx>>()]);\n        case 'Effect:Armor': return assignObject(idx, obj, [createIs<typeof idx>(), createIs<EffectFunParams<typeof idx>>()]);\n        case 'Axe:Chop': return assignObject(idx, obj, [createIs<typeof idx>(), createIs<EffectFunParams<typeof idx>>()]);\n        case 'Axe:Cut': return assignObject(idx, obj, [createIs<typeof idx>(), createIs<EffectFunParams<typeof idx>>()]);\n        case 'Axe:Bleed': return assignObject(idx, obj, [createIs<typeof idx>(), createIs<EffectFunParams<typeof idx>>()]);\n        case 'Hook:GetHere': return assignObject(idx, obj, [createIs<typeof idx>(), createIs<EffectFunParams<typeof idx>>()]);\n        case 'Monster:Swipe': return assignObject(idx, obj, [createIs<typeof idx>(), createIs<EffectFunParams<typeof idx>>()]);\n        case 'Monster:Roar': return assignObject(idx, obj, [createIs<typeof idx>(), createIs<EffectFunParams<typeof idx>>()]);\n        case 'Monster:Jump': return assignObject(idx, obj, [createIs<typeof idx>(), createIs<EffectFunParams<typeof idx>>()]);\n        case 'BootsOfFlight:EOT': return assignObject(idx, obj, [createIs<typeof idx>(), createIs<EffectFunParams<typeof idx>>()]);\n      }\n    }, {}) as Validators;\ntype Validators = { [k in EffectFunRepoIndex]: [(object: any) => object is k, (object: any) => object is EffectFunParams<k>] };\n\nexport function isAnyEffectFunParams(idx: any, value: any): value is EffectFunParams<EffectFunRepoIndex> {\n  if (is<EffectFunRepoIndex>(idx)) {\n    const v = validators[idx];\n    if (v != null) {\n      return v[0](idx) && v[1](value);\n    }\n  }\n  return false;\n}\n\nexport function isEffectFunParams<T extends EffectFunRepoIndex>(expected: T, idx: any, value: any): value is EffectFunParams<T> {\n  if (expected === idx) {\n    const v = validators[expected];\n    return v[0](idx) && v[1](value);\n  }\n  return false;\n}\n\n// Jest doesn't work so this should do\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nconst test = () => {\n  const assertF = (a: any, b: any) => a === b ? void 0 : console.log(`Failed ${a.toString()} compared to ${b.toString()} ${new Error().stack?.split('\\n')[2].trim()}`);\n  const [idx1, value1] = JSON.parse(JSON.stringify(['Monster:Summon', { enemy: 1 }]));\n  assertF(true, isAnyEffectFunParams(idx1, value1));\n  assertF(false, isEffectFunParams('Target:Poison', idx1, value1));\n  assertF(false, isAnyEffectFunParams('Target:Poison', value1));\n\n  const [idx2, value2] = JSON.parse(JSON.stringify(['Monster:Summon', { patatas: 1 }]));\n  assertF(false, isAnyEffectFunParams(idx2, value2));\n\n  const [idx3, value3] = JSON.parse(JSON.stringify(['Monster:Patatas', {}]));\n  assertF(false, isAnyEffectFunParams(idx3, value3));\n\n  const [idx4, value4] = JSON.parse(JSON.stringify(['Monster:Swipe']));\n  assertF(true, isAnyEffectFunParams(idx4, value4));\n  assertF(false, isAnyEffectFunParams(idx4, value4 ?? null));\n  assertF(true, isAnyEffectFunParams(idx4, value4 ?? undefined));\n\n  const [idx5, value5] = JSON.parse(JSON.stringify(['Monster:Swipe', undefined]));\n  assertF(false, isAnyEffectFunParams(idx5, value5));\n  assertF(false, isAnyEffectFunParams(idx5, value5 ?? null));\n  assertF(true, isAnyEffectFunParams(idx5, value5 ?? undefined));\n}\n\n// node --experimental-specifier-resolution=node --loader ts-node/esm src/utils/effectFunctions.ts \n// test();\n","import { Chance } from \"chance\";\nimport { Subtract } from \"type-fest/source/internal\";\nimport { Build, Distances, Effect, Enemy, EnemyStats, Item, Player, PlayerStats, Ranges, Snapshot, StatsFunRepo, UpTo, Play, effectFunCall, Stat, Status } from \"./types\";\n\nexport const startState = (play: Play): Snapshot => play.states[0];\nexport const previousState = (play: Play): Snapshot => play.states[play.states.length - 1];\n\nexport const randomEnemy = (): [Enemy, EnemyStats] => new Chance().pickone(enemies);\n\nexport const randomPlayer = (statsOverride?: PlayerStats, buildOverride?: Build): [Player, PlayerStats] => {\n  const rng = new Chance();\n  return [{\n    id: rng.string(),\n    lore: {\n      name: randomName(),\n      age: rng.age(),\n    },\n    build: {\n      basic: rng.pickone(build.basic),\n      class: rng.pickone(build.class),\n      armor: rng.pickone(build.armor),\n      weapon: rng.pickone(build.weapon),\n      offhand: rng.pickone(build.offhand),\n      footwear: rng.pickone(build.footwear),\n      headwear: rng.pickone(build.headwear),\n      charm: rng.pickone(build.charm),\n      ...buildOverride,\n    }\n  }, {\n    hp: makeStat(25),\n    stamina: makeStat(8),\n    staminaPerTurn: makeStat(2),\n    speed: makeStat(0),\n    attack: makeStat(0),\n    defence: makeStat(0),\n    status: defaultStatus,\n    ...statsOverride,\n  }];\n}\n\nexport const makeRange = (...number: UpTo<Subtract<Distances, 1>>[]) => [...new Set(number)] as Ranges;\nexport const allRanges = makeRange(0, 1, 2, 3, 4);\nexport const selfRange = allRanges;\n\nexport const makeStat = (amount: number): Stat => ({ current: amount, max: amount });\nexport const defaultStatus: Status = {\n  dodge: { active: false },\n  armor: { amount: 0 },\n  bleed: { turns: 0 }\n}\n\nexport const effectDead: Effect =\n  { display: \"⚰\", tooltip: \"⚰\", priority: 4, effects: [effectFunCall(\"Monster:Dead\")], range: allRanges };\n\nexport const build: Record<\n  string,\n  Item[]\n> = {\n  basic: [\n    {\n      display: \"Basic\",\n      effects: [\n        {\n          display: \"Rest\",\n          tooltip: \"Skip the turn and restore stamina\",\n          priority: 4,\n          stamina: 0,\n          range: selfRange,\n          effects: [effectFunCall('Basic:Rest')]\n        },\n        {\n          display: \"Advance\",\n          tooltip: \"Move closer\",\n          priority: 4,\n          stamina: 1,\n          range: selfRange,\n          effects: [effectFunCall('Basic:Advance')]\n        },\n        {\n          display: \"Retreat\",\n          tooltip: \"Move further\",\n          effects: [effectFunCall(\"Basic:Retreat\")],\n          priority: 4,\n          stamina: 1,\n          range: selfRange,\n        },\n        {\n          display: \"Dodge\",\n          tooltip: \"Avoid 1 enemy attack\",\n          effects: [effectFunCall(\"Effect:Dodge\")],\n          priority: 2,\n          stamina: 4,\n          range: selfRange,\n        },\n      ]\n    }\n  ],\n  class: [\n    {\n      display: \"Warrior\",\n    },\n    {\n      display: \"Mage\",\n    },\n    {\n      display: \"Rogue\",\n    },\n  ],\n  skill: [\n    {\n      display: \"Sturdy\",\n    },\n    {\n      display: \"Nimble\",\n    },\n  ],\n  weapon: [\n    {\n      display: \"Axe\",\n      effects: [\n        {\n          display: \"Chop\",\n          tooltip: \"Chop\",\n          effects: [effectFunCall(\"Axe:Chop\")],\n          priority: 2,\n          stamina: 2,\n          range: makeRange(0, 1),\n        },\n        {\n          display: \"Cut\",\n          tooltip: \"Cut\",\n          effects: [effectFunCall(\"Axe:Cut\")],\n          priority: 3,\n          stamina: 2,\n          range: makeRange(0),\n        },\n        {\n          display: \"Bleed\",\n          tooltip: \"Makes the enemy bleed\",\n          effects: [effectFunCall(\"Axe:Bleed\")],\n          priority: 3,\n          stamina: 2,\n          range: allRanges,\n        },\n      ],\n    },\n  ],\n  offhand: [\n    {\n      display: \"Hook\",\n      effects: [\n        {\n          display: \"Get over here!\",\n          tooltip: \"Moves enemy closer\",\n          effects: [effectFunCall(\"Hook:GetHere\")],\n          priority: 4,\n          stamina: 3,\n          range: makeRange(2, 3, 4),\n        },\n      ],\n    },\n    {\n      display: \"Shield\",\n      effects: [\n        {\n          display: \"Not today!\",\n          tooltip: \"Blocks some damage\",\n          effects: [effectFunCall([\"Effect:Armor\", { amount: 3 }])],\n          priority: 2,\n          stamina: 3,\n          range: selfRange,\n        },\n      ],\n    },\n  ],\n  consumable: [\n    {\n      display: \"Potion\",\n    },\n  ],\n  armor: [\n    {\n      display: \"Heavy\",\n    },\n  ],\n  headgear: [\n    {\n      display: \"Helm\",\n    },\n  ],\n  footwear: [{\n    display: \"Boots of Dooooodge!\",\n    effects: [\n      {\n        display: \"Advanced Dodge\",\n        tooltip: \"Avoid 1 attack\",\n        effects: [effectFunCall(\"Effect:Dodge\")],\n        priority: 1,\n        stamina: 3,\n        range: selfRange,\n      },\n    ],\n  },\n  {\n    display: \"Boots of Flight\",\n    eot: [{\n      display: \"Flight!\",\n      tooltip: \"Increases distance by 2 every turn\",\n      priority: 0,\n      range: allRanges,\n      effects: [effectFunCall('BootsOfFlight:EOT')],\n    }],\n  },\n  ],\n  charm: [\n    {\n      display: \"of Health\",\n      passive: \"Charm:ofHealth\",\n    },\n    {\n      display: \"of Haste\",\n      passive: \"Charm:ofHaste\",\n    },\n    {\n      display: \"of Resilience\",\n      passive: \"Charm:ofResilience\",\n    },\n    {\n      display: \"of Strength\",\n      passive: \"Charm:ofStrength\",\n    },\n    {\n      display: \"of Swiftness\",\n      passive: \"Charm:ofSwiftness\",\n    },\n    {\n      display: \"of Defence\",\n      passive: \"Charm:ofDefence\",\n    },\n  ],\n};\n\nexport const randomName = () => names[Math.floor(Math.random() * names.length)];\n\nexport const enemies: [Enemy, EnemyStats][] = [\n  [{\n    lore: {\n      name: \"Sacapuntas\",\n    },\n    rolls: [\n      [0, 1, 2, 1, 0],\n      [0, 1, 0, 0, 0],\n      [0, 0, 0, 0, 0],\n      [0, 0, 0, 0, 0],\n      [0, 1, 2, 1, 0, 0],\n    ],\n    effects: [\n      { display: \"Swipe\", tooltip: \"Swipe\", priority: 3, effects: [effectFunCall(\"Monster:Swipe\")], range: makeRange(0, 1) },\n      { display: \"Roar\", tooltip: \"Swipe\", priority: 1, effects: [effectFunCall(\"Monster:Roar\")], range: allRanges },\n      { display: \"Jump\", tooltip: \"Swipe\", priority: 2, effects: [effectFunCall(\"Monster:Jump\")], range: makeRange(2, 3, 4) },\n    ],\n  }, {\n    hp: makeStat(25),\n    distance: 4,\n    speed: makeStat(0),\n    attack: makeStat(0),\n    defence: makeStat(0),\n    status: defaultStatus,\n  }],\n  [{\n    lore: {\n      name: \"Toro\",\n    },\n    effects: [\n      { display: \"Swipe\", tooltip: \"Swipe\", priority: 3, effects: [effectFunCall(\"Monster:Swipe\")], range: allRanges },\n      { display: \"Jump\", tooltip: \"Jump\", priority: 2, effects: [effectFunCall(\"Monster:Jump\")], range: makeRange(2, 3, 4) },\n    ],\n    rolls: [\n      [0, 0, 0, 0, 0],\n      [0, 0, 0, 0, 0],\n      [1, 1, 0, 0, 0],\n      [1, 1, 1, 0, 0],\n      [1, 1, 1, 1, 0],\n    ]\n  }, {\n    hp: makeStat(22),\n    distance: 4,\n    speed: makeStat(0),\n    attack: makeStat(0),\n    defence: makeStat(0),\n    status: defaultStatus,\n  }],\n  [{\n    lore: {\n      name: \"Summoner\",\n    },\n    effects: [\n      { display: \"Swipe\", tooltip: \"Swipe\", priority: 3, effects: [effectFunCall(\"Monster:Swipe\")], range: makeRange(0, 1) },\n      { display: \"Jump\", tooltip: \"Jump\", priority: 3, effects: [effectFunCall(\"Monster:Jump\")], range: allRanges },\n      { display: \"Summon Toro\", tooltip: \"Summon Toro\", priority: 4, effects: [effectFunCall([\"Monster:Summon\", { enemy: 1 }])], range: makeRange(2, 3, 4) },\n    ],\n    rolls: [\n      [0, 0, 0, 0, 0],\n      [1, 0, 0, 0, 0],\n      [1, 1, 2, 0, 0],\n      [1, 1, 2, 0, 0],\n      [1, 2, 2, 0, 0],\n    ]\n  }, {\n    hp: makeStat(30),\n    distance: 4,\n    speed: makeStat(0),\n    attack: makeStat(0),\n    defence: makeStat(0),\n    status: defaultStatus,\n  }],\n  [{\n    lore: {\n      name: \"Body\",\n    },\n    effects: [\n      { display: \"Swipe\", tooltip: \"Swipe\", priority: 3, effects: [effectFunCall(\"Monster:Swipe\")], range: makeRange() },\n    ],\n    rolls: [\n      [0],\n      [0],\n      [0],\n      [0],\n      [0],\n    ]\n  }, {\n    hp: makeStat(300),\n    distance: 0,\n    speed: makeStat(0),\n    attack: makeStat(0),\n    defence: makeStat(0),\n    status: defaultStatus,\n  }],\n\n  [{\n    lore: {\n      name: \"Smol\",\n    },\n    effects: [\n      { display: \"Swipe\", tooltip: \"Swipe\", priority: 3, effects: [effectFunCall(\"Monster:Swipe\")], range: makeRange() },\n    ],\n    rolls: [\n      [0],\n      [0],\n      [0],\n      [0],\n      [0],\n    ]\n  }, {\n    hp: makeStat(5),\n    distance: 0,\n    speed: makeStat(0),\n    attack: makeStat(0),\n    defence: makeStat(0),\n    status: defaultStatus,\n  }],\n];\n\nconst names = [\n  \"Lydan\",\n  \"Syrin\",\n  \"Ptorik\",\n  \"Joz\",\n  \"Varog\",\n  \"Gethrod\",\n  \"Hezra\",\n  \"Feron\",\n  \"Ophni\",\n  \"Colborn\",\n  \"Fintis\",\n  \"Gatlin\",\n  \"Jinto\",\n  \"Hagalbar\",\n  \"Krinn\",\n  \"Lenox\",\n  \"Revvyn\",\n  \"Hodus\",\n  \"Dimian\",\n  \"Paskel\",\n  \"Kontas\",\n  \"Weston\",\n  \"Azamarr\",\n  \"Jather\",\n  \"Tekren\",\n  \"Jareth\",\n  \"Adon\",\n  \"Zaden\",\n  \"Eune\",\n  \"Graff\",\n  \"Tez\",\n  \"Jessop\",\n  \"Gunnar\",\n  \"Pike\",\n  \"Domnhar\",\n  \"Baske\",\n  \"Jerrick\",\n  \"Mavrek\",\n  \"Riordan\",\n  \"Wulfe\",\n  \"Straus\",\n  \"Tyvrik\",\n  \"Henndar\",\n  \"Favroe\",\n  \"Whit\",\n  \"Jaris\",\n  \"Renham\",\n  \"Kagran\",\n  \"Lassrin\",\n  \"Vadim\",\n  \"Arlo\",\n  \"Quintis\",\n  \"Vale\",\n  \"Caelan\",\n  \"Yorjan\",\n  \"Khron\",\n  \"Ishmael\",\n  \"Jakrin\",\n  \"Fangar\",\n  \"Roux\",\n  \"Baxar\",\n  \"Hawke\",\n  \"Gatlen\",\n  \"Barak\",\n  \"Nazim\",\n  \"Kadric\",\n  \"Paquin\",\n  \"Kent\",\n  \"Moki\",\n  \"Rankar\",\n  \"Lothe\",\n  \"Ryven\",\n  \"Clawsen\",\n  \"Pakker\",\n  \"Embre\",\n  \"Cassian\",\n  \"Verssek\",\n  \"Dagfinn\",\n  \"Ebraheim\",\n  \"Nesso\",\n  \"Eldermar\",\n  \"Rivik\",\n  \"Rourke\",\n  \"Barton\",\n  \"Hemm\",\n  \"Sarkin\",\n  \"Blaiz\",\n  \"Talon\",\n  \"Agro\",\n  \"Zagaroth\",\n  \"Turrek\",\n  \"Esdel\",\n  \"Lustros\",\n  \"Zenner\",\n  \"Baashar\",\n  \"Dagrod\",\n  \"Gentar\",\n  \"Feston\",\n  \"Syrana\",\n  \"Resha\",\n  \"Varin\",\n  \"Wren\",\n  \"Yuni\",\n  \"Talis\",\n  \"Kessa\",\n  \"Magaltie\",\n  \"Aeris\",\n  \"Desmina\",\n  \"Krynna\",\n  \"Asralyn\",\n  \"Herra\",\n  \"Pret\",\n  \"Kory\",\n  \"Afia\",\n  \"Tessel\",\n  \"Rhiannon\",\n  \"Zara\",\n  \"Jesi\",\n  \"Belen\",\n  \"Rei\",\n  \"Ciscra\",\n  \"Temy\",\n  \"Renalee\",\n  \"Estyn\",\n  \"Maarika\",\n  \"Lynorr\",\n  \"Tiv\",\n  \"Annihya\",\n  \"Semet\",\n  \"Tamrin\",\n  \"Antia\",\n  \"Reslyn\",\n  \"Basak\",\n  \"Vixra\",\n  \"Pekka\",\n  \"Xavia\",\n  \"Beatha\",\n  \"Yarri\",\n  \"Liris\",\n  \"Sonali\",\n  \"Razra\",\n  \"Soko\",\n  \"Maeve\",\n  \"Everen\",\n  \"Yelina\",\n  \"Morwena\",\n  \"Hagar\",\n  \"Palra\",\n  \"Elysa\",\n  \"Sage\",\n  \"Ketra\",\n  \"Lynx\",\n  \"Agama\",\n  \"Thesra\",\n  \"Tezani\",\n  \"Ralia\",\n  \"Esmee\",\n  \"Heron\",\n  \"Naima\",\n  \"Rydna\",\n  \"Sparrow\",\n  \"Baakshi\",\n  \"Ibera\",\n  \"Phlox\",\n  \"Dessa\",\n  \"Braithe\",\n  \"Taewen\",\n  \"Larke\",\n  \"Silene\",\n  \"Phressa\",\n  \"Esther\",\n  \"Anika\",\n  \"Rasy\",\n  \"Harper\",\n  \"Indie\",\n  \"Vita\",\n  \"Drusila\",\n  \"Minha\",\n  \"Surane\",\n  \"Lassona\",\n  \"Merula\",\n  \"Kye\",\n  \"Jonna\",\n  \"Lyla\",\n  \"Zet\",\n  \"Orett\",\n  \"Naphtalia\",\n  \"Turi\",\n  \"Rhays\",\n  \"Shike\",\n  \"Hartie\",\n  \"Beela\",\n  \"Leska\",\n  \"Vemery\",\n  \"Lunex\",\n  \"Fidess\",\n  \"Tisette\",\n  \"Partha\",\n]"],"sourceRoot":""}